# Generated by Gemini.
# Stub file for the Gamepad Python API.
# This file provides type hints and docstrings for the Gamepad module
# to enhance IntelliSense in development environments like VS Code (Pylance).
# Generated based on GCTV Python Functions Documentation.

from typing import List, Tuple

# Your documentation shows `Gamepad.Gamepad.select_controller`.
# This implies that `Gamepad` is a module, and within it, there's a class
# also named `Gamepad` that contains the methods.
# This is a common pattern in C++/Python bindings.

class Gamepad:
    """
    Provides functions for interacting with game controllers/gamepads.
    """
    def select_controller(self, index: int) -> None:
        """
        Selects a game controller by index.
        """
        ...

    def get_selected_controller(self) -> int:
        """
        Returns the index of the currently selected controller.
        """
        ...

    def get_pressed_key(self) -> int:
        """
        Returns the last key/button pressed.
        """
        ...

    def get_pressed_keys(self) -> List[int]:
        """
        Returns a list of currently pressed keys/buttons.
        """
        ...

    def get_left_stick_state(self) -> Tuple[float, float]:
        """
        Returns the X and Y axis values of the left analog stick.
        """
        ...

    def get_right_stick_state(self) -> Tuple[float, float]:
        """
        Returns the X and Y axis values of the right analog stick.
        """
        ...

    def get_triggers_state(self) -> Tuple[float, float]:
        """
        Returns the current values of the left and right triggers.
        """
        ...

    def send_vibration(self, left: float, right: float) -> None:
        """
        Sends vibration feedback to the controller.
        """
        ...