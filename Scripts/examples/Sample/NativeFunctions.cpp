#pragma once

#include "NativeCaller.h"
#include "NativeTypes.h"


namespace SYSTEM
{
	void WAIT(int ms) { Call<void>(0x288975, ms); }
	void WAIT_f(int ms) { FastCall<void>(0x288975, ms); }
	int START_NEW_SCRIPT(const char* scriptName, int stackSize) { return Call<int>(0x868c31909fc1087, scriptName, stackSize); }
	int START_NEW_SCRIPT_f(const char* scriptName, int stackSize) { return FastCall<int>(0x868c31909fc1087, scriptName, stackSize); }
	int START_NEW_SCRIPT_WITH_ARGS(char* scriptName, Any* args, int argCount, int stackSize) { return Call<int>(0x691689ce143cb2fe, scriptName, args, argCount, stackSize); }
	int START_NEW_SCRIPT_WITH_ARGS_f(char* scriptName, Any* args, int argCount, int stackSize) { return FastCall<int>(0x691689ce143cb2fe, scriptName, args, argCount, stackSize); }
	int START_NEW_SCRIPT_WITH_NAME_HASH(Hash scriptHash, int stackSize) { return Call<int>(0xfc3ff91c6db520c1, scriptHash, stackSize); }
	int START_NEW_SCRIPT_WITH_NAME_HASH_f(Hash scriptHash, int stackSize) { return FastCall<int>(0xfc3ff91c6db520c1, scriptHash, stackSize); }
	int START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS(Hash scriptHash, Any* args, int argCount, int stackSize) { return Call<int>(0x9c3b6e698487d823, scriptHash, args, argCount, stackSize); }
	int START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS_f(Hash scriptHash, Any* args, int argCount, int stackSize) { return FastCall<int>(0x9c3b6e698487d823, scriptHash, args, argCount, stackSize); }
	int TIMERA() { return Call<int>(0x937fd5bc); }
	int TIMERA_f() { return FastCall<int>(0x937fd5bc); }
	int TIMERB() { return Call<int>(0x937fd5bd); }
	int TIMERB_f() { return FastCall<int>(0x937fd5bd); }
	void SETTIMERA(int value) { Call<void>(0x422e00ec5c7e, value); }
	void SETTIMERA_f(int value) { FastCall<void>(0x422e00ec5c7e, value); }
	void SETTIMERB(int value) { Call<void>(0x422e00ec5c7f, value); }
	void SETTIMERB_f(int value) { FastCall<void>(0x422e00ec5c7f, value); }
	float TIMESTEP() { return ToFloat(Call<_float>(0x229b2e21b19)); }
	float TIMESTEP_f() { return ToFloat(FastCall<_float>(0x229b2e21b19)); }
	float SIN(float value) { return ToFloat(Call<_float>(0x140b8, value)); }
	float SIN_f(float value) { return ToFloat(FastCall<_float>(0x140b8, value)); }
	float COS(float value) { return ToFloat(Call<_float>(0x10567, value)); }
	float COS_f(float value) { return ToFloat(FastCall<_float>(0x10567, value)); }
	float SQRT(float value) { return ToFloat(Call<_float>(0x26f520, value)); }
	float SQRT_f(float value) { return ToFloat(FastCall<_float>(0x26f520, value)); }
	float POW(float base, float exponent) { return ToFloat(Call<_float>(0x13638, base, exponent)); }
	float POW_f(float base, float exponent) { return ToFloat(FastCall<_float>(0x13638, base, exponent)); }
	float LOG10(float value) { return ToFloat(Call<_float>(0x453f443, value)); }
	float LOG10_f(float value) { return ToFloat(FastCall<_float>(0x453f443, value)); }
	float VMAG(float x, float y, float z) { return ToFloat(Call<_float>(0x28411d, x, y, z)); }
	float VMAG_f(float x, float y, float z) { return ToFloat(FastCall<_float>(0x28411d, x, y, z)); }
	float VMAG2(float x, float y, float z) { return ToFloat(Call<_float>(0x4dfe2b5, x, y, z)); }
	float VMAG2_f(float x, float y, float z) { return ToFloat(FastCall<_float>(0x4dfe2b5, x, y, z)); }
	float VDIST(float x1, float y1, float z1, float x2, float y2, float z2) { return ToFloat(Call<_float>(0x4dbeafc, x1, y1, z1, x2, y2, z2)); }
	float VDIST_f(float x1, float y1, float z1, float x2, float y2, float z2) { return ToFloat(FastCall<_float>(0x4dbeafc, x1, y1, z1, x2, y2, z2)); }
	float VDIST2(float x1, float y1, float z1, float x2, float y2, float z2) { return ToFloat(Call<_float>(0x96a174b6, x1, y1, z1, x2, y2, z2)); }
	float VDIST2_f(float x1, float y1, float z1, float x2, float y2, float z2) { return ToFloat(FastCall<_float>(0x96a174b6, x1, y1, z1, x2, y2, z2)); }
	int SHIFT_LEFT(int value, int bitShift) { return Call<int>(0x8059c91ee49c4, value, bitShift); }
	int SHIFT_LEFT_f(int value, int bitShift) { return FastCall<int>(0x8059c91ee49c4, value, bitShift); }
	int SHIFT_RIGHT(int value, int bitShift) { return Call<int>(0xf8adf5ac314fdf, value, bitShift); }
	int SHIFT_RIGHT_f(int value, int bitShift) { return FastCall<int>(0xf8adf5ac314fdf, value, bitShift); }
	int FLOOR(float value) { return Call<int>(0x3fe2bec, value); }
	int FLOOR_f(float value) { return FastCall<int>(0x3fe2bec, value); }
	int CEIL(float value) { return Call<int>(0x1f8105, value); }
	int CEIL_f(float value) { return FastCall<int>(0x1f8105, value); }
	int ROUND(float value) { return Call<int>(0x4a8b96e, value); }
	int ROUND_f(float value) { return FastCall<int>(0x4a8b96e, value); }
	float TO_FLOAT(int value) { return ToFloat(Call<_float>(0x22b0f098f78, value)); }
	float TO_FLOAT_f(int value) { return ToFloat(FastCall<_float>(0x22b0f098f78, value)); }
	void SET_THIS_THREAD_PRIORITY(int priority) { Call<void>(0xb039c4f362b7dc75, priority); }
	void SET_THIS_THREAD_PRIORITY_f(int priority) { FastCall<void>(0xb039c4f362b7dc75, priority); }
}
namespace APP
{
	BOOL APP_DATA_VALID() { return Call<BOOL>(0x91cbc5c83ed53805); }
	BOOL APP_DATA_VALID_f() { return FastCall<BOOL>(0x91cbc5c83ed53805); }
	int APP_GET_INT(char* property) { return Call<int>(0xc50a522d5be708, property); }
	int APP_GET_INT_f(char* property) { return FastCall<int>(0xc50a522d5be708, property); }
	float APP_GET_FLOAT(char* property) { return ToFloat(Call<_float>(0xe3abbe7c45d30b35, property)); }
	float APP_GET_FLOAT_f(char* property) { return ToFloat(FastCall<_float>(0xe3abbe7c45d30b35, property)); }
	const char* APP_GET_STRING(char* property) { return Call<char*>(0x91cc110c8b2f9238, property); }
	const char* APP_GET_STRING_f(char* property) { return FastCall<char*>(0x91cc110c8b2f9238, property); }
	void APP_SET_INT(char* property, int value) { Call<void>(0xc50a54a826ae14, property, value); }
	void APP_SET_INT_f(char* property, int value) { FastCall<void>(0xc50a54a826ae14, property, value); }
	void APP_SET_FLOAT(char* property, float value) { Call<void>(0xe3abc7cb39083f41, property, value); }
	void APP_SET_FLOAT_f(char* property, float value) { FastCall<void>(0xe3abc7cb39083f41, property, value); }
	void APP_SET_STRING(char* property, char* value) { Call<void>(0x91cd319bfea0dfac, property, value); }
	void APP_SET_STRING_f(char* property, char* value) { FastCall<void>(0x91cd319bfea0dfac, property, value); }
	void APP_SET_APP(char* appName) { Call<void>(0xc50a54a8269046, appName); }
	void APP_SET_APP_f(char* appName) { FastCall<void>(0xc50a54a8269046, appName); }
	void APP_SET_BLOCK(char* blockName) { Call<void>(0xe3abc7cb38cfe172, blockName); }
	void APP_SET_BLOCK_f(char* blockName) { FastCall<void>(0xe3abc7cb38cfe172, blockName); }
	void APP_CLEAR_BLOCK() { Call<void>(0xa7ab06ab35cb3a9d); }
	void APP_CLEAR_BLOCK_f() { FastCall<void>(0xa7ab06ab35cb3a9d); }
	void APP_CLOSE_APP() { Call<void>(0xe3abbb8daeea925c); }
	void APP_CLOSE_APP_f() { FastCall<void>(0xe3abbb8daeea925c); }
	void APP_CLOSE_BLOCK() { Call<void>(0xa7ab0edd9e9bb608); }
	void APP_CLOSE_BLOCK_f() { FastCall<void>(0xa7ab0edd9e9bb608); }
	BOOL APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT() { return Call<BOOL>(0x7125d782a9c332d3); }
	BOOL APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT_f() { return FastCall<BOOL>(0x7125d782a9c332d3); }
	BOOL APP_HAS_SYNCED_DATA(char* appName) { return Call<BOOL>(0x77d335c3aa66bbcc, appName); }
	BOOL APP_HAS_SYNCED_DATA_f(char* appName) { return FastCall<BOOL>(0x77d335c3aa66bbcc, appName); }
	void APP_SAVE_DATA() { Call<void>(0xe3abc7b1d84e786e); }
	void APP_SAVE_DATA_f() { FastCall<void>(0xe3abc7b1d84e786e); }
	int APP_GET_DELETED_FILE_STATUS() { return Call<int>(0x164d7f4967571608); }
	int APP_GET_DELETED_FILE_STATUS_f() { return FastCall<int>(0x164d7f4967571608); }
	BOOL APP_DELETE_APP_DATA(char* appName) { return Call<BOOL>(0x4ac2d43b5f1fd4fe, appName); }
	BOOL APP_DELETE_APP_DATA_f(char* appName) { return FastCall<BOOL>(0x4ac2d43b5f1fd4fe, appName); }
}
namespace AUDIO
{
	void PLAY_PED_RINGTONE(char* ringtoneName, Ped ped, BOOL p2) { Call<void>(0x3cf626185cd4001d, ringtoneName, ped, p2); }
	void PLAY_PED_RINGTONE_f(char* ringtoneName, Ped ped, BOOL p2) { FastCall<void>(0x3cf626185cd4001d, ringtoneName, ped, p2); }
	BOOL IS_PED_RINGTONE_PLAYING(Ped ped) { return Call<BOOL>(0x56687e6db96085b6, ped); }
	BOOL IS_PED_RINGTONE_PLAYING_f(Ped ped) { return FastCall<BOOL>(0x56687e6db96085b6, ped); }
	void STOP_PED_RINGTONE(Ped ped) { Call<void>(0x4bb6f8db5494420f, ped); }
	void STOP_PED_RINGTONE_f(Ped ped) { FastCall<void>(0x4bb6f8db5494420f, ped); }
	BOOL IS_MOBILE_PHONE_CALL_ONGOING() { return Call<BOOL>(0x2eb7a97ab4ccadb3); }
	BOOL IS_MOBILE_PHONE_CALL_ONGOING_f() { return FastCall<BOOL>(0x2eb7a97ab4ccadb3); }
	BOOL IS_MOBILE_INTERFERENCE_ACTIVE() { return Call<BOOL>(0x45d4f2e6f7cba7b); }
	BOOL IS_MOBILE_INTERFERENCE_ACTIVE_f() { return FastCall<BOOL>(0x45d4f2e6f7cba7b); }
	int GET_CURRENT_TV_SHOW_PLAY_TIME() { return Call<int>(0x5ad9c18d21dec864); }
	int GET_CURRENT_TV_SHOW_PLAY_TIME_f() { return FastCall<int>(0x5ad9c18d21dec864); }
	void CREATE_NEW_SCRIPTED_CONVERSATION() { Call<void>(0x8b2220d2cbb344f6); }
	void CREATE_NEW_SCRIPTED_CONVERSATION_f() { FastCall<void>(0x8b2220d2cbb344f6); }
	void ADD_LINE_TO_CONVERSATION(int index, char* p1, char* p2, int p3, int p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8, int p9, BOOL p10, BOOL p11, BOOL p12) { Call<void>(0xa5d592e4325827a, index, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12); }
	void ADD_LINE_TO_CONVERSATION_f(int index, char* p1, char* p2, int p3, int p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8, int p9, BOOL p10, BOOL p11, BOOL p12) { FastCall<void>(0xa5d592e4325827a, index, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12); }
	void ADD_PED_TO_CONVERSATION(int index, Ped ped, char* p2) { Call<void>(0x1ffd3eaaaea4fb9, index, ped, p2); }
	void ADD_PED_TO_CONVERSATION_f(int index, Ped ped, char* p2) { FastCall<void>(0x1ffd3eaaaea4fb9, index, ped, p2); }
	void SET_POSITION_FOR_NULL_CONV_PED(Any p0, float p1, float p2, float p3) { Call<void>(0x28e40492fc2dcc8d, p0, p1, p2, p3); }
	void SET_POSITION_FOR_NULL_CONV_PED_f(Any p0, float p1, float p2, float p3) { FastCall<void>(0x28e40492fc2dcc8d, p0, p1, p2, p3); }
	void SET_ENTITY_FOR_NULL_CONV_PED(int p0, Entity entity) { Call<void>(0xfab8851d30648407, p0, entity); }
	void SET_ENTITY_FOR_NULL_CONV_PED_f(int p0, Entity entity) { FastCall<void>(0xfab8851d30648407, p0, entity); }
	void SET_MICROPHONE_POSITION(BOOL toggle, float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3) { Call<void>(0xf3f8a9b0092e7d21, toggle, x1, y1, z1, x2, y2, z2, x3, y3, z3); }
	void SET_MICROPHONE_POSITION_f(BOOL toggle, float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3) { FastCall<void>(0xf3f8a9b0092e7d21, toggle, x1, y1, z1, x2, y2, z2, x3, y3, z3); }
	void SET_CONVERSATION_AUDIO_CONTROLLED_BY_ANIM(BOOL p0) { Call<void>(0x1f5a48ddd171b270, p0); }
	void SET_CONVERSATION_AUDIO_CONTROLLED_BY_ANIM_f(BOOL p0) { FastCall<void>(0x1f5a48ddd171b270, p0); }
	void SET_CONVERSATION_AUDIO_PLACEHOLDER(BOOL p0) { Call<void>(0xfd9c440b17e752b, p0); }
	void SET_CONVERSATION_AUDIO_PLACEHOLDER_f(BOOL p0) { FastCall<void>(0xfd9c440b17e752b, p0); }
	void START_SCRIPT_PHONE_CONVERSATION(BOOL p0, BOOL p1) { Call<void>(0x12164d6d85b46e0b, p0, p1); }
	void START_SCRIPT_PHONE_CONVERSATION_f(BOOL p0, BOOL p1) { FastCall<void>(0x12164d6d85b46e0b, p0, p1); }
	void PRELOAD_SCRIPT_PHONE_CONVERSATION(BOOL p0, BOOL p1) { Call<void>(0x59ddf7efddf48f2, p0, p1); }
	void PRELOAD_SCRIPT_PHONE_CONVERSATION_f(BOOL p0, BOOL p1) { FastCall<void>(0x59ddf7efddf48f2, p0, p1); }
	void START_SCRIPT_CONVERSATION(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { Call<void>(0xf33094ae44796ffa, p0, p1, p2, p3); }
	void START_SCRIPT_CONVERSATION_f(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { FastCall<void>(0xf33094ae44796ffa, p0, p1, p2, p3); }
	void PRELOAD_SCRIPT_CONVERSATION(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { Call<void>(0xc225ede301004421, p0, p1, p2, p3); }
	void PRELOAD_SCRIPT_CONVERSATION_f(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { FastCall<void>(0xc225ede301004421, p0, p1, p2, p3); }
	void START_PRELOADED_CONVERSATION() { Call<void>(0xaef9c1e7f9bb9fb7); }
	void START_PRELOADED_CONVERSATION_f() { FastCall<void>(0xaef9c1e7f9bb9fb7); }
	BOOL GET_IS_PRELOADED_CONVERSATION_READY() { return Call<BOOL>(0xf5f5dcdf5ec93a0a); }
	BOOL GET_IS_PRELOADED_CONVERSATION_READY_f() { return FastCall<BOOL>(0xf5f5dcdf5ec93a0a); }
	BOOL IS_SCRIPTED_CONVERSATION_ONGOING() { return Call<BOOL>(0x2b73ee76fa1de1bf); }
	BOOL IS_SCRIPTED_CONVERSATION_ONGOING_f() { return FastCall<BOOL>(0x2b73ee76fa1de1bf); }
	BOOL IS_SCRIPTED_CONVERSATION_LOADED() { return Call<BOOL>(0x9e4e0ff34d50b921); }
	BOOL IS_SCRIPTED_CONVERSATION_LOADED_f() { return FastCall<BOOL>(0x9e4e0ff34d50b921); }
	int GET_CURRENT_SCRIPTED_CONVERSATION_LINE() { return Call<int>(0xe9496bfb2c9b082a); }
	int GET_CURRENT_SCRIPTED_CONVERSATION_LINE_f() { return FastCall<int>(0xe9496bfb2c9b082a); }
	void PAUSE_SCRIPTED_CONVERSATION(BOOL p0) { Call<void>(0xd5e299b33107d64f, p0); }
	void PAUSE_SCRIPTED_CONVERSATION_f(BOOL p0) { FastCall<void>(0xd5e299b33107d64f, p0); }
	void RESTART_SCRIPTED_CONVERSATION() { Call<void>(0x77b516ce2d2ac9a8); }
	void RESTART_SCRIPTED_CONVERSATION_f() { FastCall<void>(0x77b516ce2d2ac9a8); }
	int STOP_SCRIPTED_CONVERSATION(BOOL p0) { return Call<int>(0x7b5c088a24e57f7b, p0); }
	int STOP_SCRIPTED_CONVERSATION_f(BOOL p0) { return FastCall<int>(0x7b5c088a24e57f7b, p0); }
	void SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE() { Call<void>(0x88bb8e2aad4b9a3); }
	void SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE_f() { FastCall<void>(0x88bb8e2aad4b9a3); }
	void INTERRUPT_CONVERSATION(Ped ped, char* voiceline, char* speaker) { Call<void>(0x2831ae8dbf8974ff, ped, voiceline, speaker); }
	void INTERRUPT_CONVERSATION_f(Ped ped, char* voiceline, char* speaker) { FastCall<void>(0x2831ae8dbf8974ff, ped, voiceline, speaker); }
	void INTERRUPT_CONVERSATION_AND_PAUSE(Ped ped, char* p1, char* speaker) { Call<void>(0x92868786401da60e, ped, p1, speaker); }
	void INTERRUPT_CONVERSATION_AND_PAUSE_f(Ped ped, char* p1, char* speaker) { FastCall<void>(0x92868786401da60e, ped, p1, speaker); }
	int GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE(Any* p0) { return Call<int>(0x7ef4670af243663b, p0); }
	int GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE_f(Any* p0) { return FastCall<int>(0x7ef4670af243663b, p0); }
	void SET_NO_DUCKING_FOR_CONVERSATION(BOOL p0) { Call<void>(0xbb53e15b963c0fb0, p0); }
	void SET_NO_DUCKING_FOR_CONVERSATION_f(BOOL p0) { FastCall<void>(0xbb53e15b963c0fb0, p0); }
	void REGISTER_SCRIPT_WITH_AUDIO(int p0) { Call<void>(0x9adcc0aadfeb7c55, p0); }
	void REGISTER_SCRIPT_WITH_AUDIO_f(int p0) { FastCall<void>(0x9adcc0aadfeb7c55, p0); }
	void UNREGISTER_SCRIPT_WITH_AUDIO() { Call<void>(0x77e4f0494c0609ae); }
	void UNREGISTER_SCRIPT_WITH_AUDIO_f() { FastCall<void>(0x77e4f0494c0609ae); }
	BOOL REQUEST_MISSION_AUDIO_BANK(char* audioBank, BOOL p1, Any p2) { return Call<BOOL>(0x2b1eadfdbdf8dda8, audioBank, p1, p2); }
	BOOL REQUEST_MISSION_AUDIO_BANK_f(char* audioBank, BOOL p1, Any p2) { return FastCall<BOOL>(0x2b1eadfdbdf8dda8, audioBank, p1, p2); }
	BOOL REQUEST_AMBIENT_AUDIO_BANK(char* audioBank, BOOL p1, Any p2) { return Call<BOOL>(0xf659ea7204b78d1c, audioBank, p1, p2); }
	BOOL REQUEST_AMBIENT_AUDIO_BANK_f(char* audioBank, BOOL p1, Any p2) { return FastCall<BOOL>(0xf659ea7204b78d1c, audioBank, p1, p2); }
	BOOL REQUEST_SCRIPT_AUDIO_BANK(char* audioBank, BOOL p1, Any p2) { return Call<BOOL>(0x3030993c80997349, audioBank, p1, p2); }
	BOOL REQUEST_SCRIPT_AUDIO_BANK_f(char* audioBank, BOOL p1, Any p2) { return FastCall<BOOL>(0x3030993c80997349, audioBank, p1, p2); }
	BOOL HINT_MISSION_AUDIO_BANK(char* audioBank, BOOL p1, Any p2) { return Call<BOOL>(0x3faf1bd0df6e9e90, audioBank, p1, p2); }
	BOOL HINT_MISSION_AUDIO_BANK_f(char* audioBank, BOOL p1, Any p2) { return FastCall<BOOL>(0x3faf1bd0df6e9e90, audioBank, p1, p2); }
	BOOL HINT_AMBIENT_AUDIO_BANK(char* audioBank, BOOL p1, Any p2) { return Call<BOOL>(0xaea5845262d4e04, audioBank, p1, p2); }
	BOOL HINT_AMBIENT_AUDIO_BANK_f(char* audioBank, BOOL p1, Any p2) { return FastCall<BOOL>(0xaea5845262d4e04, audioBank, p1, p2); }
	BOOL HINT_SCRIPT_AUDIO_BANK(char* audioBank, BOOL p1, Any p2) { return Call<BOOL>(0x93f3316c9a73f561, audioBank, p1, p2); }
	BOOL HINT_SCRIPT_AUDIO_BANK_f(char* audioBank, BOOL p1, Any p2) { return FastCall<BOOL>(0x93f3316c9a73f561, audioBank, p1, p2); }
	void RELEASE_MISSION_AUDIO_BANK() { Call<void>(0x8b22563f82450530); }
	void RELEASE_MISSION_AUDIO_BANK_f() { FastCall<void>(0x8b22563f82450530); }
	void RELEASE_AMBIENT_AUDIO_BANK() { Call<void>(0x565d92b3c903b4a4); }
	void RELEASE_AMBIENT_AUDIO_BANK_f() { FastCall<void>(0x565d92b3c903b4a4); }
	void RELEASE_NAMED_SCRIPT_AUDIO_BANK(char* audioBank) { Call<void>(0x5d3d9a5814c2f11b, audioBank); }
	void RELEASE_NAMED_SCRIPT_AUDIO_BANK_f(char* audioBank) { FastCall<void>(0x5d3d9a5814c2f11b, audioBank); }
	void RELEASE_SCRIPT_AUDIO_BANK() { Call<void>(0x9ea4545765e63ac1); }
	void RELEASE_SCRIPT_AUDIO_BANK_f() { FastCall<void>(0x9ea4545765e63ac1); }
	void UNHINT_AMBIENT_AUDIO_BANK() { Call<void>(0xaa023bf2d2b0674b); }
	void UNHINT_AMBIENT_AUDIO_BANK_f() { FastCall<void>(0xaa023bf2d2b0674b); }
	void UNHINT_SCRIPT_AUDIO_BANK() { Call<void>(0xfc2dc527e215173a); }
	void UNHINT_SCRIPT_AUDIO_BANK_f() { FastCall<void>(0xfc2dc527e215173a); }
	void UNHINT_NAMED_SCRIPT_AUDIO_BANK(char* audioBank) { Call<void>(0x7eac62c9122eced4, audioBank); }
	void UNHINT_NAMED_SCRIPT_AUDIO_BANK_f(char* audioBank) { FastCall<void>(0x7eac62c9122eced4, audioBank); }
	int GET_SOUND_ID() { return Call<int>(0x19da35c607ec9d54); }
	int GET_SOUND_ID_f() { return FastCall<int>(0x19da35c607ec9d54); }
	void RELEASE_SOUND_ID(int soundId) { Call<void>(0x72683a4b7dfc33c3, soundId); }
	void RELEASE_SOUND_ID_f(int soundId) { FastCall<void>(0x72683a4b7dfc33c3, soundId); }
	void PLAY_SOUND(int soundId, char* audioName, char* audioRef, BOOL p3, Any p4, BOOL p5) { Call<void>(0x7c063c64e8024, soundId, audioName, audioRef, p3, p4, p5); }
	void PLAY_SOUND_f(int soundId, char* audioName, char* audioRef, BOOL p3, Any p4, BOOL p5) { FastCall<void>(0x7c063c64e8024, soundId, audioName, audioRef, p3, p4, p5); }
	void PLAY_SOUND_FRONTEND(int soundId, char* audioName, char* audioRef, BOOL p3) { Call<void>(0x43b5e2316e4d17cd, soundId, audioName, audioRef, p3); }
	void PLAY_SOUND_FRONTEND_f(int soundId, char* audioName, char* audioRef, BOOL p3) { FastCall<void>(0x43b5e2316e4d17cd, soundId, audioName, audioRef, p3); }
	void PLAY_DEFERRED_SOUND_FRONTEND(char* soundName, char* soundsetName) { Call<void>(0xf07675e5755783b7, soundName, soundsetName); }
	void PLAY_DEFERRED_SOUND_FRONTEND_f(char* soundName, char* soundsetName) { FastCall<void>(0xf07675e5755783b7, soundName, soundsetName); }
	void PLAY_SOUND_FROM_ENTITY(int soundId, char* audioName, Entity entity, char* audioRef, BOOL isNetwork, Any p5) { Call<void>(0x8afd564ebb707a7d, soundId, audioName, entity, audioRef, isNetwork, p5); }
	void PLAY_SOUND_FROM_ENTITY_f(int soundId, char* audioName, Entity entity, char* audioRef, BOOL isNetwork, Any p5) { FastCall<void>(0x8afd564ebb707a7d, soundId, audioName, entity, audioRef, isNetwork, p5); }
	void PLAY_SOUND_FROM_ENTITY_HASH(int soundId, Hash model, Entity entity, Hash soundSetHash, Any p4, Any p5) { Call<void>(0x1242449df475fd90, soundId, model, entity, soundSetHash, p4, p5); }
	void PLAY_SOUND_FROM_ENTITY_HASH_f(int soundId, Hash model, Entity entity, Hash soundSetHash, Any p4, Any p5) { FastCall<void>(0x1242449df475fd90, soundId, model, entity, soundSetHash, p4, p5); }
	void PLAY_SOUND_FROM_COORD(int soundId, char* audioName, float x, float y, float z, char* audioRef, BOOL isNetwork, int range, BOOL p8) { Call<void>(0x2dc61b8eed29e4fb, soundId, audioName, x, y, z, audioRef, isNetwork, range, p8); }
	void PLAY_SOUND_FROM_COORD_f(int soundId, char* audioName, float x, float y, float z, char* audioRef, BOOL isNetwork, int range, BOOL p8) { FastCall<void>(0x2dc61b8eed29e4fb, soundId, audioName, x, y, z, audioRef, isNetwork, range, p8); }
	void UPDATE_SOUND_COORD(int soundId, float x, float y, float z) { Call<void>(0xe15038cab33b6d0f, soundId, x, y, z); }
	void UPDATE_SOUND_COORD_f(int soundId, float x, float y, float z) { FastCall<void>(0xe15038cab33b6d0f, soundId, x, y, z); }
	void STOP_SOUND(int soundId) { Call<void>(0x80f141786aa72, soundId); }
	void STOP_SOUND_f(int soundId) { FastCall<void>(0x80f141786aa72, soundId); }
	int GET_NETWORK_ID_FROM_SOUND_ID(int soundId) { return Call<int>(0xad7f2d51b48bb636, soundId); }
	int GET_NETWORK_ID_FROM_SOUND_ID_f(int soundId) { return FastCall<int>(0xad7f2d51b48bb636, soundId); }
	int GET_SOUND_ID_FROM_NETWORK_ID(int netId) { return Call<int>(0xefadffe7211fa7b6, netId); }
	int GET_SOUND_ID_FROM_NETWORK_ID_f(int netId) { return FastCall<int>(0xefadffe7211fa7b6, netId); }
	void SET_VARIABLE_ON_SOUND(int soundId, char* variable, float p2) { Call<void>(0xf723dd13f17ef235, soundId, variable, p2); }
	void SET_VARIABLE_ON_SOUND_f(int soundId, char* variable, float p2) { FastCall<void>(0xf723dd13f17ef235, soundId, variable, p2); }
	void SET_VARIABLE_ON_STREAM(char* variable, float p1) { Call<void>(0xed57c56a3ea44afa, variable, p1); }
	void SET_VARIABLE_ON_STREAM_f(char* variable, float p1) { FastCall<void>(0xed57c56a3ea44afa, variable, p1); }
	void OVERRIDE_UNDERWATER_STREAM(char* p0, BOOL p1) { Call<void>(0x4f6532a0eced50cd, p0, p1); }
	void OVERRIDE_UNDERWATER_STREAM_f(char* p0, BOOL p1) { FastCall<void>(0x4f6532a0eced50cd, p0, p1); }
	void SET_VARIABLE_ON_UNDER_WATER_STREAM(char* variableName, float value) { Call<void>(0xa8a9985d4c8d2a69, variableName, value); }
	void SET_VARIABLE_ON_UNDER_WATER_STREAM_f(char* variableName, float value) { FastCall<void>(0xa8a9985d4c8d2a69, variableName, value); }
	BOOL HAS_SOUND_FINISHED(int soundId) { return Call<BOOL>(0xdf1cb560ef480227, soundId); }
	BOOL HAS_SOUND_FINISHED_f(int soundId) { return FastCall<BOOL>(0xdf1cb560ef480227, soundId); }
	void PLAY_PED_AMBIENT_SPEECH_NATIVE(Ped ped, char* speechName, char* speechParam, Any p3) { Call<void>(0x6e71c7c7b4688bf2, ped, speechName, speechParam, p3); }
	void PLAY_PED_AMBIENT_SPEECH_NATIVE_f(Ped ped, char* speechName, char* speechParam, Any p3) { FastCall<void>(0x6e71c7c7b4688bf2, ped, speechName, speechParam, p3); }
	void PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE(Ped ped, char* speechName, char* speechParam, Any p3) { Call<void>(0xd0ec688cf6558cfc, ped, speechName, speechParam, p3); }
	void PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE_f(Ped ped, char* speechName, char* speechParam, Any p3) { FastCall<void>(0xd0ec688cf6558cfc, ped, speechName, speechParam, p3); }
	void PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(Ped ped, char* speechName, char* voiceName, char* speechParam, BOOL p4) { Call<void>(0x702693e92ec5e402, ped, speechName, voiceName, speechParam, p4); }
	void PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE_f(Ped ped, char* speechName, char* voiceName, char* speechParam, BOOL p4) { FastCall<void>(0x702693e92ec5e402, ped, speechName, voiceName, speechParam, p4); }
	void PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE(char* speechName, char* voiceName, float x, float y, float z, char* speechParam) { Call<void>(0xa986d395feb733c3, speechName, voiceName, x, y, z, speechParam); }
	void PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE_f(char* speechName, char* voiceName, float x, float y, float z, char* speechParam) { FastCall<void>(0xa986d395feb733c3, speechName, voiceName, x, y, z, speechParam); }
	void OVERRIDE_TREVOR_RAGE(char* voiceEffect) { Call<void>(0x15ddfe0b425ca1a7, voiceEffect); }
	void OVERRIDE_TREVOR_RAGE_f(char* voiceEffect) { FastCall<void>(0x15ddfe0b425ca1a7, voiceEffect); }
	void RESET_TREVOR_RAGE() { Call<void>(0xeba8addc9e91be8a); }
	void RESET_TREVOR_RAGE_f() { FastCall<void>(0xeba8addc9e91be8a); }
	void SET_PLAYER_ANGRY(Ped ped, BOOL toggle) { Call<void>(0x38a3fea4bef22b80, ped, toggle); }
	void SET_PLAYER_ANGRY_f(Ped ped, BOOL toggle) { FastCall<void>(0x38a3fea4bef22b80, ped, toggle); }
	void PLAY_PAIN(Ped ped, int painID, int p1, Any p3) { Call<void>(0x400337f07101, ped, painID, p1, p3); }
	void PLAY_PAIN_f(Ped ped, int painID, int p1, Any p3) { FastCall<void>(0x400337f07101, ped, painID, p1, p3); }
	void RELEASE_WEAPON_AUDIO() { Call<void>(0x352d220e72f53d2b); }
	void RELEASE_WEAPON_AUDIO_f() { FastCall<void>(0x352d220e72f53d2b); }
	void ACTIVATE_AUDIO_SLOWMO_MODE(char* mode) { Call<void>(0xa7d243c71bde39aa, mode); }
	void ACTIVATE_AUDIO_SLOWMO_MODE_f(char* mode) { FastCall<void>(0xa7d243c71bde39aa, mode); }
	void DEACTIVATE_AUDIO_SLOWMO_MODE(char* mode) { Call<void>(0xc6743ec5863db2eb, mode); }
	void DEACTIVATE_AUDIO_SLOWMO_MODE_f(char* mode) { FastCall<void>(0xc6743ec5863db2eb, mode); }
	void SET_AMBIENT_VOICE_NAME(Ped ped, char* name) { Call<void>(0x3cb56da3617404dc, ped, name); }
	void SET_AMBIENT_VOICE_NAME_f(Ped ped, char* name) { FastCall<void>(0x3cb56da3617404dc, ped, name); }
	void SET_AMBIENT_VOICE_NAME_HASH(Ped ped, Hash hash) { Call<void>(0x8372ec4bb7351691, ped, hash); }
	void SET_AMBIENT_VOICE_NAME_HASH_f(Ped ped, Hash hash) { FastCall<void>(0x8372ec4bb7351691, ped, hash); }
	Hash GET_AMBIENT_VOICE_NAME_HASH(Ped ped) { return Call<Hash>(0x5eb5693507684d85, ped); }
	Hash GET_AMBIENT_VOICE_NAME_HASH_f(Ped ped) { return FastCall<Hash>(0x5eb5693507684d85, ped); }
	void SET_PED_VOICE_FULL(Ped ped) { Call<void>(0x543c63c4c4682c89, ped); }
	void SET_PED_VOICE_FULL_f(Ped ped) { FastCall<void>(0x543c63c4c4682c89, ped); }
	void SET_PED_RACE_AND_VOICE_GROUP(Ped ped, int p1, Hash voiceGroup) { Call<void>(0xa702ef83465d6fa9, ped, p1, voiceGroup); }
	void SET_PED_RACE_AND_VOICE_GROUP_f(Ped ped, int p1, Hash voiceGroup) { FastCall<void>(0xa702ef83465d6fa9, ped, p1, voiceGroup); }
	void SET_PED_VOICE_GROUP(Ped ped, Hash voiceGroupHash) { Call<void>(0x335014d3c8aa2ba5, ped, voiceGroupHash); }
	void SET_PED_VOICE_GROUP_f(Ped ped, Hash voiceGroupHash) { FastCall<void>(0x335014d3c8aa2ba5, ped, voiceGroupHash); }
	void SET_PED_VOICE_GROUP_FROM_RACE_TO_PVG(Ped ped, Hash voiceGroupHash) { Call<void>(0x68b777c5ff606cb0, ped, voiceGroupHash); }
	void SET_PED_VOICE_GROUP_FROM_RACE_TO_PVG_f(Ped ped, Hash voiceGroupHash) { FastCall<void>(0x68b777c5ff606cb0, ped, voiceGroupHash); }
	void SET_PED_GENDER(Ped ped, BOOL p1) { Call<void>(0xee7a27ef4f1fcc2e, ped, p1); }
	void SET_PED_GENDER_f(Ped ped, BOOL p1) { FastCall<void>(0xee7a27ef4f1fcc2e, ped, p1); }
	void STOP_CURRENT_PLAYING_SPEECH(Ped ped) { Call<void>(0x19f45ade9a9eb6b6, ped); }
	void STOP_CURRENT_PLAYING_SPEECH_f(Ped ped) { FastCall<void>(0x19f45ade9a9eb6b6, ped); }
	void STOP_CURRENT_PLAYING_AMBIENT_SPEECH(Ped ped) { Call<void>(0x8351236467366a5d, ped); }
	void STOP_CURRENT_PLAYING_AMBIENT_SPEECH_f(Ped ped) { FastCall<void>(0x8351236467366a5d, ped); }
	BOOL IS_AMBIENT_SPEECH_PLAYING(Ped ped) { return Call<BOOL>(0x4a52a6185e19550d, ped); }
	BOOL IS_AMBIENT_SPEECH_PLAYING_f(Ped ped) { return FastCall<BOOL>(0x4a52a6185e19550d, ped); }
	BOOL IS_SCRIPTED_SPEECH_PLAYING(Ped p0) { return Call<BOOL>(0xfffc49f43b47ebd1, p0); }
	BOOL IS_SCRIPTED_SPEECH_PLAYING_f(Ped p0) { return FastCall<BOOL>(0xfffc49f43b47ebd1, p0); }
	BOOL IS_ANY_SPEECH_PLAYING(Ped ped) { return Call<BOOL>(0x5f5cf9fc790765b9, ped); }
	BOOL IS_ANY_SPEECH_PLAYING_f(Ped ped) { return FastCall<BOOL>(0x5f5cf9fc790765b9, ped); }
	BOOL IS_ANY_POSITIONAL_SPEECH_PLAYING() { return Call<BOOL>(0x8e4e6d935fe83934); }
	BOOL IS_ANY_POSITIONAL_SPEECH_PLAYING_f() { return FastCall<BOOL>(0x8e4e6d935fe83934); }
	BOOL DOES_CONTEXT_EXIST_FOR_THIS_PED(Ped ped, char* speechName, BOOL p2) { return Call<BOOL>(0x2687e75623da8542, ped, speechName, p2); }
	BOOL DOES_CONTEXT_EXIST_FOR_THIS_PED_f(Ped ped, char* speechName, BOOL p2) { return FastCall<BOOL>(0x2687e75623da8542, ped, speechName, p2); }
	BOOL IS_PED_IN_CURRENT_CONVERSATION(Ped ped) { return Call<BOOL>(0x25239c69088c279e, ped); }
	BOOL IS_PED_IN_CURRENT_CONVERSATION_f(Ped ped) { return FastCall<BOOL>(0x25239c69088c279e, ped); }
	void SET_PED_IS_DRUNK(Ped ped, BOOL toggle) { Call<void>(0x388fe967d7bf705c, ped, toggle); }
	void SET_PED_IS_DRUNK_f(Ped ped, BOOL toggle) { FastCall<void>(0x388fe967d7bf705c, ped, toggle); }
	void PLAY_ANIMAL_VOCALIZATION(Ped pedHandle, int p1, char* speechName) { Call<void>(0xdd828afd43429427, pedHandle, p1, speechName); }
	void PLAY_ANIMAL_VOCALIZATION_f(Ped pedHandle, int p1, char* speechName) { FastCall<void>(0xdd828afd43429427, pedHandle, p1, speechName); }
	BOOL IS_ANIMAL_VOCALIZATION_PLAYING(Ped pedHandle) { return Call<BOOL>(0x2f4180eeb2218ec, pedHandle); }
	BOOL IS_ANIMAL_VOCALIZATION_PLAYING_f(Ped pedHandle) { return FastCall<BOOL>(0x2f4180eeb2218ec, pedHandle); }
	void SET_ANIMAL_MOOD(Ped animal, int mood) { Call<void>(0xe0a0041bd90992dd, animal, mood); }
	void SET_ANIMAL_MOOD_f(Ped animal, int mood) { FastCall<void>(0xe0a0041bd90992dd, animal, mood); }
	BOOL IS_MOBILE_PHONE_RADIO_ACTIVE() { return Call<BOOL>(0x3400ef8483085723); }
	BOOL IS_MOBILE_PHONE_RADIO_ACTIVE_f() { return FastCall<BOOL>(0x3400ef8483085723); }
	void SET_MOBILE_PHONE_RADIO_STATE(BOOL state) { Call<void>(0x6b6e269756a1e49c, state); }
	void SET_MOBILE_PHONE_RADIO_STATE_f(BOOL state) { FastCall<void>(0x6b6e269756a1e49c, state); }
	int GET_PLAYER_RADIO_STATION_INDEX() { return Call<int>(0x9f0b411976c948ae); }
	int GET_PLAYER_RADIO_STATION_INDEX_f() { return FastCall<int>(0x9f0b411976c948ae); }
	char* GET_PLAYER_RADIO_STATION_NAME() { Call<char*>(0xbaced08d35636b0f); }
	char* GET_PLAYER_RADIO_STATION_NAME_f() { FastCall<char*>(0xbaced08d35636b0f); }
	const char* GET_RADIO_STATION_NAME(int radioStation) { return Call<char*>(0x4c21ca1fbd5ae063, radioStation); }
	const char* GET_RADIO_STATION_NAME_f(int radioStation) { return FastCall<char*>(0x4c21ca1fbd5ae063, radioStation); }
	int GET_PLAYER_RADIO_STATION_GENRE() { return Call<int>(0x9f0b411976a9295f); }
	int GET_PLAYER_RADIO_STATION_GENRE_f() { return FastCall<int>(0x9f0b411976a9295f); }
	BOOL IS_RADIO_RETUNING() { return Call<BOOL>(0x456a278c6844b241); }
	BOOL IS_RADIO_RETUNING_f() { return FastCall<BOOL>(0x456a278c6844b241); }
	BOOL IS_RADIO_FADED_OUT() { return Call<BOOL>(0x67dac094a3638b3e); }
	BOOL IS_RADIO_FADED_OUT_f() { return FastCall<BOOL>(0x67dac094a3638b3e); }
	void SET_RADIO_RETUNE_UP() { Call<void>(0xf17340868cf00d4e); }
	void SET_RADIO_RETUNE_UP_f() { FastCall<void>(0xf17340868cf00d4e); }
	void SET_RADIO_RETUNE_DOWN() { Call<void>(0x61a53917111a3e95); }
	void SET_RADIO_RETUNE_DOWN_f() { FastCall<void>(0x61a53917111a3e95); }
	void SET_RADIO_TO_STATION_NAME(char* stationName) { Call<void>(0xf147b27963018979, stationName); }
	void SET_RADIO_TO_STATION_NAME_f(char* stationName) { FastCall<void>(0xf147b27963018979, stationName); }
	void SET_VEH_RADIO_STATION(Vehicle vehicle, char* radioStation) { Call<void>(0xb01cd2ae85cfb7ad, vehicle, radioStation); }
	void SET_VEH_RADIO_STATION_f(Vehicle vehicle, char* radioStation) { FastCall<void>(0xb01cd2ae85cfb7ad, vehicle, radioStation); }
	void SET_VEH_HAS_NORMAL_RADIO(Vehicle vehicle) { Call<void>(0xa9c37c8fd937200b, vehicle); }
	void SET_VEH_HAS_NORMAL_RADIO_f(Vehicle vehicle) { FastCall<void>(0xa9c37c8fd937200b, vehicle); }
	BOOL IS_VEHICLE_RADIO_ON(Vehicle vehicle) { return Call<BOOL>(0x350647311a2a570b, vehicle); }
	BOOL IS_VEHICLE_RADIO_ON_f(Vehicle vehicle) { return FastCall<BOOL>(0x350647311a2a570b, vehicle); }
	void SET_VEH_FORCED_RADIO_THIS_FRAME(Vehicle vehicle) { Call<void>(0xf4fa02355a5ee2b3, vehicle); }
	void SET_VEH_FORCED_RADIO_THIS_FRAME_f(Vehicle vehicle) { FastCall<void>(0xf4fa02355a5ee2b3, vehicle); }
	void SET_EMITTER_RADIO_STATION(char* emitterName, char* radioStation, Any p2) { Call<void>(0x409e6339b7238142, emitterName, radioStation, p2); }
	void SET_EMITTER_RADIO_STATION_f(char* emitterName, char* radioStation, Any p2) { FastCall<void>(0x409e6339b7238142, emitterName, radioStation, p2); }
	void SET_STATIC_EMITTER_ENABLED(char* emitterName, BOOL toggle) { Call<void>(0x1d837d3d97cdc7fc, emitterName, toggle); }
	void SET_STATIC_EMITTER_ENABLED_f(char* emitterName, BOOL toggle) { FastCall<void>(0x1d837d3d97cdc7fc, emitterName, toggle); }
	void LINK_STATIC_EMITTER_TO_ENTITY(char* emitterName, Entity entity) { Call<void>(0x89458fafa5f378a, emitterName, entity); }
	void LINK_STATIC_EMITTER_TO_ENTITY_f(char* emitterName, Entity entity) { FastCall<void>(0x89458fafa5f378a, emitterName, entity); }
	void SET_RADIO_TO_STATION_INDEX(int radioStation) { Call<void>(0x37ae9cb2fceef784, radioStation); }
	void SET_RADIO_TO_STATION_INDEX_f(int radioStation) { FastCall<void>(0x37ae9cb2fceef784, radioStation); }
	void SET_FRONTEND_RADIO_ACTIVE(BOOL active) { Call<void>(0xe31e0664c4ca34ba, active); }
	void SET_FRONTEND_RADIO_ACTIVE_f(BOOL active) { FastCall<void>(0xe31e0664c4ca34ba, active); }
	void UNLOCK_MISSION_NEWS_STORY(int newsStory) { Call<void>(0x7fd6c6a6316cadf7, newsStory); }
	void UNLOCK_MISSION_NEWS_STORY_f(int newsStory) { FastCall<void>(0x7fd6c6a6316cadf7, newsStory); }
	BOOL IS_MISSION_NEWS_STORY_UNLOCKED(int newsStory) { return Call<BOOL>(0xbfa65ee1ecf56511, newsStory); }
	BOOL IS_MISSION_NEWS_STORY_UNLOCKED_f(int newsStory) { return FastCall<BOOL>(0xbfa65ee1ecf56511, newsStory); }
	int GET_AUDIBLE_MUSIC_TRACK_TEXT_ID() { return Call<int>(0x234a44f0afd65739); }
	int GET_AUDIBLE_MUSIC_TRACK_TEXT_ID_f() { return FastCall<int>(0x234a44f0afd65739); }
	void PLAY_END_CREDITS_MUSIC(BOOL play) { Call<void>(0xbdee6d7c445ed931, play); }
	void PLAY_END_CREDITS_MUSIC_f(BOOL play) { FastCall<void>(0xbdee6d7c445ed931, play); }
	void SKIP_RADIO_FORWARD() { Call<void>(0xbe77f90775687b81); }
	void SKIP_RADIO_FORWARD_f() { FastCall<void>(0xbe77f90775687b81); }
	void FREEZE_RADIO_STATION(char* radioStation) { Call<void>(0xdfe6cd29ddd17108, radioStation); }
	void FREEZE_RADIO_STATION_f(char* radioStation) { FastCall<void>(0xdfe6cd29ddd17108, radioStation); }
	void UNFREEZE_RADIO_STATION(char* radioStation) { Call<void>(0x2079e8c15ed33521, radioStation); }
	void UNFREEZE_RADIO_STATION_f(char* radioStation) { FastCall<void>(0x2079e8c15ed33521, radioStation); }
	void SET_RADIO_AUTO_UNFREEZE(BOOL toggle) { Call<void>(0xd90b51b2f5131e1f, toggle); }
	void SET_RADIO_AUTO_UNFREEZE_f(BOOL toggle) { FastCall<void>(0xd90b51b2f5131e1f, toggle); }
	void SET_INITIAL_PLAYER_STATION(char* radioStation) { Call<void>(0xb6303432bf7624ce, radioStation); }
	void SET_INITIAL_PLAYER_STATION_f(char* radioStation) { FastCall<void>(0xb6303432bf7624ce, radioStation); }
	void SET_USER_RADIO_CONTROL_ENABLED(BOOL toggle) { Call<void>(0x37522bc7b429c664, toggle); }
	void SET_USER_RADIO_CONTROL_ENABLED_f(BOOL toggle) { FastCall<void>(0x37522bc7b429c664, toggle); }
	void SET_RADIO_TRACK(char* radioStation, char* radioTrack) { Call<void>(0xe0d04824d40e334a, radioStation, radioTrack); }
	void SET_RADIO_TRACK_f(char* radioStation, char* radioTrack) { FastCall<void>(0xe0d04824d40e334a, radioStation, radioTrack); }
	void SET_RADIO_TRACK_WITH_START_OFFSET(char* radioStationName, char* mixName, int p2) { Call<void>(0xf74ebe57e50dec54, radioStationName, mixName, p2); }
	void SET_RADIO_TRACK_WITH_START_OFFSET_f(char* radioStationName, char* mixName, int p2) { FastCall<void>(0xf74ebe57e50dec54, radioStationName, mixName, p2); }
	void SET_NEXT_RADIO_TRACK(char* radioName, char* radioTrack, char* p2, char* p3) { Call<void>(0x1f09b11a5f4262d8, radioName, radioTrack, p2, p3); }
	void SET_NEXT_RADIO_TRACK_f(char* radioName, char* radioTrack, char* p2, char* p3) { FastCall<void>(0x1f09b11a5f4262d8, radioName, radioTrack, p2, p3); }
	void SET_VEHICLE_RADIO_LOUD(Vehicle vehicle, BOOL toggle) { Call<void>(0x31d9ea3e8b88f366, vehicle, toggle); }
	void SET_VEHICLE_RADIO_LOUD_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x31d9ea3e8b88f366, vehicle, toggle); }
	BOOL CAN_VEHICLE_RECEIVE_CB_RADIO(Vehicle vehicle) { return Call<BOOL>(0xc254744b4cc6f879, vehicle); }
	BOOL CAN_VEHICLE_RECEIVE_CB_RADIO_f(Vehicle vehicle) { return FastCall<BOOL>(0xc254744b4cc6f879, vehicle); }
	void SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY(BOOL toggle) { Call<void>(0xbe9af50a30d483e2, toggle); }
	void SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY_f(BOOL toggle) { FastCall<void>(0xbe9af50a30d483e2, toggle); }
	BOOL DOES_PLAYER_VEH_HAVE_RADIO() { return Call<BOOL>(0xa6f7e79385a44aa2); }
	BOOL DOES_PLAYER_VEH_HAVE_RADIO_f() { return FastCall<BOOL>(0xa6f7e79385a44aa2); }
	BOOL IS_PLAYER_VEH_RADIO_ENABLE() { return Call<BOOL>(0x1fcaaea5b76a4af6); }
	BOOL IS_PLAYER_VEH_RADIO_ENABLE_f() { return FastCall<BOOL>(0x1fcaaea5b76a4af6); }
	void SET_VEHICLE_RADIO_ENABLED(Vehicle vehicle, BOOL toggle) { Call<void>(0x3e02446e61027a8d, vehicle, toggle); }
	void SET_VEHICLE_RADIO_ENABLED_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x3e02446e61027a8d, vehicle, toggle); }
	void SET_POSITIONED_PLAYER_VEHICLE_RADIO_EMITTER_ENABLED(Any p0) { Call<void>(0x5e6ccefb7d2be955, p0); }
	void SET_POSITIONED_PLAYER_VEHICLE_RADIO_EMITTER_ENABLED_f(Any p0) { FastCall<void>(0x5e6ccefb7d2be955, p0); }
	void SET_CUSTOM_RADIO_TRACK_LIST(char* radioStation, char* trackListName, BOOL p2) { Call<void>(0xcf095c90c40df027, radioStation, trackListName, p2); }
	void SET_CUSTOM_RADIO_TRACK_LIST_f(char* radioStation, char* trackListName, BOOL p2) { FastCall<void>(0xcf095c90c40df027, radioStation, trackListName, p2); }
	void CLEAR_CUSTOM_RADIO_TRACK_LIST(char* radioStation) { Call<void>(0x707842a8dfd01d12, radioStation); }
	void CLEAR_CUSTOM_RADIO_TRACK_LIST_f(char* radioStation) { FastCall<void>(0x707842a8dfd01d12, radioStation); }
	int GET_NUM_UNLOCKED_RADIO_STATIONS() { return Call<int>(0x9e024442d2b2871d); }
	int GET_NUM_UNLOCKED_RADIO_STATIONS_f() { return FastCall<int>(0x9e024442d2b2871d); }
	int FIND_RADIO_STATION_INDEX(Hash stationNameHash) { return Call<int>(0xb5a732c45bb4f8dd, stationNameHash); }
	int FIND_RADIO_STATION_INDEX_f(Hash stationNameHash) { return FastCall<int>(0xb5a732c45bb4f8dd, stationNameHash); }
	void SET_RADIO_STATION_MUSIC_ONLY(char* radioStation, BOOL toggle) { Call<void>(0x9c170f4b602bd9f2, radioStation, toggle); }
	void SET_RADIO_STATION_MUSIC_ONLY_f(char* radioStation, BOOL toggle) { FastCall<void>(0x9c170f4b602bd9f2, radioStation, toggle); }
	void SET_RADIO_FRONTEND_FADE_TIME(float fadeTime) { Call<void>(0x49fe8a84d7cedd04, fadeTime); }
	void SET_RADIO_FRONTEND_FADE_TIME_f(float fadeTime) { FastCall<void>(0x49fe8a84d7cedd04, fadeTime); }
	void UNLOCK_RADIO_STATION_TRACK_LIST(char* radioStation, char* trackListName) { Call<void>(0x9826b511f6dfe2bc, radioStation, trackListName); }
	void UNLOCK_RADIO_STATION_TRACK_LIST_f(char* radioStation, char* trackListName) { FastCall<void>(0x9826b511f6dfe2bc, radioStation, trackListName); }
	void LOCK_RADIO_STATION_TRACK_LIST(char* radioStation, char* trackListName) { Call<void>(0xdc89404bd0f91ab5, radioStation, trackListName); }
	void LOCK_RADIO_STATION_TRACK_LIST_f(char* radioStation, char* trackListName) { FastCall<void>(0xdc89404bd0f91ab5, radioStation, trackListName); }
	void UPDATE_UNLOCKABLE_DJ_RADIO_TRACKS(BOOL enableMixes) { Call<void>(0x6e2ff2a44f9fca1a, enableMixes); }
	void UPDATE_UNLOCKABLE_DJ_RADIO_TRACKS_f(BOOL enableMixes) { FastCall<void>(0x6e2ff2a44f9fca1a, enableMixes); }
	void LOCK_RADIO_STATION(char* radioStationName, BOOL toggle) { Call<void>(0x8dbe3f304a6ec9c, radioStationName, toggle); }
	void LOCK_RADIO_STATION_f(char* radioStationName, BOOL toggle) { FastCall<void>(0x8dbe3f304a6ec9c, radioStationName, toggle); }
	void SET_RADIO_STATION_AS_FAVOURITE(char* radioStation, BOOL toggle) { Call<void>(0xee507abb89aebe08, radioStation, toggle); }
	void SET_RADIO_STATION_AS_FAVOURITE_f(char* radioStation, BOOL toggle) { FastCall<void>(0xee507abb89aebe08, radioStation, toggle); }
	BOOL IS_RADIO_STATION_FAVOURITED(char* radioStation) { return Call<BOOL>(0x90b51717f7cf13f, radioStation); }
	BOOL IS_RADIO_STATION_FAVOURITED_f(char* radioStation) { return FastCall<BOOL>(0x90b51717f7cf13f, radioStation); }
	BOOL GET_NEXT_AUDIBLE_BEAT(float* out1, float* out2, int* out3) { return Call<BOOL>(0x3c2b1154c489bff6, out1, out2, out3); }
	BOOL GET_NEXT_AUDIBLE_BEAT_f(float* out1, float* out2, int* out3) { return FastCall<BOOL>(0x3c2b1154c489bff6, out1, out2, out3); }
	void FORCE_MUSIC_TRACK_LIST(char* radioStation, char* trackListName, int milliseconds) { Call<void>(0xead9b92930b6a4a0, radioStation, trackListName, milliseconds); }
	void FORCE_MUSIC_TRACK_LIST_f(char* radioStation, char* trackListName, int milliseconds) { FastCall<void>(0xead9b92930b6a4a0, radioStation, trackListName, milliseconds); }
	int GET_CURRENT_TRACK_PLAY_TIME(char* radioStationName) { return Call<int>(0x536738f7fff13df5, radioStationName); }
	int GET_CURRENT_TRACK_PLAY_TIME_f(char* radioStationName) { return FastCall<int>(0x536738f7fff13df5, radioStationName); }
	Hash GET_CURRENT_TRACK_SOUND_NAME(char* radioStationName) { return Call<Hash>(0x198030fd421d5a7e, radioStationName); }
	Hash GET_CURRENT_TRACK_SOUND_NAME_f(char* radioStationName) { return FastCall<Hash>(0x198030fd421d5a7e, radioStationName); }
	void SET_VEHICLE_MISSILE_WARNING_ENABLED(Vehicle vehicle, BOOL toggle) { Call<void>(0x325c881b22907bf5, vehicle, toggle); }
	void SET_VEHICLE_MISSILE_WARNING_ENABLED_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x325c881b22907bf5, vehicle, toggle); }
	void SET_AMBIENT_ZONE_STATE(char* zoneName, BOOL p1, BOOL p2) { Call<void>(0x3cb5cdf3cf83c162, zoneName, p1, p2); }
	void SET_AMBIENT_ZONE_STATE_f(char* zoneName, BOOL p1, BOOL p2) { FastCall<void>(0x3cb5cdf3cf83c162, zoneName, p1, p2); }
	void CLEAR_AMBIENT_ZONE_STATE(char* zoneName, BOOL p1) { Call<void>(0x726404256daded97, zoneName, p1); }
	void CLEAR_AMBIENT_ZONE_STATE_f(char* zoneName, BOOL p1) { FastCall<void>(0x726404256daded97, zoneName, p1); }
	void SET_AMBIENT_ZONE_LIST_STATE(char* ambientZone, BOOL p1, BOOL p2) { Call<void>(0xdded5d81dae0e33f, ambientZone, p1, p2); }
	void SET_AMBIENT_ZONE_LIST_STATE_f(char* ambientZone, BOOL p1, BOOL p2) { FastCall<void>(0xdded5d81dae0e33f, ambientZone, p1, p2); }
	void CLEAR_AMBIENT_ZONE_LIST_STATE(char* ambientZone, BOOL p1) { Call<void>(0x7f5c4399f6a3102a, ambientZone, p1); }
	void CLEAR_AMBIENT_ZONE_LIST_STATE_f(char* ambientZone, BOOL p1) { FastCall<void>(0x7f5c4399f6a3102a, ambientZone, p1); }
	void SET_AMBIENT_ZONE_STATE_PERSISTENT(char* ambientZone, BOOL p1, BOOL p2) { Call<void>(0x55ac4142cc9ebd94, ambientZone, p1, p2); }
	void SET_AMBIENT_ZONE_STATE_PERSISTENT_f(char* ambientZone, BOOL p1, BOOL p2) { FastCall<void>(0x55ac4142cc9ebd94, ambientZone, p1, p2); }
	void SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT(char* ambientZone, BOOL p1, BOOL p2) { Call<void>(0xb284d0fd7fcebf97, ambientZone, p1, p2); }
	void SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT_f(char* ambientZone, BOOL p1, BOOL p2) { FastCall<void>(0xb284d0fd7fcebf97, ambientZone, p1, p2); }
	BOOL IS_AMBIENT_ZONE_ENABLED(char* ambientZone) { return Call<BOOL>(0xf0b082d9fc7bebea, ambientZone); }
	BOOL IS_AMBIENT_ZONE_ENABLED_f(char* ambientZone) { return FastCall<BOOL>(0xf0b082d9fc7bebea, ambientZone); }
	void REFRESH_CLOSEST_OCEAN_SHORELINE() { Call<void>(0x37204b68035d0416); }
	void REFRESH_CLOSEST_OCEAN_SHORELINE_f() { FastCall<void>(0x37204b68035d0416); }
	void SET_CUTSCENE_AUDIO_OVERRIDE(char* name) { Call<void>(0xc8ba2da793410e8d, name); }
	void SET_CUTSCENE_AUDIO_OVERRIDE_f(char* name) { FastCall<void>(0xc8ba2da793410e8d, name); }
	void SET_VARIABLE_ON_SYNCH_SCENE_AUDIO(char* variableName, float value) { Call<void>(0xac75dbacd73a0237, variableName, value); }
	void SET_VARIABLE_ON_SYNCH_SCENE_AUDIO_f(char* variableName, float value) { FastCall<void>(0xac75dbacd73a0237, variableName, value); }
	int PLAY_POLICE_REPORT(char* name, float p1) { return Call<int>(0x656a7c88792779aa, name, p1); }
	int PLAY_POLICE_REPORT_f(char* name, float p1) { return FastCall<int>(0x656a7c88792779aa, name, p1); }
	void CANCEL_ALL_POLICE_REPORTS() { Call<void>(0x4deb434fd7cecbe1); }
	void CANCEL_ALL_POLICE_REPORTS_f() { FastCall<void>(0x4deb434fd7cecbe1); }
	void BLIP_SIREN(Vehicle vehicle) { Call<void>(0x66fedcd38db97, vehicle); }
	void BLIP_SIREN_f(Vehicle vehicle) { FastCall<void>(0x66fedcd38db97, vehicle); }
	void OVERRIDE_VEH_HORN(Vehicle vehicle, BOOL override, int hornHash) { Call<void>(0x66b71a57e617499c, vehicle, override, hornHash); }
	void OVERRIDE_VEH_HORN_f(Vehicle vehicle, BOOL override, int hornHash) { FastCall<void>(0x66b71a57e617499c, vehicle, override, hornHash); }
	BOOL IS_HORN_ACTIVE(Vehicle vehicle) { return Call<BOOL>(0x4e83587a135bd1ad, vehicle); }
	BOOL IS_HORN_ACTIVE_f(Vehicle vehicle) { return FastCall<BOOL>(0x4e83587a135bd1ad, vehicle); }
	void SET_AGGRESSIVE_HORNS(BOOL toggle) { Call<void>(0xdbbf1a2cd5f14992, toggle); }
	void SET_AGGRESSIVE_HORNS_f(BOOL toggle) { FastCall<void>(0xdbbf1a2cd5f14992, toggle); }
	void SET_RADIO_POSITION_AUDIO_MUTE(BOOL p0) { Call<void>(0xb06cbfa0038981b7, p0); }
	void SET_RADIO_POSITION_AUDIO_MUTE_f(BOOL p0) { FastCall<void>(0xb06cbfa0038981b7, p0); }
	void SET_VEHICLE_CONVERSATIONS_PERSIST(BOOL p0, BOOL p1) { Call<void>(0x2ec8b9d6cc046475, p0, p1); }
	void SET_VEHICLE_CONVERSATIONS_PERSIST_f(BOOL p0, BOOL p1) { FastCall<void>(0x2ec8b9d6cc046475, p0, p1); }
	void SET_VEHICLE_CONVERSATIONS_PERSIST_NEW(BOOL p0, BOOL p1, BOOL p2) { Call<void>(0xc59719ceb1cf7eb6, p0, p1, p2); }
	void SET_VEHICLE_CONVERSATIONS_PERSIST_NEW_f(BOOL p0, BOOL p1, BOOL p2) { FastCall<void>(0xc59719ceb1cf7eb6, p0, p1, p2); }
	BOOL IS_STREAM_PLAYING() { return Call<BOOL>(0x6cd9ec28cac47204); }
	BOOL IS_STREAM_PLAYING_f() { return FastCall<BOOL>(0x6cd9ec28cac47204); }
	int GET_STREAM_PLAY_TIME() { return Call<int>(0x6cad3195f873a0e2); }
	int GET_STREAM_PLAY_TIME_f() { return FastCall<int>(0x6cad3195f873a0e2); }
	BOOL LOAD_STREAM(char* streamName, char* soundSet) { return Call<BOOL>(0xe4ede8079754f9, streamName, soundSet); }
	BOOL LOAD_STREAM_f(char* streamName, char* soundSet) { return FastCall<BOOL>(0xe4ede8079754f9, streamName, soundSet); }
	BOOL LOAD_STREAM_WITH_START_OFFSET(char* streamName, int startOffset, char* soundSet) { return Call<BOOL>(0x26a567543669a043, streamName, startOffset, soundSet); }
	BOOL LOAD_STREAM_WITH_START_OFFSET_f(char* streamName, int startOffset, char* soundSet) { return FastCall<BOOL>(0x26a567543669a043, streamName, startOffset, soundSet); }
	void PLAY_STREAM_FROM_PED(Ped ped) { Call<void>(0xad535993043c5dae, ped); }
	void PLAY_STREAM_FROM_PED_f(Ped ped) { FastCall<void>(0xad535993043c5dae, ped); }
	void PLAY_STREAM_FROM_VEHICLE(Vehicle vehicle) { Call<void>(0xba1693c4ec19cc4b, vehicle); }
	void PLAY_STREAM_FROM_VEHICLE_f(Vehicle vehicle) { FastCall<void>(0xba1693c4ec19cc4b, vehicle); }
	void PLAY_STREAM_FROM_OBJECT(Object object) { Call<void>(0x1684db79eafe4220, object); }
	void PLAY_STREAM_FROM_OBJECT_f(Object object) { FastCall<void>(0x1684db79eafe4220, object); }
	void PLAY_STREAM_FRONTEND() { Call<void>(0xad53599304454ce6); }
	void PLAY_STREAM_FRONTEND_f() { FastCall<void>(0xad53599304454ce6); }
	void PLAY_STREAM_FROM_POSITION(float x, float y, float z) { Call<void>(0x88bbe4b44ba3ffca, x, y, z); }
	void PLAY_STREAM_FROM_POSITION_f(float x, float y, float z) { FastCall<void>(0x88bbe4b44ba3ffca, x, y, z); }
	void STOP_STREAM() { Call<void>(0xf9d36ed9939a5d); }
	void STOP_STREAM_f() { FastCall<void>(0xf9d36ed9939a5d); }
	void STOP_PED_SPEAKING(Ped ped, BOOL shaking) { Call<void>(0x4bb6f8e31f0cb53d, ped, shaking); }
	void STOP_PED_SPEAKING_f(Ped ped, BOOL shaking) { FastCall<void>(0x4bb6f8e31f0cb53d, ped, shaking); }
	void BLOCK_ALL_SPEECH_FROM_PED(Ped ped, BOOL p1, BOOL p2) { Call<void>(0xd08566838a4e3407, ped, p1, p2); }
	void BLOCK_ALL_SPEECH_FROM_PED_f(Ped ped, BOOL p1, BOOL p2) { FastCall<void>(0xd08566838a4e3407, ped, p1, p2); }
	void STOP_PED_SPEAKING_SYNCED(Ped ped, BOOL p1) { Call<void>(0x42927dc744f239bc, ped, p1); }
	void STOP_PED_SPEAKING_SYNCED_f(Ped ped, BOOL p1) { FastCall<void>(0x42927dc744f239bc, ped, p1); }
	void DISABLE_PED_PAIN_AUDIO(Ped ped, BOOL toggle) { Call<void>(0x84673fcdf3dbc4b4, ped, toggle); }
	void DISABLE_PED_PAIN_AUDIO_f(Ped ped, BOOL toggle) { FastCall<void>(0x84673fcdf3dbc4b4, ped, toggle); }
	BOOL IS_AMBIENT_SPEECH_DISABLED(Ped ped) { return Call<BOOL>(0x21ca60532515d, ped); }
	BOOL IS_AMBIENT_SPEECH_DISABLED_f(Ped ped) { return FastCall<BOOL>(0x21ca60532515d, ped); }
	void BLOCK_SPEECH_CONTEXT_GROUP(char* p0, int p1) { Call<void>(0xa0e121f2353c5ba4, p0, p1); }
	void BLOCK_SPEECH_CONTEXT_GROUP_f(char* p0, int p1) { FastCall<void>(0xa0e121f2353c5ba4, p0, p1); }
	void UNBLOCK_SPEECH_CONTEXT_GROUP(char* p0) { Call<void>(0x7de95190a156e8fd, p0); }
	void UNBLOCK_SPEECH_CONTEXT_GROUP_f(char* p0) { FastCall<void>(0x7de95190a156e8fd, p0); }
	void SET_SIREN_WITH_NO_DRIVER(Vehicle vehicle, BOOL toggle) { Call<void>(0x4eb63ea43403bd24, vehicle, toggle); }
	void SET_SIREN_WITH_NO_DRIVER_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x4eb63ea43403bd24, vehicle, toggle); }
	void SET_SIREN_BYPASS_MP_DRIVER_CHECK(Vehicle vehicle, BOOL toggle) { Call<void>(0xb9514e079c023cd, vehicle, toggle); }
	void SET_SIREN_BYPASS_MP_DRIVER_CHECK_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xb9514e079c023cd, vehicle, toggle); }
	void TRIGGER_SIREN_AUDIO(Vehicle vehicle) { Call<void>(0xf288f3ae40bf8d35, vehicle); }
	void TRIGGER_SIREN_AUDIO_f(Vehicle vehicle) { FastCall<void>(0xf288f3ae40bf8d35, vehicle); }
	void SET_HORN_PERMANENTLY_ON(Vehicle vehicle) { Call<void>(0xc26d7bafd4eda4c2, vehicle); }
	void SET_HORN_PERMANENTLY_ON_f(Vehicle vehicle) { FastCall<void>(0xc26d7bafd4eda4c2, vehicle); }
	void SET_HORN_ENABLED(Vehicle vehicle, BOOL toggle) { Call<void>(0x35dc24e2da289d42, vehicle, toggle); }
	void SET_HORN_ENABLED_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x35dc24e2da289d42, vehicle, toggle); }
	void SET_AUDIO_VEHICLE_PRIORITY(Vehicle vehicle, Any p1) { Call<void>(0xed6370d11568837d, vehicle, p1); }
	void SET_AUDIO_VEHICLE_PRIORITY_f(Vehicle vehicle, Any p1) { FastCall<void>(0xed6370d11568837d, vehicle, p1); }
	void SET_HORN_PERMANENTLY_ON_TIME(Vehicle vehicle, float time) { Call<void>(0xc9d2d29a6267082a, vehicle, time); }
	void SET_HORN_PERMANENTLY_ON_TIME_f(Vehicle vehicle, float time) { FastCall<void>(0xc9d2d29a6267082a, vehicle, time); }
	void USE_SIREN_AS_HORN(Vehicle vehicle, BOOL toggle) { Call<void>(0x9b9afedbbe3084be, vehicle, toggle); }
	void USE_SIREN_AS_HORN_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x9b9afedbbe3084be, vehicle, toggle); }
	void FORCE_USE_AUDIO_GAME_OBJECT(Vehicle vehicle, char* audioName) { Call<void>(0x6c1af1fd513b9dd7, vehicle, audioName); }
	void FORCE_USE_AUDIO_GAME_OBJECT_f(Vehicle vehicle, char* audioName) { FastCall<void>(0x6c1af1fd513b9dd7, vehicle, audioName); }
	void PRELOAD_VEHICLE_AUDIO_BANK(Hash vehicleModel) { Call<void>(0xe20bcf53ffebda4e, vehicleModel); }
	void PRELOAD_VEHICLE_AUDIO_BANK_f(Hash vehicleModel) { FastCall<void>(0xe20bcf53ffebda4e, vehicleModel); }
	void SET_VEHICLE_STARTUP_REV_SOUND(Vehicle vehicle, char* p1, char* p2) { Call<void>(0xec8ee33209863ea1, vehicle, p1, p2); }
	void SET_VEHICLE_STARTUP_REV_SOUND_f(Vehicle vehicle, char* p1, char* p2) { FastCall<void>(0xec8ee33209863ea1, vehicle, p1, p2); }
	void RESET_VEHICLE_STARTUP_REV_SOUND(Vehicle vehicle) { Call<void>(0x597ff8cdeaa0a54e, vehicle); }
	void RESET_VEHICLE_STARTUP_REV_SOUND_f(Vehicle vehicle) { FastCall<void>(0x597ff8cdeaa0a54e, vehicle); }
	void SET_VEHICLE_FORCE_REVERSE_WARNING(Any p0, Any p1) { Call<void>(0xbc9c7177c5bdad5b, p0, p1); }
	void SET_VEHICLE_FORCE_REVERSE_WARNING_f(Any p0, Any p1) { FastCall<void>(0xbc9c7177c5bdad5b, p0, p1); }
	BOOL IS_VEHICLE_AUDIBLY_DAMAGED(Vehicle vehicle) { return Call<BOOL>(0x1a6eb2782d42af24, vehicle); }
	BOOL IS_VEHICLE_AUDIBLY_DAMAGED_f(Vehicle vehicle) { return FastCall<BOOL>(0x1a6eb2782d42af24, vehicle); }
	void SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR(Vehicle vehicle, float damageFactor) { Call<void>(0x265c990edf06affb, vehicle, damageFactor); }
	void SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR_f(Vehicle vehicle, float damageFactor) { FastCall<void>(0x265c990edf06affb, vehicle, damageFactor); }
	void SET_VEHICLE_AUDIO_BODY_DAMAGE_FACTOR(Vehicle vehicle, float intensity) { Call<void>(0x630c686bc21b7d9b, vehicle, intensity); }
	void SET_VEHICLE_AUDIO_BODY_DAMAGE_FACTOR_f(Vehicle vehicle, float intensity) { FastCall<void>(0x630c686bc21b7d9b, vehicle, intensity); }
	void _FORCE_VEHICLE_ENGINE_SYNTH(Vehicle vehicle, BOOL force) { Call<void>(0x152324864e1ff9c5, vehicle, force); }
	void _FORCE_VEHICLE_ENGINE_SYNTH_f(Vehicle vehicle, BOOL force) { FastCall<void>(0x152324864e1ff9c5, vehicle, force); }
	void ENABLE_VEHICLE_FANBELT_DAMAGE(Vehicle vehicle, BOOL toggle) { Call<void>(0x58c25fd63fcb041f, vehicle, toggle); }
	void ENABLE_VEHICLE_FANBELT_DAMAGE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x58c25fd63fcb041f, vehicle, toggle); }
	void ENABLE_VEHICLE_EXHAUST_POPS(Vehicle vehicle, BOOL toggle) { Call<void>(0xa7d307e5f86441e6, vehicle, toggle); }
	void ENABLE_VEHICLE_EXHAUST_POPS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xa7d307e5f86441e6, vehicle, toggle); }
	void SET_VEHICLE_BOOST_ACTIVE(Vehicle vehicle, BOOL toggle) { Call<void>(0x1d8ddb72b44c7572, vehicle, toggle); }
	void SET_VEHICLE_BOOST_ACTIVE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1d8ddb72b44c7572, vehicle, toggle); }
	void SET_PLAYER_VEHICLE_ALARM_AUDIO_ACTIVE(Vehicle vehicle, BOOL toggle) { Call<void>(0x9de1e772038a4671, vehicle, toggle); }
	void SET_PLAYER_VEHICLE_ALARM_AUDIO_ACTIVE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x9de1e772038a4671, vehicle, toggle); }
	void SET_SCRIPT_UPDATE_DOOR_AUDIO(Hash doorHash, BOOL toggle) { Call<void>(0xfa51773c2d6f9c04, doorHash, toggle); }
	void SET_SCRIPT_UPDATE_DOOR_AUDIO_f(Hash doorHash, BOOL toggle) { FastCall<void>(0xfa51773c2d6f9c04, doorHash, toggle); }
	void PLAY_VEHICLE_DOOR_OPEN_SOUND(Vehicle vehicle, int doorId) { Call<void>(0x312ed7380045b8ad, vehicle, doorId); }
	void PLAY_VEHICLE_DOOR_OPEN_SOUND_f(Vehicle vehicle, int doorId) { FastCall<void>(0x312ed7380045b8ad, vehicle, doorId); }
	void PLAY_VEHICLE_DOOR_CLOSE_SOUND(Vehicle vehicle, int doorId) { Call<void>(0xf488c615c3f35035, vehicle, doorId); }
	void PLAY_VEHICLE_DOOR_CLOSE_SOUND_f(Vehicle vehicle, int doorId) { FastCall<void>(0xf488c615c3f35035, vehicle, doorId); }
	void ENABLE_STALL_WARNING_SOUNDS(Vehicle vehicle, BOOL toggle) { Call<void>(0xdb2ae0bb40e1bf42, vehicle, toggle); }
	void ENABLE_STALL_WARNING_SOUNDS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xdb2ae0bb40e1bf42, vehicle, toggle); }
	void _ENABLE_DRAG_RACE_STATIONARY_WARNING_SOUNDS(Vehicle vehicle, BOOL enable) { Call<void>(0xaadd136e344517b2, vehicle, enable); }
	void _ENABLE_DRAG_RACE_STATIONARY_WARNING_SOUNDS_f(Vehicle vehicle, BOOL enable) { FastCall<void>(0xaadd136e344517b2, vehicle, enable); }
	BOOL IS_GAME_IN_CONTROL_OF_MUSIC() { return Call<BOOL>(0x6f9ff6ddfd2e93e1); }
	BOOL IS_GAME_IN_CONTROL_OF_MUSIC_f() { return FastCall<BOOL>(0x6f9ff6ddfd2e93e1); }
	void SET_GPS_ACTIVE(BOOL active) { Call<void>(0xee79586c2356c478, active); }
	void SET_GPS_ACTIVE_f(BOOL active) { FastCall<void>(0xee79586c2356c478, active); }
	void PLAY_MISSION_COMPLETE_AUDIO(char* audioName) { Call<void>(0x16daa6c70ee9f5ce, audioName); }
	void PLAY_MISSION_COMPLETE_AUDIO_f(char* audioName) { FastCall<void>(0x16daa6c70ee9f5ce, audioName); }
	BOOL IS_MISSION_COMPLETE_PLAYING() { return Call<BOOL>(0xfb2dae9d5ead82f0); }
	BOOL IS_MISSION_COMPLETE_PLAYING_f() { return FastCall<BOOL>(0xfb2dae9d5ead82f0); }
	BOOL IS_MISSION_COMPLETE_READY_FOR_UI() { return Call<BOOL>(0xf15992e10cabfa84); }
	BOOL IS_MISSION_COMPLETE_READY_FOR_UI_f() { return FastCall<BOOL>(0xf15992e10cabfa84); }
	void BLOCK_DEATH_JINGLE(BOOL toggle) { Call<void>(0xa4bcdf61a436ad8e, toggle); }
	void BLOCK_DEATH_JINGLE_f(BOOL toggle) { FastCall<void>(0xa4bcdf61a436ad8e, toggle); }
	BOOL START_AUDIO_SCENE(char* scene) { return Call<BOOL>(0x48b36ab584bde26, scene); }
	BOOL START_AUDIO_SCENE_f(char* scene) { return FastCall<BOOL>(0x48b36ab584bde26, scene); }
	void STOP_AUDIO_SCENE(char* scene) { Call<void>(0x7e260c0e9b4a71e6, scene); }
	void STOP_AUDIO_SCENE_f(char* scene) { FastCall<void>(0x7e260c0e9b4a71e6, scene); }
	void STOP_AUDIO_SCENES() { Call<void>(0x469b75c4ce03cb2d); }
	void STOP_AUDIO_SCENES_f() { FastCall<void>(0x469b75c4ce03cb2d); }
	BOOL IS_AUDIO_SCENE_ACTIVE(char* scene) { return Call<BOOL>(0xa6e26ad5041f0557, scene); }
	BOOL IS_AUDIO_SCENE_ACTIVE_f(char* scene) { return FastCall<BOOL>(0xa6e26ad5041f0557, scene); }
	void SET_AUDIO_SCENE_VARIABLE(char* scene, char* variable, float value) { Call<void>(0x6dbca78ba2ecac75, scene, variable, value); }
	void SET_AUDIO_SCENE_VARIABLE_f(char* scene, char* variable, float value) { FastCall<void>(0x6dbca78ba2ecac75, scene, variable, value); }
	void SET_AUDIO_SCRIPT_CLEANUP_TIME(int time) { Call<void>(0x89885f9368bcbed6, time); }
	void SET_AUDIO_SCRIPT_CLEANUP_TIME_f(int time) { FastCall<void>(0x89885f9368bcbed6, time); }
	void ADD_ENTITY_TO_AUDIO_MIX_GROUP(Entity entity, char* groupName, float p2) { Call<void>(0xf9deaeac93bc572d, entity, groupName, p2); }
	void ADD_ENTITY_TO_AUDIO_MIX_GROUP_f(Entity entity, char* groupName, float p2) { FastCall<void>(0xf9deaeac93bc572d, entity, groupName, p2); }
	void REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP(Entity entity, float p1) { Call<void>(0x8e779816877b4c5f, entity, p1); }
	void REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP_f(Entity entity, float p1) { FastCall<void>(0x8e779816877b4c5f, entity, p1); }
	BOOL AUDIO_IS_MUSIC_PLAYING() { return Call<BOOL>(0xabd6268803bd8ee8); }
	BOOL AUDIO_IS_MUSIC_PLAYING_f() { return FastCall<BOOL>(0xabd6268803bd8ee8); }
	BOOL AUDIO_IS_SCRIPTED_MUSIC_PLAYING() { return Call<BOOL>(0x6ee9a24c3ffc966b); }
	BOOL AUDIO_IS_SCRIPTED_MUSIC_PLAYING_f() { return FastCall<BOOL>(0x6ee9a24c3ffc966b); }
	BOOL PREPARE_MUSIC_EVENT(char* eventName) { return Call<BOOL>(0x71381e49da395068, eventName); }
	BOOL PREPARE_MUSIC_EVENT_f(char* eventName) { return FastCall<BOOL>(0x71381e49da395068, eventName); }
	BOOL CANCEL_MUSIC_EVENT(char* eventName) { return Call<BOOL>(0x9a2c6bdbcbac157b, eventName); }
	BOOL CANCEL_MUSIC_EVENT_f(char* eventName) { return FastCall<BOOL>(0x9a2c6bdbcbac157b, eventName); }
	BOOL TRIGGER_MUSIC_EVENT(char* eventName) { return Call<BOOL>(0xf2789c6c24f21799, eventName); }
	BOOL TRIGGER_MUSIC_EVENT_f(char* eventName) { return FastCall<BOOL>(0xf2789c6c24f21799, eventName); }
	BOOL IS_MUSIC_ONESHOT_PLAYING() { return Call<BOOL>(0x55d0f395ede58580); }
	BOOL IS_MUSIC_ONESHOT_PLAYING_f() { return FastCall<BOOL>(0x55d0f395ede58580); }
	int GET_MUSIC_PLAYTIME() { return Call<int>(0xb3fb05a446dc0d24); }
	int GET_MUSIC_PLAYTIME_f() { return FastCall<int>(0xb3fb05a446dc0d24); }
	void SET_GLOBAL_RADIO_SIGNAL_LEVEL(Any p0) { Call<void>(0x67cd0786f0744d50, p0); }
	void SET_GLOBAL_RADIO_SIGNAL_LEVEL_f(Any p0) { FastCall<void>(0x67cd0786f0744d50, p0); }
	void RECORD_BROKEN_GLASS(float x, float y, float z, float radius) { Call<void>(0xd7dc4ead21f2bfa0, x, y, z, radius); }
	void RECORD_BROKEN_GLASS_f(float x, float y, float z, float radius) { FastCall<void>(0xd7dc4ead21f2bfa0, x, y, z, radius); }
	void CLEAR_ALL_BROKEN_GLASS() { Call<void>(0x26f53efa46763442); }
	void CLEAR_ALL_BROKEN_GLASS_f() { FastCall<void>(0x26f53efa46763442); }
	void SCRIPT_OVERRIDES_WIND_ELEVATION(BOOL p0, Any p1) { Call<void>(0xdcac1e3ca8fb00f2, p0, p1); }
	void SCRIPT_OVERRIDES_WIND_ELEVATION_f(BOOL p0, Any p1) { FastCall<void>(0xdcac1e3ca8fb00f2, p0, p1); }
	void SET_PED_WALLA_DENSITY(float p0, float p1) { Call<void>(0xa5a6538d18da6633, p0, p1); }
	void SET_PED_WALLA_DENSITY_f(float p0, float p1) { FastCall<void>(0xa5a6538d18da6633, p0, p1); }
	void SET_PED_INTERIOR_WALLA_DENSITY(float p0, float p1) { Call<void>(0xa091cf129714ff5e, p0, p1); }
	void SET_PED_INTERIOR_WALLA_DENSITY_f(float p0, float p1) { FastCall<void>(0xa091cf129714ff5e, p0, p1); }
	void FORCE_PED_PANIC_WALLA() { Call<void>(0xd851159b6f65f0b); }
	void FORCE_PED_PANIC_WALLA_f() { FastCall<void>(0xd851159b6f65f0b); }
	BOOL PREPARE_ALARM(char* alarmName) { return Call<BOOL>(0x8835ee334bd2f4d9, alarmName); }
	BOOL PREPARE_ALARM_f(char* alarmName) { return FastCall<BOOL>(0x8835ee334bd2f4d9, alarmName); }
	void START_ALARM(char* alarmName, BOOL p2) { Call<void>(0xf9c89d5b1ef7f4, alarmName, p2); }
	void START_ALARM_f(char* alarmName, BOOL p2) { FastCall<void>(0xf9c89d5b1ef7f4, alarmName, p2); }
	void STOP_ALARM(char* alarmName, BOOL toggle) { Call<void>(0x80f1416875bb4, alarmName, toggle); }
	void STOP_ALARM_f(char* alarmName, BOOL toggle) { FastCall<void>(0x80f1416875bb4, alarmName, toggle); }
	void STOP_ALL_ALARMS(BOOL stop) { Call<void>(0x7ff0af4d7833611d, stop); }
	void STOP_ALL_ALARMS_f(BOOL stop) { FastCall<void>(0x7ff0af4d7833611d, stop); }
	BOOL IS_ALARM_PLAYING(char* alarmName) { return Call<BOOL>(0x6d4ac41c5e284dab, alarmName); }
	BOOL IS_ALARM_PLAYING_f(char* alarmName) { return FastCall<BOOL>(0x6d4ac41c5e284dab, alarmName); }
	Hash GET_VEHICLE_DEFAULT_HORN(Vehicle vehicle) { return Call<Hash>(0xdeb04d39bc05589d, vehicle); }
	Hash GET_VEHICLE_DEFAULT_HORN_f(Vehicle vehicle) { return FastCall<Hash>(0xdeb04d39bc05589d, vehicle); }
	Hash GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS(Vehicle vehicle) { return Call<Hash>(0x8217eceae5d0ff5c, vehicle); }
	Hash GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS_f(Vehicle vehicle) { return FastCall<Hash>(0x8217eceae5d0ff5c, vehicle); }
	void RESET_PED_AUDIO_FLAGS(Ped ped) { Call<void>(0x9bd2a855e1bbe3e, ped); }
	void RESET_PED_AUDIO_FLAGS_f(Ped ped) { FastCall<void>(0x9bd2a855e1bbe3e, ped); }
	void SET_PED_FOOTSTEPS_EVENTS_ENABLED(Ped ped, BOOL toggle) { Call<void>(0xb4d3d8bd4e4273ce, ped, toggle); }
	void SET_PED_FOOTSTEPS_EVENTS_ENABLED_f(Ped ped, BOOL toggle) { FastCall<void>(0xb4d3d8bd4e4273ce, ped, toggle); }
	void SET_PED_CLOTH_EVENTS_ENABLED(Ped ped, BOOL toggle) { Call<void>(0xbe998d0ff332618d, ped, toggle); }
	void SET_PED_CLOTH_EVENTS_ENABLED_f(Ped ped, BOOL toggle) { FastCall<void>(0xbe998d0ff332618d, ped, toggle); }
	void OVERRIDE_PLAYER_GROUND_MATERIAL(Hash hash, BOOL toggle) { Call<void>(0x5451a82bfaae5154, hash, toggle); }
	void OVERRIDE_PLAYER_GROUND_MATERIAL_f(Hash hash, BOOL toggle) { FastCall<void>(0x5451a82bfaae5154, hash, toggle); }
	void USE_FOOTSTEP_SCRIPT_SWEETENERS(Ped ped, BOOL p1, Hash hash) { Call<void>(0x3d65219ab7440834, ped, p1, hash); }
	void USE_FOOTSTEP_SCRIPT_SWEETENERS_f(Ped ped, BOOL p1, Hash hash) { FastCall<void>(0x3d65219ab7440834, ped, p1, hash); }
	void OVERRIDE_MICROPHONE_SETTINGS(Hash hash, BOOL toggle) { Call<void>(0x31afe9b329fb42a5, hash, toggle); }
	void OVERRIDE_MICROPHONE_SETTINGS_f(Hash hash, BOOL toggle) { FastCall<void>(0x31afe9b329fb42a5, hash, toggle); }
	void FREEZE_MICROPHONE() { Call<void>(0x2295b613048777d2); }
	void FREEZE_MICROPHONE_f() { FastCall<void>(0x2295b613048777d2); }
	void DISTANT_COP_CAR_SIRENS(BOOL value) { Call<void>(0x7976b4642f6ca4d2, value); }
	void DISTANT_COP_CAR_SIRENS_f(BOOL value) { FastCall<void>(0x7976b4642f6ca4d2, value); }
	void SET_SIREN_CAN_BE_CONTROLLED_BY_AUDIO(Vehicle vehicle, BOOL p1) { Call<void>(0xd5e5e2c730e42949, vehicle, p1); }
	void SET_SIREN_CAN_BE_CONTROLLED_BY_AUDIO_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xd5e5e2c730e42949, vehicle, p1); }
	void ENABLE_STUNT_JUMP_AUDIO() { Call<void>(0x7ada076b34180a26); }
	void ENABLE_STUNT_JUMP_AUDIO_f() { FastCall<void>(0x7ada076b34180a26); }
	void SET_AUDIO_FLAG(char* flagName, BOOL toggle) { Call<void>(0xee78cba0c661a672, flagName, toggle); }
	void SET_AUDIO_FLAG_f(char* flagName, BOOL toggle) { FastCall<void>(0xee78cba0c661a672, flagName, toggle); }
	BOOL PREPARE_SYNCHRONIZED_AUDIO_EVENT(char* audioEvent, Any p1) { return Call<BOOL>(0x3f2f956858462a5e, audioEvent, p1); }
	BOOL PREPARE_SYNCHRONIZED_AUDIO_EVENT_f(char* audioEvent, Any p1) { return FastCall<BOOL>(0x3f2f956858462a5e, audioEvent, p1); }
	BOOL PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE(int sceneID, char* audioEvent) { return Call<BOOL>(0x9d4cf0ab4313f8b5, sceneID, audioEvent); }
	BOOL PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE_f(int sceneID, char* audioEvent) { return FastCall<BOOL>(0x9d4cf0ab4313f8b5, sceneID, audioEvent); }
	BOOL PLAY_SYNCHRONIZED_AUDIO_EVENT(int sceneID) { return Call<BOOL>(0x7dcb2dea97ab80b1, sceneID); }
	BOOL PLAY_SYNCHRONIZED_AUDIO_EVENT_f(int sceneID) { return FastCall<BOOL>(0x7dcb2dea97ab80b1, sceneID); }
	BOOL STOP_SYNCHRONIZED_AUDIO_EVENT(int sceneID) { return Call<BOOL>(0x9f6cf4e8abee67a3, sceneID); }
	BOOL STOP_SYNCHRONIZED_AUDIO_EVENT_f(int sceneID) { return FastCall<BOOL>(0x9f6cf4e8abee67a3, sceneID); }
	void INIT_SYNCH_SCENE_AUDIO_WITH_POSITION(char* audioEvent, float x, float y, float z) { Call<void>(0xc681556a4d361385, audioEvent, x, y, z); }
	void INIT_SYNCH_SCENE_AUDIO_WITH_POSITION_f(char* audioEvent, float x, float y, float z) { FastCall<void>(0xc681556a4d361385, audioEvent, x, y, z); }
	void INIT_SYNCH_SCENE_AUDIO_WITH_ENTITY(char* audioEvent, Entity entity) { Call<void>(0x2123fc16f85493f, audioEvent, entity); }
	void INIT_SYNCH_SCENE_AUDIO_WITH_ENTITY_f(char* audioEvent, Entity entity) { FastCall<void>(0x2123fc16f85493f, audioEvent, entity); }
	void SET_AUDIO_SPECIAL_EFFECT_MODE(int mode) { Call<void>(0xc37f62e35c6cc125, mode); }
	void SET_AUDIO_SPECIAL_EFFECT_MODE_f(int mode) { FastCall<void>(0xc37f62e35c6cc125, mode); }
	void SET_PORTAL_SETTINGS_OVERRIDE(char* p0, char* p1) { Call<void>(0x523d00bc9a00ecb2, p0, p1); }
	void SET_PORTAL_SETTINGS_OVERRIDE_f(char* p0, char* p1) { FastCall<void>(0x523d00bc9a00ecb2, p0, p1); }
	void REMOVE_PORTAL_SETTINGS_OVERRIDE(char* p0) { Call<void>(0x740be37ed7852eb0, p0); }
	void REMOVE_PORTAL_SETTINGS_OVERRIDE_f(char* p0) { FastCall<void>(0x740be37ed7852eb0, p0); }
	void STOP_SMOKE_GRENADE_EXPLOSION_SOUNDS() { Call<void>(0x5fa1412ff6559d8c); }
	void STOP_SMOKE_GRENADE_EXPLOSION_SOUNDS_f() { FastCall<void>(0x5fa1412ff6559d8c); }
	int GET_MUSIC_VOL_SLIDER() { return Call<int>(0xa150c09129193a50); }
	int GET_MUSIC_VOL_SLIDER_f() { return FastCall<int>(0xa150c09129193a50); }
	void REQUEST_TENNIS_BANKS(Ped ped) { Call<void>(0xa899ea9dd80d0103, ped); }
	void REQUEST_TENNIS_BANKS_f(Ped ped) { FastCall<void>(0xa899ea9dd80d0103, ped); }
	void UNREQUEST_TENNIS_BANKS() { Call<void>(0xe92d0635590ec51c); }
	void UNREQUEST_TENNIS_BANKS_f() { FastCall<void>(0xe92d0635590ec51c); }
	void SET_SKIP_MINIGUN_SPIN_UP_AUDIO(BOOL p0) { Call<void>(0x3d7f93964546cb76, p0); }
	void SET_SKIP_MINIGUN_SPIN_UP_AUDIO_f(BOOL p0) { FastCall<void>(0x3d7f93964546cb76, p0); }
	void STOP_CUTSCENE_AUDIO() { Call<void>(0xb90e696377b2809e); }
	void STOP_CUTSCENE_AUDIO_f() { FastCall<void>(0xb90e696377b2809e); }
	BOOL HAS_LOADED_MP_DATA_SET() { return Call<BOOL>(0xbe9b8922ad31fdf4); }
	BOOL HAS_LOADED_MP_DATA_SET_f() { return FastCall<BOOL>(0xbe9b8922ad31fdf4); }
	BOOL HAS_LOADED_SP_DATA_SET() { return Call<BOOL>(0xbead01d22a8e2e7a); }
	BOOL HAS_LOADED_SP_DATA_SET_f() { return FastCall<BOOL>(0xbead01d22a8e2e7a); }
	int GET_VEHICLE_HORN_SOUND_INDEX(Vehicle vehicle) { return Call<int>(0x49c2bd3fdca97e62, vehicle); }
	int GET_VEHICLE_HORN_SOUND_INDEX_f(Vehicle vehicle) { return FastCall<int>(0x49c2bd3fdca97e62, vehicle); }
	void SET_VEHICLE_HORN_SOUND_INDEX(Vehicle vehicle, int value) { Call<void>(0xbcb59cff2675d6d6, vehicle, value); }
	void SET_VEHICLE_HORN_SOUND_INDEX_f(Vehicle vehicle, int value) { FastCall<void>(0xbcb59cff2675d6d6, vehicle, value); }
}
namespace BRAIN
{
	void ADD_SCRIPT_TO_RANDOM_PED(char* name, Hash model, float p2, float p3) { Call<void>(0x1a148631d0882441, name, model, p2, p3); }
	void ADD_SCRIPT_TO_RANDOM_PED_f(char* name, Hash model, float p2, float p3) { FastCall<void>(0x1a148631d0882441, name, model, p2, p3); }
	void REGISTER_OBJECT_SCRIPT_BRAIN(char* scriptName, Hash modelHash, int p2, float activationRange, int p4, int p5) { Call<void>(0x344db976f37343c6, scriptName, modelHash, p2, activationRange, p4, p5); }
	void REGISTER_OBJECT_SCRIPT_BRAIN_f(char* scriptName, Hash modelHash, int p2, float activationRange, int p4, int p5) { FastCall<void>(0x344db976f37343c6, scriptName, modelHash, p2, activationRange, p4, p5); }
	BOOL IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE(Object object) { return Call<BOOL>(0xdda7a26c833fd246, object); }
	BOOL IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE_f(Object object) { return FastCall<BOOL>(0xdda7a26c833fd246, object); }
	void REGISTER_WORLD_POINT_SCRIPT_BRAIN(char* scriptName, float activationRange, int p2) { Call<void>(0xb0e4b8c2d539b4da, scriptName, activationRange, p2); }
	void REGISTER_WORLD_POINT_SCRIPT_BRAIN_f(char* scriptName, float activationRange, int p2) { FastCall<void>(0xb0e4b8c2d539b4da, scriptName, activationRange, p2); }
	BOOL IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE() { return Call<BOOL>(0x6e82237140d0fa0); }
	BOOL IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE_f() { return FastCall<BOOL>(0x6e82237140d0fa0); }
	void ENABLE_SCRIPT_BRAIN_SET(int brainSet) { Call<void>(0xb60f3f293bcf0421, brainSet); }
	void ENABLE_SCRIPT_BRAIN_SET_f(int brainSet) { FastCall<void>(0xb60f3f293bcf0421, brainSet); }
	void DISABLE_SCRIPT_BRAIN_SET(int brainSet) { Call<void>(0xb7c1b6aaf59c017c, brainSet); }
	void DISABLE_SCRIPT_BRAIN_SET_f(int brainSet) { FastCall<void>(0xb7c1b6aaf59c017c, brainSet); }
	void REACTIVATE_ALL_WORLD_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE() { Call<void>(0x84b437fbc9b6d1d9); }
	void REACTIVATE_ALL_WORLD_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE_f() { FastCall<void>(0x84b437fbc9b6d1d9); }
	void REACTIVATE_ALL_OBJECT_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE() { Call<void>(0x8d0c9dc866a9bb34); }
	void REACTIVATE_ALL_OBJECT_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE_f() { FastCall<void>(0x8d0c9dc866a9bb34); }
	void REACTIVATE_NAMED_WORLD_BRAINS_WAITING_TILL_OUT_OF_RANGE(char* scriptName) { Call<void>(0x3196b24ee6f88f68, scriptName); }
	void REACTIVATE_NAMED_WORLD_BRAINS_WAITING_TILL_OUT_OF_RANGE_f(char* scriptName) { FastCall<void>(0x3196b24ee6f88f68, scriptName); }
	void REACTIVATE_NAMED_OBJECT_BRAINS_WAITING_TILL_OUT_OF_RANGE(char* scriptName) { Call<void>(0x85682065f0abd65d, scriptName); }
	void REACTIVATE_NAMED_OBJECT_BRAINS_WAITING_TILL_OUT_OF_RANGE_f(char* scriptName) { FastCall<void>(0x85682065f0abd65d, scriptName); }
}
namespace CAM
{
	void RENDER_SCRIPT_CAMS(BOOL render, BOOL ease, int easeTime, BOOL p3, BOOL p4, Any p5) { Call<void>(0xd5f2b0d8de0c904f, render, ease, easeTime, p3, p4, p5); }
	void RENDER_SCRIPT_CAMS_f(BOOL render, BOOL ease, int easeTime, BOOL p3, BOOL p4, Any p5) { FastCall<void>(0xd5f2b0d8de0c904f, render, ease, easeTime, p3, p4, p5); }
	void STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP(BOOL render, float p1, int p2, Any p3) { Call<void>(0xe750eac7b200e1b1, render, p1, p2, p3); }
	void STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP_f(BOOL render, float p1, int p2, Any p3) { FastCall<void>(0xe750eac7b200e1b1, render, p1, p2, p3); }
	Cam CREATE_CAM(char* camName, BOOL p1) { return Call<Cam>(0x68c846e99e9ec, camName, p1); }
	Cam CREATE_CAM_f(char* camName, BOOL p1) { return FastCall<Cam>(0x68c846e99e9ec, camName, p1); }
	Cam CREATE_CAM_WITH_PARAMS(char* camName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, BOOL p8, int p9) { return Call<Cam>(0x26d80e959bdbbd4c, camName, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9); }
	Cam CREATE_CAM_WITH_PARAMS_f(char* camName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, BOOL p8, int p9) { return FastCall<Cam>(0x26d80e959bdbbd4c, camName, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9); }
	Cam CREATE_CAMERA(Hash camHash, BOOL p1) { return Call<Cam>(0xfa1a2742c91dcbc8, camHash, p1); }
	Cam CREATE_CAMERA_f(Hash camHash, BOOL p1) { return FastCall<Cam>(0xfa1a2742c91dcbc8, camHash, p1); }
	Cam CREATE_CAMERA_WITH_PARAMS(Hash camHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, BOOL p8, Any p9) { return Call<Cam>(0x7cae6b976b2fb528, camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9); }
	Cam CREATE_CAMERA_WITH_PARAMS_f(Hash camHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, BOOL p8, Any p9) { return FastCall<Cam>(0x7cae6b976b2fb528, camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9); }
	void DESTROY_CAM(Cam cam, BOOL bScriptHostCam) { Call<void>(0xccc0360a3de1ca, cam, bScriptHostCam); }
	void DESTROY_CAM_f(Cam cam, BOOL bScriptHostCam) { FastCall<void>(0xccc0360a3de1ca, cam, bScriptHostCam); }
	void DESTROY_ALL_CAMS(BOOL bScriptHostCam) { Call<void>(0x9d626b8e98c13147, bScriptHostCam); }
	void DESTROY_ALL_CAMS_f(BOOL bScriptHostCam) { FastCall<void>(0x9d626b8e98c13147, bScriptHostCam); }
	BOOL DOES_CAM_EXIST(Cam cam) { return Call<BOOL>(0x7b71b8f757082c01, cam); }
	BOOL DOES_CAM_EXIST_f(Cam cam) { return FastCall<BOOL>(0x7b71b8f757082c01, cam); }
	void SET_CAM_ACTIVE(Cam cam, BOOL active) { Call<void>(0xee78ec7332e771b3, cam, active); }
	void SET_CAM_ACTIVE_f(Cam cam, BOOL active) { FastCall<void>(0xee78ec7332e771b3, cam, active); }
	BOOL IS_CAM_ACTIVE(Cam cam) { return Call<BOOL>(0x3c564e19aa5987cb, cam); }
	BOOL IS_CAM_ACTIVE_f(Cam cam) { return FastCall<BOOL>(0x3c564e19aa5987cb, cam); }
	BOOL IS_CAM_RENDERING(Cam cam) { return Call<BOOL>(0x7f6aa9f22a38ef87, cam); }
	BOOL IS_CAM_RENDERING_f(Cam cam) { return FastCall<BOOL>(0x7f6aa9f22a38ef87, cam); }
	Cam GET_RENDERING_CAM() { return Call<Cam>(0xb2a1a1a30e2c2213); }
	Cam GET_RENDERING_CAM_f() { return FastCall<Cam>(0xb2a1a1a30e2c2213); }
	Vector3* GET_CAM_COORD(Cam cam) { Call<Vector3*>(0x216c763678caec7c, cam); return GetVector(); }
	Vector3* GET_CAM_ROT(Cam cam, int rotationOrder) { Call<Vector3*>(0xd57d97a1d3251e, cam, rotationOrder); return GetVector(); }
	float GET_CAM_FOV(Cam cam) { return ToFloat(Call<_float>(0xd57d97a1d2f814, cam)); }
	float GET_CAM_FOV_f(Cam cam) { return ToFloat(FastCall<_float>(0xd57d97a1d2f814, cam)); }
	float GET_CAM_NEAR_CLIP(Cam cam) { return ToFloat(Call<_float>(0xd4119ab75722b2e, cam)); }
	float GET_CAM_NEAR_CLIP_f(Cam cam) { return ToFloat(FastCall<_float>(0xd4119ab75722b2e, cam)); }
	float GET_CAM_FAR_CLIP(Cam cam) { return ToFloat(Call<_float>(0x8cd08d031f58a891, cam)); }
	float GET_CAM_FAR_CLIP_f(Cam cam) { return ToFloat(FastCall<_float>(0x8cd08d031f58a891, cam)); }
	float GET_CAM_NEAR_DOF(Cam cam) { return ToFloat(Call<_float>(0x8cd08d37144e057d, cam)); }
	float GET_CAM_NEAR_DOF_f(Cam cam) { return ToFloat(FastCall<_float>(0x8cd08d37144e057d, cam)); }
	float GET_CAM_FAR_DOF(Cam cam) { return ToFloat(Call<_float>(0x7827c27bf8c0cfba, cam)); }
	float GET_CAM_FAR_DOF_f(Cam cam) { return ToFloat(FastCall<_float>(0x7827c27bf8c0cfba, cam)); }
	float GET_CAM_DOF_STRENGTH(Cam cam) { return ToFloat(Call<_float>(0x67612799d096f35e, cam)); }
	float GET_CAM_DOF_STRENGTH_f(Cam cam) { return ToFloat(FastCall<_float>(0x67612799d096f35e, cam)); }
	void SET_CAM_PARAMS(Cam cam, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fieldOfView, Any p8, int p9, int p10, int p11) { Call<void>(0xee78ec734c62ec33, cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, p8, p9, p10, p11); }
	void SET_CAM_PARAMS_f(Cam cam, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fieldOfView, Any p8, int p9, int p10, int p11) { FastCall<void>(0xee78ec734c62ec33, cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, p8, p9, p10, p11); }
	void SET_CAM_COORD(Cam cam, float posX, float posY, float posZ) { Call<void>(0xa4988bc1a6ef3a88, cam, posX, posY, posZ); }
	void SET_CAM_COORD_f(Cam cam, float posX, float posY, float posZ) { FastCall<void>(0xa4988bc1a6ef3a88, cam, posX, posY, posZ); }
	void SET_CAM_ROT(Cam cam, float rotX, float rotY, float rotZ, int rotationOrder) { Call<void>(0xf86ef69c8b862a, cam, rotX, rotY, rotZ, rotationOrder); }
	void SET_CAM_ROT_f(Cam cam, float rotX, float rotY, float rotZ, int rotationOrder) { FastCall<void>(0xf86ef69c8b862a, cam, rotX, rotY, rotZ, rotationOrder); }
	void SET_CAM_FOV(Cam cam, float fieldOfView) { Call<void>(0xf86ef69c8b5920, cam, fieldOfView); }
	void SET_CAM_FOV_f(Cam cam, float fieldOfView) { FastCall<void>(0xf86ef69c8b5920, cam, fieldOfView); }
	void SET_CAM_NEAR_CLIP(Cam cam, float nearClip) { Call<void>(0x4a03fbef3d68933a, cam, nearClip); }
	void SET_CAM_NEAR_CLIP_f(Cam cam, float nearClip) { FastCall<void>(0x4a03fbef3d68933a, cam, nearClip); }
	void SET_CAM_FAR_CLIP(Cam cam, float farClip) { Call<void>(0x33ef9c91b22f0f05, cam, farClip); }
	void SET_CAM_FAR_CLIP_f(Cam cam, float farClip) { FastCall<void>(0x33ef9c91b22f0f05, cam, farClip); }
	void FORCE_CAM_FAR_CLIP(Cam cam, float p1) { Call<void>(0xaadc3aa8536e31c, cam, p1); }
	void FORCE_CAM_FAR_CLIP_f(Cam cam, float p1) { FastCall<void>(0xaadc3aa8536e31c, cam, p1); }
	void SET_CAM_MOTION_BLUR_STRENGTH(Cam cam, float strength) { Call<void>(0x5d8b9d4fa45de83d, cam, strength); }
	void SET_CAM_MOTION_BLUR_STRENGTH_f(Cam cam, float strength) { FastCall<void>(0x5d8b9d4fa45de83d, cam, strength); }
	void SET_CAM_NEAR_DOF(Cam cam, float nearDOF) { Call<void>(0x33ef9cc5a7246bf1, cam, nearDOF); }
	void SET_CAM_NEAR_DOF_f(Cam cam, float nearDOF) { FastCall<void>(0x33ef9cc5a7246bf1, cam, nearDOF); }
	void SET_CAM_FAR_DOF(Cam cam, float farDOF) { Call<void>(0xe0a4a1f42f09cac6, cam, farDOF); }
	void SET_CAM_FAR_DOF_f(Cam cam, float farDOF) { FastCall<void>(0xe0a4a1f42f09cac6, cam, farDOF); }
	void SET_CAM_DOF_STRENGTH(Cam cam, float dofStrength) { Call<void>(0x4239d55cac2cffd2, cam, dofStrength); }
	void SET_CAM_DOF_STRENGTH_f(Cam cam, float dofStrength) { FastCall<void>(0x4239d55cac2cffd2, cam, dofStrength); }
	void SET_CAM_DOF_PLANES(Cam cam, float p1, float p2, float p3, float p4) { Call<void>(0xf67a99654d6fd568, cam, p1, p2, p3, p4); }
	void SET_CAM_DOF_PLANES_f(Cam cam, float p1, float p2, float p3, float p4) { FastCall<void>(0xf67a99654d6fd568, cam, p1, p2, p3, p4); }
	void SET_CAM_USE_SHALLOW_DOF_MODE(Cam cam, BOOL toggle) { Call<void>(0xef0f314bdcbcaff7, cam, toggle); }
	void SET_CAM_USE_SHALLOW_DOF_MODE_f(Cam cam, BOOL toggle) { FastCall<void>(0xef0f314bdcbcaff7, cam, toggle); }
	void SET_USE_HI_DOF() { Call<void>(0xee7aab0d9a2332d2); }
	void SET_USE_HI_DOF_f() { FastCall<void>(0xee7aab0d9a2332d2); }
	void SET_USE_HI_DOF_ON_SYNCED_SCENE_THIS_UPDATE() { Call<void>(0x9d8a05cfe680e425); }
	void SET_USE_HI_DOF_ON_SYNCED_SCENE_THIS_UPDATE_f() { FastCall<void>(0x9d8a05cfe680e425); }
	void SET_CAM_DOF_OVERRIDDEN_FOCUS_DISTANCE(Cam camera, float p1) { Call<void>(0xb546946167b2d616, camera, p1); }
	void SET_CAM_DOF_OVERRIDDEN_FOCUS_DISTANCE_f(Cam camera, float p1) { FastCall<void>(0xb546946167b2d616, camera, p1); }
	void SET_CAM_DOF_OVERRIDDEN_FOCUS_DISTANCE_BLEND_LEVEL(Any p0, float p1) { Call<void>(0x4022b79187b5c92d, p0, p1); }
	void SET_CAM_DOF_OVERRIDDEN_FOCUS_DISTANCE_BLEND_LEVEL_f(Any p0, float p1) { FastCall<void>(0x4022b79187b5c92d, p0, p1); }
	void SET_CAM_DOF_FNUMBER_OF_LENS(Cam camera, float p1) { Call<void>(0x3af100b653c0cc85, camera, p1); }
	void SET_CAM_DOF_FNUMBER_OF_LENS_f(Cam camera, float p1) { FastCall<void>(0x3af100b653c0cc85, camera, p1); }
	void SET_CAM_DOF_FOCAL_LENGTH_MULTIPLIER(Cam camera, float multiplier) { Call<void>(0x1765759b4f338d8f, camera, multiplier); }
	void SET_CAM_DOF_FOCAL_LENGTH_MULTIPLIER_f(Cam camera, float multiplier) { FastCall<void>(0x1765759b4f338d8f, camera, multiplier); }
	void SET_CAM_DOF_FOCUS_DISTANCE_BIAS(Cam camera, float p1) { Call<void>(0x1e10e533b59aa14b, camera, p1); }
	void SET_CAM_DOF_FOCUS_DISTANCE_BIAS_f(Cam camera, float p1) { FastCall<void>(0x1e10e533b59aa14b, camera, p1); }
	void SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE(Cam camera, float p1) { Call<void>(0x9a32f25a8a270c4b, camera, p1); }
	void SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_f(Cam camera, float p1) { FastCall<void>(0x9a32f25a8a270c4b, camera, p1); }
	void SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL(Cam camera, float p1) { Call<void>(0x1e2f5e67a0a957e2, camera, p1); }
	void SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL_f(Cam camera, float p1) { FastCall<void>(0x1e2f5e67a0a957e2, camera, p1); }
	void SET_CAM_DOF_SHOULD_KEEP_LOOK_AT_TARGET_IN_FOCUS(Cam camera, BOOL state) { Call<void>(0x3dc76d9fb2b37c1, camera, state); }
	void SET_CAM_DOF_SHOULD_KEEP_LOOK_AT_TARGET_IN_FOCUS_f(Cam camera, BOOL state) { FastCall<void>(0x3dc76d9fb2b37c1, camera, state); }
	void ATTACH_CAM_TO_ENTITY(Cam cam, Entity entity, float xOffset, float yOffset, float zOffset, BOOL isRelative) { Call<void>(0x5cd7672c0832611d, cam, entity, xOffset, yOffset, zOffset, isRelative); }
	void ATTACH_CAM_TO_ENTITY_f(Cam cam, Entity entity, float xOffset, float yOffset, float zOffset, BOOL isRelative) { FastCall<void>(0x5cd7672c0832611d, cam, entity, xOffset, yOffset, zOffset, isRelative); }
	void ATTACH_CAM_TO_PED_BONE(Cam cam, Ped ped, int boneIndex, float x, float y, float z, BOOL heading) { Call<void>(0x849a4c8f459396ce, cam, ped, boneIndex, x, y, z, heading); }
	void ATTACH_CAM_TO_PED_BONE_f(Cam cam, Ped ped, int boneIndex, float x, float y, float z, BOOL heading) { FastCall<void>(0x849a4c8f459396ce, cam, ped, boneIndex, x, y, z, heading); }
	void HARD_ATTACH_CAM_TO_PED_BONE(Cam cam, Ped ped, int boneIndex, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9) { Call<void>(0xfdb0a252acd8e4a2, cam, ped, boneIndex, p3, p4, p5, p6, p7, p8, p9); }
	void HARD_ATTACH_CAM_TO_PED_BONE_f(Cam cam, Ped ped, int boneIndex, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9) { FastCall<void>(0xfdb0a252acd8e4a2, cam, ped, boneIndex, p3, p4, p5, p6, p7, p8, p9); }
	void HARD_ATTACH_CAM_TO_ENTITY(Cam cam, Entity entity, float xRot, float yRot, float zRot, float xOffset, float yOffset, float zOffset, BOOL isRelative) { Call<void>(0x3878dbac5e5913f1, cam, entity, xRot, yRot, zRot, xOffset, yOffset, zOffset, isRelative); }
	void HARD_ATTACH_CAM_TO_ENTITY_f(Cam cam, Entity entity, float xRot, float yRot, float zRot, float xOffset, float yOffset, float zOffset, BOOL isRelative) { FastCall<void>(0x3878dbac5e5913f1, cam, entity, xRot, yRot, zRot, xOffset, yOffset, zOffset, isRelative); }
	void ATTACH_CAM_TO_VEHICLE_BONE(Cam cam, Vehicle vehicle, int boneIndex, BOOL relativeRotation, float rotX, float rotY, float rotZ, float offsetX, float offsetY, float offsetZ, BOOL fixedDirection) { Call<void>(0xe0952de98dfe0dd1, cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offsetX, offsetY, offsetZ, fixedDirection); }
	void ATTACH_CAM_TO_VEHICLE_BONE_f(Cam cam, Vehicle vehicle, int boneIndex, BOOL relativeRotation, float rotX, float rotY, float rotZ, float offsetX, float offsetY, float offsetZ, BOOL fixedDirection) { FastCall<void>(0xe0952de98dfe0dd1, cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offsetX, offsetY, offsetZ, fixedDirection); }
	void DETACH_CAM(Cam cam) { Call<void>(0x69adad4c33d03, cam); }
	void DETACH_CAM_f(Cam cam) { FastCall<void>(0x69adad4c33d03, cam); }
	void SET_CAM_INHERIT_ROLL_VEHICLE(Cam cam, BOOL p1) { Call<void>(0xa5ec7b8c1abf021b, cam, p1); }
	void SET_CAM_INHERIT_ROLL_VEHICLE_f(Cam cam, BOOL p1) { FastCall<void>(0xa5ec7b8c1abf021b, cam, p1); }
	void POINT_CAM_AT_COORD(Cam cam, float x, float y, float z) { Call<void>(0x945fb20f578fc0c8, cam, x, y, z); }
	void POINT_CAM_AT_COORD_f(Cam cam, float x, float y, float z) { FastCall<void>(0x945fb20f578fc0c8, cam, x, y, z); }
	void POINT_CAM_AT_ENTITY(Cam cam, Entity entity, float p2, float p3, float p4, BOOL p5) { Call<void>(0xf7968fdb9dc61850, cam, entity, p2, p3, p4, p5); }
	void POINT_CAM_AT_ENTITY_f(Cam cam, Entity entity, float p2, float p3, float p4, BOOL p5) { FastCall<void>(0xf7968fdb9dc61850, cam, entity, p2, p3, p4, p5); }
	void POINT_CAM_AT_PED_BONE(Cam cam, Ped ped, int boneIndex, float x, float y, float z, BOOL p6) { Call<void>(0x6c3207afc5164d41, cam, ped, boneIndex, x, y, z, p6); }
	void POINT_CAM_AT_PED_BONE_f(Cam cam, Ped ped, int boneIndex, float x, float y, float z, BOOL p6) { FastCall<void>(0x6c3207afc5164d41, cam, ped, boneIndex, x, y, z, p6); }
	void STOP_CAM_POINTING(Cam cam) { Call<void>(0x4716ac10990e67ff, cam); }
	void STOP_CAM_POINTING_f(Cam cam) { FastCall<void>(0x4716ac10990e67ff, cam); }
	void SET_CAM_AFFECTS_AIMING(Cam cam, BOOL toggle) { Call<void>(0x3fd6036c9a13c1ab, cam, toggle); }
	void SET_CAM_AFFECTS_AIMING_f(Cam cam, BOOL toggle) { FastCall<void>(0x3fd6036c9a13c1ab, cam, toggle); }
	void SET_CAM_CONTROLS_MINI_MAP_HEADING(Cam cam, BOOL toggle) { Call<void>(0x7b6edf2c0d465c93, cam, toggle); }
	void SET_CAM_CONTROLS_MINI_MAP_HEADING_f(Cam cam, BOOL toggle) { FastCall<void>(0x7b6edf2c0d465c93, cam, toggle); }
	void SET_CAM_IS_INSIDE_VEHICLE(Cam cam, BOOL toggle) { Call<void>(0x79c0e8751f5178b1, cam, toggle); }
	void SET_CAM_IS_INSIDE_VEHICLE_f(Cam cam, BOOL toggle) { FastCall<void>(0x79c0e8751f5178b1, cam, toggle); }
	void ALLOW_MOTION_BLUR_DECAY(Any p0, BOOL p1) { Call<void>(0xea3dddd5e133d255, p0, p1); }
	void ALLOW_MOTION_BLUR_DECAY_f(Any p0, BOOL p1) { FastCall<void>(0xea3dddd5e133d255, p0, p1); }
	void SET_CAM_DEBUG_NAME(Cam camera, char* name) { Call<void>(0xf67a9187c3f65544, camera, name); }
	void SET_CAM_DEBUG_NAME_f(Cam camera, char* name) { FastCall<void>(0xf67a9187c3f65544, camera, name); }
	Cam GET_DEBUG_CAM() { return Call<Cam>(0x216c771455de81da); }
	Cam GET_DEBUG_CAM_f() { return FastCall<Cam>(0x216c771455de81da); }
	void ADD_CAM_SPLINE_NODE(Cam camera, float x, float y, float z, float xRot, float yRot, float zRot, int length, int smoothingStyle, int rotationOrder) { Call<void>(0x7256ab97e1396162, camera, x, y, z, xRot, yRot, zRot, length, smoothingStyle, rotationOrder); }
	void ADD_CAM_SPLINE_NODE_f(Cam camera, float x, float y, float z, float xRot, float yRot, float zRot, int length, int smoothingStyle, int rotationOrder) { FastCall<void>(0x7256ab97e1396162, camera, x, y, z, xRot, yRot, zRot, length, smoothingStyle, rotationOrder); }
	void ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME(Cam cam, Cam cam2, int length, int p3) { Call<void>(0xdd25e5f26d7279ab, cam, cam2, length, p3); }
	void ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME_f(Cam cam, Cam cam2, int length, int p3) { FastCall<void>(0xdd25e5f26d7279ab, cam, cam2, length, p3); }
	void ADD_CAM_SPLINE_NODE_USING_CAMERA(Cam cam, Cam cam2, int length, int p3) { Call<void>(0x6f92249372fef1d, cam, cam2, length, p3); }
	void ADD_CAM_SPLINE_NODE_USING_CAMERA_f(Cam cam, Cam cam2, int length, int p3) { FastCall<void>(0x6f92249372fef1d, cam, cam2, length, p3); }
	void ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME(Cam cam, int length, int p2) { Call<void>(0x76b63eb4afba9dec, cam, length, p2); }
	void ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME_f(Cam cam, int length, int p2) { FastCall<void>(0x76b63eb4afba9dec, cam, length, p2); }
	void SET_CAM_SPLINE_PHASE(Cam cam, float p1) { Call<void>(0x47874703a635585a, cam, p1); }
	void SET_CAM_SPLINE_PHASE_f(Cam cam, float p1) { FastCall<void>(0x47874703a635585a, cam, p1); }
	float GET_CAM_SPLINE_PHASE(Cam cam) { return ToFloat(Call<_float>(0x6cae9940ca9f4be6, cam)); }
	float GET_CAM_SPLINE_PHASE_f(Cam cam) { return ToFloat(FastCall<_float>(0x6cae9940ca9f4be6, cam)); }
	float GET_CAM_SPLINE_NODE_PHASE(Cam cam) { return ToFloat(Call<_float>(0xd418c6e82df1b533, cam)); }
	float GET_CAM_SPLINE_NODE_PHASE_f(Cam cam) { return ToFloat(FastCall<_float>(0xd418c6e82df1b533, cam)); }
	void SET_CAM_SPLINE_DURATION(Cam cam, int timeDuration) { Call<void>(0xd7610160c7042235, cam, timeDuration); }
	void SET_CAM_SPLINE_DURATION_f(Cam cam, int timeDuration) { FastCall<void>(0xd7610160c7042235, cam, timeDuration); }
	void SET_CAM_SPLINE_SMOOTHING_STYLE(Cam cam, int smoothingStyle) { Call<void>(0xe9d388ce2ff6b925, cam, smoothingStyle); }
	void SET_CAM_SPLINE_SMOOTHING_STYLE_f(Cam cam, int smoothingStyle) { FastCall<void>(0xe9d388ce2ff6b925, cam, smoothingStyle); }
	int GET_CAM_SPLINE_NODE_INDEX(Cam cam) { return Call<int>(0xd418c6e82d91d48a, cam); }
	int GET_CAM_SPLINE_NODE_INDEX_f(Cam cam) { return FastCall<int>(0xd418c6e82d91d48a, cam); }
	void SET_CAM_SPLINE_NODE_EASE(Cam cam, int easingFunction, int p2, float p3) { Call<void>(0x14bf325097ba8f8a, cam, easingFunction, p2, p3); }
	void SET_CAM_SPLINE_NODE_EASE_f(Cam cam, int easingFunction, int p2, float p3) { FastCall<void>(0x14bf325097ba8f8a, cam, easingFunction, p2, p3); }
	void SET_CAM_SPLINE_NODE_VELOCITY_SCALE(Cam cam, int p1, float scale) { Call<void>(0x2376f67066ad27e4, cam, p1, scale); }
	void SET_CAM_SPLINE_NODE_VELOCITY_SCALE_f(Cam cam, int p1, float scale) { FastCall<void>(0x2376f67066ad27e4, cam, p1, scale); }
	void OVERRIDE_CAM_SPLINE_VELOCITY(Cam cam, int p1, float p2, float p3) { Call<void>(0x151841c2b4d2b408, cam, p1, p2, p3); }
	void OVERRIDE_CAM_SPLINE_VELOCITY_f(Cam cam, int p1, float p2, float p3) { FastCall<void>(0x151841c2b4d2b408, cam, p1, p2, p3); }
	void OVERRIDE_CAM_SPLINE_MOTION_BLUR(Cam cam, int p1, float p2, float p3) { Call<void>(0xd1b362b19959b445, cam, p1, p2, p3); }
	void OVERRIDE_CAM_SPLINE_MOTION_BLUR_f(Cam cam, int p1, float p2, float p3) { FastCall<void>(0xd1b362b19959b445, cam, p1, p2, p3); }
	void SET_CAM_SPLINE_NODE_EXTRA_FLAGS(Cam cam, int p1, int flags) { Call<void>(0x2375a077cc55063c, cam, p1, flags); }
	void SET_CAM_SPLINE_NODE_EXTRA_FLAGS_f(Cam cam, int p1, int flags) { FastCall<void>(0x2375a077cc55063c, cam, p1, flags); }
	BOOL IS_CAM_SPLINE_PAUSED(Cam cam) { return Call<BOOL>(0x240cacb3db6184f7, cam); }
	BOOL IS_CAM_SPLINE_PAUSED_f(Cam cam) { return FastCall<BOOL>(0x240cacb3db6184f7, cam); }
	void _INTERPOLATE_CAM_WITH_PARAMS(Cam camera, float camPosX, float camPosY, float camPosZ, float camRotX, float camRotY, float camRotZ, float fov, int duration, int posCurveType, int rotCurveType, int rotOrder, int fovCurveType) { Call<void>(0x8f21b425f656e772, camera, camPosX, camPosY, camPosZ, camRotX, camRotY, camRotZ, fov, duration, posCurveType, rotCurveType, rotOrder, fovCurveType); }
	void _INTERPOLATE_CAM_WITH_PARAMS_f(Cam camera, float camPosX, float camPosY, float camPosZ, float camRotX, float camRotY, float camRotZ, float fov, int duration, int posCurveType, int rotCurveType, int rotOrder, int fovCurveType) { FastCall<void>(0x8f21b425f656e772, camera, camPosX, camPosY, camPosZ, camRotX, camRotY, camRotZ, fov, duration, posCurveType, rotCurveType, rotOrder, fovCurveType); }
	void _ACTIVATE_CAM_WITH_INTERP_AND_FOV_CURVE(Cam camTo, Cam camFrom, int duration, int easeLocation, int easeRotation, int easeFov) { Call<void>(0x43f5c31baa1b466, camTo, camFrom, duration, easeLocation, easeRotation, easeFov); }
	void _ACTIVATE_CAM_WITH_INTERP_AND_FOV_CURVE_f(Cam camTo, Cam camFrom, int duration, int easeLocation, int easeRotation, int easeFov) { FastCall<void>(0x43f5c31baa1b466, camTo, camFrom, duration, easeLocation, easeRotation, easeFov); }
	void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, int easeLocation, int easeRotation) { Call<void>(0xf2402047c9b71021, camTo, camFrom, duration, easeLocation, easeRotation); }
	void SET_CAM_ACTIVE_WITH_INTERP_f(Cam camTo, Cam camFrom, int duration, int easeLocation, int easeRotation) { FastCall<void>(0xf2402047c9b71021, camTo, camFrom, duration, easeLocation, easeRotation); }
	BOOL IS_CAM_INTERPOLATING(Cam cam) { return Call<BOOL>(0xb61faa6cc366c4f9, cam); }
	BOOL IS_CAM_INTERPOLATING_f(Cam cam) { return FastCall<BOOL>(0xb61faa6cc366c4f9, cam); }
	void SHAKE_CAM(Cam cam, char* type, float amplitude) { Call<void>(0x423d3beda6d6, cam, type, amplitude); }
	void SHAKE_CAM_f(Cam cam, char* type, float amplitude) { FastCall<void>(0x423d3beda6d6, cam, type, amplitude); }
	void ANIMATED_SHAKE_CAM(Cam cam, char* p1, char* p2, char* p3, float amplitude) { Call<void>(0xb92b016f5814b3a, cam, p1, p2, p3, amplitude); }
	void ANIMATED_SHAKE_CAM_f(Cam cam, char* p1, char* p2, char* p3, float amplitude) { FastCall<void>(0xb92b016f5814b3a, cam, p1, p2, p3, amplitude); }
	BOOL IS_CAM_SHAKING(Cam cam) { return Call<BOOL>(0x4e73751f6084d1fe, cam); }
	BOOL IS_CAM_SHAKING_f(Cam cam) { return FastCall<BOOL>(0x4e73751f6084d1fe, cam); }
	void SET_CAM_SHAKE_AMPLITUDE(Cam cam, float amplitude) { Call<void>(0xc8db89f24fdd4a3d, cam, amplitude); }
	void SET_CAM_SHAKE_AMPLITUDE_f(Cam cam, float amplitude) { FastCall<void>(0xc8db89f24fdd4a3d, cam, amplitude); }
	void STOP_CAM_SHAKING(Cam cam, BOOL p1) { Call<void>(0x7e2a058d7e7844d6, cam, p1); }
	void STOP_CAM_SHAKING_f(Cam cam, BOOL p1) { FastCall<void>(0x7e2a058d7e7844d6, cam, p1); }
	void SHAKE_SCRIPT_GLOBAL(char* p0, float p1) { Call<void>(0x8d77ffeecdf163fe, p0, p1); }
	void SHAKE_SCRIPT_GLOBAL_f(char* p0, float p1) { FastCall<void>(0x8d77ffeecdf163fe, p0, p1); }
	void ANIMATED_SHAKE_SCRIPT_GLOBAL(char* p0, char* p1, char* p2, float p3) { Call<void>(0x19970f2c979ddb62, p0, p1, p2, p3); }
	void ANIMATED_SHAKE_SCRIPT_GLOBAL_f(char* p0, char* p1, char* p2, float p3) { FastCall<void>(0x19970f2c979ddb62, p0, p1, p2, p3); }
	BOOL IS_SCRIPT_GLOBAL_SHAKING() { return Call<BOOL>(0x86a6a0f77d956226); }
	BOOL IS_SCRIPT_GLOBAL_SHAKING_f() { return FastCall<BOOL>(0x86a6a0f77d956226); }
	void STOP_SCRIPT_GLOBAL_SHAKING(BOOL p0) { Call<void>(0x8ab93c36805926fe, p0); }
	void STOP_SCRIPT_GLOBAL_SHAKING_f(BOOL p0) { FastCall<void>(0x8ab93c36805926fe, p0); }
	void TRIGGER_VEHICLE_PART_BROKEN_CAMERA_SHAKE(Vehicle vehicle, int p1, float p2) { Call<void>(0x3edcb9e42cb06c4, vehicle, p1, p2); }
	void TRIGGER_VEHICLE_PART_BROKEN_CAMERA_SHAKE_f(Vehicle vehicle, int p1, float p2) { FastCall<void>(0x3edcb9e42cb06c4, vehicle, p1, p2); }
	BOOL PLAY_CAM_ANIM(Cam cam, char* animName, char* animDictionary, float x, float y, float z, float xRot, float yRot, float zRot, BOOL p9, int p10) { return Call<BOOL>(0x860d9a78b9d06d4c, cam, animName, animDictionary, x, y, z, xRot, yRot, zRot, p9, p10); }
	BOOL PLAY_CAM_ANIM_f(Cam cam, char* animName, char* animDictionary, float x, float y, float z, float xRot, float yRot, float zRot, BOOL p9, int p10) { return FastCall<BOOL>(0x860d9a78b9d06d4c, cam, animName, animDictionary, x, y, z, xRot, yRot, zRot, p9, p10); }
	BOOL IS_CAM_PLAYING_ANIM(Cam cam, char* animName, char* animDictionary) { return Call<BOOL>(0x9cf57c2905da1ca7, cam, animName, animDictionary); }
	BOOL IS_CAM_PLAYING_ANIM_f(Cam cam, char* animName, char* animDictionary) { return FastCall<BOOL>(0x9cf57c2905da1ca7, cam, animName, animDictionary); }
	void SET_CAM_ANIM_CURRENT_PHASE(Cam cam, float phase) { Call<void>(0xd93a6a280b211474, cam, phase); }
	void SET_CAM_ANIM_CURRENT_PHASE_f(Cam cam, float phase) { FastCall<void>(0xd93a6a280b211474, cam, phase); }
	float GET_CAM_ANIM_CURRENT_PHASE(Cam cam) { return ToFloat(Call<_float>(0xa67e9fbbf4f12f00, cam)); }
	float GET_CAM_ANIM_CURRENT_PHASE_f(Cam cam) { return ToFloat(FastCall<_float>(0xa67e9fbbf4f12f00, cam)); }
	BOOL PLAY_SYNCHRONIZED_CAM_ANIM(Any p0, Any p1, char* animName, char* animDictionary) { return Call<BOOL>(0x938842bea4bf44a1, p0, p1, animName, animDictionary); }
	BOOL PLAY_SYNCHRONIZED_CAM_ANIM_f(Any p0, Any p1, char* animName, char* animDictionary) { return FastCall<BOOL>(0x938842bea4bf44a1, p0, p1, animName, animDictionary); }
	void SET_FLY_CAM_HORIZONTAL_RESPONSE(Cam cam, float p1, float p2, float p3) { Call<void>(0x67795e8680377b03, cam, p1, p2, p3); }
	void SET_FLY_CAM_HORIZONTAL_RESPONSE_f(Cam cam, float p1, float p2, float p3) { FastCall<void>(0x67795e8680377b03, cam, p1, p2, p3); }
	void SET_FLY_CAM_VERTICAL_RESPONSE(Cam cam, float p1, float p2, float p3) { Call<void>(0x700c50b9a7754db1, cam, p1, p2, p3); }
	void SET_FLY_CAM_VERTICAL_RESPONSE_f(Cam cam, float p1, float p2, float p3) { FastCall<void>(0x700c50b9a7754db1, cam, p1, p2, p3); }
	void SET_FLY_CAM_MAX_HEIGHT(Cam cam, float height) { Call<void>(0xbcb9468eff163b9b, cam, height); }
	void SET_FLY_CAM_MAX_HEIGHT_f(Cam cam, float height) { FastCall<void>(0xbcb9468eff163b9b, cam, height); }
	void SET_FLY_CAM_COORD_AND_CONSTRAIN(Cam cam, float x, float y, float z) { Call<void>(0x54837a67df8a79ec, cam, x, y, z); }
	void SET_FLY_CAM_COORD_AND_CONSTRAIN_f(Cam cam, float x, float y, float z) { FastCall<void>(0x54837a67df8a79ec, cam, x, y, z); }
	void SET_FLY_CAM_VERTICAL_CONTROLS_THIS_UPDATE(Cam cam) { Call<void>(0xc8e2e222c74daaf1, cam); }
	void SET_FLY_CAM_VERTICAL_CONTROLS_THIS_UPDATE_f(Cam cam) { FastCall<void>(0xc8e2e222c74daaf1, cam); }
	BOOL WAS_FLY_CAM_CONSTRAINED_ON_PREVIOUS_UDPATE(Cam cam) { return Call<BOOL>(0x97f3f30c2ac0b5f4, cam); }
	BOOL WAS_FLY_CAM_CONSTRAINED_ON_PREVIOUS_UDPATE_f(Cam cam) { return FastCall<BOOL>(0x97f3f30c2ac0b5f4, cam); }
	BOOL IS_SCREEN_FADED_OUT() { return Call<BOOL>(0xb753d7722832a19); }
	BOOL IS_SCREEN_FADED_OUT_f() { return FastCall<BOOL>(0xb753d7722832a19); }
	BOOL IS_SCREEN_FADED_IN() { return Call<BOOL>(0xadc9f9b9853e08da); }
	BOOL IS_SCREEN_FADED_IN_f() { return FastCall<BOOL>(0xadc9f9b9853e08da); }
	BOOL IS_SCREEN_FADING_OUT() { return Call<BOOL>(0x6332716e11407806); }
	BOOL IS_SCREEN_FADING_OUT_f() { return FastCall<BOOL>(0x6332716e11407806); }
	BOOL IS_SCREEN_FADING_IN() { return Call<BOOL>(0xb753d7729d8c94d); }
	BOOL IS_SCREEN_FADING_IN_f() { return FastCall<BOOL>(0xb753d7729d8c94d); }
	void DO_SCREEN_FADE_IN(int duration) { Call<void>(0xcaaf5cc1c404b29, duration); }
	void DO_SCREEN_FADE_IN_f(int duration) { FastCall<void>(0xcaaf5cc1c404b29, duration); }
	void DO_SCREEN_FADE_OUT(int duration) { Call<void>(0x88b3c3b76bc931aa, duration); }
	void DO_SCREEN_FADE_OUT_f(int duration) { FastCall<void>(0x88b3c3b76bc931aa, duration); }
	void SET_WIDESCREEN_BORDERS(BOOL p0, int p1) { Call<void>(0xad8eb4b54691d184, p0, p1); }
	void SET_WIDESCREEN_BORDERS_f(BOOL p0, int p1) { FastCall<void>(0xad8eb4b54691d184, p0, p1); }
	BOOL ARE_WIDESCREEN_BORDERS_ACTIVE() { return Call<BOOL>(0xdfdc19ed57df593); }
	BOOL ARE_WIDESCREEN_BORDERS_ACTIVE_f() { return FastCall<BOOL>(0xdfdc19ed57df593); }
	Vector3* GET_GAMEPLAY_CAM_COORD() { Call<Vector3*>(0xf9213fc9899f715); return GetVector(); }
	Vector3* GET_GAMEPLAY_CAM_ROT(int rotationOrder) { Call<Vector3*>(0x871354ffbae601f7, rotationOrder); return GetVector(); }
	float GET_GAMEPLAY_CAM_FOV() { return ToFloat(Call<_float>(0x871354ffbae5d4ed)); }
	float GET_GAMEPLAY_CAM_FOV_f() { return ToFloat(FastCall<_float>(0x871354ffbae5d4ed)); }
	void SET_GAMEPLAY_CAM_MOTION_BLUR_SCALING_THIS_UPDATE(float p0) { Call<void>(0x3fdf642ae1a927f7, p0); }
	void SET_GAMEPLAY_CAM_MOTION_BLUR_SCALING_THIS_UPDATE_f(float p0) { FastCall<void>(0x3fdf642ae1a927f7, p0); }
	void SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE(float p0) { Call<void>(0x52c4870c1a11c182, p0); }
	void SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE_f(float p0) { FastCall<void>(0x52c4870c1a11c182, p0); }
	float GET_GAMEPLAY_CAM_RELATIVE_HEADING() { return ToFloat(Call<_float>(0xbf908c665cc7332f)); }
	float GET_GAMEPLAY_CAM_RELATIVE_HEADING_f() { return ToFloat(FastCall<_float>(0xbf908c665cc7332f)); }
	void SET_GAMEPLAY_CAM_RELATIVE_HEADING(float heading) { Call<void>(0x22fc9a8042e4033b, heading); }
	void SET_GAMEPLAY_CAM_RELATIVE_HEADING_f(float heading) { FastCall<void>(0x22fc9a8042e4033b, heading); }
	float GET_GAMEPLAY_CAM_RELATIVE_PITCH() { return ToFloat(Call<_float>(0x3c230c2234c1e3ad)); }
	float GET_GAMEPLAY_CAM_RELATIVE_PITCH_f() { return ToFloat(FastCall<_float>(0x3c230c2234c1e3ad)); }
	void SET_GAMEPLAY_CAM_RELATIVE_PITCH(float angle, float scalingFactor) { Call<void>(0xf1a6c18f2fab46b9, angle, scalingFactor); }
	void SET_GAMEPLAY_CAM_RELATIVE_PITCH_f(float angle, float scalingFactor) { FastCall<void>(0xf1a6c18f2fab46b9, angle, scalingFactor); }
	void RESET_GAMEPLAY_CAM_FULL_ATTACH_PARENT_TRANSFORM_TIMER() { Call<void>(0xb55682b529f7f820); }
	void RESET_GAMEPLAY_CAM_FULL_ATTACH_PARENT_TRANSFORM_TIMER_f() { FastCall<void>(0xb55682b529f7f820); }
	void FORCE_CAMERA_RELATIVE_HEADING_AND_PITCH(float roll, float pitch, float yaw) { Call<void>(0x850f26df2691aaae, roll, pitch, yaw); }
	void FORCE_CAMERA_RELATIVE_HEADING_AND_PITCH_f(float roll, float pitch, float yaw) { FastCall<void>(0x850f26df2691aaae, roll, pitch, yaw); }
	void FORCE_BONNET_CAMERA_RELATIVE_HEADING_AND_PITCH(float p0, float p1) { Call<void>(0x9b2f905af86ffad3, p0, p1); }
	void FORCE_BONNET_CAMERA_RELATIVE_HEADING_AND_PITCH_f(float p0, float p1) { FastCall<void>(0x9b2f905af86ffad3, p0, p1); }
	void SET_FIRST_PERSON_SHOOTER_CAMERA_HEADING(float yaw) { Call<void>(0x899b545ddbe71bb9, yaw); }
	void SET_FIRST_PERSON_SHOOTER_CAMERA_HEADING_f(float yaw) { FastCall<void>(0x899b545ddbe71bb9, yaw); }
	void SET_FIRST_PERSON_SHOOTER_CAMERA_PITCH(float pitch) { Call<void>(0xed7ef67f6ef666b7, pitch); }
	void SET_FIRST_PERSON_SHOOTER_CAMERA_PITCH_f(float pitch) { FastCall<void>(0xed7ef67f6ef666b7, pitch); }
	void SET_SCRIPTED_CAMERA_IS_FIRST_PERSON_THIS_FRAME(BOOL p0) { Call<void>(0xb9f7b1c9b59744b4, p0); }
	void SET_SCRIPTED_CAMERA_IS_FIRST_PERSON_THIS_FRAME_f(BOOL p0) { FastCall<void>(0xb9f7b1c9b59744b4, p0); }
	void SHAKE_GAMEPLAY_CAM(char* shakeName, float intensity) { Call<void>(0x3a1d2cef675f26cf, shakeName, intensity); }
	void SHAKE_GAMEPLAY_CAM_f(char* shakeName, float intensity) { FastCall<void>(0x3a1d2cef675f26cf, shakeName, intensity); }
	BOOL IS_GAMEPLAY_CAM_SHAKING() { return Call<BOOL>(0xbd077cfad973fcef); }
	BOOL IS_GAMEPLAY_CAM_SHAKING_f() { return FastCall<BOOL>(0xbd077cfad973fcef); }
	void SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE(float amplitude) { Call<void>(0xcf9b6f790c8678fe, amplitude); }
	void SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE_f(float amplitude) { FastCall<void>(0xcf9b6f790c8678fe, amplitude); }
	void STOP_GAMEPLAY_CAM_SHAKING(BOOL p0) { Call<void>(0x5a1058b28f383d17, p0); }
	void STOP_GAMEPLAY_CAM_SHAKING_f(BOOL p0) { FastCall<void>(0x5a1058b28f383d17, p0); }
	void SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE(Ped ped) { Call<void>(0xcb6c71375cd16878, ped); }
	void SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE_f(Ped ped) { FastCall<void>(0xcb6c71375cd16878, ped); }
	BOOL IS_GAMEPLAY_CAM_RENDERING() { return Call<BOOL>(0x991c28d324092238); }
	BOOL IS_GAMEPLAY_CAM_RENDERING_f() { return FastCall<BOOL>(0x991c28d324092238); }
	BOOL IS_INTERPOLATING_FROM_SCRIPT_CAMS() { return Call<BOOL>(0xabd0a350634246d9); }
	BOOL IS_INTERPOLATING_FROM_SCRIPT_CAMS_f() { return FastCall<BOOL>(0xabd0a350634246d9); }
	BOOL IS_INTERPOLATING_TO_SCRIPT_CAMS() { return Call<BOOL>(0xaeadba31e0d2b5aa); }
	BOOL IS_INTERPOLATING_TO_SCRIPT_CAMS_f() { return FastCall<BOOL>(0xaeadba31e0d2b5aa); }
	void SET_GAMEPLAY_CAM_ALTITUDE_FOV_SCALING_STATE(BOOL p0) { Call<void>(0xd3a1e7e3977821f6, p0); }
	void SET_GAMEPLAY_CAM_ALTITUDE_FOV_SCALING_STATE_f(BOOL p0) { FastCall<void>(0xd3a1e7e3977821f6, p0); }
	void DISABLE_GAMEPLAY_CAM_ALTITUDE_FOV_SCALING_THIS_UPDATE() { Call<void>(0xc085cb5d83cb2755); }
	void DISABLE_GAMEPLAY_CAM_ALTITUDE_FOV_SCALING_THIS_UPDATE_f() { FastCall<void>(0xc085cb5d83cb2755); }
	BOOL IS_GAMEPLAY_CAM_LOOKING_BEHIND() { return Call<BOOL>(0xdf1bfe83accb1fea); }
	BOOL IS_GAMEPLAY_CAM_LOOKING_BEHIND_f() { return FastCall<BOOL>(0xdf1bfe83accb1fea); }
	void SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE(Entity entity) { Call<void>(0x4e8bcf95cc178082, entity); }
	void SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE_f(Entity entity) { FastCall<void>(0x4e8bcf95cc178082, entity); }
	void DISABLE_CAM_COLLISION_FOR_OBJECT(Entity entity) { Call<void>(0x2469d661e2538309, entity); }
	void DISABLE_CAM_COLLISION_FOR_OBJECT_f(Entity entity) { FastCall<void>(0x2469d661e2538309, entity); }
	void BYPASS_CAMERA_COLLISION_BUOYANCY_TEST_THIS_UPDATE() { Call<void>(0xd1a29e41bab600c); }
	void BYPASS_CAMERA_COLLISION_BUOYANCY_TEST_THIS_UPDATE_f() { FastCall<void>(0xd1a29e41bab600c); }
	void SET_GAMEPLAY_CAM_ENTITY_TO_LIMIT_FOCUS_OVER_BOUNDING_SPHERE_THIS_UPDATE(Entity entity) { Call<void>(0x8db801793a1a5b27, entity); }
	void SET_GAMEPLAY_CAM_ENTITY_TO_LIMIT_FOCUS_OVER_BOUNDING_SPHERE_THIS_UPDATE_f(Entity entity) { FastCall<void>(0x8db801793a1a5b27, entity); }
	void DISABLE_FIRST_PERSON_CAMERA_WATER_CLIPPING_TEST_THIS_UPDATE() { Call<void>(0xe2496eca3129399c); }
	void DISABLE_FIRST_PERSON_CAMERA_WATER_CLIPPING_TEST_THIS_UPDATE_f() { FastCall<void>(0xe2496eca3129399c); }
	void SET_FOLLOW_CAM_IGNORE_ATTACH_PARENT_MOVEMENT_THIS_UPDATE() { Call<void>(0x994a35bdc2391041); }
	void SET_FOLLOW_CAM_IGNORE_ATTACH_PARENT_MOVEMENT_THIS_UPDATE_f() { FastCall<void>(0x994a35bdc2391041); }
	BOOL IS_SPHERE_VISIBLE(float x, float y, float z, float radius) { return Call<BOOL>(0x3d9b717c93c20d95, x, y, z, radius); }
	BOOL IS_SPHERE_VISIBLE_f(float x, float y, float z, float radius) { return FastCall<BOOL>(0x3d9b717c93c20d95, x, y, z, radius); }
	BOOL IS_FOLLOW_PED_CAM_ACTIVE() { return Call<BOOL>(0xb56c3ebe246d33df); }
	BOOL IS_FOLLOW_PED_CAM_ACTIVE_f() { return FastCall<BOOL>(0xb56c3ebe246d33df); }
	BOOL SET_FOLLOW_PED_CAM_THIS_UPDATE(char* camName, int p1) { return Call<BOOL>(0xdb9b11541d20ce39, camName, p1); }
	BOOL SET_FOLLOW_PED_CAM_THIS_UPDATE_f(char* camName, int p1) { return FastCall<BOOL>(0xdb9b11541d20ce39, camName, p1); }
	void USE_SCRIPT_CAM_FOR_AMBIENT_POPULATION_ORIGIN_THIS_FRAME(BOOL p0, BOOL p1) { Call<void>(0xe87c25318e0ae39c, p0, p1); }
	void USE_SCRIPT_CAM_FOR_AMBIENT_POPULATION_ORIGIN_THIS_FRAME_f(BOOL p0, BOOL p1) { FastCall<void>(0xe87c25318e0ae39c, p0, p1); }
	void SET_FOLLOW_PED_CAM_LADDER_ALIGN_THIS_UPDATE() { Call<void>(0x51fde2dc334a9c04); }
	void SET_FOLLOW_PED_CAM_LADDER_ALIGN_THIS_UPDATE_f() { FastCall<void>(0x51fde2dc334a9c04); }
	void SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(float minimum, float maximum) { Call<void>(0xdf20e0236a38250e, minimum, maximum); }
	void SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE_f(float minimum, float maximum) { FastCall<void>(0xdf20e0236a38250e, minimum, maximum); }
	void SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(float minimum, float maximum) { Call<void>(0x8f636169d99fc290, minimum, maximum); }
	void SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE_f(float minimum, float maximum) { FastCall<void>(0x8f636169d99fc290, minimum, maximum); }
	void SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(float p0, float distance) { Call<void>(0x4514ebfabeb00af3, p0, distance); }
	void SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE_f(float p0, float distance) { FastCall<void>(0x4514ebfabeb00af3, p0, distance); }
	float _GET_THIRD_PERSON_CAM_MIN_ORBIT_DISTANCE_SPRING() { return ToFloat(Call<_float>(0xab9a82b6e7504bfb)); }
	float _GET_THIRD_PERSON_CAM_MIN_ORBIT_DISTANCE_SPRING_f() { return ToFloat(FastCall<_float>(0xab9a82b6e7504bfb)); }
	float _GET_THIRD_PERSON_CAM_MAX_ORBIT_DISTANCE_SPRING() { return ToFloat(Call<_float>(0x411ba3ed33d18d)); }
	float _GET_THIRD_PERSON_CAM_MAX_ORBIT_DISTANCE_SPRING_f() { return ToFloat(FastCall<_float>(0x411ba3ed33d18d)); }
	void SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE(Vehicle p0, int p1) { Call<void>(0x3bd63e1459b27fc, p0, p1); }
	void SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE_f(Vehicle p0, int p1) { FastCall<void>(0x3bd63e1459b27fc, p0, p1); }
	void DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE() { Call<void>(0xdd8adb7239a16003); }
	void DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE_f() { FastCall<void>(0xdd8adb7239a16003); }
	void DISABLE_FIRST_PERSON_FLASH_EFFECT_THIS_UPDATE() { Call<void>(0xe8b43ee943b1706f); }
	void DISABLE_FIRST_PERSON_FLASH_EFFECT_THIS_UPDATE_f() { FastCall<void>(0xe8b43ee943b1706f); }
	void BLOCK_FIRST_PERSON_ORIENTATION_RESET_THIS_UPDATE() { Call<void>(0x9223952c033d95a2); }
	void BLOCK_FIRST_PERSON_ORIENTATION_RESET_THIS_UPDATE_f() { FastCall<void>(0x9223952c033d95a2); }
	int GET_FOLLOW_PED_CAM_ZOOM_LEVEL() { return Call<int>(0x7683b80e968ab75d); }
	int GET_FOLLOW_PED_CAM_ZOOM_LEVEL_f() { return FastCall<int>(0x7683b80e968ab75d); }
	int GET_FOLLOW_PED_CAM_VIEW_MODE() { return Call<int>(0x7fb1a7d67e6396f8); }
	int GET_FOLLOW_PED_CAM_VIEW_MODE_f() { return FastCall<int>(0x7fb1a7d67e6396f8); }
	void SET_FOLLOW_PED_CAM_VIEW_MODE(int viewMode) { Call<void>(0xf2a48795c82fef6c, viewMode); }
	void SET_FOLLOW_PED_CAM_VIEW_MODE_f(int viewMode) { FastCall<void>(0xf2a48795c82fef6c, viewMode); }
	BOOL IS_FOLLOW_VEHICLE_CAM_ACTIVE() { return Call<BOOL>(0x2ef29573bcae2522); }
	BOOL IS_FOLLOW_VEHICLE_CAM_ACTIVE_f() { return FastCall<BOOL>(0x2ef29573bcae2522); }
	void SET_FOLLOW_VEHICLE_CAM_HIGH_ANGLE_MODE_THIS_UPDATE(BOOL p0) { Call<void>(0xa7ada464f58e783, p0); }
	void SET_FOLLOW_VEHICLE_CAM_HIGH_ANGLE_MODE_THIS_UPDATE_f(BOOL p0) { FastCall<void>(0xa7ada464f58e783, p0); }
	void SET_FOLLOW_VEHICLE_CAM_HIGH_ANGLE_MODE_EVERY_UPDATE(BOOL p0, BOOL p1) { Call<void>(0x3fbec88c925c9bb4, p0, p1); }
	void SET_FOLLOW_VEHICLE_CAM_HIGH_ANGLE_MODE_EVERY_UPDATE_f(BOOL p0, BOOL p1) { FastCall<void>(0x3fbec88c925c9bb4, p0, p1); }
	BOOL SET_TABLE_GAMES_CAMERA_THIS_UPDATE(Hash hash) { return Call<BOOL>(0x3be3f08f0c05b0dc, hash); }
	BOOL SET_TABLE_GAMES_CAMERA_THIS_UPDATE_f(Hash hash) { return FastCall<BOOL>(0x3be3f08f0c05b0dc, hash); }
	int GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL() { return Call<int>(0x3d100e4d4662e920); }
	int GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL_f() { return FastCall<int>(0x3d100e4d4662e920); }
	void SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL(int zoomLevel) { Call<void>(0xa07c1c672c7fb92c, zoomLevel); }
	void SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL_f(int zoomLevel) { FastCall<void>(0xa07c1c672c7fb92c, zoomLevel); }
	int GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() { return Call<int>(0xc829cba6f7aca0d5); }
	int GET_FOLLOW_VEHICLE_CAM_VIEW_MODE_f() { return FastCall<int>(0xc829cba6f7aca0d5); }
	void SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(int viewMode) { Call<void>(0xc31cc3d959ef9f49, viewMode); }
	void SET_FOLLOW_VEHICLE_CAM_VIEW_MODE_f(int viewMode) { FastCall<void>(0xc31cc3d959ef9f49, viewMode); }
	int GET_CAM_VIEW_MODE_FOR_CONTEXT(int context) { return Call<int>(0xe7acdcdc5f529d5e, context); }
	int GET_CAM_VIEW_MODE_FOR_CONTEXT_f(int context) { return FastCall<int>(0xe7acdcdc5f529d5e, context); }
	void SET_CAM_VIEW_MODE_FOR_CONTEXT(int context, int viewMode) { Call<void>(0xd315f5064f11536a, context, viewMode); }
	void SET_CAM_VIEW_MODE_FOR_CONTEXT_f(int context, int viewMode) { FastCall<void>(0xd315f5064f11536a, context, viewMode); }
	int GET_CAM_ACTIVE_VIEW_MODE_CONTEXT() { return Call<int>(0x8e3def137023284d); }
	int GET_CAM_ACTIVE_VIEW_MODE_CONTEXT_f() { return FastCall<int>(0x8e3def137023284d); }
	void USE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE() { Call<void>(0xda6685c228e3e7ae); }
	void USE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE_f() { FastCall<void>(0xda6685c228e3e7ae); }
	void USE_DEDICATED_STUNT_CAMERA_THIS_UPDATE(char* camName) { Call<void>(0xc44c88378690a33d, camName); }
	void USE_DEDICATED_STUNT_CAMERA_THIS_UPDATE_f(char* camName) { FastCall<void>(0xc44c88378690a33d, camName); }
	void FORCE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE() { Call<void>(0x70de37fb548795ca); }
	void FORCE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE_f() { FastCall<void>(0x70de37fb548795ca); }
	void SET_FOLLOW_VEHICLE_CAM_SEAT_THIS_UPDATE(int seatIndex) { Call<void>(0xdfc79c97b50a6484, seatIndex); }
	void SET_FOLLOW_VEHICLE_CAM_SEAT_THIS_UPDATE_f(int seatIndex) { FastCall<void>(0xdfc79c97b50a6484, seatIndex); }
	BOOL IS_AIM_CAM_ACTIVE() { return Call<BOOL>(0x1fa2c79250a784a5); }
	BOOL IS_AIM_CAM_ACTIVE_f() { return FastCall<BOOL>(0x1fa2c79250a784a5); }
	BOOL IS_AIM_CAM_ACTIVE_IN_ACCURATE_MODE() { return Call<BOOL>(0x18ecaa70ec628ace); }
	BOOL IS_AIM_CAM_ACTIVE_IN_ACCURATE_MODE_f() { return FastCall<BOOL>(0x18ecaa70ec628ace); }
	BOOL IS_FIRST_PERSON_AIM_CAM_ACTIVE() { return Call<BOOL>(0x20577ba03dce1516); }
	BOOL IS_FIRST_PERSON_AIM_CAM_ACTIVE_f() { return FastCall<BOOL>(0x20577ba03dce1516); }
	void DISABLE_AIM_CAM_THIS_UPDATE() { Call<void>(0xf3c2b64c73b799e9); }
	void DISABLE_AIM_CAM_THIS_UPDATE_f() { FastCall<void>(0xf3c2b64c73b799e9); }
	float GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR() { return ToFloat(Call<_float>(0x5f1d0d48a6fcfa9f)); }
	float GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR_f() { return ToFloat(FastCall<_float>(0x5f1d0d48a6fcfa9f)); }
	void SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR(float zoomFactor) { Call<void>(0x3a9a052a19f39f13, zoomFactor); }
	void SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR_f(float zoomFactor) { FastCall<void>(0x3a9a052a19f39f13, zoomFactor); }
	void SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR_LIMITS_THIS_UPDATE(float p0, float p1) { Call<void>(0x45863187a728208f, p0, p1); }
	void SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR_LIMITS_THIS_UPDATE_f(float p0, float p1) { FastCall<void>(0x45863187a728208f, p0, p1); }
	void SET_FIRST_PERSON_AIM_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(float p0, float p1) { Call<void>(0x71c4a5fcefdee68b, p0, p1); }
	void SET_FIRST_PERSON_AIM_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE_f(float p0, float p1) { FastCall<void>(0x71c4a5fcefdee68b, p0, p1); }
	void SET_FIRST_PERSON_AIM_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(float p0, float p1) { Call<void>(0x2be9473f3012bf4d, p0, p1); }
	void SET_FIRST_PERSON_AIM_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE_f(float p0, float p1) { FastCall<void>(0x2be9473f3012bf4d, p0, p1); }
	void SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(float p0) { Call<void>(0x2925b944e12ed42a, p0); }
	void SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE_f(float p0) { FastCall<void>(0x2925b944e12ed42a, p0); }
	void SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(float p0) { Call<void>(0xe7d4833ccddf57d3, p0); }
	void SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE_f(float p0) { FastCall<void>(0xe7d4833ccddf57d3, p0); }
	void SET_ALLOW_CUSTOM_VEHICLE_DRIVE_BY_CAM_THIS_UPDATE(BOOL p0) { Call<void>(0x5c2c4c8a468cd295, p0); }
	void SET_ALLOW_CUSTOM_VEHICLE_DRIVE_BY_CAM_THIS_UPDATE_f(BOOL p0) { FastCall<void>(0x5c2c4c8a468cd295, p0); }
	void FORCE_TIGHTSPACE_CUSTOM_FRAMING_THIS_UPDATE() { Call<void>(0x7b34fd75f4a88b4a); }
	void FORCE_TIGHTSPACE_CUSTOM_FRAMING_THIS_UPDATE_f() { FastCall<void>(0x7b34fd75f4a88b4a); }
	Vector3* GET_FINAL_RENDERED_CAM_COORD() { Call<Vector3*>(0x246cd74ed4a0c1ad); return GetVector(); }
	Vector3* GET_FINAL_RENDERED_CAM_ROT(int rotationOrder) { Call<Vector3*>(0x62a33e74ece928f, rotationOrder); return GetVector(); }
	Vector3* GET_FINAL_RENDERED_REMOTE_PLAYER_CAM_ROT(Player player, int rotationOrder) { Call<Vector3*>(0x9f404e71ac946e4a, player, rotationOrder); return GetVector(); }
	float GET_FINAL_RENDERED_CAM_FOV() { return ToFloat(Call<_float>(0x62a33e74ece6585)); }
	float GET_FINAL_RENDERED_CAM_FOV_f() { return ToFloat(FastCall<_float>(0x62a33e74ece6585)); }
	float GET_FINAL_RENDERED_REMOTE_PLAYER_CAM_FOV(Player player) { return ToFloat(Call<_float>(0x9f404e71ac944140, player)); }
	float GET_FINAL_RENDERED_REMOTE_PLAYER_CAM_FOV_f(Player player) { return ToFloat(FastCall<_float>(0x9f404e71ac944140, player)); }
	float GET_FINAL_RENDERED_CAM_NEAR_CLIP() { return ToFloat(Call<_float>(0xe8803ce39b07ffdf)); }
	float GET_FINAL_RENDERED_CAM_NEAR_CLIP_f() { return ToFloat(FastCall<_float>(0xe8803ce39b07ffdf)); }
	float GET_FINAL_RENDERED_CAM_FAR_CLIP() { return ToFloat(Call<_float>(0xd5f39eaa184cf9c0)); }
	float GET_FINAL_RENDERED_CAM_FAR_CLIP_f() { return ToFloat(FastCall<_float>(0xd5f39eaa184cf9c0)); }
	float GET_FINAL_RENDERED_CAM_NEAR_DOF() { return ToFloat(Call<_float>(0xd5f39ede0d4256ac)); }
	float GET_FINAL_RENDERED_CAM_NEAR_DOF_f() { return ToFloat(FastCall<_float>(0xd5f39ede0d4256ac)); }
	float GET_FINAL_RENDERED_CAM_FAR_DOF() { return ToFloat(Call<_float>(0xbc943eecb6761cab)); }
	float GET_FINAL_RENDERED_CAM_FAR_DOF_f() { return ToFloat(FastCall<_float>(0xbc943eecb6761cab)); }
	float GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH() { return ToFloat(Call<_float>(0x516633e8c4a29278)); }
	float GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH_f() { return ToFloat(FastCall<_float>(0x516633e8c4a29278)); }
	void SET_GAMEPLAY_COORD_HINT(float x, float y, float z, int duration, int blendOutDuration, int blendInDuration, int p6) { Call<void>(0x47d53d4c335a85ed, x, y, z, duration, blendOutDuration, blendInDuration, p6); }
	void SET_GAMEPLAY_COORD_HINT_f(float x, float y, float z, int duration, int blendOutDuration, int blendInDuration, int p6) { FastCall<void>(0x47d53d4c335a85ed, x, y, z, duration, blendOutDuration, blendInDuration, p6); }
	void SET_GAMEPLAY_PED_HINT(Ped ped, float x1, float y1, float z1, BOOL p4, int duration, int blendOutDuration, int blendInDuration) { Call<void>(0xdb9455e443adb313, ped, x1, y1, z1, p4, duration, blendOutDuration, blendInDuration); }
	void SET_GAMEPLAY_PED_HINT_f(Ped ped, float x1, float y1, float z1, BOOL p4, int duration, int blendOutDuration, int blendInDuration) { FastCall<void>(0xdb9455e443adb313, ped, x1, y1, z1, p4, duration, blendOutDuration, blendInDuration); }
	void SET_GAMEPLAY_VEHICLE_HINT(Vehicle vehicle, float offsetX, float offsetY, float offsetZ, BOOL p4, int time, int easeInTime, int easeOutTime) { Call<void>(0xae1069da4ac41916, vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime); }
	void SET_GAMEPLAY_VEHICLE_HINT_f(Vehicle vehicle, float offsetX, float offsetY, float offsetZ, BOOL p4, int time, int easeInTime, int easeOutTime) { FastCall<void>(0xae1069da4ac41916, vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime); }
	void SET_GAMEPLAY_OBJECT_HINT(Object object, float xOffset, float yOffset, float zOffset, BOOL p4, int time, int easeInTime, int easeOutTime) { Call<void>(0xb2f420c958c672cb, object, xOffset, yOffset, zOffset, p4, time, easeInTime, easeOutTime); }
	void SET_GAMEPLAY_OBJECT_HINT_f(Object object, float xOffset, float yOffset, float zOffset, BOOL p4, int time, int easeInTime, int easeOutTime) { FastCall<void>(0xb2f420c958c672cb, object, xOffset, yOffset, zOffset, p4, time, easeInTime, easeOutTime); }
	void SET_GAMEPLAY_ENTITY_HINT(Entity entity, float xOffset, float yOffset, float zOffset, BOOL p4, int time, int easeInTime, int easeOutTime, int p8) { Call<void>(0xb2d82abdf14bf8a7, entity, xOffset, yOffset, zOffset, p4, time, easeInTime, easeOutTime, p8); }
	void SET_GAMEPLAY_ENTITY_HINT_f(Entity entity, float xOffset, float yOffset, float zOffset, BOOL p4, int time, int easeInTime, int easeOutTime, int p8) { FastCall<void>(0xb2d82abdf14bf8a7, entity, xOffset, yOffset, zOffset, p4, time, easeInTime, easeOutTime, p8); }
	BOOL IS_GAMEPLAY_HINT_ACTIVE() { return Call<BOOL>(0xbd16cd19f0c7a71a); }
	BOOL IS_GAMEPLAY_HINT_ACTIVE_f() { return FastCall<BOOL>(0xbd16cd19f0c7a71a); }
	void STOP_GAMEPLAY_HINT(BOOL p0) { Call<void>(0xc775c13aa7df9f83, p0); }
	void STOP_GAMEPLAY_HINT_f(BOOL p0) { FastCall<void>(0xc775c13aa7df9f83, p0); }
	void STOP_GAMEPLAY_HINT_BEING_CANCELLED_THIS_UPDATE(BOOL p0) { Call<void>(0xfd6690b40107ed20, p0); }
	void STOP_GAMEPLAY_HINT_BEING_CANCELLED_THIS_UPDATE_f(BOOL p0) { FastCall<void>(0xfd6690b40107ed20, p0); }
	void STOP_CODE_GAMEPLAY_HINT(BOOL p0) { Call<void>(0xf98a8c5d07b5018b, p0); }
	void STOP_CODE_GAMEPLAY_HINT_f(BOOL p0) { FastCall<void>(0xf98a8c5d07b5018b, p0); }
	BOOL IS_CODE_GAMEPLAY_HINT_ACTIVE() { return Call<BOOL>(0xf326dab370281362); }
	BOOL IS_CODE_GAMEPLAY_HINT_ACTIVE_f() { return FastCall<BOOL>(0xf326dab370281362); }
	void SET_GAMEPLAY_HINT_FOV(float FOV) { Call<void>(0xdb9455b1e8bd1631, FOV); }
	void SET_GAMEPLAY_HINT_FOV_f(float FOV) { FastCall<void>(0xdb9455b1e8bd1631, FOV); }
	void SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR(float value) { Call<void>(0xd75e1521c2e58ee4, value); }
	void SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR_f(float value) { FastCall<void>(0xd75e1521c2e58ee4, value); }
	void SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET(float value) { Call<void>(0xca3b2474e9e06439, value); }
	void SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET_f(float value) { FastCall<void>(0xca3b2474e9e06439, value); }
	void SET_GAMEPLAY_HINT_CAMERA_RELATIVE_SIDE_OFFSET(float xOffset) { Call<void>(0x23a1b44ceba80de6, xOffset); }
	void SET_GAMEPLAY_HINT_CAMERA_RELATIVE_SIDE_OFFSET_f(float xOffset) { FastCall<void>(0x23a1b44ceba80de6, xOffset); }
	void SET_GAMEPLAY_HINT_CAMERA_RELATIVE_VERTICAL_OFFSET(float yOffset) { Call<void>(0xc4a243d776400d67, yOffset); }
	void SET_GAMEPLAY_HINT_CAMERA_RELATIVE_VERTICAL_OFFSET_f(float yOffset) { FastCall<void>(0xc4a243d776400d67, yOffset); }
	void SET_GAMEPLAY_HINT_CAMERA_BLEND_TO_FOLLOW_PED_MEDIUM_VIEW_MODE(BOOL toggle) { Call<void>(0xc9f12c52ac0b9039, toggle); }
	void SET_GAMEPLAY_HINT_CAMERA_BLEND_TO_FOLLOW_PED_MEDIUM_VIEW_MODE_f(BOOL toggle) { FastCall<void>(0xc9f12c52ac0b9039, toggle); }
	void SET_CINEMATIC_BUTTON_ACTIVE(BOOL p0) { Call<void>(0x4591c52475cd4ed4, p0); }
	void SET_CINEMATIC_BUTTON_ACTIVE_f(BOOL p0) { FastCall<void>(0x4591c52475cd4ed4, p0); }
	BOOL IS_CINEMATIC_CAM_RENDERING() { return Call<BOOL>(0xb83dfff1bd158ce5); }
	BOOL IS_CINEMATIC_CAM_RENDERING_f() { return FastCall<BOOL>(0xb83dfff1bd158ce5); }
	void SHAKE_CINEMATIC_CAM(char* shakeType, float amount) { Call<void>(0xe0a4225639bc46b4, shakeType, amount); }
	void SHAKE_CINEMATIC_CAM_f(char* shakeType, float amount) { FastCall<void>(0xe0a4225639bc46b4, shakeType, amount); }
	BOOL IS_CINEMATIC_CAM_SHAKING() { return Call<BOOL>(0x4972e0d552052edc); }
	BOOL IS_CINEMATIC_CAM_SHAKING_f() { return FastCall<BOOL>(0x4972e0d552052edc); }
	void SET_CINEMATIC_CAM_SHAKE_AMPLITUDE(float p0) { Call<void>(0x9577099dad1ceb1b, p0); }
	void SET_CINEMATIC_CAM_SHAKE_AMPLITUDE_f(float p0) { FastCall<void>(0x9577099dad1ceb1b, p0); }
	void STOP_CINEMATIC_CAM_SHAKING(BOOL p0) { Call<void>(0x4d857c1454c8f3b4, p0); }
	void STOP_CINEMATIC_CAM_SHAKING_f(BOOL p0) { FastCall<void>(0x4d857c1454c8f3b4, p0); }
	void DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE() { Call<void>(0x337c00ae4a71347a); }
	void DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE_f() { FastCall<void>(0x337c00ae4a71347a); }
	void DISABLE_CINEMATIC_VEHICLE_IDLE_MODE_THIS_UPDATE() { Call<void>(0xe93f5411893ac5ad); }
	void DISABLE_CINEMATIC_VEHICLE_IDLE_MODE_THIS_UPDATE_f() { FastCall<void>(0xe93f5411893ac5ad); }
	void INVALIDATE_CINEMATIC_VEHICLE_IDLE_MODE() { Call<void>(0x747d41406ce8e8d5); }
	void INVALIDATE_CINEMATIC_VEHICLE_IDLE_MODE_f() { FastCall<void>(0x747d41406ce8e8d5); }
	void INVALIDATE_IDLE_CAM() { Call<void>(0xd55e4a5337af2748); }
	void INVALIDATE_IDLE_CAM_f() { FastCall<void>(0xd55e4a5337af2748); }
	BOOL IS_CINEMATIC_IDLE_CAM_RENDERING() { return Call<BOOL>(0x8db5deecc2dd0348); }
	BOOL IS_CINEMATIC_IDLE_CAM_RENDERING_f() { return FastCall<BOOL>(0x8db5deecc2dd0348); }
	BOOL IS_CINEMATIC_FIRST_PERSON_VEHICLE_INTERIOR_CAM_RENDERING() { return Call<BOOL>(0xdbd7c39ec1e6d524); }
	BOOL IS_CINEMATIC_FIRST_PERSON_VEHICLE_INTERIOR_CAM_RENDERING_f() { return FastCall<BOOL>(0xdbd7c39ec1e6d524); }
	void CREATE_CINEMATIC_SHOT(Hash p0, int time, BOOL p2, Entity entity) { Call<void>(0x3ffae6b5cf3403bf, p0, time, p2, entity); }
	void CREATE_CINEMATIC_SHOT_f(Hash p0, int time, BOOL p2, Entity entity) { FastCall<void>(0x3ffae6b5cf3403bf, p0, time, p2, entity); }
	BOOL IS_CINEMATIC_SHOT_ACTIVE(Hash p0) { return Call<BOOL>(0x49a2219b6f278534, p0); }
	BOOL IS_CINEMATIC_SHOT_ACTIVE_f(Hash p0) { return FastCall<BOOL>(0x49a2219b6f278534, p0); }
	void STOP_CINEMATIC_SHOT(Hash p0) { Call<void>(0x339cdfd8456d6bf9, p0); }
	void STOP_CINEMATIC_SHOT_f(Hash p0) { FastCall<void>(0x339cdfd8456d6bf9, p0); }
	void FORCE_CINEMATIC_RENDERING_THIS_UPDATE(BOOL toggle) { Call<void>(0xc1011e89bebbbe1, toggle); }
	void FORCE_CINEMATIC_RENDERING_THIS_UPDATE_f(BOOL toggle) { FastCall<void>(0xc1011e89bebbbe1, toggle); }
	void SET_CINEMATIC_NEWS_CHANNEL_ACTIVE_THIS_UPDATE() { Call<void>(0x37555eb0ea8ddb7a); }
	void SET_CINEMATIC_NEWS_CHANNEL_ACTIVE_THIS_UPDATE_f() { FastCall<void>(0x37555eb0ea8ddb7a); }
	void SET_CINEMATIC_MODE_ACTIVE(BOOL toggle) { Call<void>(0xcfb5718607f5b83, toggle); }
	void SET_CINEMATIC_MODE_ACTIVE_f(BOOL toggle) { FastCall<void>(0xcfb5718607f5b83, toggle); }
	BOOL IS_IN_VEHICLE_MOBILE_PHONE_CAMERA_RENDERING() { return Call<BOOL>(0x7d7194cb28ea7ac8); }
	BOOL IS_IN_VEHICLE_MOBILE_PHONE_CAMERA_RENDERING_f() { return FastCall<BOOL>(0x7d7194cb28ea7ac8); }
	BOOL DISABLE_CINEMATIC_SLOW_MO_THIS_UPDATE() { return Call<BOOL>(0x2a36f610352e7dd2); }
	BOOL DISABLE_CINEMATIC_SLOW_MO_THIS_UPDATE_f() { return FastCall<BOOL>(0x2a36f610352e7dd2); }
	BOOL IS_BONNET_CINEMATIC_CAM_RENDERING() { return Call<BOOL>(0x13622369c8fb4bac); }
	BOOL IS_BONNET_CINEMATIC_CAM_RENDERING_f() { return FastCall<BOOL>(0x13622369c8fb4bac); }
	BOOL IS_CINEMATIC_CAM_INPUT_ACTIVE() { return Call<BOOL>(0x73e98b345e68a822); }
	BOOL IS_CINEMATIC_CAM_INPUT_ACTIVE_f() { return FastCall<BOOL>(0x73e98b345e68a822); }
	void IGNORE_MENU_PREFERENCE_FOR_BONNET_CAMERA_THIS_UPDATE() { Call<void>(0x78f80af1fae0a30c); }
	void IGNORE_MENU_PREFERENCE_FOR_BONNET_CAMERA_THIS_UPDATE_f() { FastCall<void>(0x78f80af1fae0a30c); }
	void BYPASS_CUTSCENE_CAM_RENDERING_THIS_UPDATE() { Call<void>(0x4f2b46db37c4de9); }
	void BYPASS_CUTSCENE_CAM_RENDERING_THIS_UPDATE_f() { FastCall<void>(0x4f2b46db37c4de9); }
	void STOP_CUTSCENE_CAM_SHAKING(Any p0) { Call<void>(0x32a474d6b7e6687b, p0); }
	void STOP_CUTSCENE_CAM_SHAKING_f(Any p0) { FastCall<void>(0x32a474d6b7e6687b, p0); }
	void SET_CUTSCENE_CAM_FAR_CLIP_THIS_UPDATE(float p0) { Call<void>(0x6d3afd79bb943c4b, p0); }
	void SET_CUTSCENE_CAM_FAR_CLIP_THIS_UPDATE_f(float p0) { FastCall<void>(0x6d3afd79bb943c4b, p0); }
	Ped GET_FOCUS_PED_ON_SCREEN(float p0, int p1, float p2, float p3, float p4, float p5, float p6, int p7, int p8) { return Call<Ped>(0xff8ee827327325ac, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	Ped GET_FOCUS_PED_ON_SCREEN_f(float p0, int p1, float p2, float p3, float p4, float p5, float p6, int p7, int p8) { return FastCall<Ped>(0xff8ee827327325ac, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void DISABLE_NEAR_CLIP_SCAN_THIS_UPDATE() { Call<void>(0xbc66419565e62ed7); }
	void DISABLE_NEAR_CLIP_SCAN_THIS_UPDATE_f() { FastCall<void>(0xbc66419565e62ed7); }
	void SET_CAM_DEATH_FAIL_EFFECT_STATE(int p0) { Call<void>(0x78b66a1cd948ef8c, p0); }
	void SET_CAM_DEATH_FAIL_EFFECT_STATE_f(int p0) { FastCall<void>(0x78b66a1cd948ef8c, p0); }
	void SET_FIRST_PERSON_FLASH_EFFECT_TYPE(Any p0) { Call<void>(0x421427e270a7f33b, p0); }
	void SET_FIRST_PERSON_FLASH_EFFECT_TYPE_f(Any p0) { FastCall<void>(0x421427e270a7f33b, p0); }
	void SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME(char* vehicleName) { Call<void>(0x1fa3a6912e659755, vehicleName); }
	void SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME_f(char* vehicleName) { FastCall<void>(0x1fa3a6912e659755, vehicleName); }
	void SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_HASH(Hash vehicleModel) { Call<void>(0x1fa3a6912e62ddd8, vehicleModel); }
	void SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_HASH_f(Hash vehicleModel) { FastCall<void>(0x1fa3a6912e62ddd8, vehicleModel); }
	BOOL IS_ALLOWED_INDEPENDENT_CAMERA_MODES() { return Call<BOOL>(0x23e058098f166587); }
	BOOL IS_ALLOWED_INDEPENDENT_CAMERA_MODES_f() { return FastCall<BOOL>(0x23e058098f166587); }
	void CAMERA_PREVENT_COLLISION_SETTINGS_FOR_TRIPLEHEAD_IN_INTERIORS_THIS_UPDATE() { Call<void>(0x875307e3d409a551); }
	void CAMERA_PREVENT_COLLISION_SETTINGS_FOR_TRIPLEHEAD_IN_INTERIORS_THIS_UPDATE_f() { FastCall<void>(0x875307e3d409a551); }
	float REPLAY_GET_MAX_DISTANCE_ALLOWED_FROM_PLAYER() { return ToFloat(Call<_float>(0x89e7536d497783f1)); }
	float REPLAY_GET_MAX_DISTANCE_ALLOWED_FROM_PLAYER_f() { return ToFloat(FastCall<_float>(0x89e7536d497783f1)); }
}
namespace CLOCK
{
	void SET_CLOCK_TIME(int hour, int minute, int second) { Call<void>(0xee78f502ab071c9b, hour, minute, second); }
	void SET_CLOCK_TIME_f(int hour, int minute, int second) { FastCall<void>(0xee78f502ab071c9b, hour, minute, second); }
	void PAUSE_CLOCK(BOOL toggle) { Call<void>(0xef52e95ed63c45, toggle); }
	void PAUSE_CLOCK_f(BOOL toggle) { FastCall<void>(0xef52e95ed63c45, toggle); }
	void ADVANCE_CLOCK_TIME_TO(int hour, int minute, int second) { Call<void>(0xa8ab42cbd06584bf, hour, minute, second); }
	void ADVANCE_CLOCK_TIME_TO_f(int hour, int minute, int second) { FastCall<void>(0xa8ab42cbd06584bf, hour, minute, second); }
	void ADD_TO_CLOCK_TIME(int hours, int minutes, int seconds) { Call<void>(0x1496922b58ca3d84, hours, minutes, seconds); }
	void ADD_TO_CLOCK_TIME_f(int hours, int minutes, int seconds) { FastCall<void>(0x1496922b58ca3d84, hours, minutes, seconds); }
	int GET_CLOCK_HOURS() { return Call<int>(0x7828cbda7eed3bd5); }
	int GET_CLOCK_HOURS_f() { return FastCall<int>(0x7828cbda7eed3bd5); }
	int GET_CLOCK_MINUTES() { return Call<int>(0x11253f37766e7425); }
	int GET_CLOCK_MINUTES_f() { return FastCall<int>(0x11253f37766e7425); }
	int GET_CLOCK_SECONDS() { return Call<int>(0x11253f38ac62a1c5); }
	int GET_CLOCK_SECONDS_f() { return FastCall<int>(0x11253f38ac62a1c5); }
	void SET_CLOCK_DATE(int day, int month, int year) { Call<void>(0xee78f502aaffb97c, day, month, year); }
	void SET_CLOCK_DATE_f(int day, int month, int year) { FastCall<void>(0xee78f502aaffb97c, day, month, year); }
	int GET_CLOCK_DAY_OF_WEEK() { return Call<int>(0x716064017d8befff); }
	int GET_CLOCK_DAY_OF_WEEK_f() { return FastCall<int>(0x716064017d8befff); }
	int GET_CLOCK_DAY_OF_MONTH() { return Call<int>(0xbaac1c2e3369d3b5); }
	int GET_CLOCK_DAY_OF_MONTH_f() { return FastCall<int>(0xbaac1c2e3369d3b5); }
	int GET_CLOCK_MONTH() { return Call<int>(0x7828cbda7f339746); }
	int GET_CLOCK_MONTH_f() { return FastCall<int>(0x7828cbda7f339746); }
	int GET_CLOCK_YEAR() { return Call<int>(0xc22592814a3de97); }
	int GET_CLOCK_YEAR_f() { return FastCall<int>(0xc22592814a3de97); }
	int GET_MILLISECONDS_PER_GAME_MINUTE() { return Call<int>(0xb24319a8144fefb); }
	int GET_MILLISECONDS_PER_GAME_MINUTE_f() { return FastCall<int>(0xb24319a8144fefb); }
	void GET_POSIX_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) { Call<void>(0xc2394322c42cbd2, year, month, day, hour, minute, second); }
	void GET_POSIX_TIME_f(int* year, int* month, int* day, int* hour, int* minute, int* second) { FastCall<void>(0xc2394322c42cbd2, year, month, day, hour, minute, second); }
	void GET_UTC_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) { Call<void>(0x19da35d3c26d6791, year, month, day, hour, minute, second); }
	void GET_UTC_TIME_f(int* year, int* month, int* day, int* hour, int* minute, int* second) { FastCall<void>(0x19da35d3c26d6791, year, month, day, hour, minute, second); }
	void GET_LOCAL_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) { Call<void>(0xc23339a215e37ea, year, month, day, hour, minute, second); }
	void GET_LOCAL_TIME_f(int* year, int* month, int* day, int* hour, int* minute, int* second) { FastCall<void>(0xc23339a215e37ea, year, month, day, hour, minute, second); }
}
namespace CUTSCENE
{
	void REQUEST_CUTSCENE(char* cutsceneName, int flags) { Call<void>(0xc106e918fc791f5a, cutsceneName, flags); }
	void REQUEST_CUTSCENE_f(char* cutsceneName, int flags) { FastCall<void>(0xc106e918fc791f5a, cutsceneName, flags); }
	void REQUEST_CUTSCENE_WITH_PLAYBACK_LIST(char* cutsceneName, int playbackFlags, int flags) { Call<void>(0x64c194219e96018e, cutsceneName, playbackFlags, flags); }
	void REQUEST_CUTSCENE_WITH_PLAYBACK_LIST_f(char* cutsceneName, int playbackFlags, int flags) { FastCall<void>(0x64c194219e96018e, cutsceneName, playbackFlags, flags); }
	void REMOVE_CUTSCENE() { Call<void>(0x85fea064fcb7b8e5); }
	void REMOVE_CUTSCENE_f() { FastCall<void>(0x85fea064fcb7b8e5); }
	BOOL HAS_CUTSCENE_LOADED() { return Call<BOOL>(0x6123c769059b0a95); }
	BOOL HAS_CUTSCENE_LOADED_f() { return FastCall<BOOL>(0x6123c769059b0a95); }
	BOOL HAS_THIS_CUTSCENE_LOADED(char* cutsceneName) { return Call<BOOL>(0x50f52092c6b275e, cutsceneName); }
	BOOL HAS_THIS_CUTSCENE_LOADED_f(char* cutsceneName) { return FastCall<BOOL>(0x50f52092c6b275e, cutsceneName); }
	void SET_SCRIPT_CAN_START_CUTSCENE(int threadId) { Call<void>(0xd1b03bffa40cad8d, threadId); }
	void SET_SCRIPT_CAN_START_CUTSCENE_f(int threadId) { FastCall<void>(0xd1b03bffa40cad8d, threadId); }
	BOOL CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY() { return Call<BOOL>(0xa0496c1274c9c2a5); }
	BOOL CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY_f() { return FastCall<BOOL>(0xa0496c1274c9c2a5); }
	BOOL IS_CUTSCENE_PLAYBACK_FLAG_SET(int flag) { return Call<BOOL>(0x26d88503e0842953, flag); }
	BOOL IS_CUTSCENE_PLAYBACK_FLAG_SET_f(int flag) { return FastCall<BOOL>(0x26d88503e0842953, flag); }
	void SET_CUTSCENE_ENTITY_STREAMING_FLAGS(char* cutsceneEntName, int p1, int p2) { Call<void>(0xa6ae36a2757ea026, cutsceneEntName, p1, p2); }
	void SET_CUTSCENE_ENTITY_STREAMING_FLAGS_f(char* cutsceneEntName, int p1, int p2) { FastCall<void>(0xa6ae36a2757ea026, cutsceneEntName, p1, p2); }
	void REQUEST_CUT_FILE(char* cutsceneName) { Call<void>(0xc106e918fd23a549, cutsceneName); }
	void REQUEST_CUT_FILE_f(char* cutsceneName) { FastCall<void>(0xc106e918fd23a549, cutsceneName); }
	BOOL HAS_CUT_FILE_LOADED(char* cutsceneName) { return Call<BOOL>(0x65681ce3c939c9c6, cutsceneName); }
	BOOL HAS_CUT_FILE_LOADED_f(char* cutsceneName) { return FastCall<BOOL>(0x65681ce3c939c9c6, cutsceneName); }
	void REMOVE_CUT_FILE(char* cutsceneName) { Call<void>(0x85fea064fd623ed4, cutsceneName); }
	void REMOVE_CUT_FILE_f(char* cutsceneName) { FastCall<void>(0x85fea064fd623ed4, cutsceneName); }
	int GET_CUT_FILE_CONCAT_COUNT(char* cutsceneName) { return Call<int>(0xc3710d868220a0c1, cutsceneName); }
	int GET_CUT_FILE_CONCAT_COUNT_f(char* cutsceneName) { return FastCall<int>(0xc3710d868220a0c1, cutsceneName); }
	void START_CUTSCENE(int flags) { Call<void>(0x8b98bfbda529aee7, flags); }
	void START_CUTSCENE_f(int flags) { FastCall<void>(0x8b98bfbda529aee7, flags); }
	void START_CUTSCENE_AT_COORDS(float x, float y, float z, int flags) { Call<void>(0xb674dff54c8c7252, x, y, z, flags); }
	void START_CUTSCENE_AT_COORDS_f(float x, float y, float z, int flags) { FastCall<void>(0xb674dff54c8c7252, x, y, z, flags); }
	void STOP_CUTSCENE(BOOL p0) { Call<void>(0xa9d2b2b87e19b327, p0); }
	void STOP_CUTSCENE_f(BOOL p0) { FastCall<void>(0xa9d2b2b87e19b327, p0); }
	void STOP_CUTSCENE_IMMEDIATELY() { Call<void>(0x32b70d6c0410bfc6); }
	void STOP_CUTSCENE_IMMEDIATELY_f() { FastCall<void>(0x32b70d6c0410bfc6); }
	void SET_CUTSCENE_ORIGIN(float x, float y, float z, float p3, int p4) { Call<void>(0x9a58ea13442b237e, x, y, z, p3, p4); }
	void SET_CUTSCENE_ORIGIN_f(float x, float y, float z, float p3, int p4) { FastCall<void>(0x9a58ea13442b237e, x, y, z, p3, p4); }
	void SET_CUTSCENE_ORIGIN_AND_ORIENTATION(float x1, float y1, float z1, float x2, float y2, float z2, int p6) { Call<void>(0xb71c898b32cbc867, x1, y1, z1, x2, y2, z2, p6); }
	void SET_CUTSCENE_ORIGIN_AND_ORIENTATION_f(float x1, float y1, float z1, float x2, float y2, float z2, int p6) { FastCall<void>(0xb71c898b32cbc867, x1, y1, z1, x2, y2, z2, p6); }
	int GET_CUTSCENE_TIME() { return Call<int>(0x1461b438e8bb9919); }
	int GET_CUTSCENE_TIME_f() { return FastCall<int>(0x1461b438e8bb9919); }
	int GET_CUTSCENE_PLAY_TIME() { return Call<int>(0x9ab502e278f222c); }
	int GET_CUTSCENE_PLAY_TIME_f() { return FastCall<int>(0x9ab502e278f222c); }
	int GET_CUTSCENE_TOTAL_DURATION() { return Call<int>(0x8e51d091709db39b); }
	int GET_CUTSCENE_TOTAL_DURATION_f() { return FastCall<int>(0x8e51d091709db39b); }
	int GET_CUTSCENE_END_TIME() { return Call<int>(0xe789a779652efc1d); }
	int GET_CUTSCENE_END_TIME_f() { return FastCall<int>(0xe789a779652efc1d); }
	int GET_CUTSCENE_PLAY_DURATION() { return Call<int>(0xa60db63faec94d73); }
	int GET_CUTSCENE_PLAY_DURATION_f() { return FastCall<int>(0xa60db63faec94d73); }
	BOOL WAS_CUTSCENE_SKIPPED() { return Call<BOOL>(0x54e3feecac306e11); }
	BOOL WAS_CUTSCENE_SKIPPED_f() { return FastCall<BOOL>(0x54e3feecac306e11); }
	BOOL HAS_CUTSCENE_FINISHED() { return Call<BOOL>(0xa74f911674d23302); }
	BOOL HAS_CUTSCENE_FINISHED_f() { return FastCall<BOOL>(0xa74f911674d23302); }
	BOOL IS_CUTSCENE_ACTIVE() { return Call<BOOL>(0x10c0738d3ed8ec46); }
	BOOL IS_CUTSCENE_ACTIVE_f() { return FastCall<BOOL>(0x10c0738d3ed8ec46); }
	BOOL IS_CUTSCENE_PLAYING() { return Call<BOOL>(0x74dfe1dc4190ace); }
	BOOL IS_CUTSCENE_PLAYING_f() { return FastCall<BOOL>(0x74dfe1dc4190ace); }
	int GET_CUTSCENE_SECTION_PLAYING() { return Call<int>(0x436acb77b03682c8); }
	int GET_CUTSCENE_SECTION_PLAYING_f() { return FastCall<int>(0x436acb77b03682c8); }
	Entity GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY(char* cutsceneEntName, Hash modelHash) { return Call<Entity>(0xf6ac1837b9db3c50, cutsceneEntName, modelHash); }
	Entity GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY_f(char* cutsceneEntName, Hash modelHash) { return FastCall<Entity>(0xf6ac1837b9db3c50, cutsceneEntName, modelHash); }
	int GET_CUTSCENE_CONCAT_SECTION_PLAYING() { return Call<int>(0x2fc5b5b48d1f64b5); }
	int GET_CUTSCENE_CONCAT_SECTION_PLAYING_f() { return FastCall<int>(0x2fc5b5b48d1f64b5); }
	BOOL IS_CUTSCENE_AUTHORIZED(char* cutsceneName) { return Call<BOOL>(0xd1568a5412ebadb, cutsceneName); }
	BOOL IS_CUTSCENE_AUTHORIZED_f(char* cutsceneName) { return FastCall<BOOL>(0xd1568a5412ebadb, cutsceneName); }
	int DOES_CUTSCENE_HANDLE_EXIST(int cutsceneHandle) { return Call<int>(0x550fef04cf511f4f, cutsceneHandle); }
	int DOES_CUTSCENE_HANDLE_EXIST_f(int cutsceneHandle) { return FastCall<int>(0x550fef04cf511f4f, cutsceneHandle); }
	void REGISTER_ENTITY_FOR_CUTSCENE(Ped cutscenePed, char* cutsceneEntName, int p2, Hash modelHash, int p4) { Call<void>(0x147b914c60a225a0, cutscenePed, cutsceneEntName, p2, modelHash, p4); }
	void REGISTER_ENTITY_FOR_CUTSCENE_f(Ped cutscenePed, char* cutsceneEntName, int p2, Hash modelHash, int p4) { FastCall<void>(0x147b914c60a225a0, cutscenePed, cutsceneEntName, p2, modelHash, p4); }
	Entity GET_ENTITY_INDEX_OF_REGISTERED_ENTITY(char* cutsceneEntName, Hash modelHash) { return Call<Entity>(0x6f6d65e46871e458, cutsceneEntName, modelHash); }
	Entity GET_ENTITY_INDEX_OF_REGISTERED_ENTITY_f(char* cutsceneEntName, Hash modelHash) { return FastCall<Entity>(0x6f6d65e46871e458, cutsceneEntName, modelHash); }
	void SET_VEHICLE_MODEL_PLAYER_WILL_EXIT_SCENE(Hash modelHash) { Call<void>(0x4e0ed270cc781b60, modelHash); }
	void SET_VEHICLE_MODEL_PLAYER_WILL_EXIT_SCENE_f(Hash modelHash) { FastCall<void>(0x4e0ed270cc781b60, modelHash); }
	void SET_CUTSCENE_TRIGGER_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { Call<void>(0xe77139e3c73abd2c, x1, y1, z1, x2, y2, z2); }
	void SET_CUTSCENE_TRIGGER_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2) { FastCall<void>(0xe77139e3c73abd2c, x1, y1, z1, x2, y2, z2); }
	BOOL CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY(char* cutsceneEntName, Hash modelHash) { return Call<BOOL>(0xe416fd37713fe5c9, cutsceneEntName, modelHash); }
	BOOL CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY_f(char* cutsceneEntName, Hash modelHash) { return FastCall<BOOL>(0xe416fd37713fe5c9, cutsceneEntName, modelHash); }
	BOOL CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY(char* cutsceneEntName, Hash modelHash) { return Call<BOOL>(0x942faa78ed7658c7, cutsceneEntName, modelHash); }
	BOOL CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY_f(char* cutsceneEntName, Hash modelHash) { return FastCall<BOOL>(0x942faa78ed7658c7, cutsceneEntName, modelHash); }
	BOOL CAN_SET_EXIT_STATE_FOR_CAMERA(BOOL p0) { return Call<BOOL>(0x332e7586b9d140fe, p0); }
	BOOL CAN_SET_EXIT_STATE_FOR_CAMERA_f(BOOL p0) { return FastCall<BOOL>(0x332e7586b9d140fe, p0); }
	void SET_PAD_CAN_SHAKE_DURING_CUTSCENE(BOOL toggle) { Call<void>(0xde29ebf21ad4b517, toggle); }
	void SET_PAD_CAN_SHAKE_DURING_CUTSCENE_f(BOOL toggle) { FastCall<void>(0xde29ebf21ad4b517, toggle); }
	void SET_CUTSCENE_FADE_VALUES(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { Call<void>(0x8b6deb38a279b2ed, p0, p1, p2, p3); }
	void SET_CUTSCENE_FADE_VALUES_f(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { FastCall<void>(0x8b6deb38a279b2ed, p0, p1, p2, p3); }
	void SET_CUTSCENE_MULTIHEAD_FADE(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { Call<void>(0xae02560b5a76e4da, p0, p1, p2, p3); }
	void SET_CUTSCENE_MULTIHEAD_FADE_f(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { FastCall<void>(0xae02560b5a76e4da, p0, p1, p2, p3); }
	void SET_CUTSCENE_MULTIHEAD_FADE_MANUAL(BOOL p0) { Call<void>(0x4afc9d333f0eaacb, p0); }
	void SET_CUTSCENE_MULTIHEAD_FADE_MANUAL_f(BOOL p0) { FastCall<void>(0x4afc9d333f0eaacb, p0); }
	BOOL IS_MULTIHEAD_FADE_UP() { return Call<BOOL>(0xf7cff1bce0f87a3); }
	BOOL IS_MULTIHEAD_FADE_UP_f() { return FastCall<BOOL>(0xf7cff1bce0f87a3); }
	void NETWORK_SET_MOCAP_CUTSCENE_CAN_BE_SKIPPED(BOOL p0) { Call<void>(0x18d14aab67192abb, p0); }
	void NETWORK_SET_MOCAP_CUTSCENE_CAN_BE_SKIPPED_f(BOOL p0) { FastCall<void>(0x18d14aab67192abb, p0); }
	void SET_CAR_GENERATORS_CAN_UPDATE_DURING_CUTSCENE(BOOL p0) { Call<void>(0x9e0c274bc7aae158, p0); }
	void SET_CAR_GENERATORS_CAN_UPDATE_DURING_CUTSCENE_f(BOOL p0) { FastCall<void>(0x9e0c274bc7aae158, p0); }
	BOOL CAN_USE_MOBILE_PHONE_DURING_CUTSCENE() { return Call<BOOL>(0xe8e1d3e435ce3581); }
	BOOL CAN_USE_MOBILE_PHONE_DURING_CUTSCENE_f() { return FastCall<BOOL>(0xe8e1d3e435ce3581); }
	void SET_CUTSCENE_CAN_BE_SKIPPED(BOOL p0) { Call<void>(0x9799ed473fc77b5b, p0); }
	void SET_CUTSCENE_CAN_BE_SKIPPED_f(BOOL p0) { FastCall<void>(0x9799ed473fc77b5b, p0); }
	void SET_CAN_DISPLAY_MINIMAP_DURING_CUTSCENE_THIS_UPDATE() { Call<void>(0xc57e681d36bea6b0); }
	void SET_CAN_DISPLAY_MINIMAP_DURING_CUTSCENE_THIS_UPDATE_f() { FastCall<void>(0xc57e681d36bea6b0); }
	void SET_CUTSCENE_PED_COMPONENT_VARIATION(char* cutsceneEntName, int componentId, int drawableId, int textureId, Hash modelHash) { Call<void>(0xd234006bdaff5869, cutsceneEntName, componentId, drawableId, textureId, modelHash); }
	void SET_CUTSCENE_PED_COMPONENT_VARIATION_f(char* cutsceneEntName, int componentId, int drawableId, int textureId, Hash modelHash) { FastCall<void>(0xd234006bdaff5869, cutsceneEntName, componentId, drawableId, textureId, modelHash); }
	void SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(char* cutsceneEntName, Ped ped, Hash modelHash) { Call<void>(0xad3b6bd46ed1cdf0, cutsceneEntName, ped, modelHash); }
	void SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED_f(char* cutsceneEntName, Ped ped, Hash modelHash) { FastCall<void>(0xad3b6bd46ed1cdf0, cutsceneEntName, ped, modelHash); }
	BOOL DOES_CUTSCENE_ENTITY_EXIST(char* cutsceneEntName, Hash modelHash) { return Call<BOOL>(0x54278f9647ee1cca, cutsceneEntName, modelHash); }
	BOOL DOES_CUTSCENE_ENTITY_EXIST_f(char* cutsceneEntName, Hash modelHash) { return FastCall<BOOL>(0x54278f9647ee1cca, cutsceneEntName, modelHash); }
	void SET_CUTSCENE_PED_PROP_VARIATION(char* cutsceneEntName, int componentId, int drawableId, int textureId, Hash modelHash) { Call<void>(0x1a290f31719341bf, cutsceneEntName, componentId, drawableId, textureId, modelHash); }
	void SET_CUTSCENE_PED_PROP_VARIATION_f(char* cutsceneEntName, int componentId, int drawableId, int textureId, Hash modelHash) { FastCall<void>(0x1a290f31719341bf, cutsceneEntName, componentId, drawableId, textureId, modelHash); }
	BOOL HAS_CUTSCENE_CUT_THIS_FRAME() { return Call<BOOL>(0x487fdead2cb14939); }
	BOOL HAS_CUTSCENE_CUT_THIS_FRAME_f() { return FastCall<BOOL>(0x487fdead2cb14939); }
}
namespace DATAFILE
{
	void DATAFILE_WATCH_REQUEST_ID(int requestId) { Call<void>(0x2ba8de769dacbd74, requestId); }
	void DATAFILE_WATCH_REQUEST_ID_f(int requestId) { FastCall<void>(0x2ba8de769dacbd74, requestId); }
	void DATAFILE_CLEAR_WATCH_LIST() { Call<void>(0x87a5c64008351679); }
	void DATAFILE_CLEAR_WATCH_LIST_f() { FastCall<void>(0x87a5c64008351679); }
	BOOL DATAFILE_IS_VALID_REQUEST_ID(int index) { return Call<BOOL>(0x20c6cc376f41a20a, index); }
	BOOL DATAFILE_IS_VALID_REQUEST_ID_f(int index) { return FastCall<BOOL>(0x20c6cc376f41a20a, index); }
	BOOL DATAFILE_HAS_LOADED_FILE_DATA(int requestId) { return Call<BOOL>(0xd237a2a66ac10a71, requestId); }
	BOOL DATAFILE_HAS_LOADED_FILE_DATA_f(int requestId) { return FastCall<BOOL>(0xd237a2a66ac10a71, requestId); }
	BOOL DATAFILE_HAS_VALID_FILE_DATA(int requestId) { return Call<BOOL>(0xf4f4eefebf59568c, requestId); }
	BOOL DATAFILE_HAS_VALID_FILE_DATA_f(int requestId) { return FastCall<BOOL>(0xf4f4eefebf59568c, requestId); }
	BOOL DATAFILE_SELECT_ACTIVE_FILE(int requestId, Any p1) { return Call<BOOL>(0x154a686758cc3d0b, requestId, p1); }
	BOOL DATAFILE_SELECT_ACTIVE_FILE_f(int requestId, Any p1) { return FastCall<BOOL>(0x154a686758cc3d0b, requestId, p1); }
	BOOL DATAFILE_DELETE_REQUESTED_FILE(int requestId) { return Call<BOOL>(0x6db67cb0d66c5988, requestId); }
	BOOL DATAFILE_DELETE_REQUESTED_FILE_f(int requestId) { return FastCall<BOOL>(0x6db67cb0d66c5988, requestId); }
	BOOL UGC_CREATE_CONTENT(Any* data, int dataCount, char* contentName, char* description, char* tagsCsv, char* contentTypeName, BOOL publish, Any p7) { return Call<BOOL>(0xaf1f0fc977ba6624, data, dataCount, contentName, description, tagsCsv, contentTypeName, publish, p7); }
	BOOL UGC_CREATE_CONTENT_f(Any* data, int dataCount, char* contentName, char* description, char* tagsCsv, char* contentTypeName, BOOL publish, Any p7) { return FastCall<BOOL>(0xaf1f0fc977ba6624, data, dataCount, contentName, description, tagsCsv, contentTypeName, publish, p7); }
	BOOL UGC_CREATE_MISSION(char* contentName, char* description, char* tagsCsv, char* contentTypeName, BOOL publish, Any p5) { return Call<BOOL>(0xaf1f0fcb7ec1b337, contentName, description, tagsCsv, contentTypeName, publish, p5); }
	BOOL UGC_CREATE_MISSION_f(char* contentName, char* description, char* tagsCsv, char* contentTypeName, BOOL publish, Any p5) { return FastCall<BOOL>(0xaf1f0fcb7ec1b337, contentName, description, tagsCsv, contentTypeName, publish, p5); }
	BOOL UGC_UPDATE_CONTENT(char* contentId, Any* data, int dataCount, char* contentName, char* description, char* tagsCsv, char* contentTypeName, Any p7) { return Call<BOOL>(0x6c6a066f749ae0f1, contentId, data, dataCount, contentName, description, tagsCsv, contentTypeName, p7); }
	BOOL UGC_UPDATE_CONTENT_f(char* contentId, Any* data, int dataCount, char* contentName, char* description, char* tagsCsv, char* contentTypeName, Any p7) { return FastCall<BOOL>(0x6c6a066f749ae0f1, contentId, data, dataCount, contentName, description, tagsCsv, contentTypeName, p7); }
	BOOL UGC_UPDATE_MISSION(char* contentId, char* contentName, char* description, char* tagsCsv, char* contentTypeName, Any p5) { return Call<BOOL>(0x6c6a06717ba22e04, contentId, contentName, description, tagsCsv, contentTypeName, p5); }
	BOOL UGC_UPDATE_MISSION_f(char* contentId, char* contentName, char* description, char* tagsCsv, char* contentTypeName, Any p5) { return FastCall<BOOL>(0x6c6a06717ba22e04, contentId, contentName, description, tagsCsv, contentTypeName, p5); }
	BOOL UGC_SET_PLAYER_DATA(char* contentId, float rating, char* contentTypeName, Any p3) { return Call<BOOL>(0x3961038163b81d7d, contentId, rating, contentTypeName, p3); }
	BOOL UGC_SET_PLAYER_DATA_f(char* contentId, float rating, char* contentTypeName, Any p3) { return FastCall<BOOL>(0x3961038163b81d7d, contentId, rating, contentTypeName, p3); }
	BOOL DATAFILE_SELECT_UGC_DATA(int p0, Any p1) { return Call<BOOL>(0xe3bcd93e93224502, p0, p1); }
	BOOL DATAFILE_SELECT_UGC_DATA_f(int p0, Any p1) { return FastCall<BOOL>(0xe3bcd93e93224502, p0, p1); }
	BOOL DATAFILE_SELECT_UGC_STATS(int p0, BOOL p1, Any p2) { return Call<BOOL>(0x93de4e93d2021a27, p0, p1, p2); }
	BOOL DATAFILE_SELECT_UGC_STATS_f(int p0, BOOL p1, Any p2) { return FastCall<BOOL>(0x93de4e93d2021a27, p0, p1, p2); }
	BOOL DATAFILE_SELECT_UGC_PLAYER_DATA(int p0, Any p1) { return Call<BOOL>(0x66fba3888cb6a5f0, p0, p1); }
	BOOL DATAFILE_SELECT_UGC_PLAYER_DATA_f(int p0, Any p1) { return FastCall<BOOL>(0x66fba3888cb6a5f0, p0, p1); }
	BOOL DATAFILE_SELECT_CREATOR_STATS(int p0, Any p1) { return Call<BOOL>(0x74c33f0ad397302, p0, p1); }
	BOOL DATAFILE_SELECT_CREATOR_STATS_f(int p0, Any p1) { return FastCall<BOOL>(0x74c33f0ad397302, p0, p1); }
	BOOL DATAFILE_LOAD_OFFLINE_UGC(char* filename, Any p1) { return Call<BOOL>(0xf8da6e53115d6c95, filename, p1); }
	BOOL DATAFILE_LOAD_OFFLINE_UGC_f(char* filename, Any p1) { return FastCall<BOOL>(0xf8da6e53115d6c95, filename, p1); }
	void DATAFILE_CREATE(int p0) { Call<void>(0x80bbfb8ea964b35, p0); }
	void DATAFILE_CREATE_f(int p0) { FastCall<void>(0x80bbfb8ea964b35, p0); }
	void DATAFILE_DELETE(int p0) { Call<void>(0x80bbfb8eb972fe4, p0); }
	void DATAFILE_DELETE_f(int p0) { FastCall<void>(0x80bbfb8eb972fe4, p0); }
	void DATAFILE_STORE_MISSION_HEADER(int p0) { Call<void>(0xd262c68d7e81a677, p0); }
	void DATAFILE_STORE_MISSION_HEADER_f(int p0) { FastCall<void>(0xd262c68d7e81a677, p0); }
	void DATAFILE_FLUSH_MISSION_HEADER() { Call<void>(0x323a7e87dec179f4); }
	void DATAFILE_FLUSH_MISSION_HEADER_f() { FastCall<void>(0x323a7e87dec179f4); }
	Any* DATAFILE_GET_FILE_DICT(int p0) { return Call<Any*>(0x95f0858cfdaf6677, p0); }
	Any* DATAFILE_GET_FILE_DICT_f(int p0) { return FastCall<Any*>(0x95f0858cfdaf6677, p0); }
	BOOL DATAFILE_START_SAVE_TO_CLOUD(char* filename, Any p1) { return Call<BOOL>(0x8f10ecc87bf910fd, filename, p1); }
	BOOL DATAFILE_START_SAVE_TO_CLOUD_f(char* filename, Any p1) { return FastCall<BOOL>(0x8f10ecc87bf910fd, filename, p1); }
	BOOL DATAFILE_UPDATE_SAVE_TO_CLOUD(BOOL* p0) { return Call<BOOL>(0x58a38bbf82e66956, p0); }
	BOOL DATAFILE_UPDATE_SAVE_TO_CLOUD_f(BOOL* p0) { return FastCall<BOOL>(0x58a38bbf82e66956, p0); }
	BOOL DATAFILE_IS_SAVE_PENDING() { return Call<BOOL>(0xe95459d52755f791); }
	BOOL DATAFILE_IS_SAVE_PENDING_f() { return FastCall<BOOL>(0xe95459d52755f791); }
	BOOL DATAFILE_LOAD_OFFLINE_UGC_FOR_ADDITIONAL_DATA_FILE(Any p0, Any p1) { return Call<BOOL>(0x8b7ba388afd45919, p0, p1); }
	BOOL DATAFILE_LOAD_OFFLINE_UGC_FOR_ADDITIONAL_DATA_FILE_f(Any p0, Any p1) { return FastCall<BOOL>(0x8b7ba388afd45919, p0, p1); }
	void DATAFILE_DELETE_FOR_ADDITIONAL_DATA_FILE(Any p0) { Call<void>(0x14ccb39fb41c9caa, p0); }
	void DATAFILE_DELETE_FOR_ADDITIONAL_DATA_FILE_f(Any p0) { FastCall<void>(0x14ccb39fb41c9caa, p0); }
	Any* DATAFILE_GET_FILE_DICT_FOR_ADDITIONAL_DATA_FILE(Any p0) { return Call<Any*>(0x25dd2e939457e177, p0); }
	Any* DATAFILE_GET_FILE_DICT_FOR_ADDITIONAL_DATA_FILE_f(Any p0) { return FastCall<Any*>(0x25dd2e939457e177, p0); }
	void DATADICT_SET_BOOL(Any* objectData, char* key, BOOL value) { Call<void>(0x1e253af6bf06dbc6, objectData, key, value); }
	void DATADICT_SET_BOOL_f(Any* objectData, char* key, BOOL value) { FastCall<void>(0x1e253af6bf06dbc6, objectData, key, value); }
	void DATADICT_SET_INT(Any* objectData, char* key, int value) { Call<void>(0xf8b6e0deab52e773, objectData, key, value); }
	void DATADICT_SET_INT_f(Any* objectData, char* key, int value) { FastCall<void>(0xf8b6e0deab52e773, objectData, key, value); }
	void DATADICT_SET_FLOAT(Any* objectData, char* key, float value) { Call<void>(0xa68223e1220b9ce0, objectData, key, value); }
	void DATADICT_SET_FLOAT_f(Any* objectData, char* key, float value) { FastCall<void>(0xa68223e1220b9ce0, objectData, key, value); }
	void DATADICT_SET_STRING(Any* objectData, char* key, char* value) { Call<void>(0x29c25843360935ed, objectData, key, value); }
	void DATADICT_SET_STRING_f(Any* objectData, char* key, char* value) { FastCall<void>(0x29c25843360935ed, objectData, key, value); }
	void DATADICT_SET_VECTOR(Any* objectData, char* key, float valueX, float valueY, float valueZ) { Call<void>(0x29c258433a4db71f, objectData, key, valueX, valueY, valueZ); }
	void DATADICT_SET_VECTOR_f(Any* objectData, char* key, float valueX, float valueY, float valueZ) { FastCall<void>(0x29c258433a4db71f, objectData, key, valueX, valueY, valueZ); }
	Any* DATADICT_CREATE_DICT(Any* objectData, char* key) { return Call<Any*>(0xe5b4532e429b9ba, objectData, key); }
	Any* DATADICT_CREATE_DICT_f(Any* objectData, char* key) { return FastCall<Any*>(0xe5b4532e429b9ba, objectData, key); }
	Any* DATADICT_CREATE_ARRAY(Any* objectData, char* key) { return Call<Any*>(0xbd0d6129a0e784b5, objectData, key); }
	Any* DATADICT_CREATE_ARRAY_f(Any* objectData, char* key) { return FastCall<Any*>(0xbd0d6129a0e784b5, objectData, key); }
	BOOL DATADICT_GET_BOOL(Any* objectData, char* key) { return Call<BOOL>(0x1e253aa9e078c152, objectData, key); }
	BOOL DATADICT_GET_BOOL_f(Any* objectData, char* key) { return FastCall<BOOL>(0x1e253aa9e078c152, objectData, key); }
	int DATADICT_GET_INT(Any* objectData, char* key) { return Call<int>(0xf8b6e0dc30882067, objectData, key); }
	int DATADICT_GET_INT_f(Any* objectData, char* key) { return FastCall<int>(0xf8b6e0dc30882067, objectData, key); }
	float DATADICT_GET_FLOAT(Any* objectData, char* key) { return ToFloat(Call<_float>(0xa6821a922ed668d4, objectData, key)); }
	float DATADICT_GET_FLOAT_f(Any* objectData, char* key) { return ToFloat(FastCall<_float>(0xa6821a922ed668d4, objectData, key)); }
	const char* DATADICT_GET_STRING(Any* objectData, char* key) { return Call<char*>(0x29c137b3c297e879, objectData, key); }
	const char* DATADICT_GET_STRING_f(Any* objectData, char* key) { return FastCall<char*>(0x29c137b3c297e879, objectData, key); }
	Vector3* DATADICT_GET_VECTOR(Any* objectData, char* key) { Call<Vector3*>(0x29c137b3c6dc69ab, objectData, key); return GetVector(); }
	Any* DATADICT_GET_DICT(Any* objectData, char* key) { return Call<Any*>(0x1e253aa9e079921e, objectData, key); }
	Any* DATADICT_GET_DICT_f(Any* objectData, char* key) { return FastCall<Any*>(0x1e253aa9e079921e, objectData, key); }
	Any* DATADICT_GET_ARRAY(Any* objectData, char* key) { return Call<Any*>(0xa6821a922e92b8d1, objectData, key); }
	Any* DATADICT_GET_ARRAY_f(Any* objectData, char* key) { return FastCall<Any*>(0xa6821a922e92b8d1, objectData, key); }
	int DATADICT_GET_TYPE(Any* objectData, char* key) { return Call<int>(0x1e253aa9e08115a2, objectData, key); }
	int DATADICT_GET_TYPE_f(Any* objectData, char* key) { return FastCall<int>(0x1e253aa9e08115a2, objectData, key); }
	void DATAARRAY_ADD_BOOL(Any* arrayData, BOOL value) { Call<void>(0x155fbb9c6459f558, arrayData, value); }
	void DATAARRAY_ADD_BOOL_f(Any* arrayData, BOOL value) { FastCall<void>(0x155fbb9c6459f558, arrayData, value); }
	void DATAARRAY_ADD_INT(Any* arrayData, int value) { Call<void>(0xb081ec454d53a1, arrayData, value); }
	void DATAARRAY_ADD_INT_f(Any* arrayData, int value) { FastCall<void>(0xb081ec454d53a1, arrayData, value); }
	void DATAARRAY_ADD_FLOAT(Any* arrayData, float value) { Call<void>(0x9697b7f0271bb58e, arrayData, value); }
	void DATAARRAY_ADD_FLOAT_f(Any* arrayData, float value) { FastCall<void>(0x9697b7f0271bb58e, arrayData, value); }
	void DATAARRAY_ADD_STRING(Any* arrayData, char* value) { Call<void>(0x3c5f4614d2fc32ff, arrayData, value); }
	void DATAARRAY_ADD_STRING_f(Any* arrayData, char* value) { FastCall<void>(0x3c5f4614d2fc32ff, arrayData, value); }
	void DATAARRAY_ADD_VECTOR(Any* arrayData, float valueX, float valueY, float valueZ) { Call<void>(0x3c5f4614d740b431, arrayData, valueX, valueY, valueZ); }
	void DATAARRAY_ADD_VECTOR_f(Any* arrayData, float valueX, float valueY, float valueZ) { FastCall<void>(0x3c5f4614d740b431, arrayData, valueX, valueY, valueZ); }
	Any* DATAARRAY_ADD_DICT(Any* arrayData) { return Call<Any*>(0x155fbb9c645ac624, arrayData); }
	Any* DATAARRAY_ADD_DICT_f(Any* arrayData) { return FastCall<Any*>(0x155fbb9c645ac624, arrayData); }
	BOOL DATAARRAY_GET_BOOL(Any* arrayData, int arrayIndex) { return Call<BOOL>(0x155fbbc323d4c7c3, arrayData, arrayIndex); }
	BOOL DATAARRAY_GET_BOOL_f(Any* arrayData, int arrayIndex) { return FastCall<BOOL>(0x155fbbc323d4c7c3, arrayData, arrayIndex); }
	int DATAARRAY_GET_INT(Any* arrayData, int arrayIndex) { return Call<int>(0xb081ed854907d6, arrayData, arrayIndex); }
	int DATAARRAY_GET_INT_f(Any* arrayData, int arrayIndex) { return FastCall<int>(0xb081ed854907d6, arrayData, arrayIndex); }
	float DATAARRAY_GET_FLOAT(Any* arrayData, int arrayIndex) { return ToFloat(Call<_float>(0x9697bca156fb3083, arrayData, arrayIndex)); }
	float DATAARRAY_GET_FLOAT_f(Any* arrayData, int arrayIndex) { return ToFloat(FastCall<_float>(0x9697bca156fb3083, arrayData, arrayIndex)); }
	const char* DATAARRAY_GET_STRING(Any* arrayData, int arrayIndex) { return Call<char*>(0x3c5fd7899f0c16aa, arrayData, arrayIndex); }
	const char* DATAARRAY_GET_STRING_f(Any* arrayData, int arrayIndex) { return FastCall<char*>(0x3c5fd7899f0c16aa, arrayData, arrayIndex); }
	Vector3* DATAARRAY_GET_VECTOR(Any* arrayData, int arrayIndex) { Call<Vector3*>(0x3c5fd789a35097dc, arrayData, arrayIndex); return GetVector(); }
	Any* DATAARRAY_GET_DICT(Any* arrayData, int arrayIndex) { return Call<Any*>(0x155fbbc323d5988f, arrayData, arrayIndex); }
	Any* DATAARRAY_GET_DICT_f(Any* arrayData, int arrayIndex) { return FastCall<Any*>(0x155fbbc323d5988f, arrayData, arrayIndex); }
	int DATAARRAY_GET_COUNT(Any* arrayData) { return Call<int>(0x9697bca156d25f36, arrayData); }
	int DATAARRAY_GET_COUNT_f(Any* arrayData) { return FastCall<int>(0x9697bca156d25f36, arrayData); }
	int DATAARRAY_GET_TYPE(Any* arrayData, int arrayIndex) { return Call<int>(0x155fbbc323dd1c13, arrayData, arrayIndex); }
	int DATAARRAY_GET_TYPE_f(Any* arrayData, int arrayIndex) { return FastCall<int>(0x155fbbc323dd1c13, arrayData, arrayIndex); }
}
namespace DECORATOR
{
	BOOL DECOR_SET_TIME(Entity entity, char* propertyName, int timestamp) { return Call<BOOL>(0xd60ffb207ffca64, entity, propertyName, timestamp); }
	BOOL DECOR_SET_TIME_f(Entity entity, char* propertyName, int timestamp) { return FastCall<BOOL>(0xd60ffb207ffca64, entity, propertyName, timestamp); }
	BOOL DECOR_SET_BOOL(Entity entity, char* propertyName, BOOL value) { return Call<BOOL>(0xd60ffb207f7b281, entity, propertyName, value); }
	BOOL DECOR_SET_BOOL_f(Entity entity, char* propertyName, BOOL value) { return FastCall<BOOL>(0xd60ffb207f7b281, entity, propertyName, value); }
	BOOL DECOR_SET_FLOAT(Entity entity, char* propertyName, float value) { return Call<BOOL>(0x9ebef68ef7359d85, entity, propertyName, value); }
	BOOL DECOR_SET_FLOAT_f(Entity entity, char* propertyName, float value) { return FastCall<BOOL>(0x9ebef68ef7359d85, entity, propertyName, value); }
	BOOL DECOR_SET_INT(Entity entity, char* propertyName, int value) { return Call<BOOL>(0x6e7bdc73decd58, entity, propertyName, value); }
	BOOL DECOR_SET_INT_f(Entity entity, char* propertyName, int value) { return FastCall<BOOL>(0x6e7bdc73decd58, entity, propertyName, value); }
	BOOL DECOR_GET_BOOL(Entity entity, char* propertyName) { return Call<BOOL>(0xd60ff652969980d, entity, propertyName); }
	BOOL DECOR_GET_BOOL_f(Entity entity, char* propertyName) { return FastCall<BOOL>(0xd60ff652969980d, entity, propertyName); }
	float DECOR_GET_FLOAT(Entity entity, char* propertyName) { return ToFloat(Call<_float>(0x9ebeed4004006979, entity, propertyName)); }
	float DECOR_GET_FLOAT_f(Entity entity, char* propertyName) { return ToFloat(FastCall<_float>(0x9ebeed4004006979, entity, propertyName)); }
	int DECOR_GET_INT(Entity entity, char* propertyName) { return Call<int>(0x6e7bd9f914064c, entity, propertyName); }
	int DECOR_GET_INT_f(Entity entity, char* propertyName) { return FastCall<int>(0x6e7bd9f914064c, entity, propertyName); }
	BOOL DECOR_EXIST_ON(Entity entity, char* propertyName) { return Call<BOOL>(0xd60ff5c3357a601, entity, propertyName); }
	BOOL DECOR_EXIST_ON_f(Entity entity, char* propertyName) { return FastCall<BOOL>(0xd60ff5c3357a601, entity, propertyName); }
	BOOL DECOR_REMOVE(Entity entity, char* propertyName) { return Call<BOOL>(0x18c9c1ee549940be, entity, propertyName); }
	BOOL DECOR_REMOVE_f(Entity entity, char* propertyName) { return FastCall<BOOL>(0x18c9c1ee549940be, entity, propertyName); }
	void DECOR_REGISTER(char* propertyName, int type) { Call<void>(0xd60ffab88b94c5d, propertyName, type); }
	void DECOR_REGISTER_f(char* propertyName, int type) { FastCall<void>(0xd60ffab88b94c5d, propertyName, type); }
	BOOL DECOR_IS_REGISTERED_AS_TYPE(char* propertyName, int type) { return Call<BOOL>(0x19e5aa1bb6a3d025, propertyName, type); }
	BOOL DECOR_IS_REGISTERED_AS_TYPE_f(char* propertyName, int type) { return FastCall<BOOL>(0x19e5aa1bb6a3d025, propertyName, type); }
	void DECOR_REGISTER_LOCK() { Call<void>(0x971c627c57475bcd); }
	void DECOR_REGISTER_LOCK_f() { FastCall<void>(0x971c627c57475bcd); }
}
namespace DLC
{
	BOOL ARE_ANY_CCS_PENDING() { return Call<BOOL>(0xb3b4850b9299932d); }
	BOOL ARE_ANY_CCS_PENDING_f() { return FastCall<BOOL>(0xb3b4850b9299932d); }
	BOOL IS_DLC_PRESENT(Hash dlcHash) { return Call<BOOL>(0x4e775f531c7ec182, dlcHash); }
	BOOL IS_DLC_PRESENT_f(Hash dlcHash) { return FastCall<BOOL>(0x4e775f531c7ec182, dlcHash); }
	BOOL DLC_CHECK_CLOUD_DATA_CORRECT() { return Call<BOOL>(0xfda0b692037eaa5a); }
	BOOL DLC_CHECK_CLOUD_DATA_CORRECT_f() { return FastCall<BOOL>(0xfda0b692037eaa5a); }
	int GET_EXTRACONTENT_CLOUD_RESULT() { return Call<int>(0x62efa8019cd57bd4); }
	int GET_EXTRACONTENT_CLOUD_RESULT_f() { return FastCall<int>(0x62efa8019cd57bd4); }
	BOOL DLC_CHECK_COMPAT_PACK_CONFIGURATION() { return Call<BOOL>(0x37e68b14beeb38f2); }
	BOOL DLC_CHECK_COMPAT_PACK_CONFIGURATION_f() { return FastCall<BOOL>(0x37e68b14beeb38f2); }
	BOOL GET_EVER_HAD_BAD_PACK_ORDER() { return Call<BOOL>(0xd9931e3fd339412e); }
	BOOL GET_EVER_HAD_BAD_PACK_ORDER_f() { return FastCall<BOOL>(0xd9931e3fd339412e); }
	BOOL GET_IS_LOADING_SCREEN_ACTIVE() { return Call<BOOL>(0x71fd41de6de25fea); }
	BOOL GET_IS_LOADING_SCREEN_ACTIVE_f() { return FastCall<BOOL>(0x71fd41de6de25fea); }
	BOOL GET_IS_INITIAL_LOADING_SCREEN_ACTIVE() { return Call<BOOL>(0x8626cd7701d5fd0f); }
	BOOL GET_IS_INITIAL_LOADING_SCREEN_ACTIVE_f() { return FastCall<BOOL>(0x8626cd7701d5fd0f); }
	BOOL HAS_CLOUD_REQUESTS_FINISHED(BOOL* p0, int unused) { return Call<BOOL>(0x98e96706a3ad301e, p0, unused); }
	BOOL HAS_CLOUD_REQUESTS_FINISHED_f(BOOL* p0, int unused) { return FastCall<BOOL>(0x98e96706a3ad301e, p0, unused); }
	void ON_ENTER_SP() { Call<void>(0xeda97c177a17a4); }
	void ON_ENTER_SP_f() { FastCall<void>(0xeda97c177a17a4); }
	void ON_ENTER_MP() { Call<void>(0xeda97c177a16ea); }
	void ON_ENTER_MP_f() { FastCall<void>(0xeda97c177a16ea); }
}
namespace ENTITY
{
	BOOL DOES_ENTITY_EXIST(Entity entity) { return Call<BOOL>(0x57deb36dfef9d381, entity); }
	BOOL DOES_ENTITY_EXIST_f(Entity entity) { return FastCall<BOOL>(0x57deb36dfef9d381, entity); }
	BOOL DOES_ENTITY_BELONG_TO_THIS_SCRIPT(Entity entity, BOOL p1) { return Call<BOOL>(0x9f7bf7bfe29e3d72, entity, p1); }
	BOOL DOES_ENTITY_BELONG_TO_THIS_SCRIPT_f(Entity entity, BOOL p1) { return FastCall<BOOL>(0x9f7bf7bfe29e3d72, entity, p1); }
	BOOL DOES_ENTITY_HAVE_DRAWABLE(Entity entity) { return Call<BOOL>(0x76588d1ebe72143f, entity); }
	BOOL DOES_ENTITY_HAVE_DRAWABLE_f(Entity entity) { return FastCall<BOOL>(0x76588d1ebe72143f, entity); }
	BOOL DOES_ENTITY_HAVE_PHYSICS(Entity entity) { return Call<BOOL>(0xc1c0cac158695666, entity); }
	BOOL DOES_ENTITY_HAVE_PHYSICS_f(Entity entity) { return FastCall<BOOL>(0xc1c0cac158695666, entity); }
	BOOL DOES_ENTITY_HAVE_SKELETON(Entity entity) { return Call<BOOL>(0x76588d7d68928bee, entity); }
	BOOL DOES_ENTITY_HAVE_SKELETON_f(Entity entity) { return FastCall<BOOL>(0x76588d7d68928bee, entity); }
	BOOL DOES_ENTITY_HAVE_ANIM_DIRECTOR(Entity entity) { return Call<BOOL>(0x6e504a9ee262f6f9, entity); }
	BOOL DOES_ENTITY_HAVE_ANIM_DIRECTOR_f(Entity entity) { return FastCall<BOOL>(0x6e504a9ee262f6f9, entity); }
	BOOL HAS_ENTITY_ANIM_FINISHED(Entity entity, char* animDict, char* animName, int p3) { return Call<BOOL>(0x478e23458f074029, entity, animDict, animName, p3); }
	BOOL HAS_ENTITY_ANIM_FINISHED_f(Entity entity, char* animDict, char* animName, int p3) { return FastCall<BOOL>(0x478e23458f074029, entity, animDict, animName, p3); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(Entity entity) { return Call<BOOL>(0x4b624374552f0774, entity); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT_f(Entity entity) { return FastCall<BOOL>(0x4b624374552f0774, entity); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(Entity entity) { return Call<BOOL>(0x37730e393ddb8da, entity); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED_f(Entity entity) { return FastCall<BOOL>(0x37730e393ddb8da, entity); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(Entity entity) { return Call<BOOL>(0x20e62b17c801b177, entity); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE_f(Entity entity) { return FastCall<BOOL>(0x20e62b17c801b177, entity); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(Entity entity1, Entity entity2, BOOL p2) { return Call<BOOL>(0x9d03d8496eaea745, entity1, entity2, p2); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY_f(Entity entity1, Entity entity2, BOOL p2) { return FastCall<BOOL>(0x9d03d8496eaea745, entity1, entity2, p2); }
	BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY(Entity entity1, Entity entity2, int traceType) { return Call<BOOL>(0xea53aa61d8c337cf, entity1, entity2, traceType); }
	BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY_f(Entity entity1, Entity entity2, int traceType) { return FastCall<BOOL>(0xea53aa61d8c337cf, entity1, entity2, traceType); }
	BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY_ADJUST_FOR_COVER(Entity entity1, Entity entity2, int traceType) { return Call<BOOL>(0xff90748b6fe80e41, entity1, entity2, traceType); }
	BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY_ADJUST_FOR_COVER_f(Entity entity1, Entity entity2, int traceType) { return FastCall<BOOL>(0xff90748b6fe80e41, entity1, entity2, traceType); }
	BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT(Entity entity1, Entity entity2) { return Call<BOOL>(0xc476ccde0a2b74df, entity1, entity2); }
	BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT_f(Entity entity1, Entity entity2) { return FastCall<BOOL>(0xc476ccde0a2b74df, entity1, entity2); }
	BOOL HAS_ENTITY_COLLIDED_WITH_ANYTHING(Entity entity) { return Call<BOOL>(0x76a143242ebe7219, entity); }
	BOOL HAS_ENTITY_COLLIDED_WITH_ANYTHING_f(Entity entity) { return FastCall<BOOL>(0x76a143242ebe7219, entity); }
	Entity _GET_LAST_ENTITY_HIT_BY_ENTITY(Entity entity) { return Call<Entity>(0x2b66cc921becd9e4, entity); }
	Entity _GET_LAST_ENTITY_HIT_BY_ENTITY_f(Entity entity) { return FastCall<Entity>(0x2b66cc921becd9e4, entity); }
	Hash GET_LAST_MATERIAL_HIT_BY_ENTITY(Entity entity) { return Call<Hash>(0x7c00ee7287cc9027, entity); }
	Hash GET_LAST_MATERIAL_HIT_BY_ENTITY_f(Entity entity) { return FastCall<Hash>(0x7c00ee7287cc9027, entity); }
	Vector3* GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY(Entity entity) { Call<Vector3*>(0x310ffddf153ef4c8, entity); return GetVector(); }
	void FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(Entity entity) { Call<void>(0xa185c3f91a1e52db, entity); }
	void FORCE_ENTITY_AI_AND_ANIMATION_UPDATE_f(Entity entity) { FastCall<void>(0xa185c3f91a1e52db, entity); }
	float GET_ENTITY_ANIM_CURRENT_TIME(Entity entity, char* animDict, char* animName) { return ToFloat(Call<_float>(0x9ce7f673c77814ee, entity, animDict, animName)); }
	float GET_ENTITY_ANIM_CURRENT_TIME_f(Entity entity, char* animDict, char* animName) { return ToFloat(FastCall<_float>(0x9ce7f673c77814ee, entity, animDict, animName)); }
	float GET_ENTITY_ANIM_TOTAL_TIME(Entity entity, char* animDict, char* animName) { return ToFloat(Call<_float>(0xad52893e882e64c3, entity, animDict, animName)); }
	float GET_ENTITY_ANIM_TOTAL_TIME_f(Entity entity, char* animDict, char* animName) { return ToFloat(FastCall<_float>(0xad52893e882e64c3, entity, animDict, animName)); }
	float GET_ANIM_DURATION(char* animDict, char* animName) { return ToFloat(Call<_float>(0xfbeca1560cbc86b9, animDict, animName)); }
	float GET_ANIM_DURATION_f(char* animDict, char* animName) { return ToFloat(FastCall<_float>(0xfbeca1560cbc86b9, animDict, animName)); }
	Entity GET_ENTITY_ATTACHED_TO(Entity entity) { return Call<Entity>(0xd4f68b1a713d7443, entity); }
	Entity GET_ENTITY_ATTACHED_TO_f(Entity entity) { return FastCall<Entity>(0xd4f68b1a713d7443, entity); }
	Vector3* GET_ENTITY_COORDS(Entity entity, BOOL alive) { Call<Vector3*>(0x27c59d967a2736b1, entity, alive); return GetVector(); }
	Vector3* GET_ENTITY_FORWARD_VECTOR(Entity entity) { Call<Vector3*>(0x25b8052d59d3bbb0, entity); return GetVector(); }
	float GET_ENTITY_FORWARD_X(Entity entity) { return ToFloat(Call<_float>(0x4dbdac857d3409cb, entity)); }
	float GET_ENTITY_FORWARD_X_f(Entity entity) { return ToFloat(FastCall<_float>(0x4dbdac857d3409cb, entity)); }
	float GET_ENTITY_FORWARD_Y(Entity entity) { return ToFloat(Call<_float>(0x4dbdac857d3409cc, entity)); }
	float GET_ENTITY_FORWARD_Y_f(Entity entity) { return ToFloat(FastCall<_float>(0x4dbdac857d3409cc, entity)); }
	float GET_ENTITY_HEADING(Entity entity) { return ToFloat(Call<_float>(0xd0ee1539c162bdaf, entity)); }
	float GET_ENTITY_HEADING_f(Entity entity) { return ToFloat(FastCall<_float>(0xd0ee1539c162bdaf, entity)); }
	float GET_ENTITY_HEADING_FROM_EULERS(Entity entity) { return ToFloat(Call<_float>(0x76a354f77294b1cf, entity)); }
	float GET_ENTITY_HEADING_FROM_EULERS_f(Entity entity) { return ToFloat(FastCall<_float>(0x76a354f77294b1cf, entity)); }
	int GET_ENTITY_HEALTH(Entity entity) { return Call<int>(0x27c59d96821c14ef, entity); }
	int GET_ENTITY_HEALTH_f(Entity entity) { return FastCall<int>(0x27c59d96821c14ef, entity); }
	int GET_ENTITY_MAX_HEALTH(Entity entity) { return Call<int>(0x69f881c9dd4332ca, entity); }
	int GET_ENTITY_MAX_HEALTH_f(Entity entity) { return FastCall<int>(0x69f881c9dd4332ca, entity); }
	void SET_ENTITY_MAX_HEALTH(Entity entity, int value) { Call<void>(0xea358c62746eb4d6, entity, value); }
	void SET_ENTITY_MAX_HEALTH_f(Entity entity, int value) { FastCall<void>(0xea358c62746eb4d6, entity, value); }
	float GET_ENTITY_HEIGHT(Entity entity, float X, float Y, float Z, BOOL atTop, BOOL inWorldCoords) { return ToFloat(Call<_float>(0x27c59d96821fa3ba, entity, X, Y, Z, atTop, inWorldCoords)); }
	float GET_ENTITY_HEIGHT_f(Entity entity, float X, float Y, float Z, BOOL atTop, BOOL inWorldCoords) { return ToFloat(FastCall<_float>(0x27c59d96821fa3ba, entity, X, Y, Z, atTop, inWorldCoords)); }
	float GET_ENTITY_HEIGHT_ABOVE_GROUND(Entity entity) { return ToFloat(Call<_float>(0x270c5cda50f4cee, entity)); }
	float GET_ENTITY_HEIGHT_ABOVE_GROUND_f(Entity entity) { return ToFloat(FastCall<_float>(0x270c5cda50f4cee, entity)); }
	void GET_ENTITY_MATRIX(Entity entity, Vector3* forwardVector, Vector3* rightVector, Vector3* upVector, Vector3* position) { Call<void>(0x27c59d968a74aa54, entity, forwardVector, rightVector, upVector, position); }
	void GET_ENTITY_MATRIX_f(Entity entity, Vector3* forwardVector, Vector3* rightVector, Vector3* upVector, Vector3* position) { FastCall<void>(0x27c59d968a74aa54, entity, forwardVector, rightVector, upVector, position); }
	Hash GET_ENTITY_MODEL(Entity entity) { return Call<Hash>(0x8dab893667964616, entity); }
	Hash GET_ENTITY_MODEL_f(Entity entity) { return FastCall<Hash>(0x8dab893667964616, entity); }
	Vector3* GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(Entity entity, float posX, float posY, float posZ) { Call<Vector3*>(0x19edb7f6d37ec397, entity, posX, posY, posZ); return GetVector(); }
	Vector3* GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(Entity entity, float offsetX, float offsetY, float offsetZ) { Call<Vector3*>(0xdc89113dd8aeee3b, entity, offsetX, offsetY, offsetZ); return GetVector(); }
	float GET_ENTITY_PITCH(Entity entity) { return ToFloat(Call<_float>(0x8dab893667be0e2d, entity)); }
	float GET_ENTITY_PITCH_f(Entity entity) { return ToFloat(FastCall<_float>(0x8dab893667be0e2d, entity)); }
	void GET_ENTITY_QUATERNION(Entity entity, float* x, float* y, float* z, float* w) { Call<void>(0x69f8f0e7a4409431, entity, x, y, z, w); }
	void GET_ENTITY_QUATERNION_f(Entity entity, float* x, float* y, float* z, float* w) { FastCall<void>(0x69f8f0e7a4409431, entity, x, y, z, w); }
	float GET_ENTITY_ROLL(Entity entity) { return ToFloat(Call<_float>(0x782ed2e0b9071fd0, entity)); }
	float GET_ENTITY_ROLL_f(Entity entity) { return ToFloat(FastCall<_float>(0x782ed2e0b9071fd0, entity)); }
	Vector3* GET_ENTITY_ROTATION(Entity entity, int rotationOrder) { Call<Vector3*>(0x4cd49240ab05c551, entity, rotationOrder); return GetVector(); }
	Vector3* GET_ENTITY_ROTATION_VELOCITY(Entity entity) { Call<Vector3*>(0x5d7de46a6d26040b, entity); return GetVector(); }
	const char* GET_ENTITY_SCRIPT(Entity entity, ScrHandle* script) { return Call<char*>(0x27c59d9694cce35e, entity, script); }
	const char* GET_ENTITY_SCRIPT_f(Entity entity, ScrHandle* script) { return FastCall<char*>(0x27c59d9694cce35e, entity, script); }
	float GET_ENTITY_SPEED(Entity entity) { return ToFloat(Call<_float>(0x8dab893667eb4b34, entity)); }
	float GET_ENTITY_SPEED_f(Entity entity) { return ToFloat(FastCall<_float>(0x8dab893667eb4b34, entity)); }
	Vector3* GET_ENTITY_SPEED_VECTOR(Entity entity, BOOL relative) { Call<Vector3*>(0xd026a49c33b444ae, entity, relative); return GetVector(); }
	float GET_ENTITY_UPRIGHT_VALUE(Entity entity) { return ToFloat(Call<_float>(0x4ab0d9edabc415e0, entity)); }
	float GET_ENTITY_UPRIGHT_VALUE_f(Entity entity) { return ToFloat(FastCall<_float>(0x4ab0d9edabc415e0, entity)); }
	Vector3* GET_ENTITY_VELOCITY(Entity entity) { Call<Vector3*>(0x4cd492582ca2f2b0, entity); return GetVector(); }
	Object GET_OBJECT_INDEX_FROM_ENTITY_INDEX(Entity entity) { return Call<Object>(0x54fc8ffeaa104aa7, entity); }
	Object GET_OBJECT_INDEX_FROM_ENTITY_INDEX_f(Entity entity) { return FastCall<Object>(0x54fc8ffeaa104aa7, entity); }
	Ped GET_PED_INDEX_FROM_ENTITY_INDEX(Entity entity) { return Call<Ped>(0x94dd99f6fea204a5, entity); }
	Ped GET_PED_INDEX_FROM_ENTITY_INDEX_f(Entity entity) { return FastCall<Ped>(0x94dd99f6fea204a5, entity); }
	Vehicle GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(Entity entity) { return Call<Vehicle>(0x41aa370c12f29042, entity); }
	Vehicle GET_VEHICLE_INDEX_FROM_ENTITY_INDEX_f(Entity entity) { return FastCall<Vehicle>(0x41aa370c12f29042, entity); }
	Vector3* GET_WORLD_POSITION_OF_ENTITY_BONE(Entity entity, int boneIndex) { Call<Vector3*>(0x9adae6a087ca67f8, entity, boneIndex); return GetVector(); }
	Player GET_NEAREST_PLAYER_TO_ENTITY(Entity entity) { return Call<Player>(0xc3c3ef1716299113, entity); }
	Player GET_NEAREST_PLAYER_TO_ENTITY_f(Entity entity) { return FastCall<Player>(0xc3c3ef1716299113, entity); }
	Player GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM(Entity entity, int team) { return Call<Player>(0xb78713c00b34b191, entity, team); }
	Player GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM_f(Entity entity, int team) { return FastCall<Player>(0xb78713c00b34b191, entity, team); }
	int GET_NEAREST_PARTICIPANT_TO_ENTITY(Entity entity) { return Call<int>(0x7d31e73e8eaef771, entity); }
	int GET_NEAREST_PARTICIPANT_TO_ENTITY_f(Entity entity) { return FastCall<int>(0x7d31e73e8eaef771, entity); }
	int GET_ENTITY_TYPE(Entity entity) { return Call<int>(0x782ed2e0b9082e8d, entity); }
	int GET_ENTITY_TYPE_f(Entity entity) { return FastCall<int>(0x782ed2e0b9082e8d, entity); }
	int GET_ENTITY_POPULATION_TYPE(Entity entity) { return Call<int>(0xd1e89db199477fb9, entity); }
	int GET_ENTITY_POPULATION_TYPE_f(Entity entity) { return FastCall<int>(0xd1e89db199477fb9, entity); }
	BOOL IS_AN_ENTITY(ScrHandle handle) { return Call<BOOL>(0x1ab874eb86abc760, handle); }
	BOOL IS_AN_ENTITY_f(ScrHandle handle) { return FastCall<BOOL>(0x1ab874eb86abc760, handle); }
	BOOL IS_ENTITY_A_PED(Entity entity) { return Call<BOOL>(0x80d62aab5d0ff58a, entity); }
	BOOL IS_ENTITY_A_PED_f(Entity entity) { return FastCall<BOOL>(0x80d62aab5d0ff58a, entity); }
	BOOL IS_ENTITY_A_MISSION_ENTITY(Entity entity) { return Call<BOOL>(0x401b1a9e56e5769b, entity); }
	BOOL IS_ENTITY_A_MISSION_ENTITY_f(Entity entity) { return FastCall<BOOL>(0x401b1a9e56e5769b, entity); }
	BOOL IS_ENTITY_A_VEHICLE(Entity entity) { return Call<BOOL>(0x7f1ffc96ff661627, entity); }
	BOOL IS_ENTITY_A_VEHICLE_f(Entity entity) { return FastCall<BOOL>(0x7f1ffc96ff661627, entity); }
	BOOL IS_ENTITY_AN_OBJECT(Entity entity) { return Call<BOOL>(0x7f1ffc2c064694aa, entity); }
	BOOL IS_ENTITY_AN_OBJECT_f(Entity entity) { return FastCall<BOOL>(0x7f1ffc2c064694aa, entity); }
	BOOL IS_ENTITY_AT_COORD(Entity entity, float xPos, float yPos, float zPos, float xSize, float ySize, float zSize, BOOL p7, BOOL p8, int p9) { return Call<BOOL>(0xdacf7bc097cccf90, entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9); }
	BOOL IS_ENTITY_AT_COORD_f(Entity entity, float xPos, float yPos, float zPos, float xSize, float ySize, float zSize, BOOL p7, BOOL p8, int p9) { return FastCall<BOOL>(0xdacf7bc097cccf90, entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9); }
	BOOL IS_ENTITY_AT_ENTITY(Entity entity1, Entity entity2, float xSize, float ySize, float zSize, BOOL p5, BOOL p6, int p7) { return Call<BOOL>(0x7f1ffc52652ae288, entity1, entity2, xSize, ySize, zSize, p5, p6, p7); }
	BOOL IS_ENTITY_AT_ENTITY_f(Entity entity1, Entity entity2, float xSize, float ySize, float zSize, BOOL p5, BOOL p6, int p7) { return FastCall<BOOL>(0x7f1ffc52652ae288, entity1, entity2, xSize, ySize, zSize, p5, p6, p7); }
	BOOL IS_ENTITY_ATTACHED(Entity entity) { return Call<BOOL>(0xdacf7bc084e5c16b, entity); }
	BOOL IS_ENTITY_ATTACHED_f(Entity entity) { return FastCall<BOOL>(0xdacf7bc084e5c16b, entity); }
	BOOL IS_ENTITY_ATTACHED_TO_ANY_OBJECT(Entity entity) { return Call<BOOL>(0x81c8804ebbbd7582, entity); }
	BOOL IS_ENTITY_ATTACHED_TO_ANY_OBJECT_f(Entity entity) { return FastCall<BOOL>(0x81c8804ebbbd7582, entity); }
	BOOL IS_ENTITY_ATTACHED_TO_ANY_PED(Entity entity) { return Call<BOOL>(0x12a49c05be2eb58c, entity); }
	BOOL IS_ENTITY_ATTACHED_TO_ANY_PED_f(Entity entity) { return FastCall<BOOL>(0x12a49c05be2eb58c, entity); }
	BOOL IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(Entity entity) { return Call<BOOL>(0xb747898a33410529, entity); }
	BOOL IS_ENTITY_ATTACHED_TO_ANY_VEHICLE_f(Entity entity) { return FastCall<BOOL>(0xb747898a33410529, entity); }
	BOOL IS_ENTITY_ATTACHED_TO_ENTITY(Entity from, Entity to) { return Call<BOOL>(0x8cfd0d4a88d24c53, from, to); }
	BOOL IS_ENTITY_ATTACHED_TO_ENTITY_f(Entity from, Entity to) { return FastCall<BOOL>(0x8cfd0d4a88d24c53, from, to); }
	BOOL IS_ENTITY_DEAD(Entity entity, BOOL p1) { return Call<BOOL>(0x4e7a8581661a43ab, entity, p1); }
	BOOL IS_ENTITY_DEAD_f(Entity entity, BOOL p1) { return FastCall<BOOL>(0x4e7a8581661a43ab, entity, p1); }
	BOOL IS_ENTITY_IN_AIR(Entity entity) { return Call<BOOL>(0x99ef2ac051acb497, entity); }
	BOOL IS_ENTITY_IN_AIR_f(Entity entity) { return FastCall<BOOL>(0x99ef2ac051acb497, entity); }
	BOOL IS_ENTITY_IN_ANGLED_AREA(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL debug, BOOL includeZ, Any p10) { return Call<BOOL>(0x35a36e470def488, entity, x1, y1, z1, x2, y2, z2, width, debug, includeZ, p10); }
	BOOL IS_ENTITY_IN_ANGLED_AREA_f(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL debug, BOOL includeZ, Any p10) { return FastCall<BOOL>(0x35a36e470def488, entity, x1, y1, z1, x2, y2, z2, width, debug, includeZ, p10); }
	BOOL IS_ENTITY_IN_AREA(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, BOOL p7, BOOL p8, Any p9) { return Call<BOOL>(0xa3f62d49e3e9fec0, entity, x1, y1, z1, x2, y2, z2, p7, p8, p9); }
	BOOL IS_ENTITY_IN_AREA_f(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, BOOL p7, BOOL p8, Any p9) { return FastCall<BOOL>(0xa3f62d49e3e9fec0, entity, x1, y1, z1, x2, y2, z2, p7, p8, p9); }
	BOOL IS_ENTITY_IN_ZONE(Entity entity, char* zone) { return Call<BOOL>(0xa3f62d49e3f551df, entity, zone); }
	BOOL IS_ENTITY_IN_ZONE_f(Entity entity, char* zone) { return FastCall<BOOL>(0xa3f62d49e3f551df, entity, zone); }
	BOOL IS_ENTITY_IN_WATER(Entity entity) { return Call<BOOL>(0xdacf7bf29a845d24, entity); }
	BOOL IS_ENTITY_IN_WATER_f(Entity entity) { return FastCall<BOOL>(0xdacf7bf29a845d24, entity); }
	float GET_ENTITY_SUBMERGED_LEVEL(Entity entity) { return ToFloat(Call<_float>(0x414565277f01757e, entity)); }
	float GET_ENTITY_SUBMERGED_LEVEL_f(Entity entity) { return ToFloat(FastCall<_float>(0x414565277f01757e, entity)); }
	void SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK(Entity entity, BOOL toggle) { Call<void>(0xb01c5984f87d6e09, entity, toggle); }
	void SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK_f(Entity entity, BOOL toggle) { FastCall<void>(0xb01c5984f87d6e09, entity, toggle); }
	BOOL IS_ENTITY_ON_SCREEN(Entity entity) { return Call<BOOL>(0x7f20070828e9c3e5, entity); }
	BOOL IS_ENTITY_ON_SCREEN_f(Entity entity) { return FastCall<BOOL>(0x7f20070828e9c3e5, entity); }
	BOOL IS_ENTITY_PLAYING_ANIM(Entity entity, char* animDict, char* animName, int taskFlag) { return Call<BOOL>(0xb063f3f272ec87e9, entity, animDict, animName, taskFlag); }
	BOOL IS_ENTITY_PLAYING_ANIM_f(Entity entity, char* animDict, char* animName, int taskFlag) { return FastCall<BOOL>(0xb063f3f272ec87e9, entity, animDict, animName, taskFlag); }
	BOOL IS_ENTITY_STATIC(Entity entity) { return Call<BOOL>(0x99ef2ac063045bf5, entity); }
	BOOL IS_ENTITY_STATIC_f(Entity entity) { return FastCall<BOOL>(0x99ef2ac063045bf5, entity); }
	BOOL IS_ENTITY_TOUCHING_ENTITY(Entity entity, Entity targetEntity) { return Call<BOOL>(0xade4dafdf3b455b8, entity, targetEntity); }
	BOOL IS_ENTITY_TOUCHING_ENTITY_f(Entity entity, Entity targetEntity) { return FastCall<BOOL>(0xade4dafdf3b455b8, entity, targetEntity); }
	BOOL IS_ENTITY_TOUCHING_MODEL(Entity entity, Hash modelHash) { return Call<BOOL>(0x9a41305ac63cf694, entity, modelHash); }
	BOOL IS_ENTITY_TOUCHING_MODEL_f(Entity entity, Hash modelHash) { return FastCall<BOOL>(0x9a41305ac63cf694, entity, modelHash); }
	BOOL IS_ENTITY_UPRIGHT(Entity entity, float angle) { return Call<BOOL>(0xa3f62d4c616abf9a, entity, angle); }
	BOOL IS_ENTITY_UPRIGHT_f(Entity entity, float angle) { return FastCall<BOOL>(0xa3f62d4c616abf9a, entity, angle); }
	BOOL IS_ENTITY_UPSIDEDOWN(Entity entity) { return Call<BOOL>(0x64e16b82e8012c1b, entity); }
	BOOL IS_ENTITY_UPSIDEDOWN_f(Entity entity) { return FastCall<BOOL>(0x64e16b82e8012c1b, entity); }
	BOOL IS_ENTITY_VISIBLE(Entity entity) { return Call<BOOL>(0xa3f62d4c8a6d13ab, entity); }
	BOOL IS_ENTITY_VISIBLE_f(Entity entity) { return FastCall<BOOL>(0xa3f62d4c8a6d13ab, entity); }
	BOOL IS_ENTITY_VISIBLE_TO_SCRIPT(Entity entity) { return Call<BOOL>(0x73224c45234fbb7b, entity); }
	BOOL IS_ENTITY_VISIBLE_TO_SCRIPT_f(Entity entity) { return FastCall<BOOL>(0x73224c45234fbb7b, entity); }
	BOOL IS_ENTITY_OCCLUDED(Entity entity) { return Call<BOOL>(0xdacf7c16938d05f2, entity); }
	BOOL IS_ENTITY_OCCLUDED_f(Entity entity) { return FastCall<BOOL>(0xdacf7c16938d05f2, entity); }
	BOOL WOULD_ENTITY_BE_OCCLUDED(Hash entityModelHash, float x, float y, float z, BOOL p4) { return Call<BOOL>(0x7fd619f17e2eda15, entityModelHash, x, y, z, p4); }
	BOOL WOULD_ENTITY_BE_OCCLUDED_f(Hash entityModelHash, float x, float y, float z, BOOL p4) { return FastCall<BOOL>(0x7fd619f17e2eda15, entityModelHash, x, y, z, p4); }
	BOOL IS_ENTITY_WAITING_FOR_WORLD_COLLISION(Entity entity) { return Call<BOOL>(0x8949f67a75268ab6, entity); }
	BOOL IS_ENTITY_WAITING_FOR_WORLD_COLLISION_f(Entity entity) { return FastCall<BOOL>(0x8949f67a75268ab6, entity); }
	void APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(Entity entity, int forceType, float x, float y, float z, BOOL p5, BOOL isDirectionRel, BOOL isForceRel, BOOL p8) { Call<void>(0x2ab58250637d658f, entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8); }
	void APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS_f(Entity entity, int forceType, float x, float y, float z, BOOL p5, BOOL isDirectionRel, BOOL isForceRel, BOOL p8) { FastCall<void>(0x2ab58250637d658f, entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8); }
	void APPLY_FORCE_TO_ENTITY(Entity entity, int forceFlags, float x, float y, float z, float offX, float offY, float offZ, int boneIndex, BOOL isDirectionRel, BOOL ignoreUpVec, BOOL isForceRel, BOOL p12, BOOL p13) { Call<void>(0x1a49225c3e846ac2, entity, forceFlags, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13); }
	void APPLY_FORCE_TO_ENTITY_f(Entity entity, int forceFlags, float x, float y, float z, float offX, float offY, float offZ, int boneIndex, BOOL isDirectionRel, BOOL ignoreUpVec, BOOL isForceRel, BOOL p12, BOOL p13) { FastCall<void>(0x1a49225c3e846ac2, entity, forceFlags, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13); }
	void ATTACH_ENTITY_TO_ENTITY(Entity entity1, Entity entity2, int boneIndex, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, BOOL p9, BOOL useSoftPinning, BOOL collision, BOOL isPed, int vertexIndex, BOOL fixedRot, Any p15) { Call<void>(0xef6539f807575f85, entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot, p15); }
	void ATTACH_ENTITY_TO_ENTITY_f(Entity entity1, Entity entity2, int boneIndex, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, BOOL p9, BOOL useSoftPinning, BOOL collision, BOOL isPed, int vertexIndex, BOOL fixedRot, Any p15) { FastCall<void>(0xef6539f807575f85, entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot, p15); }
	void ATTACH_ENTITY_BONE_TO_ENTITY_BONE(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, BOOL p4, BOOL p5) { Call<void>(0x772ae7365cb29495, entity1, entity2, boneIndex1, boneIndex2, p4, p5); }
	void ATTACH_ENTITY_BONE_TO_ENTITY_BONE_f(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, BOOL p4, BOOL p5) { FastCall<void>(0x772ae7365cb29495, entity1, entity2, boneIndex1, boneIndex2, p4, p5); }
	void ATTACH_ENTITY_BONE_TO_ENTITY_BONE_Y_FORWARD(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, BOOL p4, BOOL p5) { Call<void>(0x12e4a548aff595, entity1, entity2, boneIndex1, boneIndex2, p4, p5); }
	void ATTACH_ENTITY_BONE_TO_ENTITY_BONE_Y_FORWARD_f(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, BOOL p4, BOOL p5) { FastCall<void>(0x12e4a548aff595, entity1, entity2, boneIndex1, boneIndex2, p4, p5); }
	void ATTACH_ENTITY_TO_ENTITY_PHYSICALLY(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, float xPos1, float yPos1, float zPos1, float xPos2, float yPos2, float zPos2, float xRot, float yRot, float zRot, float breakForce, BOOL fixedRot, BOOL p15, BOOL collision, BOOL p17, int p18) { Call<void>(0x294f1e92c751819e, entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, p17, p18); }
	void ATTACH_ENTITY_TO_ENTITY_PHYSICALLY_f(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, float xPos1, float yPos1, float zPos1, float xPos2, float yPos2, float zPos2, float xRot, float yRot, float zRot, float breakForce, BOOL fixedRot, BOOL p15, BOOL collision, BOOL p17, int p18) { FastCall<void>(0x294f1e92c751819e, entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, p17, p18); }
	void ATTACH_ENTITY_TO_ENTITY_PHYSICALLY_OVERRIDE_INVERSE_MASS(Entity firstEntityIndex, Entity secondEntityIndex, int firstEntityBoneIndex, int secondEntityBoneIndex, float secondEntityOffsetX, float secondEntityOffsetY, float secondEntityOffsetZ, float firstEntityOffsetX, float firstEntityOffsetY, float firstEntityOffsetZ, float vecRotationX, float vecRotationY, float vecRotationZ, float physicalStrength, BOOL constrainRotation, BOOL doInitialWarp, BOOL collideWithEntity, BOOL addInitialSeperation, int rotOrder, float invMassScaleA, float invMassScaleB) { Call<void>(0x3e811907bb47bc75, firstEntityIndex, secondEntityIndex, firstEntityBoneIndex, secondEntityBoneIndex, secondEntityOffsetX, secondEntityOffsetY, secondEntityOffsetZ, firstEntityOffsetX, firstEntityOffsetY, firstEntityOffsetZ, vecRotationX, vecRotationY, vecRotationZ, physicalStrength, constrainRotation, doInitialWarp, collideWithEntity, addInitialSeperation, rotOrder, invMassScaleA, invMassScaleB); }
	void ATTACH_ENTITY_TO_ENTITY_PHYSICALLY_OVERRIDE_INVERSE_MASS_f(Entity firstEntityIndex, Entity secondEntityIndex, int firstEntityBoneIndex, int secondEntityBoneIndex, float secondEntityOffsetX, float secondEntityOffsetY, float secondEntityOffsetZ, float firstEntityOffsetX, float firstEntityOffsetY, float firstEntityOffsetZ, float vecRotationX, float vecRotationY, float vecRotationZ, float physicalStrength, BOOL constrainRotation, BOOL doInitialWarp, BOOL collideWithEntity, BOOL addInitialSeperation, int rotOrder, float invMassScaleA, float invMassScaleB) { FastCall<void>(0x3e811907bb47bc75, firstEntityIndex, secondEntityIndex, firstEntityBoneIndex, secondEntityBoneIndex, secondEntityOffsetX, secondEntityOffsetY, secondEntityOffsetZ, firstEntityOffsetX, firstEntityOffsetY, firstEntityOffsetZ, vecRotationX, vecRotationY, vecRotationZ, physicalStrength, constrainRotation, doInitialWarp, collideWithEntity, addInitialSeperation, rotOrder, invMassScaleA, invMassScaleB); }
	void PROCESS_ENTITY_ATTACHMENTS(Entity entity) { Call<void>(0x6bff942348375d24, entity); }
	void PROCESS_ENTITY_ATTACHMENTS_f(Entity entity) { FastCall<void>(0x6bff942348375d24, entity); }
	int GET_ENTITY_BONE_INDEX_BY_NAME(Entity entity, char* boneName) { return Call<int>(0x3661ca7bcff67ebe, entity, boneName); }
	int GET_ENTITY_BONE_INDEX_BY_NAME_f(Entity entity, char* boneName) { return FastCall<int>(0x3661ca7bcff67ebe, entity, boneName); }
	void CLEAR_ENTITY_LAST_DAMAGE_ENTITY(Entity entity) { Call<void>(0xe0500cd6b7aa3714, entity); }
	void CLEAR_ENTITY_LAST_DAMAGE_ENTITY_f(Entity entity) { FastCall<void>(0xe0500cd6b7aa3714, entity); }
	void DELETE_ENTITY(Entity* entity) { Call<void>(0x87c1553b2634f7, entity); }
	void DELETE_ENTITY_f(Entity* entity) { FastCall<void>(0x87c1553b2634f7, entity); }
	void DETACH_ENTITY(Entity entity, BOOL dynamic, BOOL collision) { Call<void>(0x9e9f9d703e2e0f, entity, dynamic, collision); }
	void DETACH_ENTITY_f(Entity entity, BOOL dynamic, BOOL collision) { FastCall<void>(0x9e9f9d703e2e0f, entity, dynamic, collision); }
	void FREEZE_ENTITY_POSITION(Entity entity, BOOL toggle) { Call<void>(0xf45cdb25e4dc885d, entity, toggle); }
	void FREEZE_ENTITY_POSITION_f(Entity entity, BOOL toggle) { FastCall<void>(0xf45cdb25e4dc885d, entity, toggle); }
	void SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(Entity entity, BOOL toggle) { Call<void>(0x5affbfb12bba07bf, entity, toggle); }
	void SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION_f(Entity entity, BOOL toggle) { FastCall<void>(0x5affbfb12bba07bf, entity, toggle); }
	BOOL PLAY_ENTITY_ANIM(Entity entity, char* animName, char* animDict, float p3, BOOL loop, BOOL stayInAnim, BOOL p6, float delta, Any bitset) { return Call<BOOL>(0xe912176518f5c462, entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset); }
	BOOL PLAY_ENTITY_ANIM_f(Entity entity, char* animName, char* animDict, float p3, BOOL loop, BOOL stayInAnim, BOOL p6, float delta, Any bitset) { return FastCall<BOOL>(0xe912176518f5c462, entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset); }
	BOOL PLAY_SYNCHRONIZED_ENTITY_ANIM(Entity entity, int syncedScene, char* animation, char* propName, float p4, float p5, Any p6, float p7) { return Call<BOOL>(0x7dd637cb812a30ed, entity, syncedScene, animation, propName, p4, p5, p6, p7); }
	BOOL PLAY_SYNCHRONIZED_ENTITY_ANIM_f(Entity entity, int syncedScene, char* animation, char* propName, float p4, float p5, Any p6, float p7) { return FastCall<BOOL>(0x7dd637cb812a30ed, entity, syncedScene, animation, propName, p4, p5, p6, p7); }
	BOOL PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM(float x1, float y1, float z1, float x2, Any y2, float z2, char* p6, char* p7, float p8, float p9, Any p10, float p11) { return Call<BOOL>(0xa167b2c7d4c7be6a, x1, y1, z1, x2, y2, z2, p6, p7, p8, p9, p10, p11); }
	BOOL PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM_f(float x1, float y1, float z1, float x2, Any y2, float z2, char* p6, char* p7, float p8, float p9, Any p10, float p11) { return FastCall<BOOL>(0xa167b2c7d4c7be6a, x1, y1, z1, x2, y2, z2, p6, p7, p8, p9, p10, p11); }
	BOOL STOP_SYNCHRONIZED_MAP_ENTITY_ANIM(float x1, float y1, float z1, float x2, Any y2, float z2) { return Call<BOOL>(0xfeb2e84aae79dc5c, x1, y1, z1, x2, y2, z2); }
	BOOL STOP_SYNCHRONIZED_MAP_ENTITY_ANIM_f(float x1, float y1, float z1, float x2, Any y2, float z2) { return FastCall<BOOL>(0xfeb2e84aae79dc5c, x1, y1, z1, x2, y2, z2); }
	BOOL STOP_ENTITY_ANIM(Entity entity, char* animation, char* animGroup, float p3) { return Call<BOOL>(0x7e3115ef840c7c30, entity, animation, animGroup, p3); }
	BOOL STOP_ENTITY_ANIM_f(Entity entity, char* animation, char* animGroup, float p3) { return FastCall<BOOL>(0x7e3115ef840c7c30, entity, animation, animGroup, p3); }
	BOOL STOP_SYNCHRONIZED_ENTITY_ANIM(Entity entity, float p1, BOOL p2) { return Call<BOOL>(0x9f77fec9956d17df, entity, p1, p2); }
	BOOL STOP_SYNCHRONIZED_ENTITY_ANIM_f(Entity entity, float p1, BOOL p2) { return FastCall<BOOL>(0x9f77fec9956d17df, entity, p1, p2); }
	BOOL HAS_ANIM_EVENT_FIRED(Entity entity, Hash actionHash) { return Call<BOOL>(0xa3574f968096c8c0, entity, actionHash); }
	BOOL HAS_ANIM_EVENT_FIRED_f(Entity entity, Hash actionHash) { return FastCall<BOOL>(0xa3574f968096c8c0, entity, actionHash); }
	BOOL FIND_ANIM_EVENT_PHASE(char* animDictionary, char* animName, char* p2, Any* p3, Any* p4) { return Call<BOOL>(0x8ad59eec7b2afee, animDictionary, animName, p2, p3, p4); }
	BOOL FIND_ANIM_EVENT_PHASE_f(char* animDictionary, char* animName, char* p2, Any* p3, Any* p4) { return FastCall<BOOL>(0x8ad59eec7b2afee, animDictionary, animName, p2, p3, p4); }
	void SET_ENTITY_ANIM_CURRENT_TIME(Entity entity, char* animDictionary, char* animName, float time) { Call<void>(0xfdad63311446d62, entity, animDictionary, animName, time); }
	void SET_ENTITY_ANIM_CURRENT_TIME_f(Entity entity, char* animDictionary, char* animName, float time) { FastCall<void>(0xfdad63311446d62, entity, animDictionary, animName, time); }
	void SET_ENTITY_ANIM_SPEED(Entity entity, char* animDictionary, char* animName, float speedMultiplier) { Call<void>(0xea347584e220b398, entity, animDictionary, animName, speedMultiplier); }
	void SET_ENTITY_ANIM_SPEED_f(Entity entity, char* animDictionary, char* animName, float speedMultiplier) { FastCall<void>(0xea347584e220b398, entity, animDictionary, animName, speedMultiplier); }
	void SET_ENTITY_AS_MISSION_ENTITY(Entity entity, BOOL p1, BOOL p2) { Call<void>(0x2a2eda24c05141c4, entity, p1, p2); }
	void SET_ENTITY_AS_MISSION_ENTITY_f(Entity entity, BOOL p1, BOOL p2) { FastCall<void>(0x2a2eda24c05141c4, entity, p1, p2); }
	void SET_ENTITY_AS_NO_LONGER_NEEDED(Entity* entity) { Call<void>(0x33f8c6979a1afebb, entity); }
	void SET_ENTITY_AS_NO_LONGER_NEEDED_f(Entity* entity) { FastCall<void>(0x33f8c6979a1afebb, entity); }
	void SET_PED_AS_NO_LONGER_NEEDED(Ped* ped) { Call<void>(0x4d6908a9955f9ead, ped); }
	void SET_PED_AS_NO_LONGER_NEEDED_f(Ped* ped) { FastCall<void>(0x4d6908a9955f9ead, ped); }
	void SET_VEHICLE_AS_NO_LONGER_NEEDED(Vehicle* vehicle) { Call<void>(0xd940d7d83e751aca, vehicle); }
	void SET_VEHICLE_AS_NO_LONGER_NEEDED_f(Vehicle* vehicle) { FastCall<void>(0xd940d7d83e751aca, vehicle); }
	void SET_OBJECT_AS_NO_LONGER_NEEDED(Object* object) { Call<void>(0x235d21204ba07817, object); }
	void SET_OBJECT_AS_NO_LONGER_NEEDED_f(Object* object) { FastCall<void>(0x235d21204ba07817, object); }
	void SET_ENTITY_CAN_BE_DAMAGED(Entity entity, BOOL toggle) { Call<void>(0x41d631f60d93c647, entity, toggle); }
	void SET_ENTITY_CAN_BE_DAMAGED_f(Entity entity, BOOL toggle) { FastCall<void>(0x41d631f60d93c647, entity, toggle); }
	BOOL GET_ENTITY_CAN_BE_DAMAGED(Entity entity) { return Call<BOOL>(0x92c7e11bdb502a3b, entity); }
	BOOL GET_ENTITY_CAN_BE_DAMAGED_f(Entity entity) { return FastCall<BOOL>(0x92c7e11bdb502a3b, entity); }
	void SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, BOOL bCanBeDamaged, int relGroup) { Call<void>(0xc12da2d650b75688, entity, bCanBeDamaged, relGroup); }
	void SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP_f(Entity entity, BOOL bCanBeDamaged, int relGroup) { FastCall<void>(0xc12da2d650b75688, entity, bCanBeDamaged, relGroup); }
	void SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_SCRIPT_PARTICIPANTS(Entity entity, BOOL toggle) { Call<void>(0x3f3c5e787f5b6dad, entity, toggle); }
	void SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_SCRIPT_PARTICIPANTS_f(Entity entity, BOOL toggle) { FastCall<void>(0x3f3c5e787f5b6dad, entity, toggle); }
	void SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS(Entity entity, BOOL toggle) { Call<void>(0x86a40c44de5998f8, entity, toggle); }
	void SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS_f(Entity entity, BOOL toggle) { FastCall<void>(0x86a40c44de5998f8, entity, toggle); }
	void SET_ENTITY_COLLISION(Entity entity, BOOL toggle, BOOL keepPhysics) { Call<void>(0x289657f34c435813, entity, toggle, keepPhysics); }
	void SET_ENTITY_COLLISION_f(Entity entity, BOOL toggle, BOOL keepPhysics) { FastCall<void>(0x289657f34c435813, entity, toggle, keepPhysics); }
	BOOL GET_ENTITY_COLLISION_DISABLED(Entity entity) { return Call<BOOL>(0xebd5be6183e5b31c, entity); }
	BOOL GET_ENTITY_COLLISION_DISABLED_f(Entity entity) { return FastCall<BOOL>(0xebd5be6183e5b31c, entity); }
	void SET_ENTITY_COMPLETELY_DISABLE_COLLISION(Entity entity, BOOL toggle, BOOL keepPhysics) { Call<void>(0x8c84caaae78a3041, entity, toggle, keepPhysics); }
	void SET_ENTITY_COMPLETELY_DISABLE_COLLISION_f(Entity entity, BOOL toggle, BOOL keepPhysics) { FastCall<void>(0x8c84caaae78a3041, entity, toggle, keepPhysics); }
	void SET_ENTITY_COORDS(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL clearArea) { Call<void>(0x64887fda421d9ebd, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea); }
	void SET_ENTITY_COORDS_f(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL clearArea) { FastCall<void>(0x64887fda421d9ebd, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea); }
	void SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET(Entity entity, float xPos, float yPos, float zPos, BOOL alive, BOOL deadFlag, BOOL ragdollFlag, BOOL clearArea) { Call<void>(0xbb338233f95d7411, entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea); }
	void SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET_f(Entity entity, float xPos, float yPos, float zPos, BOOL alive, BOOL deadFlag, BOOL ragdollFlag, BOOL clearArea) { FastCall<void>(0xbb338233f95d7411, entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea); }
	void SET_ENTITY_COORDS_NO_OFFSET(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis, BOOL zAxis) { Call<void>(0x649807d423da11cf, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis); }
	void SET_ENTITY_COORDS_NO_OFFSET_f(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis, BOOL zAxis) { FastCall<void>(0x649807d423da11cf, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis); }
	void SET_ENTITY_DYNAMIC(Entity entity, BOOL toggle) { Call<void>(0x2c877b6e47773960, entity, toggle); }
	void SET_ENTITY_DYNAMIC_f(Entity entity, BOOL toggle) { FastCall<void>(0x2c877b6e47773960, entity, toggle); }
	void SET_ENTITY_HEADING(Entity entity, float heading) { Call<void>(0x2c877b6ef8395723, entity, heading); }
	void SET_ENTITY_HEADING_f(Entity entity, float heading) { FastCall<void>(0x2c877b6ef8395723, entity, heading); }
	void SET_ENTITY_HEALTH(Entity entity, int health, Entity instigator, Hash weaponType) { Call<void>(0x64887fda4a127cfb, entity, health, instigator, weaponType); }
	void SET_ENTITY_HEALTH_f(Entity entity, int health, Entity instigator, Hash weaponType) { FastCall<void>(0x64887fda4a127cfb, entity, health, instigator, weaponType); }
	void SET_ENTITY_INVINCIBLE(Entity entity, BOOL toggle) { Call<void>(0xea353636d95b833e, entity, toggle); }
	void SET_ENTITY_INVINCIBLE_f(Entity entity, BOOL toggle) { FastCall<void>(0xea353636d95b833e, entity, toggle); }
	void SET_ENTITY_IS_TARGET_PRIORITY(Entity entity, BOOL p1, float p2) { Call<void>(0xef97c15864bd439c, entity, p1, p2); }
	void SET_ENTITY_IS_TARGET_PRIORITY_f(Entity entity, BOOL p1, float p2) { FastCall<void>(0xef97c15864bd439c, entity, p1, p2); }
	void SET_ENTITY_LIGHTS(Entity entity, BOOL toggle) { Call<void>(0x64887fda5120e8bc, entity, toggle); }
	void SET_ENTITY_LIGHTS_f(Entity entity, BOOL toggle) { FastCall<void>(0x64887fda5120e8bc, entity, toggle); }
	void SET_ENTITY_LOAD_COLLISION_FLAG(Entity entity, BOOL toggle, Any p2) { Call<void>(0xf81eac849f1bf0b3, entity, toggle, p2); }
	void SET_ENTITY_LOAD_COLLISION_FLAG_f(Entity entity, BOOL toggle, Any p2) { FastCall<void>(0xf81eac849f1bf0b3, entity, toggle, p2); }
	BOOL HAS_COLLISION_LOADED_AROUND_ENTITY(Entity entity) { return Call<BOOL>(0x3ec0ad984eb4214d, entity); }
	BOOL HAS_COLLISION_LOADED_AROUND_ENTITY_f(Entity entity) { return FastCall<BOOL>(0x3ec0ad984eb4214d, entity); }
	void SET_ENTITY_MAX_SPEED(Entity entity, float speed) { Call<void>(0x28965f5e0461926d, entity, speed); }
	void SET_ENTITY_MAX_SPEED_f(Entity entity, float speed) { FastCall<void>(0x28965f5e0461926d, entity, speed); }
	void SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(Entity entity, BOOL toggle) { Call<void>(0x3862c5f69128658b, entity, toggle); }
	void SET_ENTITY_ONLY_DAMAGED_BY_PLAYER_f(Entity entity, BOOL toggle) { FastCall<void>(0x3862c5f69128658b, entity, toggle); }
	void SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, BOOL p1, Any p2) { Call<void>(0x1603d9202c555d42, entity, p1, p2); }
	void SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP_f(Entity entity, BOOL p1, Any p2) { FastCall<void>(0x1603d9202c555d42, entity, p1, p2); }
	void SET_ENTITY_PROOFS(Entity entity, BOOL bulletProof, BOOL fireProof, BOOL explosionProof, BOOL collisionProof, BOOL meleeProof, BOOL steamProof, BOOL p7, BOOL waterProof) { Call<void>(0x64887fda5876da4e, entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, waterProof); }
	void SET_ENTITY_PROOFS_f(Entity entity, BOOL bulletProof, BOOL fireProof, BOOL explosionProof, BOOL collisionProof, BOOL meleeProof, BOOL steamProof, BOOL p7, BOOL waterProof) { FastCall<void>(0x64887fda5876da4e, entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, waterProof); }
	BOOL GET_ENTITY_PROOFS(Entity entity, BOOL* bulletProof, BOOL* fireProof, BOOL* explosionProof, BOOL* collisionProof, BOOL* meleeProof, BOOL* steamProof, BOOL* p7, BOOL* drownProof) { return Call<BOOL>(0x27c59d9690807242, entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, drownProof); }
	BOOL GET_ENTITY_PROOFS_f(Entity entity, BOOL* bulletProof, BOOL* fireProof, BOOL* explosionProof, BOOL* collisionProof, BOOL* meleeProof, BOOL* steamProof, BOOL* p7, BOOL* drownProof) { return FastCall<BOOL>(0x27c59d9690807242, entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, drownProof); }
	void SET_ENTITY_QUATERNION(Entity entity, float x, float y, float z, float w) { Call<void>(0xea35fb803b6c163d, entity, x, y, z, w); }
	void SET_ENTITY_QUATERNION_f(Entity entity, float x, float y, float z, float w) { FastCall<void>(0xea35fb803b6c163d, entity, x, y, z, w); }
	void SET_ENTITY_RECORDS_COLLISIONS(Entity entity, BOOL toggle) { Call<void>(0x12b77dc48d977ddd, entity, toggle); }
	void SET_ENTITY_RECORDS_COLLISIONS_f(Entity entity, BOOL toggle) { FastCall<void>(0x12b77dc48d977ddd, entity, toggle); }
	void SET_ENTITY_ROTATION(Entity entity, float pitch, float roll, float yaw, int rotationOrder, BOOL p5) { Call<void>(0x6467f2b24f025a5d, entity, pitch, roll, yaw, rotationOrder, p5); }
	void SET_ENTITY_ROTATION_f(Entity entity, float pitch, float roll, float yaw, int rotationOrder, BOOL p5) { FastCall<void>(0x6467f2b24f025a5d, entity, pitch, roll, yaw, rotationOrder, p5); }
	void SET_ENTITY_VISIBLE(Entity entity, BOOL toggle, BOOL p2) { Call<void>(0x2c877b71e4a3c993, entity, toggle, p2); }
	void SET_ENTITY_VISIBLE_f(Entity entity, BOOL toggle, BOOL p2) { FastCall<void>(0x2c877b71e4a3c993, entity, toggle, p2); }
	void SET_ENTITY_WATER_REFLECTION_FLAG(Entity entity, BOOL toggle) { Call<void>(0x7d331292e3b21739, entity, toggle); }
	void SET_ENTITY_WATER_REFLECTION_FLAG_f(Entity entity, BOOL toggle) { FastCall<void>(0x7d331292e3b21739, entity, toggle); }
	void SET_ENTITY_MIRROR_REFLECTION_FLAG(Entity entity, BOOL p1) { Call<void>(0x53ce41c3ad78fb1f, entity, p1); }
	void SET_ENTITY_MIRROR_REFLECTION_FLAG_f(Entity entity, BOOL p1) { FastCall<void>(0x53ce41c3ad78fb1f, entity, p1); }
	void SET_ENTITY_VELOCITY(Entity entity, float x, float y, float z) { Call<void>(0x6467f2c9d09f87bc, entity, x, y, z); }
	void SET_ENTITY_VELOCITY_f(Entity entity, float x, float y, float z) { FastCall<void>(0x6467f2c9d09f87bc, entity, x, y, z); }
	void SET_ENTITY_ANGULAR_VELOCITY(Entity entity, float x, float y, float z) { Call<void>(0xcc8ba1c66ce3ea99, entity, x, y, z); }
	void SET_ENTITY_ANGULAR_VELOCITY_f(Entity entity, float x, float y, float z) { FastCall<void>(0xcc8ba1c66ce3ea99, entity, x, y, z); }
	void SET_ENTITY_HAS_GRAVITY(Entity entity, BOOL toggle) { Call<void>(0x5c6d6cce2ce7662a, entity, toggle); }
	void SET_ENTITY_HAS_GRAVITY_f(Entity entity, BOOL toggle) { FastCall<void>(0x5c6d6cce2ce7662a, entity, toggle); }
	void SET_ENTITY_LOD_DIST(Entity entity, int value) { Call<void>(0x6467f28bc60d3ee3, entity, value); }
	void SET_ENTITY_LOD_DIST_f(Entity entity, int value) { FastCall<void>(0x6467f28bc60d3ee3, entity, value); }
	int GET_ENTITY_LOD_DIST(Entity entity) { return Call<int>(0x4cd4921a2210a9d7, entity); }
	int GET_ENTITY_LOD_DIST_f(Entity entity) { return FastCall<int>(0x4cd4921a2210a9d7, entity); }
	void SET_ENTITY_ALPHA(Entity entity, int alphaLevel, BOOL skin) { Call<void>(0x34ca98c4f9c262bf, entity, alphaLevel, skin); }
	void SET_ENTITY_ALPHA_f(Entity entity, int alphaLevel, BOOL skin) { FastCall<void>(0x34ca98c4f9c262bf, entity, alphaLevel, skin); }
	int GET_ENTITY_ALPHA(Entity entity) { return Call<int>(0x8dab893666ebfc4b, entity); }
	int GET_ENTITY_ALPHA_f(Entity entity) { return FastCall<int>(0x8dab893666ebfc4b, entity); }
	void RESET_ENTITY_ALPHA(Entity entity) { Call<void>(0x8418bd8bae45a6f2, entity); }
	void RESET_ENTITY_ALPHA_f(Entity entity) { FastCall<void>(0x8418bd8bae45a6f2, entity); }
	void RESET_PICKUP_ENTITY_GLOW(Entity entity) { Call<void>(0xa35cee99093ca436, entity); }
	void RESET_PICKUP_ENTITY_GLOW_f(Entity entity) { FastCall<void>(0xa35cee99093ca436, entity); }
	void SET_PICKUP_COLLIDES_WITH_PROJECTILES(Any p0, Any p1) { Call<void>(0x9fbcd3bbae47c0f5, p0, p1); }
	void SET_PICKUP_COLLIDES_WITH_PROJECTILES_f(Any p0, Any p1) { FastCall<void>(0x9fbcd3bbae47c0f5, p0, p1); }
	void SET_ENTITY_SORT_BIAS(Entity entity, float p1) { Call<void>(0x2896645ddcc4b9bb, entity, p1); }
	void SET_ENTITY_SORT_BIAS_f(Entity entity, float p1) { FastCall<void>(0x2896645ddcc4b9bb, entity, p1); }
	void SET_ENTITY_ALWAYS_PRERENDER(Entity entity, BOOL toggle) { Call<void>(0x1316941132cfc388, entity, toggle); }
	void SET_ENTITY_ALWAYS_PRERENDER_f(Entity entity, BOOL toggle) { FastCall<void>(0x1316941132cfc388, entity, toggle); }
	void SET_ENTITY_RENDER_SCORCHED(Entity entity, BOOL toggle) { Call<void>(0xbd8309c84b395b41, entity, toggle); }
	void SET_ENTITY_RENDER_SCORCHED_f(Entity entity, BOOL toggle) { FastCall<void>(0xbd8309c84b395b41, entity, toggle); }
	void SET_ENTITY_TRAFFICLIGHT_OVERRIDE(Entity entity, int state) { Call<void>(0xa6d185872c5e6393, entity, state); }
	void SET_ENTITY_TRAFFICLIGHT_OVERRIDE_f(Entity entity, int state) { FastCall<void>(0xa6d185872c5e6393, entity, state); }
	void SET_ENTITY_IS_IN_VEHICLE(Entity entity) { Call<void>(0x82d86f5942b3ca8, entity); }
	void SET_ENTITY_IS_IN_VEHICLE_f(Entity entity) { FastCall<void>(0x82d86f5942b3ca8, entity); }
	void CREATE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, BOOL p6) { Call<void>(0x865cc3742185482c, x, y, z, radius, originalModel, newModel, p6); }
	void CREATE_MODEL_SWAP_f(float x, float y, float z, float radius, Hash originalModel, Hash newModel, BOOL p6) { FastCall<void>(0x865cc3742185482c, x, y, z, radius, originalModel, newModel, p6); }
	void REMOVE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, BOOL p6) { Call<void>(0xd9067f6d136ba4, x, y, z, radius, originalModel, newModel, p6); }
	void REMOVE_MODEL_SWAP_f(float x, float y, float z, float radius, Hash originalModel, Hash newModel, BOOL p6) { FastCall<void>(0xd9067f6d136ba4, x, y, z, radius, originalModel, newModel, p6); }
	void CREATE_MODEL_HIDE(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { Call<void>(0x865cc374218013db, x, y, z, radius, modelHash, p5); }
	void CREATE_MODEL_HIDE_f(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { FastCall<void>(0x865cc374218013db, x, y, z, radius, modelHash, p5); }
	void CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { Call<void>(0xf1b40290aac4e2ac, x, y, z, radius, modelHash, p5); }
	void CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS_f(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { FastCall<void>(0xf1b40290aac4e2ac, x, y, z, radius, modelHash, p5); }
	void REMOVE_MODEL_HIDE(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { Call<void>(0xd9067f6d0e3753, x, y, z, radius, modelHash, p5); }
	void REMOVE_MODEL_HIDE_f(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { FastCall<void>(0xd9067f6d0e3753, x, y, z, radius, modelHash, p5); }
	void CREATE_FORCED_OBJECT(float x, float y, float z, Any p3, Hash modelHash, BOOL p5) { Call<void>(0x98a15375f6151562, x, y, z, p3, modelHash, p5); }
	void CREATE_FORCED_OBJECT_f(float x, float y, float z, Any p3, Hash modelHash, BOOL p5) { FastCall<void>(0x98a15375f6151562, x, y, z, p3, modelHash, p5); }
	void REMOVE_FORCED_OBJECT(float x, float y, float z, float p3, Hash modelHash) { Call<void>(0x5b1f52e367e69eea, x, y, z, p3, modelHash); }
	void REMOVE_FORCED_OBJECT_f(float x, float y, float z, float p3, Hash modelHash) { FastCall<void>(0x5b1f52e367e69eea, x, y, z, p3, modelHash); }
	void SET_ENTITY_NO_COLLISION_ENTITY(Entity entity1, Entity entity2, BOOL thisFrameOnly) { Call<void>(0x180631b643f22c2f, entity1, entity2, thisFrameOnly); }
	void SET_ENTITY_NO_COLLISION_ENTITY_f(Entity entity1, Entity entity2, BOOL thisFrameOnly) { FastCall<void>(0x180631b643f22c2f, entity1, entity2, thisFrameOnly); }
	void SET_ENTITY_MOTION_BLUR(Entity entity, BOOL toggle) { Call<void>(0x5c7d4cedba49d411, entity, toggle); }
	void SET_ENTITY_MOTION_BLUR_f(Entity entity, BOOL toggle) { FastCall<void>(0x5c7d4cedba49d411, entity, toggle); }
	void SET_CAN_AUTO_VAULT_ON_ENTITY(Entity entity, BOOL toggle) { Call<void>(0x36794a70e05c7c52, entity, toggle); }
	void SET_CAN_AUTO_VAULT_ON_ENTITY_f(Entity entity, BOOL toggle) { FastCall<void>(0x36794a70e05c7c52, entity, toggle); }
	void SET_CAN_CLIMB_ON_ENTITY(Entity entity, BOOL toggle) { Call<void>(0x90d60d75e086270d, entity, toggle); }
	void SET_CAN_CLIMB_ON_ENTITY_f(Entity entity, BOOL toggle) { FastCall<void>(0x90d60d75e086270d, entity, toggle); }
	void SET_WAIT_FOR_COLLISIONS_BEFORE_PROBE(Entity entity, BOOL toggle) { Call<void>(0xd237f5a85e1d15cb, entity, toggle); }
	void SET_WAIT_FOR_COLLISIONS_BEFORE_PROBE_f(Entity entity, BOOL toggle) { FastCall<void>(0xd237f5a85e1d15cb, entity, toggle); }
	void SET_ENTITY_NOWEAPONDECALS(Entity entity, BOOL p1) { Call<void>(0x6d39aaf5f58beb62, entity, p1); }
	void SET_ENTITY_NOWEAPONDECALS_f(Entity entity, BOOL p1) { FastCall<void>(0x6d39aaf5f58beb62, entity, p1); }
	void SET_ENTITY_USE_MAX_DISTANCE_FOR_WATER_REFLECTION(Entity entity, BOOL p1) { Call<void>(0x51b023993dafca41, entity, p1); }
	void SET_ENTITY_USE_MAX_DISTANCE_FOR_WATER_REFLECTION_f(Entity entity, BOOL p1) { FastCall<void>(0x51b023993dafca41, entity, p1); }
	Vector3* GET_ENTITY_BONE_ROTATION(Entity entity, int boneIndex) { Call<Vector3*>(0x7a9a2a7ea472c0a6, entity, boneIndex); return GetVector(); }
	Vector3* GET_ENTITY_BONE_POSTION(Entity entity, int boneIndex) { Call<Vector3*>(0xca26015e82b5c120, entity, boneIndex); return GetVector(); }
	Vector3* GET_ENTITY_BONE_OBJECT_ROTATION(Entity entity, int boneIndex) { Call<Vector3*>(0xb858e0d3c2ad7256, entity, boneIndex); return GetVector(); }
	Vector3* GET_ENTITY_BONE_OBJECT_POSTION(Entity entity, int boneIndex) { Call<Vector3*>(0x5f259d4de861970, entity, boneIndex); return GetVector(); }
	int GET_ENTITY_BONE_COUNT(Entity entity) { return Call<int>(0x69f783dd32d568c7, entity); }
	int GET_ENTITY_BONE_COUNT_f(Entity entity) { return FastCall<int>(0x69f783dd32d568c7, entity); }
	void ENABLE_ENTITY_BULLET_COLLISION(Entity entity) { Call<void>(0x47e59881d6114235, entity); }
	void ENABLE_ENTITY_BULLET_COLLISION_f(Entity entity) { FastCall<void>(0x47e59881d6114235, entity); }
	void SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_ENTITY(Entity entity1, Entity entity2) { Call<void>(0xf1fa4988a9edbc2a, entity1, entity2); }
	void SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_ENTITY_f(Entity entity1, Entity entity2) { FastCall<void>(0xf1fa4988a9edbc2a, entity1, entity2); }
	void SET_ENTITY_CANT_CAUSE_COLLISION_DAMAGED_ENTITY(Entity entity1, Entity entity2) { Call<void>(0x652c1ecbd87a576c, entity1, entity2); }
	void SET_ENTITY_CANT_CAUSE_COLLISION_DAMAGED_ENTITY_f(Entity entity1, Entity entity2) { FastCall<void>(0x652c1ecbd87a576c, entity1, entity2); }
	void SET_ALLOW_MIGRATE_TO_SPECTATOR(Entity entity, Any p1) { Call<void>(0xb7b4d920a80dcfb2, entity, p1); }
	void SET_ALLOW_MIGRATE_TO_SPECTATOR_f(Entity entity, Any p1) { FastCall<void>(0xb7b4d920a80dcfb2, entity, p1); }
	Entity GET_ENTITY_OF_TYPE_ATTACHED_TO_ENTITY(Entity entity, Hash modelHash) { return Call<Entity>(0xef6eb92ac1e5871c, entity, modelHash); }
	Entity GET_ENTITY_OF_TYPE_ATTACHED_TO_ENTITY_f(Entity entity, Hash modelHash) { return FastCall<Entity>(0xef6eb92ac1e5871c, entity, modelHash); }
	void SET_PICK_UP_BY_CARGOBOB_DISABLED(Entity entity, BOOL toggle) { Call<void>(0x5565036ec612657d, entity, toggle); }
	void SET_PICK_UP_BY_CARGOBOB_DISABLED_f(Entity entity, BOOL toggle) { FastCall<void>(0x5565036ec612657d, entity, toggle); }
}
namespace EVENT
{
	void SET_DECISION_MAKER(Ped ped, Hash name) { Call<void>(0x714b268ee4bc4f9e, ped, name); }
	void SET_DECISION_MAKER_f(Ped ped, Hash name) { FastCall<void>(0x714b268ee4bc4f9e, ped, name); }
	void CLEAR_DECISION_MAKER_EVENT_RESPONSE(Hash name, int eventType) { Call<void>(0xed2df55bcafa3d2, name, eventType); }
	void CLEAR_DECISION_MAKER_EVENT_RESPONSE_f(Hash name, int eventType) { FastCall<void>(0xed2df55bcafa3d2, name, eventType); }
	void BLOCK_DECISION_MAKER_EVENT(Hash name, int eventType) { Call<void>(0xba5a08b396fcb4e, name, eventType); }
	void BLOCK_DECISION_MAKER_EVENT_f(Hash name, int eventType) { FastCall<void>(0xba5a08b396fcb4e, name, eventType); }
	void UNBLOCK_DECISION_MAKER_EVENT(Hash name, int eventType) { Call<void>(0xe8add029a58a58a7, name, eventType); }
	void UNBLOCK_DECISION_MAKER_EVENT_f(Hash name, int eventType) { FastCall<void>(0xe8add029a58a58a7, name, eventType); }
	int ADD_SHOCKING_EVENT_AT_POSITION(int eventType, float x, float y, float z, float duration) { return Call<int>(0xc24d8224ebdf736f, eventType, x, y, z, duration); }
	int ADD_SHOCKING_EVENT_AT_POSITION_f(int eventType, float x, float y, float z, float duration) { return FastCall<int>(0xc24d8224ebdf736f, eventType, x, y, z, duration); }
	int ADD_SHOCKING_EVENT_FOR_ENTITY(int eventType, Entity entity, float duration) { return Call<int>(0xbbf26ffb4e9a4d3f, eventType, entity, duration); }
	int ADD_SHOCKING_EVENT_FOR_ENTITY_f(int eventType, Entity entity, float duration) { return FastCall<int>(0xbbf26ffb4e9a4d3f, eventType, entity, duration); }
	BOOL IS_SHOCKING_EVENT_IN_SPHERE(int eventType, float x, float y, float z, float radius) { return Call<BOOL>(0x9020b76a3a0eddd8, eventType, x, y, z, radius); }
	BOOL IS_SHOCKING_EVENT_IN_SPHERE_f(int eventType, float x, float y, float z, float radius) { return FastCall<BOOL>(0x9020b76a3a0eddd8, eventType, x, y, z, radius); }
	BOOL REMOVE_SHOCKING_EVENT(ScrHandle event) { return Call<BOOL>(0xf06b9594b3ad3096, event); }
	BOOL REMOVE_SHOCKING_EVENT_f(ScrHandle event) { return FastCall<BOOL>(0xf06b9594b3ad3096, event); }
	void REMOVE_ALL_SHOCKING_EVENTS(BOOL p0) { Call<void>(0x484e9d1b5779693f, p0); }
	void REMOVE_ALL_SHOCKING_EVENTS_f(BOOL p0) { FastCall<void>(0x484e9d1b5779693f, p0); }
	void REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS() { Call<void>(0xfc0ae189d3fe8249); }
	void REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS_f() { FastCall<void>(0xfc0ae189d3fe8249); }
	void SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME() { Call<void>(0x118a54785905c732); }
	void SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME_f() { FastCall<void>(0x118a54785905c732); }
	void SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME(int eventType) { Call<void>(0x2b5aa0d771e5252c, eventType); }
	void SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME_f(int eventType) { FastCall<void>(0x2b5aa0d771e5252c, eventType); }
	void SUPPRESS_AGITATION_EVENTS_NEXT_FRAME() { Call<void>(0xd8d5d50f4986e382); }
	void SUPPRESS_AGITATION_EVENTS_NEXT_FRAME_f() { FastCall<void>(0xd8d5d50f4986e382); }
}
namespace FILES
{
	int GET_NUM_TATTOO_SHOP_DLC_ITEMS(int character) { return Call<int>(0x8836bd33684d5363, character); }
	int GET_NUM_TATTOO_SHOP_DLC_ITEMS_f(int character) { return FastCall<int>(0x8836bd33684d5363, character); }
	BOOL GET_TATTOO_SHOP_DLC_ITEM_DATA(int characterType, int decorationIndex, Any* outComponent) { return Call<BOOL>(0x5c192177bc53eab2, characterType, decorationIndex, outComponent); }
	BOOL GET_TATTOO_SHOP_DLC_ITEM_DATA_f(int characterType, int decorationIndex, Any* outComponent) { return FastCall<BOOL>(0x5c192177bc53eab2, characterType, decorationIndex, outComponent); }
	int GET_TATTOO_SHOP_DLC_ITEM_INDEX(Hash overlayHash, Any p1, int character) { return Call<int>(0x270b0d7fce758eaa, overlayHash, p1, character); }
	int GET_TATTOO_SHOP_DLC_ITEM_INDEX_f(Hash overlayHash, Any p1, int character) { return FastCall<int>(0x270b0d7fce758eaa, overlayHash, p1, character); }
	void INIT_SHOP_PED_COMPONENT(Any* outComponent) { Call<void>(0x7314ec501f46ab93, outComponent); }
	void INIT_SHOP_PED_COMPONENT_f(Any* outComponent) { FastCall<void>(0x7314ec501f46ab93, outComponent); }
	void INIT_SHOP_PED_PROP(Any* outProp) { Call<void>(0x31aec71e407342ed, outProp); }
	void INIT_SHOP_PED_PROP_f(Any* outProp) { FastCall<void>(0x31aec71e407342ed, outProp); }
	int SETUP_SHOP_PED_APPAREL_QUERY(int p0, int p1, int p2, int p3) { return Call<int>(0xb7c323a9382152cb, p0, p1, p2, p3); }
	int SETUP_SHOP_PED_APPAREL_QUERY_f(int p0, int p1, int p2, int p3) { return FastCall<int>(0xb7c323a9382152cb, p0, p1, p2, p3); }
	int SETUP_SHOP_PED_APPAREL_QUERY_TU(int character, int p1, int p2, BOOL p3, int p4, int componentId) { return Call<int>(0x9d92e93aede32475, character, p1, p2, p3, p4, componentId); }
	int SETUP_SHOP_PED_APPAREL_QUERY_TU_f(int character, int p1, int p2, BOOL p3, int p4, int componentId) { return FastCall<int>(0x9d92e93aede32475, character, p1, p2, p3, p4, componentId); }
	void GET_SHOP_PED_QUERY_COMPONENT(int componentId, Any* outComponent) { Call<void>(0x8e2e43c92e2614d6, componentId, outComponent); }
	void GET_SHOP_PED_QUERY_COMPONENT_f(int componentId, Any* outComponent) { FastCall<void>(0x8e2e43c92e2614d6, componentId, outComponent); }
	int GET_SHOP_PED_QUERY_COMPONENT_INDEX(Hash componentHash) { return Call<int>(0x877dc62a55023009, componentHash); }
	int GET_SHOP_PED_QUERY_COMPONENT_INDEX_f(Hash componentHash) { return FastCall<int>(0x877dc62a55023009, componentHash); }
	void GET_SHOP_PED_COMPONENT(Hash componentHash, Any* outComponent) { Call<void>(0xbcbbafbd171607ad, componentHash, outComponent); }
	void GET_SHOP_PED_COMPONENT_f(Hash componentHash, Any* outComponent) { FastCall<void>(0xbcbbafbd171607ad, componentHash, outComponent); }
	void GET_SHOP_PED_QUERY_PROP(int componentId, Any* outProp) { Call<void>(0xdabb9d01de11dbca, componentId, outProp); }
	void GET_SHOP_PED_QUERY_PROP_f(int componentId, Any* outProp) { FastCall<void>(0xdabb9d01de11dbca, componentId, outProp); }
	int GET_SHOP_PED_QUERY_PROP_INDEX(Hash componentHash) { return Call<int>(0x379b7058a5f1effd, componentHash); }
	int GET_SHOP_PED_QUERY_PROP_INDEX_f(Hash componentHash) { return FastCall<int>(0x379b7058a5f1effd, componentHash); }
	void GET_SHOP_PED_PROP(Hash componentHash, Any* outProp) { Call<void>(0xbea2e58377ed3e93, componentHash, outProp); }
	void GET_SHOP_PED_PROP_f(Hash componentHash, Any* outProp) { FastCall<void>(0xbea2e58377ed3e93, componentHash, outProp); }
	Hash GET_HASH_NAME_FOR_COMPONENT(Entity entity, int componentId, int drawableVariant, int textureVariant) { return Call<Hash>(0x75f518ea616eaadb, entity, componentId, drawableVariant, textureVariant); }
	Hash GET_HASH_NAME_FOR_COMPONENT_f(Entity entity, int componentId, int drawableVariant, int textureVariant) { return FastCall<Hash>(0x75f518ea616eaadb, entity, componentId, drawableVariant, textureVariant); }
	Hash GET_HASH_NAME_FOR_PROP(Entity entity, int componentId, int propIndex, int propTextureIndex) { return Call<Hash>(0xb58695d1970ad6a5, entity, componentId, propIndex, propTextureIndex); }
	Hash GET_HASH_NAME_FOR_PROP_f(Entity entity, int componentId, int propIndex, int propTextureIndex) { return FastCall<Hash>(0xb58695d1970ad6a5, entity, componentId, propIndex, propTextureIndex); }
	int GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT(Hash componentHash) { return Call<int>(0x39bdde7824ebdddd, componentHash); }
	int GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT_f(Hash componentHash) { return FastCall<int>(0x39bdde7824ebdddd, componentHash); }
	int GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT(Hash propHash) { return Call<int>(0x99aa6e15092b3043, propHash); }
	int GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT_f(Hash propHash) { return FastCall<int>(0x99aa6e15092b3043, propHash); }
	void GET_VARIANT_COMPONENT(Hash componentHash, int variantComponentIndex, Hash* nameHash, int* enumValue, int* componentType) { Call<void>(0x7b3bb40ea70e24ba, componentHash, variantComponentIndex, nameHash, enumValue, componentType); }
	void GET_VARIANT_COMPONENT_f(Hash componentHash, int variantComponentIndex, Hash* nameHash, int* enumValue, int* componentType) { FastCall<void>(0x7b3bb40ea70e24ba, componentHash, variantComponentIndex, nameHash, enumValue, componentType); }
	void GET_VARIANT_PROP(Hash componentHash, int variantPropIndex, Hash* nameHash, int* enumValue, int* anchorPoint) { Call<void>(0x938410b164d06d66, componentHash, variantPropIndex, nameHash, enumValue, anchorPoint); }
	void GET_VARIANT_PROP_f(Hash componentHash, int variantPropIndex, Hash* nameHash, int* enumValue, int* anchorPoint) { FastCall<void>(0x938410b164d06d66, componentHash, variantPropIndex, nameHash, enumValue, anchorPoint); }
	int GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT(Hash componentHash) { return Call<int>(0xf6a9b0d4ba2995bd, componentHash); }
	int GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT_f(Hash componentHash) { return FastCall<int>(0xf6a9b0d4ba2995bd, componentHash); }
	int GET_SHOP_PED_APPAREL_FORCED_PROP_COUNT(Hash componentHash) { return Call<int>(0x7f4500b3b0720c63, componentHash); }
	int GET_SHOP_PED_APPAREL_FORCED_PROP_COUNT_f(Hash componentHash) { return FastCall<int>(0x7f4500b3b0720c63, componentHash); }
	void GET_FORCED_COMPONENT(Hash componentHash, int forcedComponentIndex, Hash* nameHash, int* enumValue, int* componentType) { Call<void>(0x7789a9d5e32d54e0, componentHash, forcedComponentIndex, nameHash, enumValue, componentType); }
	void GET_FORCED_COMPONENT_f(Hash componentHash, int forcedComponentIndex, Hash* nameHash, int* enumValue, int* componentType) { FastCall<void>(0x7789a9d5e32d54e0, componentHash, forcedComponentIndex, nameHash, enumValue, componentType); }
	void GET_FORCED_PROP(Hash componentHash, int forcedPropIndex, Hash* nameHash, int* enumValue, int* anchorPoint) { Call<void>(0x7831d2a86d113d80, componentHash, forcedPropIndex, nameHash, enumValue, anchorPoint); }
	void GET_FORCED_PROP_f(Hash componentHash, int forcedPropIndex, Hash* nameHash, int* enumValue, int* anchorPoint) { FastCall<void>(0x7831d2a86d113d80, componentHash, forcedPropIndex, nameHash, enumValue, anchorPoint); }
	BOOL DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(Hash componentHash, Hash restrictionTagHash, int componentId) { return Call<BOOL>(0x2b2fc547331d6a29, componentHash, restrictionTagHash, componentId); }
	BOOL DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG_f(Hash componentHash, Hash restrictionTagHash, int componentId) { return FastCall<BOOL>(0x2b2fc547331d6a29, componentHash, restrictionTagHash, componentId); }
	BOOL DOES_CURRENT_PED_COMPONENT_HAVE_RESTRICTION_TAG(Ped ped, int componentId, Hash restrictionTagHash) { return Call<BOOL>(0x124e50807c7ad12e, ped, componentId, restrictionTagHash); }
	BOOL DOES_CURRENT_PED_COMPONENT_HAVE_RESTRICTION_TAG_f(Ped ped, int componentId, Hash restrictionTagHash) { return FastCall<BOOL>(0x124e50807c7ad12e, ped, componentId, restrictionTagHash); }
	BOOL DOES_CURRENT_PED_PROP_HAVE_RESTRICTION_TAG(Ped ped, int componentId, Hash restrictionTagHash) { return Call<BOOL>(0x352174ea84904df0, ped, componentId, restrictionTagHash); }
	BOOL DOES_CURRENT_PED_PROP_HAVE_RESTRICTION_TAG_f(Ped ped, int componentId, Hash restrictionTagHash) { return FastCall<BOOL>(0x352174ea84904df0, ped, componentId, restrictionTagHash); }
	int SETUP_SHOP_PED_OUTFIT_QUERY(int character, BOOL p1) { return Call<int>(0x2bf47eafa6f75683, character, p1); }
	int SETUP_SHOP_PED_OUTFIT_QUERY_f(int character, BOOL p1) { return FastCall<int>(0x2bf47eafa6f75683, character, p1); }
	void GET_SHOP_PED_QUERY_OUTFIT(int outfitIndex, Any* outfit) { Call<void>(0x1a4864029f81a8aa, outfitIndex, outfit); }
	void GET_SHOP_PED_QUERY_OUTFIT_f(int outfitIndex, Any* outfit) { FastCall<void>(0x1a4864029f81a8aa, outfitIndex, outfit); }
	void GET_SHOP_PED_OUTFIT(Any p0, Any* p1) { Call<void>(0xa17f9285300f7d33, p0, p1); }
	void GET_SHOP_PED_OUTFIT_f(Any p0, Any* p1) { FastCall<void>(0xa17f9285300f7d33, p0, p1); }
	int GET_SHOP_PED_OUTFIT_LOCATE(Any p0) { return Call<int>(0x1911ee8a3d6ed3de, p0); }
	int GET_SHOP_PED_OUTFIT_LOCATE_f(Any p0) { return FastCall<int>(0x1911ee8a3d6ed3de, p0); }
	BOOL GET_SHOP_PED_OUTFIT_PROP_VARIANT(Hash outfitHash, int variantIndex, Any* outPropVariant) { return Call<BOOL>(0xe5a81e3203dc0315, outfitHash, variantIndex, outPropVariant); }
	BOOL GET_SHOP_PED_OUTFIT_PROP_VARIANT_f(Hash outfitHash, int variantIndex, Any* outPropVariant) { return FastCall<BOOL>(0xe5a81e3203dc0315, outfitHash, variantIndex, outPropVariant); }
	BOOL GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT(Hash outfitHash, int variantIndex, Any* outComponentVariant) { return Call<BOOL>(0x10b789464a65e2f7, outfitHash, variantIndex, outComponentVariant); }
	BOOL GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT_f(Hash outfitHash, int variantIndex, Any* outComponentVariant) { return FastCall<BOOL>(0x10b789464a65e2f7, outfitHash, variantIndex, outComponentVariant); }
	int GET_NUM_DLC_VEHICLES() { return Call<int>(0xaeaf65e3f8be63ed); }
	int GET_NUM_DLC_VEHICLES_f() { return FastCall<int>(0xaeaf65e3f8be63ed); }
	Hash GET_DLC_VEHICLE_MODEL(int dlcVehicleIndex) { return Call<Hash>(0x37dceca95eb55ac9, dlcVehicleIndex); }
	Hash GET_DLC_VEHICLE_MODEL_f(int dlcVehicleIndex) { return FastCall<Hash>(0x37dceca95eb55ac9, dlcVehicleIndex); }
	BOOL GET_DLC_VEHICLE_DATA(int dlcVehicleIndex, Any* outData) { return Call<BOOL>(0x9eb48bc3662297ea, dlcVehicleIndex, outData); }
	BOOL GET_DLC_VEHICLE_DATA_f(int dlcVehicleIndex, Any* outData) { return FastCall<BOOL>(0x9eb48bc3662297ea, dlcVehicleIndex, outData); }
	int GET_DLC_VEHICLE_FLAGS(int dlcVehicleIndex) { return Call<int>(0x37dceca95e514e27, dlcVehicleIndex); }
	int GET_DLC_VEHICLE_FLAGS_f(int dlcVehicleIndex) { return FastCall<int>(0x37dceca95e514e27, dlcVehicleIndex); }
	int GET_NUM_DLC_WEAPONS() { return Call<int>(0x9a47b8f70b00b3d1); }
	int GET_NUM_DLC_WEAPONS_f() { return FastCall<int>(0x9a47b8f70b00b3d1); }
	int GET_NUM_DLC_WEAPONS_SP() { return Call<int>(0xc06d94a966bedd8b); }
	int GET_NUM_DLC_WEAPONS_SP_f() { return FastCall<int>(0xc06d94a966bedd8b); }
	BOOL GET_DLC_WEAPON_DATA(int dlcWeaponIndex, Any* outData) { return Call<BOOL>(0xec5b4bced08bbf60, dlcWeaponIndex, outData); }
	BOOL GET_DLC_WEAPON_DATA_f(int dlcWeaponIndex, Any* outData) { return FastCall<BOOL>(0xec5b4bced08bbf60, dlcWeaponIndex, outData); }
	BOOL GET_DLC_WEAPON_DATA_SP(int dlcWeaponIndex, Any* outData) { return Call<BOOL>(0x143ad83eb694f39c, dlcWeaponIndex, outData); }
	BOOL GET_DLC_WEAPON_DATA_SP_f(int dlcWeaponIndex, Any* outData) { return FastCall<BOOL>(0x143ad83eb694f39c, dlcWeaponIndex, outData); }
	int GET_NUM_DLC_WEAPON_COMPONENTS(int dlcWeaponIndex) { return Call<int>(0xaed53452bfa9b2b3, dlcWeaponIndex); }
	int GET_NUM_DLC_WEAPON_COMPONENTS_f(int dlcWeaponIndex) { return FastCall<int>(0xaed53452bfa9b2b3, dlcWeaponIndex); }
	int GET_NUM_DLC_WEAPON_COMPONENTS_SP(int dlcWeaponIndex) { return Call<int>(0x7cd3e98e04f3db69, dlcWeaponIndex); }
	int GET_NUM_DLC_WEAPON_COMPONENTS_SP_f(int dlcWeaponIndex) { return FastCall<int>(0x7cd3e98e04f3db69, dlcWeaponIndex); }
	BOOL GET_DLC_WEAPON_COMPONENT_DATA(int dlcWeaponIndex, int dlcWeapCompIndex, Any* ComponentDataPtr) { return Call<BOOL>(0x925dc02944d02202, dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr); }
	BOOL GET_DLC_WEAPON_COMPONENT_DATA_f(int dlcWeaponIndex, int dlcWeapCompIndex, Any* ComponentDataPtr) { return FastCall<BOOL>(0x925dc02944d02202, dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr); }
	BOOL GET_DLC_WEAPON_COMPONENT_DATA_SP(int dlcWeaponIndex, int dlcWeapCompIndex, Any* ComponentDataPtr) { return Call<BOOL>(0xcbdd027ed8a6f5ba, dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr); }
	BOOL GET_DLC_WEAPON_COMPONENT_DATA_SP_f(int dlcWeaponIndex, int dlcWeapCompIndex, Any* ComponentDataPtr) { return FastCall<BOOL>(0xcbdd027ed8a6f5ba, dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr); }
	BOOL IS_CONTENT_ITEM_LOCKED(Hash itemHash) { return Call<BOOL>(0x948255d69cba643b, itemHash); }
	BOOL IS_CONTENT_ITEM_LOCKED_f(Hash itemHash) { return FastCall<BOOL>(0x948255d69cba643b, itemHash); }
	BOOL IS_DLC_VEHICLE_MOD(Hash hash) { return Call<BOOL>(0x7a535186aa240096, hash); }
	BOOL IS_DLC_VEHICLE_MOD_f(Hash hash) { return FastCall<BOOL>(0x7a535186aa240096, hash); }
	Hash GET_DLC_VEHICLE_MOD_LOCK_HASH(Hash hash) { return Call<Hash>(0xa7f08178e024245, hash); }
	Hash GET_DLC_VEHICLE_MOD_LOCK_HASH_f(Hash hash) { return FastCall<Hash>(0xa7f08178e024245, hash); }
	void EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL(Hash hash) { Call<void>(0xddf48eb4121c894e, hash); }
	void EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL_f(Hash hash) { FastCall<void>(0xddf48eb4121c894e, hash); }
	void REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL(Hash hash) { Call<void>(0x29ed0afcb573e7dd, hash); }
	void REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL_f(Hash hash) { FastCall<void>(0x29ed0afcb573e7dd, hash); }
}
namespace FIRE
{
	FireId START_SCRIPT_FIRE(float X, float Y, float Z, int maxChildren, BOOL isGasFire) { return Call<FireId>(0x4bdfabee1c000ad, X, Y, Z, maxChildren, isGasFire); }
	FireId START_SCRIPT_FIRE_f(float X, float Y, float Z, int maxChildren, BOOL isGasFire) { return FastCall<FireId>(0x4bdfabee1c000ad, X, Y, Z, maxChildren, isGasFire); }
	void REMOVE_SCRIPT_FIRE(FireId fireHandle) { Call<void>(0x1a582c84bbfccdef, fireHandle); }
	void REMOVE_SCRIPT_FIRE_f(FireId fireHandle) { FastCall<void>(0x1a582c84bbfccdef, fireHandle); }
	FireId START_ENTITY_FIRE(Entity entity) { return Call<FireId>(0x496408c41101c95, entity); }
	FireId START_ENTITY_FIRE_f(Entity entity) { return FastCall<FireId>(0x496408c41101c95, entity); }
	void STOP_ENTITY_FIRE(Entity entity) { Call<void>(0x7e3115ef840eb055, entity); }
	void STOP_ENTITY_FIRE_f(Entity entity) { FastCall<void>(0x7e3115ef840eb055, entity); }
	BOOL IS_ENTITY_ON_FIRE(Entity entity) { return Call<BOOL>(0xa3f62d4b215187ef, entity); }
	BOOL IS_ENTITY_ON_FIRE_f(Entity entity) { return FastCall<BOOL>(0xa3f62d4b215187ef, entity); }
	int GET_NUMBER_OF_FIRES_IN_RANGE(float x, float y, float z, float radius) { return Call<int>(0xf6080a992e945b80, x, y, z, radius); }
	int GET_NUMBER_OF_FIRES_IN_RANGE_f(float x, float y, float z, float radius) { return FastCall<int>(0xf6080a992e945b80, x, y, z, radius); }
	void SET_FLAMMABILITY_MULTIPLIER(float p0) { Call<void>(0xcce77fcea30ff974, p0); }
	void SET_FLAMMABILITY_MULTIPLIER_f(float p0) { FastCall<void>(0xcce77fcea30ff974, p0); }
	void STOP_FIRE_IN_RANGE(float x, float y, float z, float radius) { Call<void>(0xbf682be910f403ef, x, y, z, radius); }
	void STOP_FIRE_IN_RANGE_f(float x, float y, float z, float radius) { FastCall<void>(0xbf682be910f403ef, x, y, z, radius); }
	BOOL GET_CLOSEST_FIRE_POS(Vector3* outPosition, float x, float y, float z) { return Call<BOOL>(0xea1d33dd6d9871da, outPosition, x, y, z); }
	BOOL GET_CLOSEST_FIRE_POS_f(Vector3* outPosition, float x, float y, float z) { return FastCall<BOOL>(0xea1d33dd6d9871da, outPosition, x, y, z); }
	void ADD_EXPLOSION(float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake, BOOL noDamage) { Call<void>(0xdf4d918888714cb7, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake, noDamage); }
	void ADD_EXPLOSION_f(float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake, BOOL noDamage) { FastCall<void>(0xdf4d918888714cb7, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake, noDamage); }
	void ADD_OWNED_EXPLOSION(Ped ped, float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake) { Call<void>(0xfb60b71abb22c5fd, ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake); }
	void ADD_OWNED_EXPLOSION_f(Ped ped, float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake) { FastCall<void>(0xfb60b71abb22c5fd, ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake); }
	void ADD_EXPLOSION_WITH_USER_VFX(float x, float y, float z, int explosionType, Hash explosionFx, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake) { Call<void>(0x4e8572e93819b05, x, y, z, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake); }
	void ADD_EXPLOSION_WITH_USER_VFX_f(float x, float y, float z, int explosionType, Hash explosionFx, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake) { FastCall<void>(0x4e8572e93819b05, x, y, z, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake); }
	BOOL IS_EXPLOSION_IN_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) { return Call<BOOL>(0x8ce162ad62494848, explosionType, x1, y1, z1, x2, y2, z2); }
	BOOL IS_EXPLOSION_IN_AREA_f(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<BOOL>(0x8ce162ad62494848, explosionType, x1, y1, z1, x2, y2, z2); }
	BOOL IS_EXPLOSION_ACTIVE_IN_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) { return Call<BOOL>(0x2d05e2bd5721ab2d, explosionType, x1, y1, z1, x2, y2, z2); }
	BOOL IS_EXPLOSION_ACTIVE_IN_AREA_f(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<BOOL>(0x2d05e2bd5721ab2d, explosionType, x1, y1, z1, x2, y2, z2); }
	BOOL IS_EXPLOSION_IN_SPHERE(int explosionType, float x, float y, float z, float radius) { return Call<BOOL>(0xda136cde13b4d8c8, explosionType, x, y, z, radius); }
	BOOL IS_EXPLOSION_IN_SPHERE_f(int explosionType, float x, float y, float z, float radius) { return FastCall<BOOL>(0xda136cde13b4d8c8, explosionType, x, y, z, radius); }
	Entity GET_OWNER_OF_EXPLOSION_IN_SPHERE(int explosionType, float x, float y, float z, float radius) { return Call<Entity>(0x50dbfa23c9b23c8a, explosionType, x, y, z, radius); }
	Entity GET_OWNER_OF_EXPLOSION_IN_SPHERE_f(int explosionType, float x, float y, float z, float radius) { return FastCall<Entity>(0x50dbfa23c9b23c8a, explosionType, x, y, z, radius); }
	BOOL IS_EXPLOSION_IN_ANGLED_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float width) { return Call<BOOL>(0x3ff0f3cd3f0b6200, explosionType, x1, y1, z1, x2, y2, z2, width); }
	BOOL IS_EXPLOSION_IN_ANGLED_AREA_f(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float width) { return FastCall<BOOL>(0x3ff0f3cd3f0b6200, explosionType, x1, y1, z1, x2, y2, z2, width); }
	Entity GET_OWNER_OF_EXPLOSION_IN_ANGLED_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float radius) { return Call<Entity>(0xd86d7734fa00077e, explosionType, x1, y1, z1, x2, y2, z2, radius); }
	Entity GET_OWNER_OF_EXPLOSION_IN_ANGLED_AREA_f(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float radius) { return FastCall<Entity>(0xd86d7734fa00077e, explosionType, x1, y1, z1, x2, y2, z2, radius); }
}
namespace GRAPHICS
{
	void SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE(BOOL enabled) { Call<void>(0x82d87d79aedf59b1, enabled); }
	void SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE_f(BOOL enabled) { FastCall<void>(0x82d87d79aedf59b1, enabled); }
	void DRAW_DEBUG_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int r, int g, int b, int alpha) { Call<void>(0xc10adec455cea85b, x1, y1, z1, x2, y2, z2, r, g, b, alpha); }
	void DRAW_DEBUG_LINE_f(float x1, float y1, float z1, float x2, float y2, float z2, int r, int g, int b, int alpha) { FastCall<void>(0xc10adec455cea85b, x1, y1, z1, x2, y2, z2, r, g, b, alpha); }
	void DRAW_DEBUG_LINE_WITH_TWO_COLOURS(float x1, float y1, float z1, float x2, float y2, float z2, int r1, int g1, int b1, int r2, int g2, int b2, int alpha1, int alpha2) { Call<void>(0x37392784b0fdb25f, x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2); }
	void DRAW_DEBUG_LINE_WITH_TWO_COLOURS_f(float x1, float y1, float z1, float x2, float y2, float z2, int r1, int g1, int b1, int r2, int g2, int b2, int alpha1, int alpha2) { FastCall<void>(0x37392784b0fdb25f, x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2); }
	void DRAW_DEBUG_SPHERE(float x, float y, float z, float radius, int red, int green, int blue, int alpha) { Call<void>(0xa9ce3f062917de74, x, y, z, radius, red, green, blue, alpha); }
	void DRAW_DEBUG_SPHERE_f(float x, float y, float z, float radius, int red, int green, int blue, int alpha) { FastCall<void>(0xa9ce3f062917de74, x, y, z, radius, red, green, blue, alpha); }
	void DRAW_DEBUG_BOX(float x1, float y1, float z1, float x2, float y2, float z2, int r, int g, int b, int alpha) { Call<void>(0x9adf51823450d864, x1, y1, z1, x2, y2, z2, r, g, b, alpha); }
	void DRAW_DEBUG_BOX_f(float x1, float y1, float z1, float x2, float y2, float z2, int r, int g, int b, int alpha) { FastCall<void>(0x9adf51823450d864, x1, y1, z1, x2, y2, z2, r, g, b, alpha); }
	void DRAW_DEBUG_CROSS(float x, float y, float z, float size, int red, int green, int blue, int alpha) { Call<void>(0x6050f9c6638bac99, x, y, z, size, red, green, blue, alpha); }
	void DRAW_DEBUG_CROSS_f(float x, float y, float z, float size, int red, int green, int blue, int alpha) { FastCall<void>(0x6050f9c6638bac99, x, y, z, size, red, green, blue, alpha); }
	void DRAW_DEBUG_TEXT(char* text, float x, float y, float z, int red, int green, int blue, int alpha) { Call<void>(0xc10adec455d23d94, text, x, y, z, red, green, blue, alpha); }
	void DRAW_DEBUG_TEXT_f(char* text, float x, float y, float z, int red, int green, int blue, int alpha) { FastCall<void>(0xc10adec455d23d94, text, x, y, z, red, green, blue, alpha); }
	void DRAW_DEBUG_TEXT_2D(char* text, float x, float y, float z, int red, int green, int blue, int alpha) { Call<void>(0x8ff9a1bf1ced54dd, text, x, y, z, red, green, blue, alpha); }
	void DRAW_DEBUG_TEXT_2D_f(char* text, float x, float y, float z, int red, int green, int blue, int alpha) { FastCall<void>(0x8ff9a1bf1ced54dd, text, x, y, z, red, green, blue, alpha); }
	void DRAW_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) { Call<void>(0x36dab096e60f, x1, y1, z1, x2, y2, z2, red, green, blue, alpha); }
	void DRAW_LINE_f(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) { FastCall<void>(0x36dab096e60f, x1, y1, z1, x2, y2, z2, red, green, blue, alpha); }
	void DRAW_POLY(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha) { Call<void>(0x36dab098cde7, x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha); }
	void DRAW_POLY_f(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha) { FastCall<void>(0x36dab098cde7, x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha); }
	void DRAW_TEXTURED_POLY(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha, char* textureDict, char* textureName, float u1, float v1, float w1, float u2, float v2, float w2, float u3, float v3, float w3) { Call<void>(0x3f1f162096f8bbe7, x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3); }
	void DRAW_TEXTURED_POLY_f(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha, char* textureDict, char* textureName, float u1, float v1, float w1, float u2, float v2, float w2, float u3, float v3, float w3) { FastCall<void>(0x3f1f162096f8bbe7, x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3); }
	void DRAW_TEXTURED_POLY_WITH_THREE_COLOURS(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, float red1, float green1, float blue1, int alpha1, float red2, float green2, float blue2, int alpha2, float red3, float green3, float blue3, int alpha3, char* textureDict, char* textureName, float u1, float v1, float w1, float u2, float v2, float w2, float u3, float v3, float w3) { Call<void>(0xdcda3295a82e41e5, x1, y1, z1, x2, y2, z2, x3, y3, z3, red1, green1, blue1, alpha1, red2, green2, blue2, alpha2, red3, green3, blue3, alpha3, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3); }
	void DRAW_TEXTURED_POLY_WITH_THREE_COLOURS_f(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, float red1, float green1, float blue1, int alpha1, float red2, float green2, float blue2, int alpha2, float red3, float green3, float blue3, int alpha3, char* textureDict, char* textureName, float u1, float v1, float w1, float u2, float v2, float w2, float u3, float v3, float w3) { FastCall<void>(0xdcda3295a82e41e5, x1, y1, z1, x2, y2, z2, x3, y3, z3, red1, green1, blue1, alpha1, red2, green2, blue2, alpha2, red3, green3, blue3, alpha3, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3); }
	void DRAW_BOX(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) { Call<void>(0x1c4fd701430, x1, y1, z1, x2, y2, z2, red, green, blue, alpha); }
	void DRAW_BOX_f(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) { FastCall<void>(0x1c4fd701430, x1, y1, z1, x2, y2, z2, red, green, blue, alpha); }
	void SET_BACKFACECULLING(BOOL toggle) { Call<void>(0x5bcb371c000e5ecf, toggle); }
	void SET_BACKFACECULLING_f(BOOL toggle) { FastCall<void>(0x5bcb371c000e5ecf, toggle); }
	void SET_DEPTHWRITING(BOOL toggle) { Call<void>(0x3455c6e8e5bc2996, toggle); }
	void SET_DEPTHWRITING_f(BOOL toggle) { FastCall<void>(0x3455c6e8e5bc2996, toggle); }
	BOOL BEGIN_TAKE_MISSION_CREATOR_PHOTO() { return Call<BOOL>(0x8762a2a4aec5564a); }
	BOOL BEGIN_TAKE_MISSION_CREATOR_PHOTO_f() { return FastCall<BOOL>(0x8762a2a4aec5564a); }
	int GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO() { return Call<int>(0xdc24caca41084018); }
	int GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO_f() { return FastCall<int>(0xdc24caca41084018); }
	void FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO() { Call<void>(0x6b690d1bcf22792b); }
	void FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO_f() { FastCall<void>(0x6b690d1bcf22792b); }
	BOOL LOAD_MISSION_CREATOR_PHOTO(Any* p0, Any p1, Any p2, Any p3) { return Call<BOOL>(0x6c3cfcb85cbe1bf3, p0, p1, p2, p3); }
	BOOL LOAD_MISSION_CREATOR_PHOTO_f(Any* p0, Any p1, Any p2, Any p3) { return FastCall<BOOL>(0x6c3cfcb85cbe1bf3, p0, p1, p2, p3); }
	int GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO(Any* p0) { return Call<int>(0x5e9481aa4aa0af37, p0); }
	int GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO_f(Any* p0) { return FastCall<int>(0x5e9481aa4aa0af37, p0); }
	BOOL BEGIN_CREATE_MISSION_CREATOR_PHOTO_PREVIEW() { return Call<BOOL>(0x7829a87794e36ae8); }
	BOOL BEGIN_CREATE_MISSION_CREATOR_PHOTO_PREVIEW_f() { return FastCall<BOOL>(0x7829a87794e36ae8); }
	int GET_STATUS_OF_CREATE_MISSION_CREATOR_PHOTO_PREVIEW() { return Call<int>(0xb4ad9afcb35eeb36); }
	int GET_STATUS_OF_CREATE_MISSION_CREATOR_PHOTO_PREVIEW_f() { return FastCall<int>(0xb4ad9afcb35eeb36); }
	void FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO_PREVIEW() { Call<void>(0xbbe4c8d4717c3494); }
	void FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO_PREVIEW_f() { FastCall<void>(0xbbe4c8d4717c3494); }
	BOOL BEGIN_TAKE_HIGH_QUALITY_PHOTO() { return Call<BOOL>(0x276b53d669ea17d7); }
	BOOL BEGIN_TAKE_HIGH_QUALITY_PHOTO_f() { return FastCall<BOOL>(0x276b53d669ea17d7); }
	int GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO() { return Call<int>(0xcc15c11c2a7e30c9); }
	int GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO_f() { return FastCall<int>(0xcc15c11c2a7e30c9); }
	void FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO() { Call<void>(0xce68f2882005c896); }
	void FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO_f() { FastCall<void>(0xce68f2882005c896); }
	void SET_TAKEN_PHOTO_IS_MUGSHOT(BOOL toggle) { Call<void>(0x902527f309666286, toggle); }
	void SET_TAKEN_PHOTO_IS_MUGSHOT_f(BOOL toggle) { FastCall<void>(0x902527f309666286, toggle); }
	void SET_ARENA_THEME_AND_VARIATION_FOR_TAKEN_PHOTO(Any p0, int p1) { Call<void>(0x8385d0059cf2f1e5, p0, p1); }
	void SET_ARENA_THEME_AND_VARIATION_FOR_TAKEN_PHOTO_f(Any p0, int p1) { FastCall<void>(0x8385d0059cf2f1e5, p0, p1); }
	void SET_ON_ISLAND_X_FOR_TAKEN_PHOTO(Any p0) { Call<void>(0x1701566fcc6836, p0); }
	void SET_ON_ISLAND_X_FOR_TAKEN_PHOTO_f(Any p0) { FastCall<void>(0x1701566fcc6836, p0); }
	BOOL SAVE_HIGH_QUALITY_PHOTO(int unused) { return Call<BOOL>(0xba9e0595e39b50d7, unused); }
	BOOL SAVE_HIGH_QUALITY_PHOTO_f(int unused) { return FastCall<BOOL>(0xba9e0595e39b50d7, unused); }
	int GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO() { return Call<int>(0x23dffa416adf2413); }
	int GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO_f() { return FastCall<int>(0x23dffa416adf2413); }
	BOOL BEGIN_CREATE_LOW_QUALITY_COPY_OF_PHOTO(Any p0) { return Call<BOOL>(0x76e645d69532ec7c, p0); }
	BOOL BEGIN_CREATE_LOW_QUALITY_COPY_OF_PHOTO_f(Any p0) { return FastCall<BOOL>(0x76e645d69532ec7c, p0); }
	int GET_STATUS_OF_CREATE_LOW_QUALITY_COPY_OF_PHOTO(int p0) { return Call<int>(0x6eea1fb20b26c3ca, p0); }
	int GET_STATUS_OF_CREATE_LOW_QUALITY_COPY_OF_PHOTO_f(int p0) { return FastCall<int>(0x6eea1fb20b26c3ca, p0); }
	void FREE_MEMORY_FOR_LOW_QUALITY_PHOTO() { Call<void>(0xacfbb2742ee1306); }
	void FREE_MEMORY_FOR_LOW_QUALITY_PHOTO_f() { FastCall<void>(0xacfbb2742ee1306); }
	void DRAW_LOW_QUALITY_PHOTO_TO_PHONE(BOOL p0, BOOL p1) { Call<void>(0xb14afc2326cff6bd, p0, p1); }
	void DRAW_LOW_QUALITY_PHOTO_TO_PHONE_f(BOOL p0, BOOL p1) { FastCall<void>(0xb14afc2326cff6bd, p0, p1); }
	int GET_MAXIMUM_NUMBER_OF_PHOTOS() { return Call<int>(0xcf3fdf4a22cbcbbb); }
	int GET_MAXIMUM_NUMBER_OF_PHOTOS_f() { return FastCall<int>(0xcf3fdf4a22cbcbbb); }
	int GET_MAXIMUM_NUMBER_OF_CLOUD_PHOTOS() { return Call<int>(0xfed0973fe843fda5); }
	int GET_MAXIMUM_NUMBER_OF_CLOUD_PHOTOS_f() { return FastCall<int>(0xfed0973fe843fda5); }
	int GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS() { return Call<int>(0xef8d0171b2a4c22c); }
	int GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS_f() { return FastCall<int>(0xef8d0171b2a4c22c); }
	BOOL QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS(Any p0) { return Call<BOOL>(0x96acbf64ab956ac5, p0); }
	BOOL QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS_f(Any p0) { return FastCall<BOOL>(0x96acbf64ab956ac5, p0); }
	int GET_STATUS_OF_SORTED_LIST_OPERATION(Any p0) { return Call<int>(0xb44221010c91c2e4, p0); }
	int GET_STATUS_OF_SORTED_LIST_OPERATION_f(Any p0) { return FastCall<int>(0xb44221010c91c2e4, p0); }
	void CLEAR_STATUS_OF_SORTED_LIST_OPERATION() { Call<void>(0x2ab8c9a8f662d1db); }
	void CLEAR_STATUS_OF_SORTED_LIST_OPERATION_f() { FastCall<void>(0x2ab8c9a8f662d1db); }
	BOOL DOES_THIS_PHOTO_SLOT_CONTAIN_A_VALID_PHOTO(Any p0) { return Call<BOOL>(0xef293cb584d02fad, p0); }
	BOOL DOES_THIS_PHOTO_SLOT_CONTAIN_A_VALID_PHOTO_f(Any p0) { return FastCall<BOOL>(0xef293cb584d02fad, p0); }
	BOOL LOAD_HIGH_QUALITY_PHOTO(Any p0) { return Call<BOOL>(0x4040afd047625ace, p0); }
	BOOL LOAD_HIGH_QUALITY_PHOTO_f(Any p0) { return FastCall<BOOL>(0x4040afd047625ace, p0); }
	int GET_LOAD_HIGH_QUALITY_PHOTO_STATUS(int p0) { return Call<int>(0xf14b9f634c5398ac, p0); }
	int GET_LOAD_HIGH_QUALITY_PHOTO_STATUS_f(int p0) { return FastCall<int>(0xf14b9f634c5398ac, p0); }
	void DRAW_LIGHT_WITH_RANGEEX(float x, float y, float z, int r, int g, int b, float range, float intensity, float shadow) { Call<void>(0x8cbc120cb8f6ff9b, x, y, z, r, g, b, range, intensity, shadow); }
	void DRAW_LIGHT_WITH_RANGEEX_f(float x, float y, float z, int r, int g, int b, float range, float intensity, float shadow) { FastCall<void>(0x8cbc120cb8f6ff9b, x, y, z, r, g, b, range, intensity, shadow); }
	void DRAW_LIGHT_WITH_RANGE(float posX, float posY, float posZ, int colorR, int colorG, int colorB, float range, float intensity) { Call<void>(0x31f612aa809790e8, posX, posY, posZ, colorR, colorG, colorB, range, intensity); }
	void DRAW_LIGHT_WITH_RANGE_f(float posX, float posY, float posZ, int colorR, int colorG, int colorB, float range, float intensity) { FastCall<void>(0x31f612aa809790e8, posX, posY, posZ, colorR, colorG, colorB, range, intensity); }
	void DRAW_SPOT_LIGHT(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float hardness, float radius, float falloff) { Call<void>(0xc10c50533e7d4554, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff); }
	void DRAW_SPOT_LIGHT_f(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float hardness, float radius, float falloff) { FastCall<void>(0xc10c50533e7d4554, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff); }
	void DRAW_SHADOWED_SPOT_LIGHT(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float roundness, float radius, float falloff, int shadowId) { Call<void>(0x9ca6b000228d9a7e, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId); }
	void DRAW_SHADOWED_SPOT_LIGHT_f(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float roundness, float radius, float falloff, int shadowId) { FastCall<void>(0x9ca6b000228d9a7e, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId); }
	void FADE_UP_PED_LIGHT(float p0) { Call<void>(0x694157a75b88e9e5, p0); }
	void FADE_UP_PED_LIGHT_f(float p0) { FastCall<void>(0x694157a75b88e9e5, p0); }
	void UPDATE_LIGHTS_ON_ENTITY(Entity entity) { Call<void>(0x1a92d882861f57, entity); }
	void UPDATE_LIGHTS_ON_ENTITY_f(Entity entity) { FastCall<void>(0x1a92d882861f57, entity); }
	void SET_LIGHT_OVERRIDE_MAX_INTENSITY_SCALE(Any p0) { Call<void>(0x494f1b1fba199fd6, p0); }
	void SET_LIGHT_OVERRIDE_MAX_INTENSITY_SCALE_f(Any p0) { FastCall<void>(0x494f1b1fba199fd6, p0); }
	float GET_LIGHT_OVERRIDE_MAX_INTENSITY_SCALE() { return ToFloat(Call<_float>(0x593095cf2a3a4862)); }
	float GET_LIGHT_OVERRIDE_MAX_INTENSITY_SCALE_f() { return ToFloat(FastCall<_float>(0x593095cf2a3a4862)); }
	void DRAW_MARKER(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, int p19, BOOL rotate, char* textureDict, char* textureName, BOOL drawOnEnts) { Call<void>(0xcdeaf0e7bbab95, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts); }
	void DRAW_MARKER_f(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, int p19, BOOL rotate, char* textureDict, char* textureName, BOOL drawOnEnts) { FastCall<void>(0xcdeaf0e7bbab95, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts); }
	void DRAW_MARKER_EX(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, Any p19, BOOL rotate, char* textureDict, char* textureName, BOOL drawOnEnts, BOOL p24, BOOL p25) { Call<void>(0x9adf586708659d9d, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts, p24, p25); }
	void DRAW_MARKER_EX_f(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, Any p19, BOOL rotate, char* textureDict, char* textureName, BOOL drawOnEnts, BOOL p24, BOOL p25) { FastCall<void>(0x9adf586708659d9d, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts, p24, p25); }
	void DRAW_MARKER_SPHERE(float x, float y, float z, float radius, int red, int green, int blue, float alpha) { Call<void>(0xf11f433b12886bb7, x, y, z, radius, red, green, blue, alpha); }
	void DRAW_MARKER_SPHERE_f(float x, float y, float z, float radius, int red, int green, int blue, float alpha) { FastCall<void>(0xf11f433b12886bb7, x, y, z, radius, red, green, blue, alpha); }
	int CREATE_CHECKPOINT(int type, float posX1, float posY1, float posZ1, float posX2, float posY2, float posZ2, float diameter, int red, int green, int blue, int alpha, int reserved) { return Call<int>(0x865bcd9484524cab, type, posX1, posY1, posZ1, posX2, posY2, posZ2, diameter, red, green, blue, alpha, reserved); }
	int CREATE_CHECKPOINT_f(int type, float posX1, float posY1, float posZ1, float posX2, float posY2, float posZ2, float diameter, int red, int green, int blue, int alpha, int reserved) { return FastCall<int>(0x865bcd9484524cab, type, posX1, posY1, posZ1, posX2, posY2, posZ2, diameter, red, green, blue, alpha, reserved); }
	void SET_CHECKPOINT_INSIDE_CYLINDER_HEIGHT_SCALE(int checkpoint, float scale) { Call<void>(0x76ba1944695a6e32, checkpoint, scale); }
	void SET_CHECKPOINT_INSIDE_CYLINDER_HEIGHT_SCALE_f(int checkpoint, float scale) { FastCall<void>(0x76ba1944695a6e32, checkpoint, scale); }
	void SET_CHECKPOINT_INSIDE_CYLINDER_SCALE(int checkpoint, float scale) { Call<void>(0x20cff0751db4870a, checkpoint, scale); }
	void SET_CHECKPOINT_INSIDE_CYLINDER_SCALE_f(int checkpoint, float scale) { FastCall<void>(0x20cff0751db4870a, checkpoint, scale); }
	void SET_CHECKPOINT_CYLINDER_HEIGHT(int checkpoint, float nearHeight, float farHeight, float radius) { Call<void>(0xc0bfe4aed8f3b316, checkpoint, nearHeight, farHeight, radius); }
	void SET_CHECKPOINT_CYLINDER_HEIGHT_f(int checkpoint, float nearHeight, float farHeight, float radius) { FastCall<void>(0xc0bfe4aed8f3b316, checkpoint, nearHeight, farHeight, radius); }
	void SET_CHECKPOINT_RGBA(int checkpoint, int red, int green, int blue, int alpha) { Call<void>(0xbba2ad423730578e, checkpoint, red, green, blue, alpha); }
	void SET_CHECKPOINT_RGBA_f(int checkpoint, int red, int green, int blue, int alpha) { FastCall<void>(0xbba2ad423730578e, checkpoint, red, green, blue, alpha); }
	void SET_CHECKPOINT_RGBA2(int checkpoint, int red, int green, int blue, int alpha) { Call<void>(0xb8b2fb04aeda9a64, checkpoint, red, green, blue, alpha); }
	void SET_CHECKPOINT_RGBA2_f(int checkpoint, int red, int green, int blue, int alpha) { FastCall<void>(0xb8b2fb04aeda9a64, checkpoint, red, green, blue, alpha); }
	void SET_CHECKPOINT_CLIPPLANE_WITH_POS_NORM(int checkpoint, float posX, float posY, float posZ, float unkX, float unkY, float unkZ) { Call<void>(0xeb8d8ac55a132f93, checkpoint, posX, posY, posZ, unkX, unkY, unkZ); }
	void SET_CHECKPOINT_CLIPPLANE_WITH_POS_NORM_f(int checkpoint, float posX, float posY, float posZ, float unkX, float unkY, float unkZ) { FastCall<void>(0xeb8d8ac55a132f93, checkpoint, posX, posY, posZ, unkX, unkY, unkZ); }
	void SET_CHECKPOINT_FORCE_OLD_ARROW_POINTING(int checkpoint) { Call<void>(0x66e72457d781606e, checkpoint); }
	void SET_CHECKPOINT_FORCE_OLD_ARROW_POINTING_f(int checkpoint) { FastCall<void>(0x66e72457d781606e, checkpoint); }
	void SET_CHECKPOINT_DECAL_ROT_ALIGNED_TO_CAMERA_ROT(int checkpoint) { Call<void>(0x31d9b4863863add2, checkpoint); }
	void SET_CHECKPOINT_DECAL_ROT_ALIGNED_TO_CAMERA_ROT_f(int checkpoint) { FastCall<void>(0x31d9b4863863add2, checkpoint); }
	void SET_CHECKPOINT_FORCE_DIRECTION(int checkpoint) { Call<void>(0xdda25b6a14634851, checkpoint); }
	void SET_CHECKPOINT_FORCE_DIRECTION_f(int checkpoint) { FastCall<void>(0xdda25b6a14634851, checkpoint); }
	void SET_CHECKPOINT_DIRECTION(int checkpoint, float posX, float posY, float posZ) { Call<void>(0xe0ff6e3a3bd10145, checkpoint, posX, posY, posZ); }
	void SET_CHECKPOINT_DIRECTION_f(int checkpoint, float posX, float posY, float posZ) { FastCall<void>(0xe0ff6e3a3bd10145, checkpoint, posX, posY, posZ); }
	void DELETE_CHECKPOINT(int checkpoint) { Call<void>(0x9701b395d0af49c, checkpoint); }
	void DELETE_CHECKPOINT_f(int checkpoint) { FastCall<void>(0x9701b395d0af49c, checkpoint); }
	void DONT_RENDER_IN_GAME_UI(BOOL p0) { Call<void>(0xd8fb4ba825259202, p0); }
	void DONT_RENDER_IN_GAME_UI_f(BOOL p0) { FastCall<void>(0xd8fb4ba825259202, p0); }
	void FORCE_RENDER_IN_GAME_UI(BOOL toggle) { Call<void>(0x47be2b4d5b4f6ebc, toggle); }
	void FORCE_RENDER_IN_GAME_UI_f(BOOL toggle) { FastCall<void>(0x47be2b4d5b4f6ebc, toggle); }
	void REQUEST_STREAMED_TEXTURE_DICT(char* textureDict, BOOL p1) { Call<void>(0x25656cf0afac5aca, textureDict, p1); }
	void REQUEST_STREAMED_TEXTURE_DICT_f(char* textureDict, BOOL p1) { FastCall<void>(0x25656cf0afac5aca, textureDict, p1); }
	BOOL HAS_STREAMED_TEXTURE_DICT_LOADED(char* textureDict) { return Call<BOOL>(0x9ee54091eb0bb6ef, textureDict); }
	BOOL HAS_STREAMED_TEXTURE_DICT_LOADED_f(char* textureDict) { return FastCall<BOOL>(0x9ee54091eb0bb6ef, textureDict); }
	void SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(char* textureDict) { Call<void>(0x6086e97d486af418, textureDict); }
	void SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED_f(char* textureDict) { FastCall<void>(0x6086e97d486af418, textureDict); }
	void DRAW_RECT(float x, float y, float width, float height, int r, int g, int b, int a, BOOL p8) { Call<void>(0x36dab0998fff, x, y, width, height, r, g, b, a, p8); }
	void DRAW_RECT_f(float x, float y, float width, float height, int r, int g, int b, int a, BOOL p8) { FastCall<void>(0x36dab0998fff, x, y, width, height, r, g, b, a, p8); }
	void SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(BOOL toggle) { Call<void>(0xc7ac02be54a7e28e, toggle); }
	void SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU_f(BOOL toggle) { FastCall<void>(0xc7ac02be54a7e28e, toggle); }
	void SET_SCRIPT_GFX_DRAW_ORDER(int drawOrder) { Call<void>(0xbfbceda653312d0, drawOrder); }
	void SET_SCRIPT_GFX_DRAW_ORDER_f(int drawOrder) { FastCall<void>(0xbfbceda653312d0, drawOrder); }
	void SET_SCRIPT_GFX_ALIGN(int horizontalAlign, int verticalAlign) { Call<void>(0xe497636d3fc05a68, horizontalAlign, verticalAlign); }
	void SET_SCRIPT_GFX_ALIGN_f(int horizontalAlign, int verticalAlign) { FastCall<void>(0xe497636d3fc05a68, horizontalAlign, verticalAlign); }
	void RESET_SCRIPT_GFX_ALIGN() { Call<void>(0xe323a4f3bbd04d1b); }
	void RESET_SCRIPT_GFX_ALIGN_f() { FastCall<void>(0xe323a4f3bbd04d1b); }
	void SET_SCRIPT_GFX_ALIGN_PARAMS(float x, float y, float w, float h) { Call<void>(0xfb23ee13132e8b3d, x, y, w, h); }
	void SET_SCRIPT_GFX_ALIGN_PARAMS_f(float x, float y, float w, float h) { FastCall<void>(0xfb23ee13132e8b3d, x, y, w, h); }
	void GET_SCRIPT_GFX_ALIGN_POSITION(float x, float y, float* calculatedX, float* calculatedY) { Call<void>(0xd6779d73f8b9df14, x, y, calculatedX, calculatedY); }
	void GET_SCRIPT_GFX_ALIGN_POSITION_f(float x, float y, float* calculatedX, float* calculatedY) { FastCall<void>(0xd6779d73f8b9df14, x, y, calculatedX, calculatedY); }
	float GET_SAFE_ZONE_SIZE() { return ToFloat(Call<_float>(0xc5e8fd3c13ff0eab)); }
	float GET_SAFE_ZONE_SIZE_f() { return ToFloat(FastCall<_float>(0xc5e8fd3c13ff0eab)); }
	void DRAW_SPRITE(char* textureDict, char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha, BOOL p11, Any p12) { Call<void>(0xcdeaf0f2cc1a20, textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha, p11, p12); }
	void DRAW_SPRITE_f(char* textureDict, char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha, BOOL p11, Any p12) { FastCall<void>(0xcdeaf0f2cc1a20, textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha, p11, p12); }
	void DRAW_SPRITE_ARX(char* textureDict, char* textureName, float x, float y, float width, float height, float p6, int red, int green, int blue, int alpha, Any p11, Any p12) { Call<void>(0xc10c50641d1e37a8, textureDict, textureName, x, y, width, height, p6, red, green, blue, alpha, p11, p12); }
	void DRAW_SPRITE_ARX_f(char* textureDict, char* textureName, float x, float y, float width, float height, float p6, int red, int green, int blue, int alpha, Any p11, Any p12) { FastCall<void>(0xc10c50641d1e37a8, textureDict, textureName, x, y, width, height, p6, red, green, blue, alpha, p11, p12); }
	void DRAW_SPRITE_NAMED_RENDERTARGET(char* textureDict, char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha, Any p11) { Call<void>(0x7a21155b37a9e68c, textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha, p11); }
	void DRAW_SPRITE_NAMED_RENDERTARGET_f(char* textureDict, char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha, Any p11) { FastCall<void>(0x7a21155b37a9e68c, textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha, p11); }
	void DRAW_SPRITE_ARX_WITH_UV(char* textureDict, char* textureName, float x, float y, float width, float height, float u1, float v1, float u2, float v2, float heading, int red, int green, int blue, int alpha, Any p15) { Call<void>(0xd8b3fb9b28017f23, textureDict, textureName, x, y, width, height, u1, v1, u2, v2, heading, red, green, blue, alpha, p15); }
	void DRAW_SPRITE_ARX_WITH_UV_f(char* textureDict, char* textureName, float x, float y, float width, float height, float u1, float v1, float u2, float v2, float heading, int red, int green, int blue, int alpha, Any p15) { FastCall<void>(0xd8b3fb9b28017f23, textureDict, textureName, x, y, width, height, u1, v1, u2, v2, heading, red, green, blue, alpha, p15); }
	int ADD_ENTITY_ICON(Entity entity, char* icon) { return Call<int>(0x422e6418d3d02c97, entity, icon); }
	int ADD_ENTITY_ICON_f(Entity entity, char* icon) { return FastCall<int>(0x422e6418d3d02c97, entity, icon); }
	void SET_ENTITY_ICON_VISIBILITY(Entity entity, BOOL toggle) { Call<void>(0xd82d54d8f37496d9, entity, toggle); }
	void SET_ENTITY_ICON_VISIBILITY_f(Entity entity, BOOL toggle) { FastCall<void>(0xd82d54d8f37496d9, entity, toggle); }
	void SET_ENTITY_ICON_COLOR(Entity entity, int red, int green, int blue, int alpha) { Call<void>(0xea352d82c8c6ef1c, entity, red, green, blue, alpha); }
	void SET_ENTITY_ICON_COLOR_f(Entity entity, int red, int green, int blue, int alpha) { FastCall<void>(0xea352d82c8c6ef1c, entity, red, green, blue, alpha); }
	void SET_DRAW_ORIGIN(float x, float y, float z, BOOL p3) { Call<void>(0xe0a91ab50ce61204, x, y, z, p3); }
	void SET_DRAW_ORIGIN_f(float x, float y, float z, BOOL p3) { FastCall<void>(0xe0a91ab50ce61204, x, y, z, p3); }
	void CLEAR_DRAW_ORIGIN() { Call<void>(0x25cd5af4d22c076f); }
	void CLEAR_DRAW_ORIGIN_f() { FastCall<void>(0x25cd5af4d22c076f); }
	int SET_BINK_MOVIE(char* name) { return Call<int>(0xee78da9e5a623b72, name); }
	int SET_BINK_MOVIE_f(char* name) { return FastCall<int>(0xee78da9e5a623b72, name); }
	void PLAY_BINK_MOVIE(int binkMovie) { Call<void>(0x3910cd5cae4f0d40, binkMovie); }
	void PLAY_BINK_MOVIE_f(int binkMovie) { FastCall<void>(0x3910cd5cae4f0d40, binkMovie); }
	void STOP_BINK_MOVIE(int binkMovie) { Call<void>(0x7ff0c50e90bb23b2, binkMovie); }
	void STOP_BINK_MOVIE_f(int binkMovie) { FastCall<void>(0x7ff0c50e90bb23b2, binkMovie); }
	void RELEASE_BINK_MOVIE(int binkMovie) { Call<void>(0x794137c3f4807ead, binkMovie); }
	void RELEASE_BINK_MOVIE_f(int binkMovie) { FastCall<void>(0x794137c3f4807ead, binkMovie); }
	void DRAW_BINK_MOVIE(int binkMovie, float p1, float p2, float p3, float p4, float p5, int r, int g, int b, int a) { Call<void>(0xc10ab211b3d58130, binkMovie, p1, p2, p3, p4, p5, r, g, b, a); }
	void DRAW_BINK_MOVIE_f(int binkMovie, float p1, float p2, float p3, float p4, float p5, int r, int g, int b, int a) { FastCall<void>(0xc10ab211b3d58130, binkMovie, p1, p2, p3, p4, p5, r, g, b, a); }
	void SET_BINK_MOVIE_TIME(int binkMovie, float progress) { Call<void>(0x6b3753ea48b51f7a, binkMovie, progress); }
	void SET_BINK_MOVIE_TIME_f(int binkMovie, float progress) { FastCall<void>(0x6b3753ea48b51f7a, binkMovie, progress); }
	float GET_BINK_MOVIE_TIME(int binkMovie) { return ToFloat(Call<_float>(0x53a3f378a4b88a6e, binkMovie)); }
	float GET_BINK_MOVIE_TIME_f(int binkMovie) { return ToFloat(FastCall<_float>(0x53a3f378a4b88a6e, binkMovie)); }
	void SET_BINK_MOVIE_VOLUME(int binkMovie, float value) { Call<void>(0x7ab2027af3a93887, binkMovie, value); }
	void SET_BINK_MOVIE_VOLUME_f(int binkMovie, float value) { FastCall<void>(0x7ab2027af3a93887, binkMovie, value); }
	void ATTACH_TV_AUDIO_TO_ENTITY(Entity entity) { Call<void>(0x145f3be6990e155b, entity); }
	void ATTACH_TV_AUDIO_TO_ENTITY_f(Entity entity) { FastCall<void>(0x145f3be6990e155b, entity); }
	void SET_BINK_MOVIE_AUDIO_FRONTEND(int binkMovie, BOOL p1) { Call<void>(0x4eb73fe916bb78e8, binkMovie, p1); }
	void SET_BINK_MOVIE_AUDIO_FRONTEND_f(int binkMovie, BOOL p1) { FastCall<void>(0x4eb73fe916bb78e8, binkMovie, p1); }
	void SET_TV_AUDIO_FRONTEND(BOOL toggle) { Call<void>(0x71bd7e56e145051b, toggle); }
	void SET_TV_AUDIO_FRONTEND_f(BOOL toggle) { FastCall<void>(0x71bd7e56e145051b, toggle); }
	void SET_BINK_SHOULD_SKIP(int binkMovie, BOOL bShouldSkip) { Call<void>(0xfbc3f49ab2d0476d, binkMovie, bShouldSkip); }
	void SET_BINK_SHOULD_SKIP_f(int binkMovie, BOOL bShouldSkip) { FastCall<void>(0xfbc3f49ab2d0476d, binkMovie, bShouldSkip); }
	int LOAD_MOVIE_MESH_SET(char* movieMeshSetName) { return Call<int>(0x52bfeaf5faae23b8, movieMeshSetName); }
	int LOAD_MOVIE_MESH_SET_f(char* movieMeshSetName) { return FastCall<int>(0x52bfeaf5faae23b8, movieMeshSetName); }
	void RELEASE_MOVIE_MESH_SET(int movieMeshSet) { Call<void>(0xd6711e2a68aa2a97, movieMeshSet); }
	void RELEASE_MOVIE_MESH_SET_f(int movieMeshSet) { FastCall<void>(0xd6711e2a68aa2a97, movieMeshSet); }
	int QUERY_MOVIE_MESH_SET_STATE(Any p0) { return Call<int>(0x437cc7a404192a8, p0); }
	int QUERY_MOVIE_MESH_SET_STATE_f(Any p0) { return FastCall<int>(0x437cc7a404192a8, p0); }
	void GET_SCREEN_RESOLUTION(int* x, int* y) { Call<void>(0x684b779dd4402596, x, y); }
	void GET_SCREEN_RESOLUTION_f(int* x, int* y) { FastCall<void>(0x684b779dd4402596, x, y); }
	void GET_ACTUAL_SCREEN_RESOLUTION(int* x, int* y) { Call<void>(0xd870295aea1332d7, x, y); }
	void GET_ACTUAL_SCREEN_RESOLUTION_f(int* x, int* y) { FastCall<void>(0xd870295aea1332d7, x, y); }
	float GET_ASPECT_RATIO(BOOL b) { return ToFloat(Call<_float>(0x8c50a13b20dcdfad, b)); }
	float GET_ASPECT_RATIO_f(BOOL b) { return ToFloat(FastCall<_float>(0x8c50a13b20dcdfad, b)); }
	float GET_SCREEN_ASPECT_RATIO() { return ToFloat(Call<_float>(0x7d75e8bdf6674fae)); }
	float GET_SCREEN_ASPECT_RATIO_f() { return ToFloat(FastCall<_float>(0x7d75e8bdf6674fae)); }
	BOOL GET_IS_WIDESCREEN() { return Call<BOOL>(0x5563a1f9f35d8deb); }
	BOOL GET_IS_WIDESCREEN_f() { return FastCall<BOOL>(0x5563a1f9f35d8deb); }
	BOOL GET_IS_HIDEF() { return Call<BOOL>(0x19da3586dd7792d8); }
	BOOL GET_IS_HIDEF_f() { return FastCall<BOOL>(0x19da3586dd7792d8); }
	void ADJUST_NEXT_POS_SIZE_AS_NORMALIZED_16_9() { Call<void>(0xa16399756d67b231); }
	void ADJUST_NEXT_POS_SIZE_AS_NORMALIZED_16_9_f() { FastCall<void>(0xa16399756d67b231); }
	void SET_NIGHTVISION(BOOL toggle) { Call<void>(0xe0c56508703c2d63, toggle); }
	void SET_NIGHTVISION_f(BOOL toggle) { FastCall<void>(0xe0c56508703c2d63, toggle); }
	BOOL GET_REQUESTINGNIGHTVISION() { return Call<BOOL>(0xcc98ca168a96b0c4); }
	BOOL GET_REQUESTINGNIGHTVISION_f() { return FastCall<BOOL>(0xcc98ca168a96b0c4); }
	BOOL GET_USINGNIGHTVISION() { return Call<BOOL>(0xfa912b6da91eb8e5); }
	BOOL GET_USINGNIGHTVISION_f() { return FastCall<BOOL>(0xfa912b6da91eb8e5); }
	void SET_EXPOSURETWEAK(BOOL toggle) { Call<void>(0x68041a35156d63e8, toggle); }
	void SET_EXPOSURETWEAK_f(BOOL toggle) { FastCall<void>(0x68041a35156d63e8, toggle); }
	void FORCE_EXPOSURE_READBACK(BOOL toggle) { Call<void>(0x9eb1d1df520c8f41, toggle); }
	void FORCE_EXPOSURE_READBACK_f(BOOL toggle) { FastCall<void>(0x9eb1d1df520c8f41, toggle); }
	void OVERRIDE_NIGHTVISION_LIGHT_RANGE(float p0) { Call<void>(0x2c314404e7bcad42, p0); }
	void OVERRIDE_NIGHTVISION_LIGHT_RANGE_f(float p0) { FastCall<void>(0x2c314404e7bcad42, p0); }
	void SET_NOISEOVERIDE(BOOL toggle) { Call<void>(0x37f8ecf3e919cdd9, toggle); }
	void SET_NOISEOVERIDE_f(BOOL toggle) { FastCall<void>(0x37f8ecf3e919cdd9, toggle); }
	void SET_NOISINESSOVERIDE(float value) { Call<void>(0x8874ac693a40d79e, value); }
	void SET_NOISINESSOVERIDE_f(float value) { FastCall<void>(0x8874ac693a40d79e, value); }
	BOOL GET_SCREEN_COORD_FROM_WORLD_COORD(float worldX, float worldY, float worldZ, float* screenX, float* screenY) { return Call<BOOL>(0x129e262f510c60c7, worldX, worldY, worldZ, screenX, screenY); }
	BOOL GET_SCREEN_COORD_FROM_WORLD_COORD_f(float worldX, float worldY, float worldZ, float* screenX, float* screenY) { return FastCall<BOOL>(0x129e262f510c60c7, worldX, worldY, worldZ, screenX, screenY); }
	Vector3* GET_TEXTURE_RESOLUTION(char* textureDict, char* textureName) { Call<Vector3*>(0x6ee53fb0c1570a19, textureDict, textureName); return GetVector(); }
	BOOL OVERRIDE_PED_CREW_LOGO_TEXTURE(Ped ped, char* txd, char* txn) { return Call<BOOL>(0x6ef93fb56b003502, ped, txd, txn); }
	BOOL OVERRIDE_PED_CREW_LOGO_TEXTURE_f(Ped ped, char* txd, char* txn) { return FastCall<BOOL>(0x6ef93fb56b003502, ped, txd, txn); }
	void SET_DISTANCE_BLUR_STRENGTH_OVERRIDE(float p0) { Call<void>(0x6427b138a73547bf, p0); }
	void SET_DISTANCE_BLUR_STRENGTH_OVERRIDE_f(float p0) { FastCall<void>(0x6427b138a73547bf, p0); }
	void SET_FLASH(float p0, float p1, float fadeIn, float duration, float fadeOut) { Call<void>(0x422e1386e193, p0, p1, fadeIn, duration, fadeOut); }
	void SET_FLASH_f(float p0, float p1, float fadeIn, float duration, float fadeOut) { FastCall<void>(0x422e1386e193, p0, p1, fadeIn, duration, fadeOut); }
	void DISABLE_OCCLUSION_THIS_FRAME() { Call<void>(0xe6cb63ab04ff8f95); }
	void DISABLE_OCCLUSION_THIS_FRAME_f() { FastCall<void>(0xe6cb63ab04ff8f95); }
	void SET_ARTIFICIAL_LIGHTS_STATE(BOOL state) { Call<void>(0x6923609c45671ab7, state); }
	void SET_ARTIFICIAL_LIGHTS_STATE_f(BOOL state) { FastCall<void>(0x6923609c45671ab7, state); }
	void SET_ARTIFICIAL_VEHICLE_LIGHTS_STATE(BOOL toggle) { Call<void>(0xac47d45e3973550a, toggle); }
	void SET_ARTIFICIAL_VEHICLE_LIGHTS_STATE_f(BOOL toggle) { FastCall<void>(0xac47d45e3973550a, toggle); }
	void DISABLE_HDTEX_THIS_FRAME() { Call<void>(0xa435e3587c0f4037); }
	void DISABLE_HDTEX_THIS_FRAME_f() { FastCall<void>(0xa435e3587c0f4037); }
	int CREATE_TRACKED_POINT() { return Call<int>(0x328769ef9e6d31f8); }
	int CREATE_TRACKED_POINT_f() { return FastCall<int>(0x328769ef9e6d31f8); }
	void SET_TRACKED_POINT_INFO(int point, float x, float y, float z, float radius) { Call<void>(0x435ddc35a222718f, point, x, y, z, radius); }
	void SET_TRACKED_POINT_INFO_f(int point, float x, float y, float z, float radius) { FastCall<void>(0x435ddc35a222718f, point, x, y, z, radius); }
	BOOL IS_TRACKED_POINT_VISIBLE(int point) { return Call<BOOL>(0xc432f6a03846dab9, point); }
	BOOL IS_TRACKED_POINT_VISIBLE_f(int point) { return FastCall<BOOL>(0xc432f6a03846dab9, point); }
	void DESTROY_TRACKED_POINT(int point) { Call<void>(0xcb68b93f111b6c56, point); }
	void DESTROY_TRACKED_POINT_f(int point) { FastCall<void>(0xcb68b93f111b6c56, point); }
	int SET_GRASS_CULL_SPHERE(float p0, float p1, float p2, float p3) { return Call<int>(0xf6c0831f01fcb54, p0, p1, p2, p3); }
	int SET_GRASS_CULL_SPHERE_f(float p0, float p1, float p2, float p3) { return FastCall<int>(0xf6c0831f01fcb54, p0, p1, p2, p3); }
	void REMOVE_GRASS_CULL_SPHERE(int handle) { Call<void>(0x592d37d84096ab16, handle); }
	void REMOVE_GRASS_CULL_SPHERE_f(int handle) { FastCall<void>(0x592d37d84096ab16, handle); }
	void PROCGRASS_ENABLE_CULLSPHERE(int handle, float x, float y, float z, float scale) { Call<void>(0xafdbc90ec59cb57c, handle, x, y, z, scale); }
	void PROCGRASS_ENABLE_CULLSPHERE_f(int handle, float x, float y, float z, float scale) { FastCall<void>(0xafdbc90ec59cb57c, handle, x, y, z, scale); }
	void PROCGRASS_DISABLE_CULLSPHERE(int handle) { Call<void>(0x8e59f6a4e8e3c835, handle); }
	void PROCGRASS_DISABLE_CULLSPHERE_f(int handle) { FastCall<void>(0x8e59f6a4e8e3c835, handle); }
	BOOL PROCGRASS_IS_CULLSPHERE_ENABLED(int handle) { return Call<BOOL>(0x6e0d6521c12b28d7, handle); }
	BOOL PROCGRASS_IS_CULLSPHERE_ENABLED_f(int handle) { return FastCall<BOOL>(0x6e0d6521c12b28d7, handle); }
	void PROCGRASS_ENABLE_AMBSCALESCAN() { Call<void>(0x2740ffac0d00944e); }
	void PROCGRASS_ENABLE_AMBSCALESCAN_f() { FastCall<void>(0x2740ffac0d00944e); }
	void PROCGRASS_DISABLE_AMBSCALESCAN() { Call<void>(0x5eea20467acddcc7); }
	void PROCGRASS_DISABLE_AMBSCALESCAN_f() { FastCall<void>(0x5eea20467acddcc7); }
	void DISABLE_PROCOBJ_CREATION() { Call<void>(0xd5d9c699ff92c834); }
	void DISABLE_PROCOBJ_CREATION_f() { FastCall<void>(0xd5d9c699ff92c834); }
	void ENABLE_PROCOBJ_CREATION() { Call<void>(0xd4274f1845c5cad9); }
	void ENABLE_PROCOBJ_CREATION_f() { FastCall<void>(0xd4274f1845c5cad9); }
	void GRASSBATCH_ENABLE_FLATTENING_EXT_IN_SPHERE(float x, float y, float z, Any p3, float p4, float p5, float p6, float scale) { Call<void>(0xd16b9faec6b79a89, x, y, z, p3, p4, p5, p6, scale); }
	void GRASSBATCH_ENABLE_FLATTENING_EXT_IN_SPHERE_f(float x, float y, float z, Any p3, float p4, float p5, float p6, float scale) { FastCall<void>(0xd16b9faec6b79a89, x, y, z, p3, p4, p5, p6, scale); }
	void GRASSBATCH_ENABLE_FLATTENING_IN_SPHERE(float x, float y, float z, float radius, float p4, float p5, float p6) { Call<void>(0xd83a9ffcc720ef47, x, y, z, radius, p4, p5, p6); }
	void GRASSBATCH_ENABLE_FLATTENING_IN_SPHERE_f(float x, float y, float z, float radius, float p4, float p5, float p6) { FastCall<void>(0xd83a9ffcc720ef47, x, y, z, radius, p4, p5, p6); }
	void GRASSBATCH_DISABLE_FLATTENING() { Call<void>(0xbc580517f8e28210); }
	void GRASSBATCH_DISABLE_FLATTENING_f() { FastCall<void>(0xbc580517f8e28210); }
	void CASCADE_SHADOWS_INIT_SESSION() { Call<void>(0xc25504df9dd66c9e); }
	void CASCADE_SHADOWS_INIT_SESSION_f() { FastCall<void>(0xc25504df9dd66c9e); }
	void CASCADE_SHADOWS_SET_CASCADE_BOUNDS(Any p0, BOOL p1, float p2, float p3, float p4, float p5, BOOL p6, float p7) { Call<void>(0x8447aaf10cec7574, p0, p1, p2, p3, p4, p5, p6, p7); }
	void CASCADE_SHADOWS_SET_CASCADE_BOUNDS_f(Any p0, BOOL p1, float p2, float p3, float p4, float p5, BOOL p6, float p7) { FastCall<void>(0x8447aaf10cec7574, p0, p1, p2, p3, p4, p5, p6, p7); }
	void CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE(float p0) { Call<void>(0xa5c9997c8421029f, p0); }
	void CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE_f(float p0) { FastCall<void>(0xa5c9997c8421029f, p0); }
	void CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE(float p0) { Call<void>(0x563f0ccedaed5d9b, p0); }
	void CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE_f(float p0) { FastCall<void>(0x563f0ccedaed5d9b, p0); }
	void CASCADE_SHADOWS_SET_SPLIT_Z_EXP_WEIGHT(float p0) { Call<void>(0x5f683c4a5d11b9d8, p0); }
	void CASCADE_SHADOWS_SET_SPLIT_Z_EXP_WEIGHT_f(float p0) { FastCall<void>(0x5f683c4a5d11b9d8, p0); }
	void CASCADE_SHADOWS_SET_BOUND_POSITION(Any p0) { Call<void>(0xcb48d0c6707a919e, p0); }
	void CASCADE_SHADOWS_SET_BOUND_POSITION_f(Any p0) { FastCall<void>(0xcb48d0c6707a919e, p0); }
	void CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER(BOOL toggle) { Call<void>(0x387e221541865481, toggle); }
	void CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER_f(BOOL toggle) { FastCall<void>(0x387e221541865481, toggle); }
	void CASCADE_SHADOWS_SET_SCREEN_SIZE_CHECK_ENABLED(BOOL p0) { Call<void>(0x6cb133db5ad2f28b, p0); }
	void CASCADE_SHADOWS_SET_SCREEN_SIZE_CHECK_ENABLED_f(BOOL p0) { FastCall<void>(0x6cb133db5ad2f28b, p0); }
	void CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE(char* type) { Call<void>(0x28b453b5791760c4, type); }
	void CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE_f(char* type) { FastCall<void>(0x28b453b5791760c4, type); }
	void CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE() { Call<void>(0x4ced2cbad73d8339); }
	void CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE_f() { FastCall<void>(0x4ced2cbad73d8339); }
	void CASCADE_SHADOWS_SET_AIRCRAFT_MODE(BOOL p0) { Call<void>(0xbfaa99aa2552bbf8, p0); }
	void CASCADE_SHADOWS_SET_AIRCRAFT_MODE_f(BOOL p0) { FastCall<void>(0xbfaa99aa2552bbf8, p0); }
	void CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE(BOOL p0) { Call<void>(0xf40ce52cf2132a93, p0); }
	void CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE_f(BOOL p0) { FastCall<void>(0xf40ce52cf2132a93, p0); }
	void CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE(float p0) { Call<void>(0x8d8fc07150cabe61, p0); }
	void CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE_f(float p0) { FastCall<void>(0x8d8fc07150cabe61, p0); }
	void CASCADE_SHADOWS_ENABLE_FREEZER(BOOL p0) { Call<void>(0x32acb351e2df6276, p0); }
	void CASCADE_SHADOWS_ENABLE_FREEZER_f(BOOL p0) { FastCall<void>(0x32acb351e2df6276, p0); }
	void WATER_REFLECTION_SET_SCRIPT_OBJECT_VISIBILITY(Any p0) { Call<void>(0x8101b7567025c747, p0); }
	void WATER_REFLECTION_SET_SCRIPT_OBJECT_VISIBILITY_f(Any p0) { FastCall<void>(0x8101b7567025c747, p0); }
	void GOLF_TRAIL_SET_ENABLED(BOOL toggle) { Call<void>(0xd6f2a14dc1d18ae, toggle); }
	void GOLF_TRAIL_SET_ENABLED_f(BOOL toggle) { FastCall<void>(0xd6f2a14dc1d18ae, toggle); }
	void GOLF_TRAIL_SET_PATH(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8) { Call<void>(0xf9e6372da80c8db8, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void GOLF_TRAIL_SET_PATH_f(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8) { FastCall<void>(0xf9e6372da80c8db8, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void GOLF_TRAIL_SET_RADIUS(float p0, float p1, float p2) { Call<void>(0x19352263da827965, p0, p1, p2); }
	void GOLF_TRAIL_SET_RADIUS_f(float p0, float p1, float p2) { FastCall<void>(0x19352263da827965, p0, p1, p2); }
	void GOLF_TRAIL_SET_COLOUR(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11) { Call<void>(0x19352263c1b2ca9f, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
	void GOLF_TRAIL_SET_COLOUR_f(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11) { FastCall<void>(0x19352263c1b2ca9f, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
	void GOLF_TRAIL_SET_TESSELLATION(int p0, int p1) { Call<void>(0xd445303034d64b94, p0, p1); }
	void GOLF_TRAIL_SET_TESSELLATION_f(int p0, int p1) { FastCall<void>(0xd445303034d64b94, p0, p1); }
	void GOLF_TRAIL_SET_FIXED_CONTROL_POINT_ENABLE(BOOL p0) { Call<void>(0x555b694b653c1852, p0); }
	void GOLF_TRAIL_SET_FIXED_CONTROL_POINT_ENABLE_f(BOOL p0) { FastCall<void>(0x555b694b653c1852, p0); }
	void GOLF_TRAIL_SET_FIXED_CONTROL_POINT(int type, float xPos, float yPos, float zPos, float p4, int red, int green, int blue, int alpha) { Call<void>(0xe2ba2ecad93d8450, type, xPos, yPos, zPos, p4, red, green, blue, alpha); }
	void GOLF_TRAIL_SET_FIXED_CONTROL_POINT_f(int type, float xPos, float yPos, float zPos, float p4, int red, int green, int blue, int alpha) { FastCall<void>(0xe2ba2ecad93d8450, type, xPos, yPos, zPos, p4, red, green, blue, alpha); }
	void GOLF_TRAIL_SET_SHADER_PARAMS(float p0, float p1, float p2, float p3, float p4) { Call<void>(0xaa4b7abe3b1126ed, p0, p1, p2, p3, p4); }
	void GOLF_TRAIL_SET_SHADER_PARAMS_f(float p0, float p1, float p2, float p3, float p4) { FastCall<void>(0xaa4b7abe3b1126ed, p0, p1, p2, p3, p4); }
	void GOLF_TRAIL_SET_FACING(BOOL p0) { Call<void>(0x19352263c607dcad, p0); }
	void GOLF_TRAIL_SET_FACING_f(BOOL p0) { FastCall<void>(0x19352263c607dcad, p0); }
	float GOLF_TRAIL_GET_MAX_HEIGHT() { return ToFloat(Call<_float>(0x78fc2c83aee72861)); }
	float GOLF_TRAIL_GET_MAX_HEIGHT_f() { return ToFloat(FastCall<_float>(0x78fc2c83aee72861)); }
	Vector3* GOLF_TRAIL_GET_VISUAL_CONTROL_POINT(int p0) { Call<Vector3*>(0x1c09bf4f64da64e, p0); return GetVector(); }
	void SET_SEETHROUGH(BOOL toggle) { Call<void>(0xee7a701750657f2f, toggle); }
	void SET_SEETHROUGH_f(BOOL toggle) { FastCall<void>(0xee7a701750657f2f, toggle); }
	BOOL GET_USINGSEETHROUGH() { return Call<BOOL>(0xffd39785ef227b6d); }
	BOOL GET_USINGSEETHROUGH_f() { return FastCall<BOOL>(0xffd39785ef227b6d); }
	void SEETHROUGH_RESET() { Call<void>(0xe2ba9cb04dc339c2); }
	void SEETHROUGH_RESET_f() { FastCall<void>(0xe2ba9cb04dc339c2); }
	void SEETHROUGH_SET_FADE_STARTDISTANCE(float distance) { Call<void>(0x354e8e0fd1f90c9e, distance); }
	void SEETHROUGH_SET_FADE_STARTDISTANCE_f(float distance) { FastCall<void>(0x354e8e0fd1f90c9e, distance); }
	void SEETHROUGH_SET_FADE_ENDDISTANCE(float distance) { Call<void>(0x8cd05da72c2e31d7, distance); }
	void SEETHROUGH_SET_FADE_ENDDISTANCE_f(float distance) { FastCall<void>(0x8cd05da72c2e31d7, distance); }
	float SEETHROUGH_GET_MAX_THICKNESS() { return ToFloat(Call<_float>(0xbf207b912e8444e3)); }
	float SEETHROUGH_GET_MAX_THICKNESS_f() { return ToFloat(FastCall<_float>(0xbf207b912e8444e3)); }
	void SEETHROUGH_SET_MAX_THICKNESS(float thickness) { Call<void>(0xfbe35dd4f67aacef, thickness); }
	void SEETHROUGH_SET_MAX_THICKNESS_f(float thickness) { FastCall<void>(0xfbe35dd4f67aacef, thickness); }
	void SEETHROUGH_SET_NOISE_MIN(float amount) { Call<void>(0x8866eee002579d43, amount); }
	void SEETHROUGH_SET_NOISE_MIN_f(float amount) { FastCall<void>(0x8866eee002579d43, amount); }
	void SEETHROUGH_SET_NOISE_MAX(float amount) { Call<void>(0x8866eee002579c55, amount); }
	void SEETHROUGH_SET_NOISE_MAX_f(float amount) { FastCall<void>(0x8866eee002579c55, amount); }
	void SEETHROUGH_SET_HILIGHT_INTENSITY(float intensity) { Call<void>(0x6800a4696277c4bf, intensity); }
	void SEETHROUGH_SET_HILIGHT_INTENSITY_f(float intensity) { FastCall<void>(0x6800a4696277c4bf, intensity); }
	void SEETHROUGH_SET_HIGHLIGHT_NOISE(float noise) { Call<void>(0x39d718f72e1758e5, noise); }
	void SEETHROUGH_SET_HIGHLIGHT_NOISE_f(float noise) { FastCall<void>(0x39d718f72e1758e5, noise); }
	void SEETHROUGH_SET_HEATSCALE(int index, float heatScale) { Call<void>(0x8866e9f6d52ca310, index, heatScale); }
	void SEETHROUGH_SET_HEATSCALE_f(int index, float heatScale) { FastCall<void>(0x8866e9f6d52ca310, index, heatScale); }
	void SEETHROUGH_SET_COLOR_NEAR(int red, int green, int blue) { Call<void>(0x8475e4af43ae2c8e, red, green, blue); }
	void SEETHROUGH_SET_COLOR_NEAR_f(int red, int green, int blue) { FastCall<void>(0x8475e4af43ae2c8e, red, green, blue); }
	void SET_MOTIONBLUR_MAX_VEL_SCALER(float p0) { Call<void>(0xad20f3adb5f592ea, p0); }
	void SET_MOTIONBLUR_MAX_VEL_SCALER_f(float p0) { FastCall<void>(0xad20f3adb5f592ea, p0); }
	float GET_MOTIONBLUR_MAX_VEL_SCALER() { return ToFloat(Call<_float>(0xc1b7db83c636dcde)); }
	float GET_MOTIONBLUR_MAX_VEL_SCALER_f() { return ToFloat(FastCall<_float>(0xc1b7db83c636dcde)); }
	void SET_FORCE_MOTIONBLUR(BOOL toggle) { Call<void>(0x52af4f456af2256e, toggle); }
	void SET_FORCE_MOTIONBLUR_f(BOOL toggle) { FastCall<void>(0x52af4f456af2256e, toggle); }
	void TOGGLE_PLAYER_DAMAGE_OVERLAY(BOOL toggle) { Call<void>(0xc6aa7bff104a31d3, toggle); }
	void TOGGLE_PLAYER_DAMAGE_OVERLAY_f(BOOL toggle) { FastCall<void>(0xc6aa7bff104a31d3, toggle); }
	void RESET_ADAPTATION(int p0) { Call<void>(0xbd45ada0a842e223, p0); }
	void RESET_ADAPTATION_f(int p0) { FastCall<void>(0xbd45ada0a842e223, p0); }
	BOOL TRIGGER_SCREENBLUR_FADE_IN(float transitionTime) { return Call<BOOL>(0xda2b0233b8fc3663, transitionTime); }
	BOOL TRIGGER_SCREENBLUR_FADE_IN_f(float transitionTime) { return FastCall<BOOL>(0xda2b0233b8fc3663, transitionTime); }
	BOOL TRIGGER_SCREENBLUR_FADE_OUT(float transitionTime) { return Call<BOOL>(0x6b354443668aadb0, transitionTime); }
	BOOL TRIGGER_SCREENBLUR_FADE_OUT_f(float transitionTime) { return FastCall<BOOL>(0x6b354443668aadb0, transitionTime); }
	void DISABLE_SCREENBLUR_FADE() { Call<void>(0xca5c813456a80f1); }
	void DISABLE_SCREENBLUR_FADE_f() { FastCall<void>(0xca5c813456a80f1); }
	float GET_SCREENBLUR_FADE_CURRENT_TIME() { return ToFloat(Call<_float>(0x7586ae896a843cd3)); }
	float GET_SCREENBLUR_FADE_CURRENT_TIME_f() { return ToFloat(FastCall<_float>(0x7586ae896a843cd3)); }
	BOOL IS_SCREENBLUR_FADE_RUNNING() { return Call<BOOL>(0xa385742f40471cb3); }
	BOOL IS_SCREENBLUR_FADE_RUNNING_f() { return FastCall<BOOL>(0xa385742f40471cb3); }
	void TOGGLE_PAUSED_RENDERPHASES(BOOL toggle) { Call<void>(0x62b7a6f9e22cc974, toggle); }
	void TOGGLE_PAUSED_RENDERPHASES_f(BOOL toggle) { FastCall<void>(0x62b7a6f9e22cc974, toggle); }
	BOOL GET_TOGGLE_PAUSED_RENDERPHASES_STATUS() { return Call<BOOL>(0x88c427bbdce6ba54); }
	BOOL GET_TOGGLE_PAUSED_RENDERPHASES_STATUS_f() { return FastCall<BOOL>(0x88c427bbdce6ba54); }
	void RESET_PAUSED_RENDERPHASES() { Call<void>(0xec91437d650cc3cf); }
	void RESET_PAUSED_RENDERPHASES_f() { FastCall<void>(0xec91437d650cc3cf); }
	void GRAB_PAUSEMENU_OWNERSHIP() { Call<void>(0x8c00a68ba56c9952); }
	void GRAB_PAUSEMENU_OWNERSHIP_f() { FastCall<void>(0x8c00a68ba56c9952); }
	void SET_HIDOF_OVERRIDE(BOOL p0, BOOL p1, float nearplaneOut, float nearplaneIn, float farplaneOut, float farplaneIn) { Call<void>(0xe8e14d0c7c96338e, p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn); }
	void SET_HIDOF_OVERRIDE_f(BOOL p0, BOOL p1, float nearplaneOut, float nearplaneIn, float farplaneOut, float farplaneIn) { FastCall<void>(0xe8e14d0c7c96338e, p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn); }
	void SET_LOCK_ADAPTIVE_DOF_DISTANCE(BOOL p0) { Call<void>(0xb07d2d51645fdfcb, p0); }
	void SET_LOCK_ADAPTIVE_DOF_DISTANCE_f(BOOL p0) { FastCall<void>(0xb07d2d51645fdfcb, p0); }
	BOOL PHONEPHOTOEDITOR_TOGGLE(BOOL p0) { return Call<BOOL>(0x6f9b1ccd01ad8762, p0); }
	BOOL PHONEPHOTOEDITOR_TOGGLE_f(BOOL p0) { return FastCall<BOOL>(0x6f9b1ccd01ad8762, p0); }
	BOOL PHONEPHOTOEDITOR_IS_ACTIVE() { return Call<BOOL>(0xb39c8c6c6c3328ed); }
	BOOL PHONEPHOTOEDITOR_IS_ACTIVE_f() { return FastCall<BOOL>(0xb39c8c6c6c3328ed); }
	BOOL PHONEPHOTOEDITOR_SET_FRAME_TXD(char* textureDict, BOOL p1) { return Call<BOOL>(0xa8b0d9efb243a4c3, textureDict, p1); }
	BOOL PHONEPHOTOEDITOR_SET_FRAME_TXD_f(char* textureDict, BOOL p1) { return FastCall<BOOL>(0xa8b0d9efb243a4c3, textureDict, p1); }
	BOOL START_PARTICLE_FX_NON_LOOPED_AT_COORD(char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return Call<BOOL>(0xf66e3ab602bd5fa2, effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis); }
	BOOL START_PARTICLE_FX_NON_LOOPED_AT_COORD_f(char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return FastCall<BOOL>(0xf66e3ab602bd5fa2, effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis); }
	BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11) { return Call<BOOL>(0xa25af211cfa8dad0, effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11); }
	BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD_f(char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11) { return FastCall<BOOL>(0xa25af211cfa8dad0, effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11); }
	BOOL START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return Call<BOOL>(0x65aa771661c827fb, effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ); }
	BOOL START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE_f(char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return FastCall<BOOL>(0x65aa771661c827fb, effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ); }
	BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return Call<BOOL>(0x75981b0220fbb60d, effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ); }
	BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE_f(char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return FastCall<BOOL>(0x75981b0220fbb60d, effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ); }
	BOOL START_PARTICLE_FX_NON_LOOPED_ON_ENTITY(char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return Call<BOOL>(0xd75926c004c3598a, effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ); }
	BOOL START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_f(char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return FastCall<BOOL>(0xd75926c004c3598a, effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ); }
	BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return Call<BOOL>(0xa9035addd547441c, effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ); }
	BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY_f(char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return FastCall<BOOL>(0xa9035addd547441c, effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ); }
	BOOL START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE(char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return Call<BOOL>(0xf81931fc4d42f859, effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ); }
	BOOL START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE_f(char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return FastCall<BOOL>(0xf81931fc4d42f859, effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ); }
	void SET_PARTICLE_FX_NON_LOOPED_COLOUR(float r, float g, float b) { Call<void>(0x35ad458abb142be5, r, g, b); }
	void SET_PARTICLE_FX_NON_LOOPED_COLOUR_f(float r, float g, float b) { FastCall<void>(0x35ad458abb142be5, r, g, b); }
	void SET_PARTICLE_FX_NON_LOOPED_ALPHA(float alpha) { Call<void>(0x85dc4c90dca11805, alpha); }
	void SET_PARTICLE_FX_NON_LOOPED_ALPHA_f(float alpha) { FastCall<void>(0x85dc4c90dca11805, alpha); }
	void SET_PARTICLE_FX_NON_LOOPED_SCALE(float scale) { Call<void>(0x85dc4c90dd9a6ff1, scale); }
	void SET_PARTICLE_FX_NON_LOOPED_SCALE_f(float scale) { FastCall<void>(0x85dc4c90dd9a6ff1, scale); }
	void SET_PARTICLE_FX_NON_LOOPED_EMITTER_SIZE(float p0, float p1, float scale) { Call<void>(0x395840f081cb6dab, p0, p1, scale); }
	void SET_PARTICLE_FX_NON_LOOPED_EMITTER_SIZE_f(float p0, float p1, float scale) { FastCall<void>(0x395840f081cb6dab, p0, p1, scale); }
	void SET_PARTICLE_FX_FORCE_VEHICLE_INTERIOR(BOOL toggle) { Call<void>(0x8955d9792c3fbf28, toggle); }
	void SET_PARTICLE_FX_FORCE_VEHICLE_INTERIOR_f(BOOL toggle) { FastCall<void>(0x8955d9792c3fbf28, toggle); }
	int START_PARTICLE_FX_LOOPED_AT_COORD(char* effectName, float x, float y, float z, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11) { return Call<int>(0x57bfebad3204a4b4, effectName, x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11); }
	int START_PARTICLE_FX_LOOPED_AT_COORD_f(char* effectName, float x, float y, float z, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11) { return FastCall<int>(0x57bfebad3204a4b4, effectName, x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11); }
	int START_PARTICLE_FX_LOOPED_ON_PED_BONE(char* effectName, Ped ped, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return Call<int>(0x872b243d3886f1a9, effectName, ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis); }
	int START_PARTICLE_FX_LOOPED_ON_PED_BONE_f(char* effectName, Ped ped, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return FastCall<int>(0x872b243d3886f1a9, effectName, ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis); }
	int START_PARTICLE_FX_LOOPED_ON_ENTITY(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return Call<int>(0xa03d94aebe64b6b8, effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis); }
	int START_PARTICLE_FX_LOOPED_ON_ENTITY_f(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return FastCall<int>(0xa03d94aebe64b6b8, effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis); }
	int START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return Call<int>(0xb54f0cb47172a7eb, effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis); }
	int START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE_f(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return FastCall<int>(0xb54f0cb47172a7eb, effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis); }
	int START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, float r, float g, float b, float a) { return Call<int>(0x9f93781b9698ba4a, effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, r, g, b, a); }
	int START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_f(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, float r, float g, float b, float a) { return FastCall<int>(0x9f93781b9698ba4a, effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, r, g, b, a); }
	int START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, float r, float g, float b, float a) { return Call<int>(0x18eb5c50b16c0f99, effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, r, g, b, a); }
	int START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE_f(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, float r, float g, float b, float a) { return FastCall<int>(0x18eb5c50b16c0f99, effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, r, g, b, a); }
	void STOP_PARTICLE_FX_LOOPED(int ptfxHandle, BOOL p1) { Call<void>(0xff41a0d8bd4ecf34, ptfxHandle, p1); }
	void STOP_PARTICLE_FX_LOOPED_f(int ptfxHandle, BOOL p1) { FastCall<void>(0xff41a0d8bd4ecf34, ptfxHandle, p1); }
	void REMOVE_PARTICLE_FX(int ptfxHandle, BOOL p1) { Call<void>(0x1a4f4059fb0eddf0, ptfxHandle, p1); }
	void REMOVE_PARTICLE_FX_f(int ptfxHandle, BOOL p1) { FastCall<void>(0x1a4f4059fb0eddf0, ptfxHandle, p1); }
	void REMOVE_PARTICLE_FX_FROM_ENTITY(Entity entity) { Call<void>(0xf9a079bf79f68649, entity); }
	void REMOVE_PARTICLE_FX_FROM_ENTITY_f(Entity entity) { FastCall<void>(0xf9a079bf79f68649, entity); }
	void REMOVE_PARTICLE_FX_IN_RANGE(float X, float Y, float Z, float radius) { Call<void>(0x76659a6269b37ef2, X, Y, Z, radius); }
	void REMOVE_PARTICLE_FX_IN_RANGE_f(float X, float Y, float Z, float radius) { FastCall<void>(0x76659a6269b37ef2, X, Y, Z, radius); }
	void FORCE_PARTICLE_FX_IN_VEHICLE_INTERIOR(Any p0, Any p1) { Call<void>(0x9761ef699a7f6ed5, p0, p1); }
	void FORCE_PARTICLE_FX_IN_VEHICLE_INTERIOR_f(Any p0, Any p1) { FastCall<void>(0x9761ef699a7f6ed5, p0, p1); }
	BOOL DOES_PARTICLE_FX_LOOPED_EXIST(int ptfxHandle) { return Call<BOOL>(0x6627ab7d422b3775, ptfxHandle); }
	BOOL DOES_PARTICLE_FX_LOOPED_EXIST_f(int ptfxHandle) { return FastCall<BOOL>(0x6627ab7d422b3775, ptfxHandle); }
	void SET_PARTICLE_FX_LOOPED_OFFSETS(int ptfxHandle, float x, float y, float z, float rotX, float rotY, float rotZ) { Call<void>(0x407d4979bc0653d5, ptfxHandle, x, y, z, rotX, rotY, rotZ); }
	void SET_PARTICLE_FX_LOOPED_OFFSETS_f(int ptfxHandle, float x, float y, float z, float rotX, float rotY, float rotZ) { FastCall<void>(0x407d4979bc0653d5, ptfxHandle, x, y, z, rotX, rotY, rotZ); }
	void SET_PARTICLE_FX_LOOPED_EVOLUTION(int ptfxHandle, char* propertyName, float amount, BOOL noNetwork) { Call<void>(0x1650caa1582eafd0, ptfxHandle, propertyName, amount, noNetwork); }
	void SET_PARTICLE_FX_LOOPED_EVOLUTION_f(int ptfxHandle, char* propertyName, float amount, BOOL noNetwork) { FastCall<void>(0x1650caa1582eafd0, ptfxHandle, propertyName, amount, noNetwork); }
	void SET_PARTICLE_FX_LOOPED_COLOUR(int ptfxHandle, float r, float g, float b, BOOL p4) { Call<void>(0x3be3025eb0078d77, ptfxHandle, r, g, b, p4); }
	void SET_PARTICLE_FX_LOOPED_COLOUR_f(int ptfxHandle, float r, float g, float b, BOOL p4) { FastCall<void>(0x3be3025eb0078d77, ptfxHandle, r, g, b, p4); }
	void SET_PARTICLE_FX_LOOPED_ALPHA(int ptfxHandle, float alpha) { Call<void>(0x1ab4be030dd23c33, ptfxHandle, alpha); }
	void SET_PARTICLE_FX_LOOPED_ALPHA_f(int ptfxHandle, float alpha) { FastCall<void>(0x1ab4be030dd23c33, ptfxHandle, alpha); }
	void SET_PARTICLE_FX_LOOPED_SCALE(int ptfxHandle, float scale) { Call<void>(0x1ab4be030ecb941f, ptfxHandle, scale); }
	void SET_PARTICLE_FX_LOOPED_SCALE_f(int ptfxHandle, float scale) { FastCall<void>(0x1ab4be030ecb941f, ptfxHandle, scale); }
	void SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST(int ptfxHandle, float range) { Call<void>(0x994e9498c2af73e2, ptfxHandle, range); }
	void SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST_f(int ptfxHandle, float range) { FastCall<void>(0x994e9498c2af73e2, ptfxHandle, range); }
	void _SET_PARTICLE_FX_LOOPED_CAMERA_BIAS(int ptfxHandle, float p1) { Call<void>(0x45903fe84041ab67, ptfxHandle, p1); }
	void _SET_PARTICLE_FX_LOOPED_CAMERA_BIAS_f(int ptfxHandle, float p1) { FastCall<void>(0x45903fe84041ab67, ptfxHandle, p1); }
	void SET_PARTICLE_FX_CAM_INSIDE_VEHICLE(BOOL p0) { Call<void>(0xbfaecb85de7f778a, p0); }
	void SET_PARTICLE_FX_CAM_INSIDE_VEHICLE_f(BOOL p0) { FastCall<void>(0xbfaecb85de7f778a, p0); }
	void SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE(Vehicle vehicle, BOOL p1) { Call<void>(0xa03edf950204b299, vehicle, p1); }
	void SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xa03edf950204b299, vehicle, p1); }
	void SET_PARTICLE_FX_SHOOTOUT_BOAT(Any p0) { Call<void>(0x85ef76003f082edf, p0); }
	void SET_PARTICLE_FX_SHOOTOUT_BOAT_f(Any p0) { FastCall<void>(0x85ef76003f082edf, p0); }
	void CLEAR_PARTICLE_FX_SHOOTOUT_BOAT() { Call<void>(0x873d368072f2cd0a); }
	void CLEAR_PARTICLE_FX_SHOOTOUT_BOAT_f() { FastCall<void>(0x873d368072f2cd0a); }
	void SET_PARTICLE_FX_BLOOD_SCALE(Any p0) { Call<void>(0x21c765ae90b54474, p0); }
	void SET_PARTICLE_FX_BLOOD_SCALE_f(Any p0) { FastCall<void>(0x21c765ae90b54474, p0); }
	void DISABLE_IN_WATER_PTFX(BOOL toggle) { Call<void>(0xcbbf63b5f989a641, toggle); }
	void DISABLE_IN_WATER_PTFX_f(BOOL toggle) { FastCall<void>(0xcbbf63b5f989a641, toggle); }
	void DISABLE_DOWNWASH_PTFX(BOOL toggle) { Call<void>(0x9559e18af6a397dd, toggle); }
	void DISABLE_DOWNWASH_PTFX_f(BOOL toggle) { FastCall<void>(0x9559e18af6a397dd, toggle); }
	void SET_PARTICLE_FX_SLIPSTREAM_LODRANGE_SCALE(float scale) { Call<void>(0xedc37098170856d5, scale); }
	void SET_PARTICLE_FX_SLIPSTREAM_LODRANGE_SCALE_f(float scale) { FastCall<void>(0xedc37098170856d5, scale); }
	void ENABLE_CLOWN_BLOOD_VFX(BOOL toggle) { Call<void>(0x65e9ab07a2a25a5, toggle); }
	void ENABLE_CLOWN_BLOOD_VFX_f(BOOL toggle) { FastCall<void>(0x65e9ab07a2a25a5, toggle); }
	void ENABLE_ALIEN_BLOOD_VFX(BOOL toggle) { Call<void>(0xad0592eba4e3896f, toggle); }
	void ENABLE_ALIEN_BLOOD_VFX_f(BOOL toggle) { FastCall<void>(0xad0592eba4e3896f, toggle); }
	void SET_PARTICLE_FX_BULLET_IMPACT_SCALE(float scale) { Call<void>(0xbb7adad269574bfd, scale); }
	void SET_PARTICLE_FX_BULLET_IMPACT_SCALE_f(float scale) { FastCall<void>(0xbb7adad269574bfd, scale); }
	void SET_PARTICLE_FX_BULLET_IMPACT_LODRANGE_SCALE(float p0) { Call<void>(0xd702fa42c2c9b854, p0); }
	void SET_PARTICLE_FX_BULLET_IMPACT_LODRANGE_SCALE_f(float p0) { FastCall<void>(0xd702fa42c2c9b854, p0); }
	void SET_PARTICLE_FX_BULLET_TRACE_NO_ANGLE_REJECT(BOOL p0) { Call<void>(0x4f3924e1d7b425c3, p0); }
	void SET_PARTICLE_FX_BULLET_TRACE_NO_ANGLE_REJECT_f(BOOL p0) { FastCall<void>(0x4f3924e1d7b425c3, p0); }
	void SET_PARTICLE_FX_BANG_SCRAPE_LODRANGE_SCALE(float p0) { Call<void>(0xe5b407495f78fa1c, p0); }
	void SET_PARTICLE_FX_BANG_SCRAPE_LODRANGE_SCALE_f(float p0) { FastCall<void>(0xe5b407495f78fa1c, p0); }
	void SET_PARTICLE_FX_FOOT_LODRANGE_SCALE(float p0) { Call<void>(0xd9b342b1ab7ea4a7, p0); }
	void SET_PARTICLE_FX_FOOT_LODRANGE_SCALE_f(float p0) { FastCall<void>(0xd9b342b1ab7ea4a7, p0); }
	void SET_PARTICLE_FX_FOOT_OVERRIDE_NAME(char* p0) { Call<void>(0x19c78554d684143e, p0); }
	void SET_PARTICLE_FX_FOOT_OVERRIDE_NAME_f(char* p0) { FastCall<void>(0x19c78554d684143e, p0); }
	void SET_SKIDMARK_RANGE_SCALE(float scale) { Call<void>(0xdbef445db49ecc66, scale); }
	void SET_SKIDMARK_RANGE_SCALE_f(float scale) { FastCall<void>(0xdbef445db49ecc66, scale); }
	void SET_PTFX_FORCE_VEHICLE_INTERIOR_FLAG(Any p0) { Call<void>(0xa5e5165687ba8fa8, p0); }
	void SET_PTFX_FORCE_VEHICLE_INTERIOR_FLAG_f(Any p0) { FastCall<void>(0xa5e5165687ba8fa8, p0); }
	void REGISTER_POSTFX_BULLET_IMPACT(float weaponWorldPosX, float weaponWorldPosY, float weaponWorldPosZ, float intensity) { Call<void>(0x6ae70d0d4381f332, weaponWorldPosX, weaponWorldPosY, weaponWorldPosZ, intensity); }
	void REGISTER_POSTFX_BULLET_IMPACT_f(float weaponWorldPosX, float weaponWorldPosY, float weaponWorldPosZ, float intensity) { FastCall<void>(0x6ae70d0d4381f332, weaponWorldPosX, weaponWorldPosY, weaponWorldPosZ, intensity); }
	void FORCE_POSTFX_BULLET_IMPACTS_AFTER_HUD(BOOL p0) { Call<void>(0x372532f65840549e, p0); }
	void FORCE_POSTFX_BULLET_IMPACTS_AFTER_HUD_f(BOOL p0) { FastCall<void>(0x372532f65840549e, p0); }
	void USE_PARTICLE_FX_ASSET(char* name) { Call<void>(0x61ed8c6e5dfd09e4, name); }
	void USE_PARTICLE_FX_ASSET_f(char* name) { FastCall<void>(0x61ed8c6e5dfd09e4, name); }
	void SET_PARTICLE_FX_OVERRIDE(char* oldAsset, char* newAsset) { Call<void>(0x8e1d8f5c9a551c3d, oldAsset, newAsset); }
	void SET_PARTICLE_FX_OVERRIDE_f(char* oldAsset, char* newAsset) { FastCall<void>(0x8e1d8f5c9a551c3d, oldAsset, newAsset); }
	void RESET_PARTICLE_FX_OVERRIDE(char* name) { Call<void>(0x2087225d2f67d70, name); }
	void RESET_PARTICLE_FX_OVERRIDE_f(char* name) { FastCall<void>(0x2087225d2f67d70, name); }
	int _START_VEHICLE_PARTICLE_FX_LOOPED(Vehicle vehicle, char* effectName, BOOL frontBack, BOOL leftRight, BOOL localOnly) { return Call<int>(0x79a090855764ca66, vehicle, effectName, frontBack, leftRight, localOnly); }
	int _START_VEHICLE_PARTICLE_FX_LOOPED_f(Vehicle vehicle, char* effectName, BOOL frontBack, BOOL leftRight, BOOL localOnly) { return FastCall<int>(0x79a090855764ca66, vehicle, effectName, frontBack, leftRight, localOnly); }
	void SET_WEATHER_PTFX_USE_OVERRIDE_SETTINGS(BOOL p0) { Call<void>(0x12398edba69fd1d, p0); }
	void SET_WEATHER_PTFX_USE_OVERRIDE_SETTINGS_f(BOOL p0) { FastCall<void>(0x12398edba69fd1d, p0); }
	void SET_WEATHER_PTFX_OVERRIDE_CURR_LEVEL(float p0) { Call<void>(0xbbab001b34250be9, p0); }
	void SET_WEATHER_PTFX_OVERRIDE_CURR_LEVEL_f(float p0) { FastCall<void>(0xbbab001b34250be9, p0); }
	void WASH_DECALS_IN_RANGE(float x, float y, float z, float range, float p4) { Call<void>(0xf294b9a80120719c, x, y, z, range, p4); }
	void WASH_DECALS_IN_RANGE_f(float x, float y, float z, float range, float p4) { FastCall<void>(0xf294b9a80120719c, x, y, z, range, p4); }
	void WASH_DECALS_FROM_VEHICLE(Vehicle vehicle, float p1) { Call<void>(0xbfcb08d4951ec710, vehicle, p1); }
	void WASH_DECALS_FROM_VEHICLE_f(Vehicle vehicle, float p1) { FastCall<void>(0xbfcb08d4951ec710, vehicle, p1); }
	void FADE_DECALS_IN_RANGE(float x, float y, float z, float p3, float p4) { Call<void>(0x50314b2b28d75b79, x, y, z, p3, p4); }
	void FADE_DECALS_IN_RANGE_f(float x, float y, float z, float p3, float p4) { FastCall<void>(0x50314b2b28d75b79, x, y, z, p3, p4); }
	void REMOVE_DECALS_IN_RANGE(float x, float y, float z, float range) { Call<void>(0x1df8a68d0be76981, x, y, z, range); }
	void REMOVE_DECALS_IN_RANGE_f(float x, float y, float z, float range) { FastCall<void>(0x1df8a68d0be76981, x, y, z, range); }
	void REMOVE_DECALS_FROM_OBJECT(Object obj) { Call<void>(0xcab54f1141e61cb6, obj); }
	void REMOVE_DECALS_FROM_OBJECT_f(Object obj) { FastCall<void>(0xcab54f1141e61cb6, obj); }
	void REMOVE_DECALS_FROM_OBJECT_FACING(Object obj, float x, float y, float z) { Call<void>(0xb89a048086ef0b83, obj, x, y, z); }
	void REMOVE_DECALS_FROM_OBJECT_FACING_f(Object obj, float x, float y, float z) { FastCall<void>(0xb89a048086ef0b83, obj, x, y, z); }
	void REMOVE_DECALS_FROM_VEHICLE(Vehicle vehicle) { Call<void>(0x8bf49318722d4475, vehicle); }
	void REMOVE_DECALS_FROM_VEHICLE_f(Vehicle vehicle) { FastCall<void>(0x8bf49318722d4475, vehicle); }
	int ADD_DECAL(int decalType, float posX, float posY, float posZ, float p4, float p5, float p6, float p7, float p8, float p9, float width, float height, float rCoef, float gCoef, float bCoef, float opacity, float timeout, BOOL p17, BOOL p18, BOOL p19) { return Call<int>(0x342df052da4f, decalType, posX, posY, posZ, p4, p5, p6, p7, p8, p9, width, height, rCoef, gCoef, bCoef, opacity, timeout, p17, p18, p19); }
	int ADD_DECAL_f(int decalType, float posX, float posY, float posZ, float p4, float p5, float p6, float p7, float p8, float p9, float width, float height, float rCoef, float gCoef, float bCoef, float opacity, float timeout, BOOL p17, BOOL p18, BOOL p19) { return FastCall<int>(0x342df052da4f, decalType, posX, posY, posZ, p4, p5, p6, p7, p8, p9, width, height, rCoef, gCoef, bCoef, opacity, timeout, p17, p18, p19); }
	int ADD_PETROL_DECAL(float x, float y, float z, float groundLvl, float width, float transparency) { return Call<int>(0x764e6733dd881dc, x, y, z, groundLvl, width, transparency); }
	int ADD_PETROL_DECAL_f(float x, float y, float z, float groundLvl, float width, float transparency) { return FastCall<int>(0x764e6733dd881dc, x, y, z, groundLvl, width, transparency); }
	int ADD_OIL_DECAL(float x, float y, float z, float groundLvl, float width, float transparency) { return Call<int>(0xdf4d98e9891db082, x, y, z, groundLvl, width, transparency); }
	int ADD_OIL_DECAL_f(float x, float y, float z, float groundLvl, float width, float transparency) { return FastCall<int>(0xdf4d98e9891db082, x, y, z, groundLvl, width, transparency); }
	void START_PETROL_TRAIL_DECALS(float p0) { Call<void>(0xbfc9a6814affa2f1, p0); }
	void START_PETROL_TRAIL_DECALS_f(float p0) { FastCall<void>(0xbfc9a6814affa2f1, p0); }
	void ADD_PETROL_TRAIL_DECAL_INFO(float x, float y, float z, float p3) { Call<void>(0x8d7b6c35e6095c6a, x, y, z, p3); }
	void ADD_PETROL_TRAIL_DECAL_INFO_f(float x, float y, float z, float p3) { FastCall<void>(0x8d7b6c35e6095c6a, x, y, z, p3); }
	void END_PETROL_TRAIL_DECALS() { Call<void>(0x9268e2b903f3ecea); }
	void END_PETROL_TRAIL_DECALS_f() { FastCall<void>(0x9268e2b903f3ecea); }
	void REMOVE_DECAL(int decal) { Call<void>(0x1dba76baa16e7c12, decal); }
	void REMOVE_DECAL_f(int decal) { FastCall<void>(0x1dba76baa16e7c12, decal); }
	BOOL IS_DECAL_ALIVE(int decal) { return Call<BOOL>(0x4e76b63e8473fde6, decal); }
	BOOL IS_DECAL_ALIVE_f(int decal) { return FastCall<BOOL>(0x4e76b63e8473fde6, decal); }
	float GET_DECAL_WASH_LEVEL(int decal) { return ToFloat(Call<_float>(0x16993b535408ab9f, decal)); }
	float GET_DECAL_WASH_LEVEL_f(int decal) { return ToFloat(FastCall<_float>(0x16993b535408ab9f, decal)); }
	void SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME() { Call<void>(0xc344d06e807f0066); }
	void SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME_f() { FastCall<void>(0xc344d06e807f0066); }
	void SET_DISABLE_PETROL_DECALS_RECYCLING_THIS_FRAME() { Call<void>(0x2b29f4dc0d02db59); }
	void SET_DISABLE_PETROL_DECALS_RECYCLING_THIS_FRAME_f() { FastCall<void>(0x2b29f4dc0d02db59); }
	void SET_DISABLE_DECAL_RENDERING_THIS_FRAME() { Call<void>(0xe4b0fb0928507285); }
	void SET_DISABLE_DECAL_RENDERING_THIS_FRAME_f() { FastCall<void>(0xe4b0fb0928507285); }
	BOOL GET_IS_PETROL_DECAL_IN_RANGE(float xCoord, float yCoord, float zCoord, float radius) { return Call<BOOL>(0xc8e84b4cca802558, xCoord, yCoord, zCoord, radius); }
	BOOL GET_IS_PETROL_DECAL_IN_RANGE_f(float xCoord, float yCoord, float zCoord, float radius) { return FastCall<BOOL>(0xc8e84b4cca802558, xCoord, yCoord, zCoord, radius); }
	void PATCH_DECAL_DIFFUSE_MAP(int decalType, char* textureDict, char* textureName) { Call<void>(0xcae1408cee135cb6, decalType, textureDict, textureName); }
	void PATCH_DECAL_DIFFUSE_MAP_f(int decalType, char* textureDict, char* textureName) { FastCall<void>(0xcae1408cee135cb6, decalType, textureDict, textureName); }
	void UNPATCH_DECAL_DIFFUSE_MAP(int decalType) { Call<void>(0x69f9243a9a9675fd, decalType); }
	void UNPATCH_DECAL_DIFFUSE_MAP_f(int decalType) { FastCall<void>(0x69f9243a9a9675fd, decalType); }
	void MOVE_VEHICLE_DECALS(Any p0, Any p1) { Call<void>(0xef255fee98b1ed27, p0, p1); }
	void MOVE_VEHICLE_DECALS_f(Any p0, Any p1) { FastCall<void>(0xef255fee98b1ed27, p0, p1); }
	BOOL ADD_VEHICLE_CREW_EMBLEM(Vehicle vehicle, Ped ped, int boneIndex, float x1, float x2, float x3, float y1, float y2, float y3, float z1, float z2, float z3, float scale, Any p13, int alpha) { return Call<BOOL>(0xfb3db61342204e47, vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha); }
	BOOL ADD_VEHICLE_CREW_EMBLEM_f(Vehicle vehicle, Ped ped, int boneIndex, float x1, float x2, float x3, float y1, float y2, float y3, float z1, float z2, float z3, float scale, Any p13, int alpha) { return FastCall<BOOL>(0xfb3db61342204e47, vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha); }
	BOOL ABORT_VEHICLE_CREW_EMBLEM_REQUEST(int* p0) { return Call<BOOL>(0xda9a84e0e6f90e86, p0); }
	BOOL ABORT_VEHICLE_CREW_EMBLEM_REQUEST_f(int* p0) { return FastCall<BOOL>(0xda9a84e0e6f90e86, p0); }
	void REMOVE_VEHICLE_CREW_EMBLEM(Vehicle vehicle, int p1) { Call<void>(0xe76d291ed7f01eca, vehicle, p1); }
	void REMOVE_VEHICLE_CREW_EMBLEM_f(Vehicle vehicle, int p1) { FastCall<void>(0xe76d291ed7f01eca, vehicle, p1); }
	int GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE(Vehicle vehicle, int p1) { return Call<int>(0x75a023fd51cf201e, vehicle, p1); }
	int GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE_f(Vehicle vehicle, int p1) { return FastCall<int>(0x75a023fd51cf201e, vehicle, p1); }
	BOOL DOES_VEHICLE_HAVE_CREW_EMBLEM(Vehicle vehicle, int p1) { return Call<BOOL>(0x77244e5deebf473a, vehicle, p1); }
	BOOL DOES_VEHICLE_HAVE_CREW_EMBLEM_f(Vehicle vehicle, int p1) { return FastCall<BOOL>(0x77244e5deebf473a, vehicle, p1); }
	void DISABLE_COMPOSITE_SHOTGUN_DECALS(BOOL toggle) { Call<void>(0x7a33d018d8a19f4e, toggle); }
	void DISABLE_COMPOSITE_SHOTGUN_DECALS_f(BOOL toggle) { FastCall<void>(0x7a33d018d8a19f4e, toggle); }
	void DISABLE_SCUFF_DECALS(BOOL toggle) { Call<void>(0x43c6ae8639a9e477, toggle); }
	void DISABLE_SCUFF_DECALS_f(BOOL toggle) { FastCall<void>(0x43c6ae8639a9e477, toggle); }
	void SET_DECAL_BULLET_IMPACT_RANGE_SCALE(float p0) { Call<void>(0x6d5df865f28fda3d, p0); }
	void SET_DECAL_BULLET_IMPACT_RANGE_SCALE_f(float p0) { FastCall<void>(0x6d5df865f28fda3d, p0); }
	void OVERRIDE_INTERIOR_SMOKE_NAME(char* name) { Call<void>(0xff8e7482857fd077, name); }
	void OVERRIDE_INTERIOR_SMOKE_NAME_f(char* name) { FastCall<void>(0xff8e7482857fd077, name); }
	void OVERRIDE_INTERIOR_SMOKE_LEVEL(float level) { Call<void>(0xf2401bce2a6002f8, level); }
	void OVERRIDE_INTERIOR_SMOKE_LEVEL_f(float level) { FastCall<void>(0xf2401bce2a6002f8, level); }
	void OVERRIDE_INTERIOR_SMOKE_END() { Call<void>(0x8c5f6f1cfc0c414f); }
	void OVERRIDE_INTERIOR_SMOKE_END_f() { FastCall<void>(0x8c5f6f1cfc0c414f); }
	void REGISTER_NOIR_LENS_EFFECT() { Call<void>(0x1104ad7fbf29ebf9); }
	void REGISTER_NOIR_LENS_EFFECT_f() { FastCall<void>(0x1104ad7fbf29ebf9); }
	void DISABLE_VEHICLE_DISTANTLIGHTS(BOOL toggle) { Call<void>(0x6e15753a57007594, toggle); }
	void DISABLE_VEHICLE_DISTANTLIGHTS_f(BOOL toggle) { FastCall<void>(0x6e15753a57007594, toggle); }
	void RENDER_SHADOWED_LIGHTS_WITH_NO_SHADOWS(BOOL p0) { Call<void>(0xb3f6effe59c14583, p0); }
	void RENDER_SHADOWED_LIGHTS_WITH_NO_SHADOWS_f(BOOL p0) { FastCall<void>(0xb3f6effe59c14583, p0); }
	void REQUEST_EARLY_LIGHT_CHECK() { Call<void>(0xd6be72de29c57793); }
	void REQUEST_EARLY_LIGHT_CHECK_f() { FastCall<void>(0xd6be72de29c57793); }
	void USE_SNOW_FOOT_VFX_WHEN_UNSHELTERED(BOOL toggle) { Call<void>(0x4cc2883a4cea512a, toggle); }
	void USE_SNOW_FOOT_VFX_WHEN_UNSHELTERED_f(BOOL toggle) { FastCall<void>(0x4cc2883a4cea512a, toggle); }
	void _FORCE_ALLOW_SNOW_FOOT_VFX_ON_ICE(BOOL toggle) { Call<void>(0x6f55b3da1903ffe0, toggle); }
	void _FORCE_ALLOW_SNOW_FOOT_VFX_ON_ICE_f(BOOL toggle) { FastCall<void>(0x6f55b3da1903ffe0, toggle); }
	void USE_SNOW_WHEEL_VFX_WHEN_UNSHELTERED(BOOL toggle) { Call<void>(0xc25e08cb6f3d2bc5, toggle); }
	void USE_SNOW_WHEEL_VFX_WHEN_UNSHELTERED_f(BOOL toggle) { FastCall<void>(0xc25e08cb6f3d2bc5, toggle); }
	void DISABLE_REGION_VFX(Any p0) { Call<void>(0x92515dc02e5e15b4, p0); }
	void DISABLE_REGION_VFX_f(Any p0) { FastCall<void>(0x92515dc02e5e15b4, p0); }
	void _FORCE_GROUND_SNOW_PASS(BOOL toggle) { Call<void>(0xc3db61309273aea8, toggle); }
	void _FORCE_GROUND_SNOW_PASS_f(BOOL toggle) { FastCall<void>(0xc3db61309273aea8, toggle); }
	void PRESET_INTERIOR_AMBIENT_CACHE(char* timecycleModifierName) { Call<void>(0x9e9521f74bd15fec, timecycleModifierName); }
	void PRESET_INTERIOR_AMBIENT_CACHE_f(char* timecycleModifierName) { FastCall<void>(0x9e9521f74bd15fec, timecycleModifierName); }
	void SET_TIMECYCLE_MODIFIER(char* modifierName) { Call<void>(0x117cb99a0e5f2d5a, modifierName); }
	void SET_TIMECYCLE_MODIFIER_f(char* modifierName) { FastCall<void>(0x117cb99a0e5f2d5a, modifierName); }
	void SET_TIMECYCLE_MODIFIER_STRENGTH(float strength) { Call<void>(0x78fff9121605a986, strength); }
	void SET_TIMECYCLE_MODIFIER_STRENGTH_f(float strength) { FastCall<void>(0x78fff9121605a986, strength); }
	void SET_TRANSITION_TIMECYCLE_MODIFIER(char* modifierName, float transition) { Call<void>(0xa7f30dcd5b15ee2a, modifierName, transition); }
	void SET_TRANSITION_TIMECYCLE_MODIFIER_f(char* modifierName, float transition) { FastCall<void>(0xa7f30dcd5b15ee2a, modifierName, transition); }
	void SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(float strength) { Call<void>(0xfc7e49b12e1966c7, strength); }
	void SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER_f(float strength) { FastCall<void>(0xfc7e49b12e1966c7, strength); }
	void CLEAR_TIMECYCLE_MODIFIER() { Call<void>(0x472aefcbac89598f); }
	void CLEAR_TIMECYCLE_MODIFIER_f() { FastCall<void>(0x472aefcbac89598f); }
	int GET_TIMECYCLE_MODIFIER_INDEX() { return Call<int>(0xc7d30067f8f37d19); }
	int GET_TIMECYCLE_MODIFIER_INDEX_f() { return FastCall<int>(0xc7d30067f8f37d19); }
	int GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX() { return Call<int>(0x15a453ebb79f8e45); }
	int GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX_f() { return FastCall<int>(0x15a453ebb79f8e45); }
	BOOL GET_IS_TIMECYCLE_TRANSITIONING_OUT() { return Call<BOOL>(0xcf244c0f5571562a); }
	BOOL GET_IS_TIMECYCLE_TRANSITIONING_OUT_f() { return FastCall<BOOL>(0xcf244c0f5571562a); }
	void PUSH_TIMECYCLE_MODIFIER() { Call<void>(0xafc67c5a1fb1e782); }
	void PUSH_TIMECYCLE_MODIFIER_f() { FastCall<void>(0xafc67c5a1fb1e782); }
	void POP_TIMECYCLE_MODIFIER() { Call<void>(0xfc38f6645a403b0b); }
	void POP_TIMECYCLE_MODIFIER_f() { FastCall<void>(0xfc38f6645a403b0b); }
	void SET_CURRENT_PLAYER_TCMODIFIER(char* modifierName) { Call<void>(0xc85fcd81d635d741, modifierName); }
	void SET_CURRENT_PLAYER_TCMODIFIER_f(char* modifierName) { FastCall<void>(0xc85fcd81d635d741, modifierName); }
	void SET_PLAYER_TCMODIFIER_TRANSITION(float value) { Call<void>(0x135ef8985dfbd4ed, value); }
	void SET_PLAYER_TCMODIFIER_TRANSITION_f(float value) { FastCall<void>(0x135ef8985dfbd4ed, value); }
	void SET_NEXT_PLAYER_TCMODIFIER(char* modifierName) { Call<void>(0x71f3065a674da8b5, modifierName); }
	void SET_NEXT_PLAYER_TCMODIFIER_f(char* modifierName) { FastCall<void>(0x71f3065a674da8b5, modifierName); }
	void ADD_TCMODIFIER_OVERRIDE(char* modifierName1, char* modifierName2) { Call<void>(0xe83e0ebf11ce0ce7, modifierName1, modifierName2); }
	void ADD_TCMODIFIER_OVERRIDE_f(char* modifierName1, char* modifierName2) { FastCall<void>(0xe83e0ebf11ce0ce7, modifierName1, modifierName2); }
	void CLEAR_ALL_TCMODIFIER_OVERRIDES(char* p0) { Call<void>(0x84f276a13a0c611e, p0); }
	void CLEAR_ALL_TCMODIFIER_OVERRIDES_f(char* p0) { FastCall<void>(0x84f276a13a0c611e, p0); }
	void SET_EXTRA_TCMODIFIER(char* modifierName) { Call<void>(0xdb6775d45eb97052, modifierName); }
	void SET_EXTRA_TCMODIFIER_f(char* modifierName) { FastCall<void>(0xdb6775d45eb97052, modifierName); }
	void CLEAR_EXTRA_TCMODIFIER() { Call<void>(0xcfbd2708e67b25c7); }
	void CLEAR_EXTRA_TCMODIFIER_f() { FastCall<void>(0xcfbd2708e67b25c7); }
	int GET_EXTRA_TCMODIFIER() { return Call<int>(0x8ec811832363de); }
	int GET_EXTRA_TCMODIFIER_f() { return FastCall<int>(0x8ec811832363de); }
	void ENABLE_MOON_CYCLE_OVERRIDE(float strength) { Call<void>(0xbf325089156d9b67, strength); }
	void ENABLE_MOON_CYCLE_OVERRIDE_f(float strength) { FastCall<void>(0xbf325089156d9b67, strength); }
	void DISABLE_MOON_CYCLE_OVERRIDE() { Call<void>(0x3e9371ddeb4cdc2c); }
	void DISABLE_MOON_CYCLE_OVERRIDE_f() { FastCall<void>(0x3e9371ddeb4cdc2c); }
	int REQUEST_SCALEFORM_MOVIE(char* scaleformName) { return Call<int>(0x1223890dde0e46af, scaleformName); }
	int REQUEST_SCALEFORM_MOVIE_f(char* scaleformName) { return FastCall<int>(0x1223890dde0e46af, scaleformName); }
	int REQUEST_SCALEFORM_MOVIE_WITH_IGNORE_SUPER_WIDESCREEN(char* scaleformName) { return Call<int>(0x1caa96809cfeda47, scaleformName); }
	int REQUEST_SCALEFORM_MOVIE_WITH_IGNORE_SUPER_WIDESCREEN_f(char* scaleformName) { return FastCall<int>(0x1caa96809cfeda47, scaleformName); }
	int REQUEST_SCALEFORM_MOVIE_INSTANCE(char* scaleformName) { return Call<int>(0xfa4623d79f68425, scaleformName); }
	int REQUEST_SCALEFORM_MOVIE_INSTANCE_f(char* scaleformName) { return FastCall<int>(0xfa4623d79f68425, scaleformName); }
	int REQUEST_SCALEFORM_MOVIE_SKIP_RENDER_WHILE_PAUSED(char* scaleformName) { return Call<int>(0x2daa6816a4775ef5, scaleformName); }
	int REQUEST_SCALEFORM_MOVIE_SKIP_RENDER_WHILE_PAUSED_f(char* scaleformName) { return FastCall<int>(0x2daa6816a4775ef5, scaleformName); }
	BOOL HAS_SCALEFORM_MOVIE_LOADED(int scaleformHandle) { return Call<BOOL>(0x304ce854bd3c532a, scaleformHandle); }
	BOOL HAS_SCALEFORM_MOVIE_LOADED_f(int scaleformHandle) { return FastCall<BOOL>(0x304ce854bd3c532a, scaleformHandle); }
	BOOL IS_ACTIVE_SCALEFORM_MOVIE_DELETING(int val) { return Call<BOOL>(0xea7864587c46fb6c, val); }
	BOOL IS_ACTIVE_SCALEFORM_MOVIE_DELETING_f(int val) { return FastCall<BOOL>(0xea7864587c46fb6c, val); }
	BOOL IS_SCALEFORM_MOVIE_DELETING(int val) { return Call<BOOL>(0xcd69423320540dd, val); }
	BOOL IS_SCALEFORM_MOVIE_DELETING_f(int val) { return FastCall<BOOL>(0xcd69423320540dd, val); }
	BOOL HAS_SCALEFORM_MOVIE_FILENAME_LOADED(char* scaleformName) { return Call<BOOL>(0xed10f21d4a05e3b8, scaleformName); }
	BOOL HAS_SCALEFORM_MOVIE_FILENAME_LOADED_f(char* scaleformName) { return FastCall<BOOL>(0xed10f21d4a05e3b8, scaleformName); }
	BOOL HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT(int scaleformHandle) { return Call<BOOL>(0xc72e2ade6a140472, scaleformHandle); }
	BOOL HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT_f(int scaleformHandle) { return FastCall<BOOL>(0xc72e2ade6a140472, scaleformHandle); }
	void SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(int* scaleformHandle) { Call<void>(0x53ac8ddb5f56c5bd, scaleformHandle); }
	void SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED_f(int* scaleformHandle) { FastCall<void>(0x53ac8ddb5f56c5bd, scaleformHandle); }
	void SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME(int scaleform, BOOL toggle) { Call<void>(0x49d0c86c26a1d31e, scaleform, toggle); }
	void SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME_f(int scaleform, BOOL toggle) { FastCall<void>(0x49d0c86c26a1d31e, scaleform, toggle); }
	void SET_SCALEFORM_MOVIE_TO_USE_LARGE_RT(int scaleformHandle, BOOL toggle) { Call<void>(0x26acb3f601c3145, scaleformHandle, toggle); }
	void SET_SCALEFORM_MOVIE_TO_USE_LARGE_RT_f(int scaleformHandle, BOOL toggle) { FastCall<void>(0x26acb3f601c3145, scaleformHandle, toggle); }
	void SET_SCALEFORM_MOVIE_TO_USE_SUPER_LARGE_RT(int scaleformHandle, BOOL toggle) { Call<void>(0xd258cedd5ff5be69, scaleformHandle, toggle); }
	void SET_SCALEFORM_MOVIE_TO_USE_SUPER_LARGE_RT_f(int scaleformHandle, BOOL toggle) { FastCall<void>(0xd258cedd5ff5be69, scaleformHandle, toggle); }
	void DRAW_SCALEFORM_MOVIE(int scaleformHandle, float x, float y, float width, float height, int red, int green, int blue, int alpha, int p9) { Call<void>(0x46d839270b5da384, scaleformHandle, x, y, width, height, red, green, blue, alpha, p9); }
	void DRAW_SCALEFORM_MOVIE_f(int scaleformHandle, float x, float y, float width, float height, int red, int green, int blue, int alpha, int p9) { FastCall<void>(0x46d839270b5da384, scaleformHandle, x, y, width, height, red, green, blue, alpha, p9); }
	void DRAW_SCALEFORM_MOVIE_FULLSCREEN(int scaleform, int red, int green, int blue, int alpha, int p5) { Call<void>(0x8b436737a0bf7f56, scaleform, red, green, blue, alpha, p5); }
	void DRAW_SCALEFORM_MOVIE_FULLSCREEN_f(int scaleform, int red, int green, int blue, int alpha, int p5) { FastCall<void>(0x8b436737a0bf7f56, scaleform, red, green, blue, alpha, p5); }
	void DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED(int scaleform1, int scaleform2, int red, int green, int blue, int alpha) { Call<void>(0xc382c9b89dd8ad94, scaleform1, scaleform2, red, green, blue, alpha); }
	void DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED_f(int scaleform1, int scaleform2, int red, int green, int blue, int alpha) { FastCall<void>(0xc382c9b89dd8ad94, scaleform1, scaleform2, red, green, blue, alpha); }
	void DRAW_SCALEFORM_MOVIE_3D(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, int rotationOrder) { Call<void>(0x4422e6a3a5d8e90c, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, rotationOrder); }
	void DRAW_SCALEFORM_MOVIE_3D_f(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, int rotationOrder) { FastCall<void>(0x4422e6a3a5d8e90c, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, rotationOrder); }
	void DRAW_SCALEFORM_MOVIE_3D_SOLID(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, int rotationOrder) { Call<void>(0xccbb56fe91640198, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, rotationOrder); }
	void DRAW_SCALEFORM_MOVIE_3D_SOLID_f(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, int rotationOrder) { FastCall<void>(0xccbb56fe91640198, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, rotationOrder); }
	void CALL_SCALEFORM_MOVIE_METHOD(int scaleform, char* method) { Call<void>(0x9b4ae2747bbb77a2, scaleform, method); }
	void CALL_SCALEFORM_MOVIE_METHOD_f(int scaleform, char* method) { FastCall<void>(0x9b4ae2747bbb77a2, scaleform, method); }
	void CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER(int scaleform, char* methodName, float param1, float param2, float param3, float param4, float param5) { Call<void>(0xae57785b8e64bc5, scaleform, methodName, param1, param2, param3, param4, param5); }
	void CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_f(int scaleform, char* methodName, float param1, float param2, float param3, float param4, float param5) { FastCall<void>(0xae57785b8e64bc5, scaleform, methodName, param1, param2, param3, param4, param5); }
	void CALL_SCALEFORM_MOVIE_METHOD_WITH_STRING(int scaleform, char* methodName, char* param1, char* param2, char* param3, char* param4, char* param5) { Call<void>(0xae57785c162d08d, scaleform, methodName, param1, param2, param3, param4, param5); }
	void CALL_SCALEFORM_MOVIE_METHOD_WITH_STRING_f(int scaleform, char* methodName, char* param1, char* param2, char* param3, char* param4, char* param5) { FastCall<void>(0xae57785c162d08d, scaleform, methodName, param1, param2, param3, param4, param5); }
	void CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(int scaleform, char* methodName, float floatParam1, float floatParam2, float floatParam3, float floatParam4, float floatParam5, char* stringParam1, char* stringParam2, char* stringParam3, char* stringParam4, char* stringParam5) { Call<void>(0xd6b3495012873453, scaleform, methodName, floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, stringParam1, stringParam2, stringParam3, stringParam4, stringParam5); }
	void CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING_f(int scaleform, char* methodName, float floatParam1, float floatParam2, float floatParam3, float floatParam4, float floatParam5, char* stringParam1, char* stringParam2, char* stringParam3, char* stringParam4, char* stringParam5) { FastCall<void>(0xd6b3495012873453, scaleform, methodName, floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, stringParam1, stringParam2, stringParam3, stringParam4, stringParam5); }
	BOOL BEGIN_SCALEFORM_SCRIPT_HUD_MOVIE_METHOD(int hudComponent, char* methodName) { return Call<BOOL>(0x2dacb583c3bc6dc5, hudComponent, methodName); }
	BOOL BEGIN_SCALEFORM_SCRIPT_HUD_MOVIE_METHOD_f(int hudComponent, char* methodName) { return FastCall<BOOL>(0x2dacb583c3bc6dc5, hudComponent, methodName); }
	BOOL BEGIN_SCALEFORM_MOVIE_METHOD(int scaleform, char* methodName) { return Call<BOOL>(0x11cff06e7acba917, scaleform, methodName); }
	BOOL BEGIN_SCALEFORM_MOVIE_METHOD_f(int scaleform, char* methodName) { return FastCall<BOOL>(0x11cff06e7acba917, scaleform, methodName); }
	BOOL BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND(char* methodName) { return Call<BOOL>(0x63d8187db5336d4a, methodName); }
	BOOL BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_f(char* methodName) { return FastCall<BOOL>(0x63d8187db5336d4a, methodName); }
	BOOL BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER(char* methodName) { return Call<BOOL>(0x770b73a1a2d6bf22, methodName); }
	BOOL BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER_f(char* methodName) { return FastCall<BOOL>(0x770b73a1a2d6bf22, methodName); }
	void END_SCALEFORM_MOVIE_METHOD() { Call<void>(0x3c9c6013ab3d84a5); }
	void END_SCALEFORM_MOVIE_METHOD_f() { FastCall<void>(0x3c9c6013ab3d84a5); }
	int END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE() { return Call<int>(0xe01d4a9db905e2dc); }
	int END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_f() { return FastCall<int>(0xe01d4a9db905e2dc); }
	BOOL IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY(int methodReturn) { return Call<BOOL>(0x24689d317112940f, methodReturn); }
	BOOL IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY_f(int methodReturn) { return FastCall<BOOL>(0x24689d317112940f, methodReturn); }
	int GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT(int methodReturn) { return Call<int>(0x1c5ab21f7d840f67, methodReturn); }
	int GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT_f(int methodReturn) { return FastCall<int>(0x1c5ab21f7d840f67, methodReturn); }
	BOOL GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_BOOL(int methodReturn) { return Call<BOOL>(0x6efb91d032fab252, methodReturn); }
	BOOL GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_BOOL_f(int methodReturn) { return FastCall<BOOL>(0x6efb91d032fab252, methodReturn); }
	const char* GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING(int methodReturn) { return Call<char*>(0x9e5e5e8f7c619979, methodReturn); }
	const char* GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING_f(int methodReturn) { return FastCall<char*>(0x9e5e5e8f7c619979, methodReturn); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(int value) { Call<void>(0x4cfb6109a580efa1, value); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT_f(int value) { FastCall<void>(0x4cfb6109a580efa1, value); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(float value) { Call<void>(0xfba7453648d8518e, value); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT_f(float value) { FastCall<void>(0xfba7453648d8518e, value); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(BOOL value) { Call<void>(0x5270c02b0a99d958, value); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL_f(BOOL value) { FastCall<void>(0x5270c02b0a99d958, value); }
	void BEGIN_TEXT_COMMAND_SCALEFORM_STRING(char* componentType) { Call<void>(0x9a240ae8d1edd8b2, componentType); }
	void BEGIN_TEXT_COMMAND_SCALEFORM_STRING_f(char* componentType) { FastCall<void>(0x9a240ae8d1edd8b2, componentType); }
	void END_TEXT_COMMAND_SCALEFORM_STRING() { Call<void>(0xbec238ddb0a68164); }
	void END_TEXT_COMMAND_SCALEFORM_STRING_f() { FastCall<void>(0xbec238ddb0a68164); }
	void END_TEXT_COMMAND_UNPARSED_SCALEFORM_STRING() { Call<void>(0x88913b061279dd95); }
	void END_TEXT_COMMAND_UNPARSED_SCALEFORM_STRING_f() { FastCall<void>(0x88913b061279dd95); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_LITERAL_STRING(char* string) { Call<void>(0x3d76742a8e32aaf, string); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_LITERAL_STRING_f(char* string) { FastCall<void>(0x3d76742a8e32aaf, string); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(char* string) { Call<void>(0x23f7c239ade20ad3, string); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING_f(char* string) { FastCall<void>(0x23f7c239ade20ad3, string); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(char* string) { Call<void>(0x4dda93c2459c6dd5, string); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING_f(char* string) { FastCall<void>(0x4dda93c2459c6dd5, string); }
	BOOL DOES_LATEST_BRIEF_STRING_EXIST(int p0) { return Call<BOOL>(0x6232b91685ff4260, p0); }
	BOOL DOES_LATEST_BRIEF_STRING_EXIST_f(int p0) { return FastCall<BOOL>(0x6232b91685ff4260, p0); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_LATEST_BRIEF_STRING(int value) { Call<void>(0xb6e64c56d9e3b120, value); }
	void SCALEFORM_MOVIE_METHOD_ADD_PARAM_LATEST_BRIEF_STRING_f(int value) { FastCall<void>(0xb6e64c56d9e3b120, value); }
	void REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE(int hudComponent) { Call<void>(0x5b78373f8a1c5a35, hudComponent); }
	void REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE_f(int hudComponent) { FastCall<void>(0x5b78373f8a1c5a35, hudComponent); }
	BOOL HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED(int hudComponent) { return Call<BOOL>(0x18f1563f28f1a69a, hudComponent); }
	BOOL HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED_f(int hudComponent) { return FastCall<BOOL>(0x18f1563f28f1a69a, hudComponent); }
	void REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE(int hudComponent) { Call<void>(0xbae91e33b6c9c700, hudComponent); }
	void REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE_f(int hudComponent) { FastCall<void>(0xbae91e33b6c9c700, hudComponent); }
	BOOL PASS_KEYBOARD_INPUT_TO_SCALEFORM(int scaleformHandle) { return Call<BOOL>(0x23d9f768ea20dec9, scaleformHandle); }
	BOOL PASS_KEYBOARD_INPUT_TO_SCALEFORM_f(int scaleformHandle) { return FastCall<BOOL>(0x23d9f768ea20dec9, scaleformHandle); }
	void SET_TV_CHANNEL(int channel) { Call<void>(0xee7a95f625ded043, channel); }
	void SET_TV_CHANNEL_f(int channel) { FastCall<void>(0xee7a95f625ded043, channel); }
	int GET_TV_CHANNEL() { return Call<int>(0xc23fa1b8f795ccf); }
	int GET_TV_CHANNEL_f() { return FastCall<int>(0xc23fa1b8f795ccf); }
	void SET_TV_VOLUME(float volume) { Call<void>(0xa498997bae6fa7ba, volume); }
	void SET_TV_VOLUME_f(float volume) { FastCall<void>(0xa498997bae6fa7ba, volume); }
	float GET_TV_VOLUME() { return ToFloat(Call<_float>(0x216c83f0804b59ae)); }
	float GET_TV_VOLUME_f() { return ToFloat(FastCall<_float>(0x216c83f0804b59ae)); }
	void DRAW_TV_CHANNEL(float xPos, float yPos, float xScale, float yScale, float rotation, int red, int green, int blue, int alpha) { Call<void>(0xc10c6d697f521601, xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha); }
	void DRAW_TV_CHANNEL_f(float xPos, float yPos, float xScale, float yScale, float rotation, int red, int green, int blue, int alpha) { FastCall<void>(0xc10c6d697f521601, xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha); }
	void SET_TV_CHANNEL_PLAYLIST(int tvChannel, char* playlistName, BOOL restart) { Call<void>(0xe06c8131d3156e4e, tvChannel, playlistName, restart); }
	void SET_TV_CHANNEL_PLAYLIST_f(int tvChannel, char* playlistName, BOOL restart) { FastCall<void>(0xe06c8131d3156e4e, tvChannel, playlistName, restart); }
	void SET_TV_CHANNEL_PLAYLIST_AT_HOUR(int tvChannel, char* playlistName, int hour) { Call<void>(0x4e48e3f11259ad7f, tvChannel, playlistName, hour); }
	void SET_TV_CHANNEL_PLAYLIST_AT_HOUR_f(int tvChannel, char* playlistName, int hour) { FastCall<void>(0x4e48e3f11259ad7f, tvChannel, playlistName, hour); }
	void _SET_TV_CHANNEL_PLAYLIST_DIRTY(int tvChannel, BOOL p1) { Call<void>(0x74c887f6101ba82, tvChannel, p1); }
	void _SET_TV_CHANNEL_PLAYLIST_DIRTY_f(int tvChannel, BOOL p1) { FastCall<void>(0x74c887f6101ba82, tvChannel, p1); }
	void CLEAR_TV_CHANNEL_PLAYLIST(int tvChannel) { Call<void>(0x60851133fa30c8b9, tvChannel); }
	void CLEAR_TV_CHANNEL_PLAYLIST_f(int tvChannel) { FastCall<void>(0x60851133fa30c8b9, tvChannel); }
	BOOL IS_PLAYLIST_ON_CHANNEL(int tvChannel, Any p1) { return Call<BOOL>(0x6b0a89d0921db47b, tvChannel, p1); }
	BOOL IS_PLAYLIST_ON_CHANNEL_f(int tvChannel, Any p1) { return FastCall<BOOL>(0x6b0a89d0921db47b, tvChannel, p1); }
	BOOL IS_TVSHOW_CURRENTLY_PLAYING(Hash videoCliphash) { return Call<BOOL>(0xda6b77c96242df2a, videoCliphash); }
	BOOL IS_TVSHOW_CURRENTLY_PLAYING_f(Hash videoCliphash) { return FastCall<BOOL>(0xda6b77c96242df2a, videoCliphash); }
	void ENABLE_MOVIE_KEYFRAME_WAIT(BOOL toggle) { Call<void>(0xdd399938ed293cfb, toggle); }
	void ENABLE_MOVIE_KEYFRAME_WAIT_f(BOOL toggle) { FastCall<void>(0xdd399938ed293cfb, toggle); }
	void SET_TV_PLAYER_WATCHING_THIS_FRAME(Any p0) { Call<void>(0x6af4498d8519a5ba, p0); }
	void SET_TV_PLAYER_WATCHING_THIS_FRAME_f(Any p0) { FastCall<void>(0x6af4498d8519a5ba, p0); }
	Hash GET_CURRENT_TV_CLIP_NAMEHASH() { return Call<Hash>(0xf246fa3a4c0ece3a); }
	Hash GET_CURRENT_TV_CLIP_NAMEHASH_f() { return FastCall<Hash>(0xf246fa3a4c0ece3a); }
	void ENABLE_MOVIE_SUBTITLES(BOOL toggle) { Call<void>(0x9d8171e658b7fe10, toggle); }
	void ENABLE_MOVIE_SUBTITLES_f(BOOL toggle) { FastCall<void>(0x9d8171e658b7fe10, toggle); }
	BOOL UI3DSCENE_IS_AVAILABLE() { return Call<BOOL>(0x266089930a40af8c); }
	BOOL UI3DSCENE_IS_AVAILABLE_f() { return FastCall<BOOL>(0x266089930a40af8c); }
	BOOL UI3DSCENE_PUSH_PRESET(char* presetName) { return Call<BOOL>(0x4ba40968e5cc46ec, presetName); }
	BOOL UI3DSCENE_PUSH_PRESET_f(char* presetName) { return FastCall<BOOL>(0x4ba40968e5cc46ec, presetName); }
	BOOL UI3DSCENE_ASSIGN_PED_TO_SLOT(char* presetName, Ped ped, int slot, float posX, float posY, float posZ) { return Call<BOOL>(0x92dcdf36f4b21a5a, presetName, ped, slot, posX, posY, posZ); }
	BOOL UI3DSCENE_ASSIGN_PED_TO_SLOT_f(char* presetName, Ped ped, int slot, float posX, float posY, float posZ) { return FastCall<BOOL>(0x92dcdf36f4b21a5a, presetName, ped, slot, posX, posY, posZ); }
	void UI3DSCENE_CLEAR_PATCHED_DATA() { Call<void>(0x8f3c2303bd4baeac); }
	void UI3DSCENE_CLEAR_PATCHED_DATA_f() { FastCall<void>(0x8f3c2303bd4baeac); }
	void UI3DSCENE_MAKE_PUSHED_PRESET_PERSISTENT(BOOL toggle) { Call<void>(0x8053e85e99d8acea, toggle); }
	void UI3DSCENE_MAKE_PUSHED_PRESET_PERSISTENT_f(BOOL toggle) { FastCall<void>(0x8053e85e99d8acea, toggle); }
	void TERRAINGRID_ACTIVATE(BOOL toggle) { Call<void>(0x293a6cfbbba60cd7, toggle); }
	void TERRAINGRID_ACTIVATE_f(BOOL toggle) { FastCall<void>(0x293a6cfbbba60cd7, toggle); }
	void TERRAINGRID_SET_PARAMS(float x, float y, float z, float forwardX, float forwardY, float forwardZ, float sizeX, float sizeY, float sizeZ, float gridScale, float glowIntensity, float normalHeight, float heightDiff) { Call<void>(0xc454cf6441941b07, x, y, z, forwardX, forwardY, forwardZ, sizeX, sizeY, sizeZ, gridScale, glowIntensity, normalHeight, heightDiff); }
	void TERRAINGRID_SET_PARAMS_f(float x, float y, float z, float forwardX, float forwardY, float forwardZ, float sizeX, float sizeY, float sizeZ, float gridScale, float glowIntensity, float normalHeight, float heightDiff) { FastCall<void>(0xc454cf6441941b07, x, y, z, forwardX, forwardY, forwardZ, sizeX, sizeY, sizeZ, gridScale, glowIntensity, normalHeight, heightDiff); }
	void TERRAINGRID_SET_COLOURS(int lowR, int lowG, int lowB, int lowAlpha, int r, int g, int b, int alpha, int highR, int highG, int highB, int highAlpha) { Call<void>(0xc6451d2158d40aa6, lowR, lowG, lowB, lowAlpha, r, g, b, alpha, highR, highG, highB, highAlpha); }
	void TERRAINGRID_SET_COLOURS_f(int lowR, int lowG, int lowB, int lowAlpha, int r, int g, int b, int alpha, int highR, int highG, int highB, int highAlpha) { FastCall<void>(0xc6451d2158d40aa6, lowR, lowG, lowB, lowAlpha, r, g, b, alpha, highR, highG, highB, highAlpha); }
	void ANIMPOSTFX_PLAY(char* effectName, int duration, BOOL looped) { Call<void>(0xaf3ae1531ac86330, effectName, duration, looped); }
	void ANIMPOSTFX_PLAY_f(char* effectName, int duration, BOOL looped) { FastCall<void>(0xaf3ae1531ac86330, effectName, duration, looped); }
	void ANIMPOSTFX_STOP(char* effectName) { Call<void>(0xaf3ae1531ac9dffe, effectName); }
	void ANIMPOSTFX_STOP_f(char* effectName) { FastCall<void>(0xaf3ae1531ac9dffe, effectName); }
	float ANIMPOSTFX_GET_CURRENT_TIME(char* effectName) { return ToFloat(Call<_float>(0x8e0b66ae6db42e58, effectName)); }
	float ANIMPOSTFX_GET_CURRENT_TIME_f(char* effectName) { return ToFloat(FastCall<_float>(0x8e0b66ae6db42e58, effectName)); }
	BOOL ANIMPOSTFX_IS_RUNNING(char* effectName) { return Call<BOOL>(0x61fb7f4e884d7a86, effectName); }
	BOOL ANIMPOSTFX_IS_RUNNING_f(char* effectName) { return FastCall<BOOL>(0x61fb7f4e884d7a86, effectName); }
	void ANIMPOSTFX_STOP_ALL() { Call<void>(0xe9757952e2e9ddc0); }
	void ANIMPOSTFX_STOP_ALL_f() { FastCall<void>(0xe9757952e2e9ddc0); }
	void ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS(char* effectName) { Call<void>(0x7044be770c076428, effectName); }
	void ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS_f(char* effectName) { FastCall<void>(0x7044be770c076428, effectName); }
}
namespace HUD
{
	void BEGIN_TEXT_COMMAND_BUSYSPINNER_ON(char* string) { Call<void>(0xc94ecaa1ee84b4ce, string); }
	void BEGIN_TEXT_COMMAND_BUSYSPINNER_ON_f(char* string) { FastCall<void>(0xc94ecaa1ee84b4ce, string); }
	void END_TEXT_COMMAND_BUSYSPINNER_ON(int busySpinnerType) { Call<void>(0x1d205050453e200, busySpinnerType); }
	void END_TEXT_COMMAND_BUSYSPINNER_ON_f(int busySpinnerType) { FastCall<void>(0x1d205050453e200, busySpinnerType); }
	void BUSYSPINNER_OFF() { Call<void>(0x6d8b3d234e3fea70); }
	void BUSYSPINNER_OFF_f() { FastCall<void>(0x6d8b3d234e3fea70); }
	void PRELOAD_BUSYSPINNER() { Call<void>(0x27b662629cf33c8a); }
	void PRELOAD_BUSYSPINNER_f() { FastCall<void>(0x27b662629cf33c8a); }
	BOOL BUSYSPINNER_IS_ON() { return Call<BOOL>(0x37b08188bda0d1f5); }
	BOOL BUSYSPINNER_IS_ON_f() { return FastCall<BOOL>(0x37b08188bda0d1f5); }
	BOOL BUSYSPINNER_IS_DISPLAYING() { return Call<BOOL>(0xe02f7d1938a1edf6); }
	BOOL BUSYSPINNER_IS_DISPLAYING_f() { return FastCall<BOOL>(0xe02f7d1938a1edf6); }
	void DISABLE_PAUSEMENU_SPINNER(BOOL p0) { Call<void>(0xf1266ac1c419b638, p0); }
	void DISABLE_PAUSEMENU_SPINNER_f(BOOL p0) { FastCall<void>(0xf1266ac1c419b638, p0); }
	void SET_MOUSE_CURSOR_THIS_FRAME() { Call<void>(0x50c6f4c11562febe); }
	void SET_MOUSE_CURSOR_THIS_FRAME_f() { FastCall<void>(0x50c6f4c11562febe); }
	void SET_MOUSE_CURSOR_STYLE(int spriteId) { Call<void>(0xb2af1fe3164e7ff, spriteId); }
	void SET_MOUSE_CURSOR_STYLE_f(int spriteId) { FastCall<void>(0xb2af1fe3164e7ff, spriteId); }
	void SET_MOUSE_CURSOR_VISIBLE(BOOL toggle) { Call<void>(0xec366b37f7625b40, toggle); }
	void SET_MOUSE_CURSOR_VISIBLE_f(BOOL toggle) { FastCall<void>(0xec366b37f7625b40, toggle); }
	BOOL IS_MOUSE_ROLLED_OVER_INSTRUCTIONAL_BUTTONS() { return Call<BOOL>(0x23b521761f7c8a04); }
	BOOL IS_MOUSE_ROLLED_OVER_INSTRUCTIONAL_BUTTONS_f() { return FastCall<BOOL>(0x23b521761f7c8a04); }
	BOOL GET_MOUSE_EVENT(int scaleformHandle, Any* p1, Any* p2, Any* p3) { return Call<BOOL>(0x78463784e6d93ab7, scaleformHandle, p1, p2, p3); }
	BOOL GET_MOUSE_EVENT_f(int scaleformHandle, Any* p1, Any* p2, Any* p3) { return FastCall<BOOL>(0x78463784e6d93ab7, scaleformHandle, p1, p2, p3); }
	void THEFEED_ONLY_SHOW_TOOLTIPS(BOOL toggle) { Call<void>(0x411c83ec317aa14f, toggle); }
	void THEFEED_ONLY_SHOW_TOOLTIPS_f(BOOL toggle) { FastCall<void>(0x411c83ec317aa14f, toggle); }
	void THEFEED_SET_SCRIPTED_MENU_HEIGHT(float pos) { Call<void>(0x8e208e29d6ca169f, pos); }
	void THEFEED_SET_SCRIPTED_MENU_HEIGHT_f(float pos) { FastCall<void>(0x8e208e29d6ca169f, pos); }
	void THEFEED_HIDE() { Call<void>(0x1e76f50a84438a12); }
	void THEFEED_HIDE_f() { FastCall<void>(0x1e76f50a84438a12); }
	void THEFEED_HIDE_THIS_FRAME() { Call<void>(0xe72e589019ae98b9); }
	void THEFEED_HIDE_THIS_FRAME_f() { FastCall<void>(0xe72e589019ae98b9); }
	void THEFEED_SHOW() { Call<void>(0x1e76f50a844887cd); }
	void THEFEED_SHOW_f() { FastCall<void>(0x1e76f50a844887cd); }
	void THEFEED_FLUSH_QUEUE() { Call<void>(0xaec26e122bcb4d06); }
	void THEFEED_FLUSH_QUEUE_f() { FastCall<void>(0xaec26e122bcb4d06); }
	void THEFEED_REMOVE_ITEM(int notificationId) { Call<void>(0xaee4b0d1efd2b31e, notificationId); }
	void THEFEED_REMOVE_ITEM_f(int notificationId) { FastCall<void>(0xaee4b0d1efd2b31e, notificationId); }
	void THEFEED_FORCE_RENDER_ON() { Call<void>(0x5ef915d301673de4); }
	void THEFEED_FORCE_RENDER_ON_f() { FastCall<void>(0x5ef915d301673de4); }
	void THEFEED_FORCE_RENDER_OFF() { Call<void>(0x8029a48d2b807dea); }
	void THEFEED_FORCE_RENDER_OFF_f() { FastCall<void>(0x8029a48d2b807dea); }
	void THEFEED_PAUSE() { Call<void>(0xb067ac46049b1306); }
	void THEFEED_PAUSE_f() { FastCall<void>(0xb067ac46049b1306); }
	void THEFEED_RESUME() { Call<void>(0x5c8ddc7a92687cfd); }
	void THEFEED_RESUME_f() { FastCall<void>(0x5c8ddc7a92687cfd); }
	BOOL THEFEED_IS_PAUSED() { return Call<BOOL>(0xa08c553496f38b13); }
	BOOL THEFEED_IS_PAUSED_f() { return FastCall<BOOL>(0xa08c553496f38b13); }
	void THEFEED_REPORT_LOGO_ON() { Call<void>(0x880b38a70494b9b8); }
	void THEFEED_REPORT_LOGO_ON_f() { FastCall<void>(0x880b38a70494b9b8); }
	void THEFEED_REPORT_LOGO_OFF() { Call<void>(0x795bdc398e027c96); }
	void THEFEED_REPORT_LOGO_OFF_f() { FastCall<void>(0x795bdc398e027c96); }
	int THEFEED_GET_LAST_SHOWN_PHONE_ACTIVATABLE_FEED_ID() { return Call<int>(0xca0f768549ad305a); }
	int THEFEED_GET_LAST_SHOWN_PHONE_ACTIVATABLE_FEED_ID_f() { return FastCall<int>(0xca0f768549ad305a); }
	void THEFEED_AUTO_POST_GAMETIPS_ON() { Call<void>(0xab21545bf330c4b5); }
	void THEFEED_AUTO_POST_GAMETIPS_ON_f() { FastCall<void>(0xab21545bf330c4b5); }
	void THEFEED_AUTO_POST_GAMETIPS_OFF() { Call<void>(0xb909372272e7d139); }
	void THEFEED_AUTO_POST_GAMETIPS_OFF_f() { FastCall<void>(0xb909372272e7d139); }
	void THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(int hudColorIndex) { Call<void>(0x1b6f877eb98fa636, hudColorIndex); }
	void THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST_f(int hudColorIndex) { FastCall<void>(0x1b6f877eb98fa636, hudColorIndex); }
	void THEFEED_SET_RGBA_PARAMETER_FOR_NEXT_MESSAGE(int red, int green, int blue, int alpha) { Call<void>(0x97535672981b6385, red, green, blue, alpha); }
	void THEFEED_SET_RGBA_PARAMETER_FOR_NEXT_MESSAGE_f(int red, int green, int blue, int alpha) { FastCall<void>(0x97535672981b6385, red, green, blue, alpha); }
	void THEFEED_SET_FLASH_DURATION_PARAMETER_FOR_NEXT_MESSAGE(int count) { Call<void>(0x18df55b75bdb5a76, count); }
	void THEFEED_SET_FLASH_DURATION_PARAMETER_FOR_NEXT_MESSAGE_f(int count) { FastCall<void>(0x18df55b75bdb5a76, count); }
	void THEFEED_SET_VIBRATE_PARAMETER_FOR_NEXT_MESSAGE(BOOL toggle) { Call<void>(0xc168374cb0325744, toggle); }
	void THEFEED_SET_VIBRATE_PARAMETER_FOR_NEXT_MESSAGE_f(BOOL toggle) { FastCall<void>(0xc168374cb0325744, toggle); }
	void THEFEED_RESET_ALL_PARAMETERS() { Call<void>(0xb27e5a3c7c72b548); }
	void THEFEED_RESET_ALL_PARAMETERS_f() { FastCall<void>(0xb27e5a3c7c72b548); }
	void THEFEED_FREEZE_NEXT_POST() { Call<void>(0x820f91f453abbb94); }
	void THEFEED_FREEZE_NEXT_POST_f() { FastCall<void>(0x820f91f453abbb94); }
	void THEFEED_CLEAR_FROZEN_POST() { Call<void>(0xc32019ce5e7144fd); }
	void THEFEED_CLEAR_FROZEN_POST_f() { FastCall<void>(0xc32019ce5e7144fd); }
	void THEFEED_SET_SNAP_FEED_ITEM_POSITIONS(BOOL p0) { Call<void>(0x60335a59cdab2117, p0); }
	void THEFEED_SET_SNAP_FEED_ITEM_POSITIONS_f(BOOL p0) { FastCall<void>(0x60335a59cdab2117, p0); }
	void THEFEED_UPDATE_ITEM_TEXTURE(char* txdString1, char* txnString1, char* txdString2, char* txnString2) { Call<void>(0xc2d6065995e7d4b5, txdString1, txnString1, txdString2, txnString2); }
	void THEFEED_UPDATE_ITEM_TEXTURE_f(char* txdString1, char* txnString1, char* txdString2, char* txnString2) { FastCall<void>(0xc2d6065995e7d4b5, txdString1, txnString1, txdString2, txnString2); }
	void BEGIN_TEXT_COMMAND_THEFEED_POST(const char* text) { Call<void>(0x11353de9e3c1da0, text); }
	void BEGIN_TEXT_COMMAND_THEFEED_POST_f(const char* text) { FastCall<void>(0x11353de9e3c1da0, text); }
	int END_TEXT_COMMAND_THEFEED_POST_STATS(char* statTitle, int iconEnum, BOOL stepVal, int barValue, BOOL isImportant, char* pictureTextureDict, char* pictureTextureName) { return Call<int>(0xc22d7e3ddfddd952, statTitle, iconEnum, stepVal, barValue, isImportant, pictureTextureDict, pictureTextureName); }
	int END_TEXT_COMMAND_THEFEED_POST_STATS_f(char* statTitle, int iconEnum, BOOL stepVal, int barValue, BOOL isImportant, char* pictureTextureDict, char* pictureTextureName) { return FastCall<int>(0xc22d7e3ddfddd952, statTitle, iconEnum, stepVal, barValue, isImportant, pictureTextureDict, pictureTextureName); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject) { return Call<int>(0xc6a2ae4ddc466027, txdName, textureName, flash, iconType, sender, subject); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_f(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject) { return FastCall<int>(0xc6a2ae4ddc466027, txdName, textureName, flash, iconType, sender, subject); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_SUBTITLE_LABEL(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject) { return Call<int>(0xd91dc4b809ca8f05, txdName, textureName, flash, iconType, sender, subject); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_SUBTITLE_LABEL_f(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject) { return FastCall<int>(0xd91dc4b809ca8f05, txdName, textureName, flash, iconType, sender, subject); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject, float duration) { return Call<int>(0x6d59f6b4a1b0c999, txdName, textureName, flash, iconType, sender, subject, duration); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU_f(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject, float duration) { return FastCall<int>(0x6d59f6b4a1b0c999, txdName, textureName, flash, iconType, sender, subject, duration); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject, float duration, char* clanTag) { return Call<int>(0x814717252502f4dd, txdName, textureName, flash, iconType, sender, subject, duration, clanTag); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_f(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject, float duration, char* clanTag) { return FastCall<int>(0x814717252502f4dd, txdName, textureName, flash, iconType, sender, subject, duration, clanTag); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_AND_ADDITIONAL_ICON(const char* txdName, const char* textureName, BOOL flash, int iconType1, const char* sender, const char* subject, float duration, const char* clanTag, int iconType2, int p9) { return Call<int>(0x3e023e0dab5f00a7, txdName, textureName, flash, iconType1, sender, subject, duration, clanTag, iconType2, p9); }
	int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_AND_ADDITIONAL_ICON_f(const char* txdName, const char* textureName, BOOL flash, int iconType1, const char* sender, const char* subject, float duration, const char* clanTag, int iconType2, int p9) { return FastCall<int>(0x3e023e0dab5f00a7, txdName, textureName, flash, iconType1, sender, subject, duration, clanTag, iconType2, p9); }
	int END_TEXT_COMMAND_THEFEED_POST_TICKER(BOOL blink, BOOL p1) { return Call<int>(0x8382497e1cf7ec97, blink, p1); }
	int END_TEXT_COMMAND_THEFEED_POST_TICKER_f(BOOL blink, BOOL p1) { return FastCall<int>(0x8382497e1cf7ec97, blink, p1); }
	int END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED(BOOL blink, BOOL p1) { return Call<int>(0xf66e738ba7bacf81, blink, p1); }
	int END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED_f(BOOL blink, BOOL p1) { return FastCall<int>(0xf66e738ba7bacf81, blink, p1); }
	int END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS(BOOL blink, BOOL p1) { return Call<int>(0xa2235730c61a38b, blink, p1); }
	int END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS_f(BOOL blink, BOOL p1) { return FastCall<int>(0xa2235730c61a38b, blink, p1); }
	int END_TEXT_COMMAND_THEFEED_POST_AWARD(char* textureDict, char* textureName, int rpBonus, int colorOverlay, char* titleLabel) { return Call<int>(0xc22d7e3ddee18f10, textureDict, textureName, rpBonus, colorOverlay, titleLabel); }
	int END_TEXT_COMMAND_THEFEED_POST_AWARD_f(char* textureDict, char* textureName, int rpBonus, int colorOverlay, char* titleLabel) { return FastCall<int>(0xc22d7e3ddee18f10, textureDict, textureName, rpBonus, colorOverlay, titleLabel); }
	int END_TEXT_COMMAND_THEFEED_POST_CREWTAG(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, int R, int G, int B) { return Call<int>(0xecc6e6420e392e8c, p0, p1, p2, p3, isLeader, unk0, clanDesc, R, G, B); }
	int END_TEXT_COMMAND_THEFEED_POST_CREWTAG_f(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, int R, int G, int B) { return FastCall<int>(0xecc6e6420e392e8c, p0, p1, p2, p3, isLeader, unk0, clanDesc, R, G, B); }
	int END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, char* playerName, int R, int G, int B) { return Call<int>(0xf3b82b8939d54892, p0, p1, p2, p3, isLeader, unk0, clanDesc, playerName, R, G, B); }
	int END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME_f(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, char* playerName, int R, int G, int B) { return FastCall<int>(0xf3b82b8939d54892, p0, p1, p2, p3, isLeader, unk0, clanDesc, playerName, R, G, B); }
	int END_TEXT_COMMAND_THEFEED_POST_UNLOCK(char* gxtLabel1, int p1, char* gxtLabel2) { return Call<int>(0x8382497e1ef760d1, gxtLabel1, p1, gxtLabel2); }
	int END_TEXT_COMMAND_THEFEED_POST_UNLOCK_f(char* gxtLabel1, int p1, char* gxtLabel2) { return FastCall<int>(0x8382497e1ef760d1, gxtLabel1, p1, gxtLabel2); }
	int END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU(char* gxtLabel1, int p1, char* gxtLabel2, int p3) { return Call<int>(0xd6a66bd595ad10af, gxtLabel1, p1, gxtLabel2, p3); }
	int END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_f(char* gxtLabel1, int p1, char* gxtLabel2, int p3) { return FastCall<int>(0xd6a66bd595ad10af, gxtLabel1, p1, gxtLabel2, p3); }
	int END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { return Call<int>(0x1f87035792e5681a, p0, p1, p2, p3, p4, p5); }
	int END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { return FastCall<int>(0x1f87035792e5681a, p0, p1, p2, p3, p4, p5); }
	int END_TEXT_COMMAND_THEFEED_POST_MPTICKER(BOOL blink, BOOL p1) { return Call<int>(0xac15e23f76b7c0ba, blink, p1); }
	int END_TEXT_COMMAND_THEFEED_POST_MPTICKER_f(BOOL blink, BOOL p1) { return FastCall<int>(0xac15e23f76b7c0ba, blink, p1); }
	int END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP_WITH_LITERAL_FLAG(char* p0, char* p1, char* p2, BOOL p3, BOOL p4) { return Call<int>(0x24054f1afe45566e, p0, p1, p2, p3, p4); }
	int END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP_WITH_LITERAL_FLAG_f(char* p0, char* p1, char* p2, BOOL p3, BOOL p4) { return FastCall<int>(0x24054f1afe45566e, p0, p1, p2, p3, p4); }
	int END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU(char* txdName1, char* textureName1, int count1, char* txdName2, char* textureName2, int count2, int hudColor1, int hudColor2) { return Call<int>(0xd6a66c63c840fbe5, txdName1, textureName1, count1, txdName2, textureName2, count2, hudColor1, hudColor2); }
	int END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU_f(char* txdName1, char* textureName1, int count1, char* txdName2, char* textureName2, int count2, int hudColor1, int hudColor2) { return FastCall<int>(0xd6a66c63c840fbe5, txdName1, textureName1, count1, txdName2, textureName2, count2, hudColor1, hudColor2); }
	int END_TEXT_COMMAND_THEFEED_POST_REPLAY(int type, int image, char* text) { return Call<int>(0x8382497e195bc974, type, image, text); }
	int END_TEXT_COMMAND_THEFEED_POST_REPLAY_f(int type, int image, char* text) { return FastCall<int>(0x8382497e195bc974, type, image, text); }
	int END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(int type, char* button, char* text) { return Call<int>(0xf76263fcc39a51f, type, button, text); }
	int END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT_f(int type, char* button, char* text) { return FastCall<int>(0xf76263fcc39a51f, type, button, text); }
	void BEGIN_TEXT_COMMAND_PRINT(char* GxtEntry) { Call<void>(0xaac1fedbe7e6b85d, GxtEntry); }
	void BEGIN_TEXT_COMMAND_PRINT_f(char* GxtEntry) { FastCall<void>(0xaac1fedbe7e6b85d, GxtEntry); }
	void END_TEXT_COMMAND_PRINT(int duration, BOOL drawImmediately) { Call<void>(0x5b599b6215c08aeb, duration, drawImmediately); }
	void END_TEXT_COMMAND_PRINT_f(int duration, BOOL drawImmediately) { FastCall<void>(0x5b599b6215c08aeb, duration, drawImmediately); }
	void BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(char* text) { Call<void>(0x5567afebb9b582c4, text); }
	void BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED_f(char* text) { FastCall<void>(0x5567afebb9b582c4, text); }
	BOOL END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED() { return Call<BOOL>(0x82a2066bc5a68276); }
	BOOL END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED_f() { return FastCall<BOOL>(0x82a2066bc5a68276); }
	void BEGIN_TEXT_COMMAND_DISPLAY_TEXT(char* text) { Call<void>(0xfb7347e6061dbeda, text); }
	void BEGIN_TEXT_COMMAND_DISPLAY_TEXT_f(char* text) { FastCall<void>(0xfb7347e6061dbeda, text); }
	void END_TEXT_COMMAND_DISPLAY_TEXT(float x, float y, int p2) { Call<void>(0x7fe7902697da908c, x, y, p2); }
	void END_TEXT_COMMAND_DISPLAY_TEXT_f(float x, float y, int p2) { FastCall<void>(0x7fe7902697da908c, x, y, p2); }
	void BEGIN_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(char* text) { Call<void>(0x128d7fa48048047f, text); }
	void BEGIN_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT_f(char* text) { FastCall<void>(0x128d7fa48048047f, text); }
	float END_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(BOOL p0) { return ToFloat(Call<_float>(0x9a1bb4bc7ecd0931, p0)); }
	float END_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT_f(BOOL p0) { return ToFloat(FastCall<_float>(0x9a1bb4bc7ecd0931, p0)); }
	void BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING(char* entry) { Call<void>(0x6c6dd04133fb6c12, entry); }
	void BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING_f(char* entry) { FastCall<void>(0x6c6dd04133fb6c12, entry); }
	int END_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING(float x, float y) { return Call<int>(0xcfeee4d268fdf544, x, y); }
	int END_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING_f(float x, float y) { return FastCall<int>(0xcfeee4d268fdf544, x, y); }
	void BEGIN_TEXT_COMMAND_DISPLAY_HELP(char* inputType) { Call<void>(0xfb7347e6061848ee, inputType); }
	void BEGIN_TEXT_COMMAND_DISPLAY_HELP_f(char* inputType) { FastCall<void>(0xfb7347e6061848ee, inputType); }
	void END_TEXT_COMMAND_DISPLAY_HELP(int p0, BOOL loop, BOOL beep, int shape) { Call<void>(0x7fe7902697d51aa0, p0, loop, beep, shape); }
	void END_TEXT_COMMAND_DISPLAY_HELP_f(int p0, BOOL loop, BOOL beep, int shape) { FastCall<void>(0x7fe7902697d51aa0, p0, loop, beep, shape); }
	void BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(char* labelName) { Call<void>(0x3e951f2ede4ca227, labelName); }
	void BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED_f(char* labelName) { FastCall<void>(0x3e951f2ede4ca227, labelName); }
	BOOL END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(int p0) { return Call<BOOL>(0x3b52f36a547bfdd9, p0); }
	BOOL END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED_f(int p0) { return FastCall<BOOL>(0x3b52f36a547bfdd9, p0); }
	void BEGIN_TEXT_COMMAND_SET_BLIP_NAME(char* textLabel) { Call<void>(0x158806efc256312c, textLabel); }
	void BEGIN_TEXT_COMMAND_SET_BLIP_NAME_f(char* textLabel) { FastCall<void>(0x158806efc256312c, textLabel); }
	void END_TEXT_COMMAND_SET_BLIP_NAME(Blip blip) { Call<void>(0x1f9cc6c1683395ba, blip); }
	void END_TEXT_COMMAND_SET_BLIP_NAME_f(Blip blip) { FastCall<void>(0x1f9cc6c1683395ba, blip); }
	void BEGIN_TEXT_COMMAND_ADD_DIRECTLY_TO_PREVIOUS_BRIEFS(char* p0) { Call<void>(0xc3822017d0059678, p0); }
	void BEGIN_TEXT_COMMAND_ADD_DIRECTLY_TO_PREVIOUS_BRIEFS_f(char* p0) { FastCall<void>(0xc3822017d0059678, p0); }
	void END_TEXT_COMMAND_ADD_DIRECTLY_TO_PREVIOUS_BRIEFS(BOOL p0) { Call<void>(0xd0239dad3b543386, p0); }
	void END_TEXT_COMMAND_ADD_DIRECTLY_TO_PREVIOUS_BRIEFS_f(BOOL p0) { FastCall<void>(0xd0239dad3b543386, p0); }
	void BEGIN_TEXT_COMMAND_CLEAR_PRINT(char* text) { Call<void>(0xb5852c7df1a727cb, text); }
	void BEGIN_TEXT_COMMAND_CLEAR_PRINT_f(char* text) { FastCall<void>(0xb5852c7df1a727cb, text); }
	void END_TEXT_COMMAND_CLEAR_PRINT() { Call<void>(0x5ef44798cd1057d9); }
	void END_TEXT_COMMAND_CLEAR_PRINT_f() { FastCall<void>(0x5ef44798cd1057d9); }
	void BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(char* gxtEntry) { Call<void>(0xa81be4f0f103ca57, gxtEntry); }
	void BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT_f(char* gxtEntry) { FastCall<void>(0xa81be4f0f103ca57, gxtEntry); }
	void END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(int p0) { Call<void>(0xd5563b70fcf4ca09, p0); }
	void END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT_f(int p0) { FastCall<void>(0xd5563b70fcf4ca09, p0); }
	void ADD_TEXT_COMPONENT_INTEGER(int value) { Call<void>(0x2dfa2f924e7c2aa8, value); }
	void ADD_TEXT_COMPONENT_INTEGER_f(int value) { FastCall<void>(0x2dfa2f924e7c2aa8, value); }
	void ADD_TEXT_COMPONENT_FLOAT(float value, int decimalPlaces) { Call<void>(0x587d3265a5572246, value, decimalPlaces); }
	void ADD_TEXT_COMPONENT_FLOAT_f(float value, int decimalPlaces) { FastCall<void>(0x587d3265a5572246, value, decimalPlaces); }
	void ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(char* labelName) { Call<void>(0x4a2854bbf35f42c6, labelName); }
	void ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_f(char* labelName) { FastCall<void>(0x4a2854bbf35f42c6, labelName); }
	void ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(Hash gxtEntryHash) { Call<void>(0x7933250c846c80e7, gxtEntryHash); }
	void ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY_f(Hash gxtEntryHash) { FastCall<void>(0x7933250c846c80e7, gxtEntryHash); }
	void ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME(Blip blip) { Call<void>(0x1b2a899430da0115, blip); }
	void ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME_f(Blip blip) { FastCall<void>(0x1b2a899430da0115, blip); }
	void ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(const char* text) { Call<void>(0xfad7338f34bf8025, text); }
	void ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME_f(const char* text) { FastCall<void>(0xfad7338f34bf8025, text); }
	void ADD_TEXT_COMPONENT_SUBSTRING_TIME(int timestamp, int flags) { Call<void>(0x142398fda2632f51, timestamp, flags); }
	void ADD_TEXT_COMPONENT_SUBSTRING_TIME_f(int timestamp, int flags) { FastCall<void>(0x142398fda2632f51, timestamp, flags); }
	void ADD_TEXT_COMPONENT_FORMATTED_INTEGER(int value, BOOL commaSeparated) { Call<void>(0x25c47cfa55da5185, value, commaSeparated); }
	void ADD_TEXT_COMPONENT_FORMATTED_INTEGER_f(int value, BOOL commaSeparated) { FastCall<void>(0x25c47cfa55da5185, value, commaSeparated); }
	void ADD_TEXT_COMPONENT_SUBSTRING_PHONE_NUMBER(char* p0, int p1) { Call<void>(0x6004e0ae9fc7b3de, p0, p1); }
	void ADD_TEXT_COMPONENT_SUBSTRING_PHONE_NUMBER_f(char* p0, int p1) { FastCall<void>(0x6004e0ae9fc7b3de, p0, p1); }
	void ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE(char* website) { Call<void>(0x9a88b3b4cb8b0977, website); }
	void ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE_f(char* website) { FastCall<void>(0x9a88b3b4cb8b0977, website); }
	void ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY(char* string) { Call<void>(0x79113c080b6f16ce, string); }
	void ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY_f(char* string) { FastCall<void>(0x79113c080b6f16ce, string); }
	void SET_COLOUR_OF_NEXT_TEXT_COMPONENT(int hudColor) { Call<void>(0xfac791f0000f9545, hudColor); }
	void SET_COLOUR_OF_NEXT_TEXT_COMPONENT_f(int hudColor) { FastCall<void>(0xfac791f0000f9545, hudColor); }
	const char* GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(char* text, int position, int length) { return Call<char*>(0x9f1c4668d9605284, text, position, length); }
	const char* GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_f(char* text, int position, int length) { return FastCall<char*>(0x9f1c4668d9605284, text, position, length); }
	const char* GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT(char* text, int position, int length, int maxLength) { return Call<char*>(0x123bbb13f3eedf02, text, position, length, maxLength); }
	const char* GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT_f(char* text, int position, int length, int maxLength) { return FastCall<char*>(0x123bbb13f3eedf02, text, position, length, maxLength); }
	const char* GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES(char* text, int startPosition, int endPosition) { return Call<char*>(0x78c2e805fcf98ad0, text, startPosition, endPosition); }
	const char* GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES_f(char* text, int startPosition, int endPosition) { return FastCall<char*>(0x78c2e805fcf98ad0, text, startPosition, endPosition); }
	const char* GET_FILENAME_FOR_AUDIO_CONVERSATION(char* labelName) { return Call<char*>(0xbb168e4a677131f1, labelName); }
	const char* GET_FILENAME_FOR_AUDIO_CONVERSATION_f(char* labelName) { return FastCall<char*>(0xbb168e4a677131f1, labelName); }
	void CLEAR_PRINTS() { Call<void>(0x1884046c2948f9b8); }
	void CLEAR_PRINTS_f() { FastCall<void>(0x1884046c2948f9b8); }
	void CLEAR_BRIEF() { Call<void>(0xca73c16bea7bc8); }
	void CLEAR_BRIEF_f() { FastCall<void>(0xca73c16bea7bc8); }
	void CLEAR_ALL_HELP_MESSAGES() { Call<void>(0xf4aafbb71eaae4ba); }
	void CLEAR_ALL_HELP_MESSAGES_f() { FastCall<void>(0xf4aafbb71eaae4ba); }
	void CLEAR_THIS_PRINT(char* p0) { Call<void>(0x74d68ca325ff5efe, p0); }
	void CLEAR_THIS_PRINT_f(char* p0) { FastCall<void>(0x74d68ca325ff5efe, p0); }
	void CLEAR_SMALL_PRINTS() { Call<void>(0x9919748a3518d290); }
	void CLEAR_SMALL_PRINTS_f() { FastCall<void>(0x9919748a3518d290); }
	BOOL DOES_TEXT_BLOCK_EXIST(char* gxt) { return Call<BOOL>(0x633096e2ea528579, gxt); }
	BOOL DOES_TEXT_BLOCK_EXIST_f(char* gxt) { return FastCall<BOOL>(0x633096e2ea528579, gxt); }
	void REQUEST_ADDITIONAL_TEXT(char* gxt, int slot) { Call<void>(0xe82cf3577f79a875, gxt, slot); }
	void REQUEST_ADDITIONAL_TEXT_f(char* gxt, int slot) { FastCall<void>(0xe82cf3577f79a875, gxt, slot); }
	void REQUEST_ADDITIONAL_TEXT_FOR_DLC(char* gxt, int slot) { Call<void>(0x36b8623f319ad65b, gxt, slot); }
	void REQUEST_ADDITIONAL_TEXT_FOR_DLC_f(char* gxt, int slot) { FastCall<void>(0x36b8623f319ad65b, gxt, slot); }
	BOOL HAS_ADDITIONAL_TEXT_LOADED(int slot) { return Call<BOOL>(0x13f28492679a86a4, slot); }
	BOOL HAS_ADDITIONAL_TEXT_LOADED_f(int slot) { return FastCall<BOOL>(0x13f28492679a86a4, slot); }
	void CLEAR_ADDITIONAL_TEXT(int p0, BOOL p1) { Call<void>(0xf2960baf30e7ac33, p0, p1); }
	void CLEAR_ADDITIONAL_TEXT_f(int p0, BOOL p1) { FastCall<void>(0xf2960baf30e7ac33, p0, p1); }
	BOOL IS_STREAMING_ADDITIONAL_TEXT(int p0) { return Call<BOOL>(0xe281053f3cc0ad73, p0); }
	BOOL IS_STREAMING_ADDITIONAL_TEXT_f(int p0) { return FastCall<BOOL>(0xe281053f3cc0ad73, p0); }
	BOOL HAS_THIS_ADDITIONAL_TEXT_LOADED(char* gxt, int slot) { return Call<BOOL>(0x893451f4277f25bb, gxt, slot); }
	BOOL HAS_THIS_ADDITIONAL_TEXT_LOADED_f(char* gxt, int slot) { return FastCall<BOOL>(0x893451f4277f25bb, gxt, slot); }
	BOOL IS_MESSAGE_BEING_DISPLAYED() { return Call<BOOL>(0xe3cebe03e73d78b4); }
	BOOL IS_MESSAGE_BEING_DISPLAYED_f() { return FastCall<BOOL>(0xe3cebe03e73d78b4); }
	BOOL DOES_TEXT_LABEL_EXIST(char* gxt) { return Call<BOOL>(0x634ca2d0b94896a0, gxt); }
	BOOL DOES_TEXT_LABEL_EXIST_f(char* gxt) { return FastCall<BOOL>(0x634ca2d0b94896a0, gxt); }
	const char* GET_FIRST_N_CHARACTERS_OF_LITERAL_STRING(char* string, int length) { return Call<char*>(0xb6654a1855f4d7dd, string, length); }
	const char* GET_FIRST_N_CHARACTERS_OF_LITERAL_STRING_f(char* string, int length) { return FastCall<char*>(0xb6654a1855f4d7dd, string, length); }
	int GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL(char* gxt) { return Call<int>(0x5871dba6148e9b40, gxt); }
	int GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL_f(char* gxt) { return FastCall<int>(0x5871dba6148e9b40, gxt); }
	int GET_LENGTH_OF_LITERAL_STRING(char* string) { return Call<int>(0x2a6e7a108faca4f9, string); }
	int GET_LENGTH_OF_LITERAL_STRING_f(char* string) { return FastCall<int>(0x2a6e7a108faca4f9, string); }
	int GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(char* string) { return Call<int>(0xdace572d62641937, string); }
	int GET_LENGTH_OF_LITERAL_STRING_IN_BYTES_f(char* string) { return FastCall<int>(0xdace572d62641937, string); }
	const char* GET_STREET_NAME_FROM_HASH_KEY(Hash hash) { return Call<char*>(0xfb10b0f7c0a623c2, hash); }
	const char* GET_STREET_NAME_FROM_HASH_KEY_f(Hash hash) { return FastCall<char*>(0xfb10b0f7c0a623c2, hash); }
	BOOL IS_HUD_PREFERENCE_SWITCHED_ON() { return Call<BOOL>(0x27ed389100580204); }
	BOOL IS_HUD_PREFERENCE_SWITCHED_ON_f() { return FastCall<BOOL>(0x27ed389100580204); }
	BOOL IS_RADAR_PREFERENCE_SWITCHED_ON() { return Call<BOOL>(0x58ed6361802be5d5); }
	BOOL IS_RADAR_PREFERENCE_SWITCHED_ON_f() { return FastCall<BOOL>(0x58ed6361802be5d5); }
	BOOL IS_SUBTITLE_PREFERENCE_SWITCHED_ON() { return Call<BOOL>(0x324a595515379659); }
	BOOL IS_SUBTITLE_PREFERENCE_SWITCHED_ON_f() { return FastCall<BOOL>(0x324a595515379659); }
	void DISPLAY_HUD(BOOL toggle) { Call<void>(0xcd204ae695cbba, toggle); }
	void DISPLAY_HUD_f(BOOL toggle) { FastCall<void>(0xcd204ae695cbba, toggle); }
	void DISPLAY_HUD_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME() { Call<void>(0x9f2479ed30ed0d2b); }
	void DISPLAY_HUD_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME_f() { FastCall<void>(0x9f2479ed30ed0d2b); }
	void DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME() { Call<void>(0xd654dc9b1553407d); }
	void DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME_f() { FastCall<void>(0xd654dc9b1553407d); }
	void DISPLAY_RADAR(BOOL toggle) { Call<void>(0x206392b98d5a109, toggle); }
	void DISPLAY_RADAR_f(BOOL toggle) { FastCall<void>(0x206392b98d5a109, toggle); }
	void SET_FAKE_SPECTATOR_MODE(BOOL toggle) { Call<void>(0x9efb80c0e9cce1c0, toggle); }
	void SET_FAKE_SPECTATOR_MODE_f(BOOL toggle) { FastCall<void>(0x9efb80c0e9cce1c0, toggle); }
	BOOL GET_FAKE_SPECTATOR_MODE() { return Call<BOOL>(0x39d6b9f16f79b2b4); }
	BOOL GET_FAKE_SPECTATOR_MODE_f() { return FastCall<BOOL>(0x39d6b9f16f79b2b4); }
	BOOL IS_HUD_HIDDEN() { return Call<BOOL>(0x3c56d59f6a75f447); }
	BOOL IS_HUD_HIDDEN_f() { return FastCall<BOOL>(0x3c56d59f6a75f447); }
	BOOL IS_RADAR_HIDDEN() { return Call<BOOL>(0x8544483a91859a18); }
	BOOL IS_RADAR_HIDDEN_f() { return FastCall<BOOL>(0x8544483a91859a18); }
	BOOL IS_MINIMAP_RENDERING() { return Call<BOOL>(0x13b263dc004b645d); }
	BOOL IS_MINIMAP_RENDERING_f() { return FastCall<BOOL>(0x13b263dc004b645d); }
	void USE_VEHICLE_TARGETING_RETICULE(Any p0) { Call<void>(0x5f19a96383a23f2c, p0); }
	void USE_VEHICLE_TARGETING_RETICULE_f(Any p0) { FastCall<void>(0x5f19a96383a23f2c, p0); }
	void _USE_VEHICLE_TARGETING_RETICULE_ON_VEHICLES(BOOL enable) { Call<void>(0x16699ac059026e33, enable); }
	void _USE_VEHICLE_TARGETING_RETICULE_ON_VEHICLES_f(BOOL enable) { FastCall<void>(0x16699ac059026e33, enable); }
	void ADD_VALID_VEHICLE_HIT_HASH(Any p0) { Call<void>(0x3de60ebb80272dae, p0); }
	void ADD_VALID_VEHICLE_HIT_HASH_f(Any p0) { FastCall<void>(0x3de60ebb80272dae, p0); }
	void CLEAR_VALID_VEHICLE_HIT_HASHES() { Call<void>(0x7181a88db52ebab0); }
	void CLEAR_VALID_VEHICLE_HIT_HASHES_f() { FastCall<void>(0x7181a88db52ebab0); }
	void SET_BLIP_ROUTE(Blip blip, BOOL enabled) { Call<void>(0xee78dcd3188f4378, blip, enabled); }
	void SET_BLIP_ROUTE_f(Blip blip, BOOL enabled) { FastCall<void>(0xee78dcd3188f4378, blip, enabled); }
	void CLEAR_ALL_BLIP_ROUTES() { Call<void>(0xe87af15f54791c88); }
	void CLEAR_ALL_BLIP_ROUTES_f() { FastCall<void>(0xe87af15f54791c88); }
	void SET_BLIP_ROUTE_COLOUR(Blip blip, int colour) { Call<void>(0x1902730eb11e1473, blip, colour); }
	void SET_BLIP_ROUTE_COLOUR_f(Blip blip, int colour) { FastCall<void>(0x1902730eb11e1473, blip, colour); }
	void SET_FORCE_SHOW_GPS(BOOL toggle) { Call<void>(0x898af8c498ec44d9, toggle); }
	void SET_FORCE_SHOW_GPS_f(BOOL toggle) { FastCall<void>(0x898af8c498ec44d9, toggle); }
	void SET_USE_SET_DESTINATION_IN_PAUSE_MAP(BOOL toggle) { Call<void>(0x76dc923e13ceaefc, toggle); }
	void SET_USE_SET_DESTINATION_IN_PAUSE_MAP_f(BOOL toggle) { FastCall<void>(0x76dc923e13ceaefc, toggle); }
	void SET_BLOCK_WANTED_FLASH(BOOL disabled) { Call<void>(0x1205222f836ebef, disabled); }
	void SET_BLOCK_WANTED_FLASH_f(BOOL disabled) { FastCall<void>(0x1205222f836ebef, disabled); }
	void ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(BOOL p0) { Call<void>(0xf382ea07f1d03023, p0); }
	void ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS_f(BOOL p0) { FastCall<void>(0xf382ea07f1d03023, p0); }
	void FORCE_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS_LIST(int p0) { Call<void>(0x3ed9bd22a64e3f30, p0); }
	void FORCE_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS_LIST_f(int p0) { FastCall<void>(0x3ed9bd22a64e3f30, p0); }
	void SET_RADAR_ZOOM_PRECISE(float zoom) { Call<void>(0x88ddc33fa5870da5, zoom); }
	void SET_RADAR_ZOOM_PRECISE_f(float zoom) { FastCall<void>(0x88ddc33fa5870da5, zoom); }
	void SET_RADAR_ZOOM(int zoomLevel) { Call<void>(0xee7a54e6c7df51a9, zoomLevel); }
	void SET_RADAR_ZOOM_f(int zoomLevel) { FastCall<void>(0xee7a54e6c7df51a9, zoomLevel); }
	void SET_RADAR_ZOOM_TO_BLIP(Blip blip, float zoom) { Call<void>(0x88ddc340756f699f, blip, zoom); }
	void SET_RADAR_ZOOM_TO_BLIP_f(Blip blip, float zoom) { FastCall<void>(0x88ddc340756f699f, blip, zoom); }
	void SET_RADAR_ZOOM_TO_DISTANCE(float zoom) { Call<void>(0x91d09a2c38cab7a3, zoom); }
	void SET_RADAR_ZOOM_TO_DISTANCE_f(float zoom) { FastCall<void>(0x91d09a2c38cab7a3, zoom); }
	void UPDATE_RADAR_ZOOM_TO_BLIP() { Call<void>(0x8ab1809843609b8); }
	void UPDATE_RADAR_ZOOM_TO_BLIP_f() { FastCall<void>(0x8ab1809843609b8); }
	void GET_HUD_COLOUR(int hudColorIndex, int* r, int* g, int* b, int* a) { Call<void>(0xc22d81e546e8add, hudColorIndex, r, g, b, a); }
	void GET_HUD_COLOUR_f(int hudColorIndex, int* r, int* g, int* b, int* a) { FastCall<void>(0xc22d81e546e8add, hudColorIndex, r, g, b, a); }
	void SET_SCRIPT_VARIABLE_HUD_COLOUR(int r, int g, int b, int a) { Call<void>(0xc466e8accf3c9080, r, g, b, a); }
	void SET_SCRIPT_VARIABLE_HUD_COLOUR_f(int r, int g, int b, int a) { FastCall<void>(0xc466e8accf3c9080, r, g, b, a); }
	void SET_SECOND_SCRIPT_VARIABLE_HUD_COLOUR(int r, int g, int b, int a) { Call<void>(0x836aa95750848051, r, g, b, a); }
	void SET_SECOND_SCRIPT_VARIABLE_HUD_COLOUR_f(int r, int g, int b, int a) { FastCall<void>(0x836aa95750848051, r, g, b, a); }
	void REPLACE_HUD_COLOUR(int hudColorIndex, int hudColorIndex2) { Call<void>(0x3f04e69a980938bf, hudColorIndex, hudColorIndex2); }
	void REPLACE_HUD_COLOUR_f(int hudColorIndex, int hudColorIndex2) { FastCall<void>(0x3f04e69a980938bf, hudColorIndex, hudColorIndex2); }
	void REPLACE_HUD_COLOUR_WITH_RGBA(int hudColorIndex, int r, int g, int b, int a) { Call<void>(0x36e663278406858d, hudColorIndex, r, g, b, a); }
	void REPLACE_HUD_COLOUR_WITH_RGBA_f(int hudColorIndex, int r, int g, int b, int a) { FastCall<void>(0x36e663278406858d, hudColorIndex, r, g, b, a); }
	void SET_ABILITY_BAR_VISIBILITY(BOOL visible) { Call<void>(0x3c5318ea52d56b50, visible); }
	void SET_ABILITY_BAR_VISIBILITY_f(BOOL visible) { FastCall<void>(0x3c5318ea52d56b50, visible); }
	void SET_ALLOW_ABILITY_BAR(BOOL toggle) { Call<void>(0xdd8266914026cc6b, toggle); }
	void SET_ALLOW_ABILITY_BAR_f(BOOL toggle) { FastCall<void>(0xdd8266914026cc6b, toggle); }
	void FLASH_ABILITY_BAR(int millisecondsToFlash) { Call<void>(0x785214599292f94f, millisecondsToFlash); }
	void FLASH_ABILITY_BAR_f(int millisecondsToFlash) { FastCall<void>(0x785214599292f94f, millisecondsToFlash); }
	void SET_ABILITY_BAR_VALUE(float p0, float p1) { Call<void>(0xa2e7d7be69584e53, p0, p1); }
	void SET_ABILITY_BAR_VALUE_f(float p0, float p1) { FastCall<void>(0xa2e7d7be69584e53, p0, p1); }
	void FLASH_WANTED_DISPLAY(BOOL p0) { Call<void>(0xed8e21bf182e5761, p0); }
	void FLASH_WANTED_DISPLAY_f(BOOL p0) { FastCall<void>(0xed8e21bf182e5761, p0); }
	void FORCE_OFF_WANTED_STAR_FLASH(BOOL toggle) { Call<void>(0x89b9df1f725605cf, toggle); }
	void FORCE_OFF_WANTED_STAR_FLASH_f(BOOL toggle) { FastCall<void>(0x89b9df1f725605cf, toggle); }
	void SET_CUSTOM_MP_HUD_COLOR(int hudColorId) { Call<void>(0xaaf2c56f3aa56cd0, hudColorId); }
	void SET_CUSTOM_MP_HUD_COLOR_f(int hudColorId) { FastCall<void>(0xaaf2c56f3aa56cd0, hudColorId); }
	float GET_RENDERED_CHARACTER_HEIGHT(float size, int font) { return ToFloat(Call<_float>(0x3a3b07942113b19e, size, font)); }
	float GET_RENDERED_CHARACTER_HEIGHT_f(float size, int font) { return ToFloat(FastCall<_float>(0x3a3b07942113b19e, size, font)); }
	void SET_TEXT_SCALE(float scale, float size) { Call<void>(0xee7a889d21ad13b5, scale, size); }
	void SET_TEXT_SCALE_f(float scale, float size) { FastCall<void>(0xee7a889d21ad13b5, scale, size); }
	void SET_TEXT_COLOUR(int red, int green, int blue, int alpha) { Call<void>(0xe0d68b06f95600a1, red, green, blue, alpha); }
	void SET_TEXT_COLOUR_f(int red, int green, int blue, int alpha) { FastCall<void>(0xe0d68b06f95600a1, red, green, blue, alpha); }
	void SET_TEXT_CENTRE(BOOL align) { Call<void>(0xe0d68b06f8ca10b0, align); }
	void SET_TEXT_CENTRE_f(BOOL align) { FastCall<void>(0xe0d68b06f8ca10b0, align); }
	void SET_TEXT_RIGHT_JUSTIFY(BOOL toggle) { Call<void>(0x34095645160df2b8, toggle); }
	void SET_TEXT_RIGHT_JUSTIFY_f(BOOL toggle) { FastCall<void>(0x34095645160df2b8, toggle); }
	void SET_TEXT_JUSTIFICATION(int justifyType) { Call<void>(0xe0f5e08393e9ea5d, justifyType); }
	void SET_TEXT_JUSTIFICATION_f(int justifyType) { FastCall<void>(0xe0f5e08393e9ea5d, justifyType); }
	void SET_TEXT_LINE_HEIGHT_MULT(float lineHeightMult) { Call<void>(0x5dd919dc8f7ede12, lineHeightMult); }
	void SET_TEXT_LINE_HEIGHT_MULT_f(float lineHeightMult) { FastCall<void>(0x5dd919dc8f7ede12, lineHeightMult); }
	void SET_TEXT_WRAP(float start, float end) { Call<void>(0xa498990d53acc85f, start, end); }
	void SET_TEXT_WRAP_f(float start, float end) { FastCall<void>(0xa498990d53acc85f, start, end); }
	void SET_TEXT_LEADING(int p0) { Call<void>(0x39fad5d9fbd182b1, p0); }
	void SET_TEXT_LEADING_f(int p0) { FastCall<void>(0x39fad5d9fbd182b1, p0); }
	void SET_TEXT_PROPORTIONAL(BOOL p0) { Call<void>(0xe00be81e1daf555a, p0); }
	void SET_TEXT_PROPORTIONAL_f(BOOL p0) { FastCall<void>(0xe00be81e1daf555a, p0); }
	void SET_TEXT_FONT(int fontType) { Call<void>(0xa498990d53a50464, fontType); }
	void SET_TEXT_FONT_f(int fontType) { FastCall<void>(0xa498990d53a50464, fontType); }
	void SET_TEXT_DROP_SHADOW() { Call<void>(0x727216212c5e16bb); }
	void SET_TEXT_DROP_SHADOW_f() { FastCall<void>(0x727216212c5e16bb); }
	void SET_TEXT_DROPSHADOW(int distance, int r, int g, int b, int a) { Call<void>(0x2cfb6c1180fb4124, distance, r, g, b, a); }
	void SET_TEXT_DROPSHADOW_f(int distance, int r, int g, int b, int a) { FastCall<void>(0x2cfb6c1180fb4124, distance, r, g, b, a); }
	void SET_TEXT_OUTLINE() { Call<void>(0x39fad5dab6e11fed); }
	void SET_TEXT_OUTLINE_f() { FastCall<void>(0x39fad5dab6e11fed); }
	void SET_TEXT_EDGE(int p0, int r, int g, int b, int a) { Call<void>(0xa498990d53a465d2, p0, r, g, b, a); }
	void SET_TEXT_EDGE_f(int p0, int r, int g, int b, int a) { FastCall<void>(0xa498990d53a465d2, p0, r, g, b, a); }
	void SET_TEXT_RENDER_ID(int renderId) { Call<void>(0xa69ccbf476910d6f, renderId); }
	void SET_TEXT_RENDER_ID_f(int renderId) { FastCall<void>(0xa69ccbf476910d6f, renderId); }
	int GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID() { return Call<int>(0xb66e83ac68a052d9); }
	int GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID_f() { return FastCall<int>(0xb66e83ac68a052d9); }
	BOOL REGISTER_NAMED_RENDERTARGET(char* name, BOOL p1) { return Call<BOOL>(0x23c202f45c5e1529, name, p1); }
	BOOL REGISTER_NAMED_RENDERTARGET_f(char* name, BOOL p1) { return FastCall<BOOL>(0x23c202f45c5e1529, name, p1); }
	BOOL IS_NAMED_RENDERTARGET_REGISTERED(char* name) { return Call<BOOL>(0x33dfda70a8c3ab9f, name); }
	BOOL IS_NAMED_RENDERTARGET_REGISTERED_f(char* name) { return FastCall<BOOL>(0x33dfda70a8c3ab9f, name); }
	BOOL RELEASE_NAMED_RENDERTARGET(char* name) { return Call<BOOL>(0x992be087e6965165, name); }
	BOOL RELEASE_NAMED_RENDERTARGET_f(char* name) { return FastCall<BOOL>(0x992be087e6965165, name); }
	void LINK_NAMED_RENDERTARGET(Hash modelHash) { Call<void>(0xa0a2660c47d5c672, modelHash); }
	void LINK_NAMED_RENDERTARGET_f(Hash modelHash) { FastCall<void>(0xa0a2660c47d5c672, modelHash); }
	int GET_NAMED_RENDERTARGET_RENDER_ID(char* name) { return Call<int>(0x17417ffe0a24d11b, name); }
	int GET_NAMED_RENDERTARGET_RENDER_ID_f(char* name) { return FastCall<int>(0x17417ffe0a24d11b, name); }
	BOOL IS_NAMED_RENDERTARGET_LINKED(Hash modelHash) { return Call<BOOL>(0xd7f61732dc3751b6, modelHash); }
	BOOL IS_NAMED_RENDERTARGET_LINKED_f(Hash modelHash) { return FastCall<BOOL>(0xd7f61732dc3751b6, modelHash); }
	void CLEAR_HELP(BOOL toggle) { Call<void>(0x687dcf2f99613, toggle); }
	void CLEAR_HELP_f(BOOL toggle) { FastCall<void>(0x687dcf2f99613, toggle); }
	BOOL IS_HELP_MESSAGE_ON_SCREEN() { return Call<BOOL>(0x82077f31a67899ab); }
	BOOL IS_HELP_MESSAGE_ON_SCREEN_f() { return FastCall<BOOL>(0x82077f31a67899ab); }
	BOOL HAS_SCRIPT_HIDDEN_HELP_THIS_FRAME() { return Call<BOOL>(0x47522dc895cc8684); }
	BOOL HAS_SCRIPT_HIDDEN_HELP_THIS_FRAME_f() { return FastCall<BOOL>(0x47522dc895cc8684); }
	BOOL IS_HELP_MESSAGE_BEING_DISPLAYED() { return Call<BOOL>(0xcd7eee1410deacc0); }
	BOOL IS_HELP_MESSAGE_BEING_DISPLAYED_f() { return FastCall<BOOL>(0xcd7eee1410deacc0); }
	BOOL IS_HELP_MESSAGE_FADING_OUT() { return Call<BOOL>(0xbee783d317043729); }
	BOOL IS_HELP_MESSAGE_FADING_OUT_f() { return FastCall<BOOL>(0xbee783d317043729); }
	void SET_HELP_MESSAGE_STYLE(int style, int hudColor, int alpha, int p3, int p4) { Call<void>(0xd68fb969e1dee9d8, style, hudColor, alpha, p3, p4); }
	void SET_HELP_MESSAGE_STYLE_f(int style, int hudColor, int alpha, int p3, int p4) { FastCall<void>(0xd68fb969e1dee9d8, style, hudColor, alpha, p3, p4); }
	int GET_STANDARD_BLIP_ENUM_ID() { return Call<int>(0x736fd0b90a7dfc4); }
	int GET_STANDARD_BLIP_ENUM_ID_f() { return FastCall<int>(0x736fd0b90a7dfc4); }
	int GET_WAYPOINT_BLIP_ENUM_ID() { return Call<int>(0xc7f073ce9d702500); }
	int GET_WAYPOINT_BLIP_ENUM_ID_f() { return FastCall<int>(0xc7f073ce9d702500); }
	int GET_NUMBER_OF_ACTIVE_BLIPS() { return Call<int>(0x5e978bc1ea5708a4); }
	int GET_NUMBER_OF_ACTIVE_BLIPS_f() { return FastCall<int>(0x5e978bc1ea5708a4); }
	Blip GET_NEXT_BLIP_INFO_ID(int blipSprite) { return Call<Blip>(0x3c6b9f9097505c01, blipSprite); }
	Blip GET_NEXT_BLIP_INFO_ID_f(int blipSprite) { return FastCall<Blip>(0x3c6b9f9097505c01, blipSprite); }
	Blip GET_FIRST_BLIP_INFO_ID(int blipSprite) { return Call<Blip>(0x20a592192391bbf6, blipSprite); }
	Blip GET_FIRST_BLIP_INFO_ID_f(int blipSprite) { return FastCall<Blip>(0x20a592192391bbf6, blipSprite); }
	Blip GET_CLOSEST_BLIP_INFO_ID(int blipSprite) { return Call<Blip>(0x6d1adeb619a8f0ad, blipSprite); }
	Blip GET_CLOSEST_BLIP_INFO_ID_f(int blipSprite) { return FastCall<Blip>(0x6d1adeb619a8f0ad, blipSprite); }
	Vector3* GET_BLIP_INFO_ID_COORD(Blip blip) { Call<Vector3*>(0x1d003ef0ac8b71fd, blip); return GetVector(); }
	int GET_BLIP_INFO_ID_DISPLAY(Blip blip) { return Call<int>(0xddec4577e257a9ca, blip); }
	int GET_BLIP_INFO_ID_DISPLAY_f(Blip blip) { return FastCall<int>(0xddec4577e257a9ca, blip); }
	int GET_BLIP_INFO_ID_TYPE(Blip blip) { return Call<int>(0x9594a7310ddad312, blip); }
	int GET_BLIP_INFO_ID_TYPE_f(Blip blip) { return FastCall<int>(0x9594a7310ddad312, blip); }
	Entity GET_BLIP_INFO_ID_ENTITY_INDEX(Blip blip) { return Call<Entity>(0x80f2b0afd155a92e, blip); }
	Entity GET_BLIP_INFO_ID_ENTITY_INDEX_f(Blip blip) { return FastCall<Entity>(0x80f2b0afd155a92e, blip); }
	Pickup GET_BLIP_INFO_ID_PICKUP_INDEX(Blip blip) { return Call<Pickup>(0x84c37fd9b8f1b907, blip); }
	Pickup GET_BLIP_INFO_ID_PICKUP_INDEX_f(Blip blip) { return FastCall<Pickup>(0x84c37fd9b8f1b907, blip); }
	Blip GET_BLIP_FROM_ENTITY(Entity entity) { return Call<Blip>(0xd33e86e0ce1ab7b3, entity); }
	Blip GET_BLIP_FROM_ENTITY_f(Entity entity) { return FastCall<Blip>(0xd33e86e0ce1ab7b3, entity); }
	Blip ADD_BLIP_FOR_RADIUS(float posX, float posY, float posZ, float radius) { return Call<Blip>(0xc83a45aa79d03b38, posX, posY, posZ, radius); }
	Blip ADD_BLIP_FOR_RADIUS_f(float posX, float posY, float posZ, float radius) { return FastCall<Blip>(0xc83a45aa79d03b38, posX, posY, posZ, radius); }
	Blip ADD_BLIP_FOR_AREA(float x, float y, float z, float width, float height) { return Call<Blip>(0x4e86da82f97014b3, x, y, z, width, height); }
	Blip ADD_BLIP_FOR_AREA_f(float x, float y, float z, float width, float height) { return FastCall<Blip>(0x4e86da82f97014b3, x, y, z, width, height); }
	Blip ADD_BLIP_FOR_ENTITY(Entity entity) { return Call<Blip>(0xc83a45aa645fb289, entity); }
	Blip ADD_BLIP_FOR_ENTITY_f(Entity entity) { return FastCall<Blip>(0xc83a45aa645fb289, entity); }
	Blip ADD_BLIP_FOR_PICKUP(Pickup pickup) { return Call<Blip>(0xc83a45aa76d6d922, pickup); }
	Blip ADD_BLIP_FOR_PICKUP_f(Pickup pickup) { return FastCall<Blip>(0xc83a45aa76d6d922, pickup); }
	Blip ADD_BLIP_FOR_COORD(float x, float y, float z) { return Call<Blip>(0x825475dc34ad7b6f, x, y, z); }
	Blip ADD_BLIP_FOR_COORD_f(float x, float y, float z) { return FastCall<Blip>(0x825475dc34ad7b6f, x, y, z); }
	void TRIGGER_SONAR_BLIP(float posX, float posY, float posZ, float radius, int p4) { Call<void>(0x395f4637d598ed94, posX, posY, posZ, radius, p4); }
	void TRIGGER_SONAR_BLIP_f(float posX, float posY, float posZ, float radius, int p4) { FastCall<void>(0x395f4637d598ed94, posX, posY, posZ, radius, p4); }
	void ALLOW_SONAR_BLIPS(BOOL toggle) { Call<void>(0xc22de58189eebd50, toggle); }
	void ALLOW_SONAR_BLIPS_f(BOOL toggle) { FastCall<void>(0xc22de58189eebd50, toggle); }
	void SET_BLIP_COORDS(Blip blip, float posX, float posY, float posZ) { Call<void>(0xe0a2bd8fdfbdb8af, blip, posX, posY, posZ); }
	void SET_BLIP_COORDS_f(Blip blip, float posX, float posY, float posZ) { FastCall<void>(0xe0a2bd8fdfbdb8af, blip, posX, posY, posZ); }
	Vector3* GET_BLIP_COORDS(Blip blip) { Call<Vector3*>(0x7825de17a974bda3, blip); return GetVector(); }
	void SET_BLIP_SPRITE(Blip blip, int spriteId) { Call<void>(0xe0a2bd8ffb1a9756, blip, spriteId); }
	void SET_BLIP_SPRITE_f(Blip blip, int spriteId) { FastCall<void>(0xe0a2bd8ffb1a9756, blip, spriteId); }
	int GET_BLIP_SPRITE(Blip blip) { return Call<int>(0x7825de17c4d19c4a, blip); }
	int GET_BLIP_SPRITE_f(Blip blip) { return FastCall<int>(0x7825de17c4d19c4a, blip); }
	void SET_COP_BLIP_SPRITE(int p0, float p1) { Call<void>(0x81ad35694c6f8b7b, p0, p1); }
	void SET_COP_BLIP_SPRITE_f(int p0, float p1) { FastCall<void>(0x81ad35694c6f8b7b, p0, p1); }
	void SET_COP_BLIP_SPRITE_AS_STANDARD() { Call<void>(0xb4715bec3a80d966); }
	void SET_COP_BLIP_SPRITE_AS_STANDARD_f() { FastCall<void>(0xb4715bec3a80d966); }
	void SET_BLIP_NAME_FROM_TEXT_FILE(Blip blip, char* gxtEntry) { Call<void>(0xe77d77d6cd38623c, blip, gxtEntry); }
	void SET_BLIP_NAME_FROM_TEXT_FILE_f(Blip blip, char* gxtEntry) { FastCall<void>(0xe77d77d6cd38623c, blip, gxtEntry); }
	void SET_BLIP_NAME_TO_PLAYER_NAME(Blip blip, Player player) { Call<void>(0x546d5b7ca02c10a8, blip, player); }
	void SET_BLIP_NAME_TO_PLAYER_NAME_f(Blip blip, Player player) { FastCall<void>(0x546d5b7ca02c10a8, blip, player); }
	void SET_BLIP_ALPHA(Blip blip, int alpha) { Call<void>(0xee78dcd3179e428d, blip, alpha); }
	void SET_BLIP_ALPHA_f(Blip blip, int alpha) { FastCall<void>(0xee78dcd3179e428d, blip, alpha); }
	int GET_BLIP_ALPHA(Blip blip) { return Call<int>(0xc2240f88138cf19, blip); }
	int GET_BLIP_ALPHA_f(Blip blip) { return FastCall<int>(0xc2240f88138cf19, blip); }
	void SET_BLIP_FADE(Blip blip, int opacity, int duration) { Call<void>(0xa4988b409dac5f4d, blip, opacity, duration); }
	void SET_BLIP_FADE_f(Blip blip, int opacity, int duration) { FastCall<void>(0xa4988b409dac5f4d, blip, opacity, duration); }
	int GET_BLIP_FADE_DIRECTION(Blip blip) { return Call<int>(0xfb85df84b77145e1, blip); }
	int GET_BLIP_FADE_DIRECTION_f(Blip blip) { return FastCall<int>(0xfb85df84b77145e1, blip); }
	void SET_BLIP_ROTATION(Blip blip, int rotation) { Call<void>(0x42e999770503bfcf, blip, rotation); }
	void SET_BLIP_ROTATION_f(Blip blip, int rotation) { FastCall<void>(0x42e999770503bfcf, blip, rotation); }
	void SET_BLIP_ROTATION_WITH_FLOAT(Blip blip, float heading) { Call<void>(0x932514bbb838f7f3, blip, heading); }
	void SET_BLIP_ROTATION_WITH_FLOAT_f(Blip blip, float heading) { FastCall<void>(0x932514bbb838f7f3, blip, heading); }
	int GET_BLIP_ROTATION(Blip blip) { return Call<int>(0x626b7333d0d57c3, blip); }
	int GET_BLIP_ROTATION_f(Blip blip) { return FastCall<int>(0x626b7333d0d57c3, blip); }
	void SET_BLIP_FLASH_TIMER(Blip blip, int duration) { Call<void>(0xae1699a1af7f6005, blip, duration); }
	void SET_BLIP_FLASH_TIMER_f(Blip blip, int duration) { FastCall<void>(0xae1699a1af7f6005, blip, duration); }
	void SET_BLIP_FLASH_INTERVAL(Blip blip, Any p1) { Call<void>(0xd8004640758c57e5, blip, p1); }
	void SET_BLIP_FLASH_INTERVAL_f(Blip blip, Any p1) { FastCall<void>(0xd8004640758c57e5, blip, p1); }
	void SET_BLIP_COLOUR(Blip blip, int color) { Call<void>(0xe0a2bd8fdfbc525d, blip, color); }
	void SET_BLIP_COLOUR_f(Blip blip, int color) { FastCall<void>(0xe0a2bd8fdfbc525d, blip, color); }
	void SET_BLIP_SECONDARY_COLOUR(Blip blip, int r, int g, int b) { Call<void>(0xccee84f8c290a668, blip, r, g, b); }
	void SET_BLIP_SECONDARY_COLOUR_f(Blip blip, int r, int g, int b) { FastCall<void>(0xccee84f8c290a668, blip, r, g, b); }
	int GET_BLIP_COLOUR(Blip blip) { return Call<int>(0x7825de17a9735751, blip); }
	int GET_BLIP_COLOUR_f(Blip blip) { return FastCall<int>(0x7825de17a9735751, blip); }
	int GET_BLIP_HUD_COLOUR(Blip blip) { return Call<int>(0x1754cb27b60ba139, blip); }
	int GET_BLIP_HUD_COLOUR_f(Blip blip) { return FastCall<int>(0x1754cb27b60ba139, blip); }
	BOOL IS_BLIP_SHORT_RANGE(Blip blip) { return Call<BOOL>(0x4c5c4e3f51db1a1, blip); }
	BOOL IS_BLIP_SHORT_RANGE_f(Blip blip) { return FastCall<BOOL>(0x4c5c4e3f51db1a1, blip); }
	BOOL IS_BLIP_ON_MINIMAP(Blip blip) { return Call<BOOL>(0xa55058a25448641e, blip); }
	BOOL IS_BLIP_ON_MINIMAP_f(Blip blip) { return FastCall<BOOL>(0xa55058a25448641e, blip); }
	BOOL DOES_BLIP_HAVE_GPS_ROUTE(Blip blip) { return Call<BOOL>(0x9d3d03c731134c65, blip); }
	BOOL DOES_BLIP_HAVE_GPS_ROUTE_f(Blip blip) { return FastCall<BOOL>(0x9d3d03c731134c65, blip); }
	void SET_BLIP_HIDDEN_ON_LEGEND(Blip blip, BOOL toggle) { Call<void>(0x2e23512c2293c169, blip, toggle); }
	void SET_BLIP_HIDDEN_ON_LEGEND_f(Blip blip, BOOL toggle) { FastCall<void>(0x2e23512c2293c169, blip, toggle); }
	void SET_BLIP_HIGH_DETAIL(Blip blip, BOOL toggle) { Call<void>(0xae1c28c891280b9d, blip, toggle); }
	void SET_BLIP_HIGH_DETAIL_f(Blip blip, BOOL toggle) { FastCall<void>(0xae1c28c891280b9d, blip, toggle); }
	void SET_BLIP_AS_MISSION_CREATOR_BLIP(Blip blip, BOOL toggle) { Call<void>(0x7095e4f8ae4600b3, blip, toggle); }
	void SET_BLIP_AS_MISSION_CREATOR_BLIP_f(Blip blip, BOOL toggle) { FastCall<void>(0x7095e4f8ae4600b3, blip, toggle); }
	BOOL IS_MISSION_CREATOR_BLIP(Blip blip) { return Call<BOOL>(0xff3e42c93388572c, blip); }
	BOOL IS_MISSION_CREATOR_BLIP_f(Blip blip) { return FastCall<BOOL>(0xff3e42c93388572c, blip); }
	Blip GET_NEW_SELECTED_MISSION_CREATOR_BLIP() { return Call<Blip>(0xf1125d59e1604913); }
	Blip GET_NEW_SELECTED_MISSION_CREATOR_BLIP_f() { return FastCall<Blip>(0xf1125d59e1604913); }
	BOOL IS_HOVERING_OVER_MISSION_CREATOR_BLIP() { return Call<BOOL>(0xac4dcb6acad2331e); }
	BOOL IS_HOVERING_OVER_MISSION_CREATOR_BLIP_f() { return FastCall<BOOL>(0xac4dcb6acad2331e); }
	void SHOW_START_MISSION_INSTRUCTIONAL_BUTTON(BOOL toggle) { Call<void>(0xf0f805266545296a, toggle); }
	void SHOW_START_MISSION_INSTRUCTIONAL_BUTTON_f(BOOL toggle) { FastCall<void>(0xf0f805266545296a, toggle); }
	void SHOW_CONTACT_INSTRUCTIONAL_BUTTON(BOOL toggle) { Call<void>(0x4390229282ecf5f9, toggle); }
	void SHOW_CONTACT_INSTRUCTIONAL_BUTTON_f(BOOL toggle) { FastCall<void>(0x4390229282ecf5f9, toggle); }
	void RELOAD_MAP_MENU() { Call<void>(0x7ad30b0dc9d1fa68); }
	void RELOAD_MAP_MENU_f() { FastCall<void>(0x7ad30b0dc9d1fa68); }
	void SET_BLIP_MARKER_LONG_DISTANCE(Any p0, Any p1) { Call<void>(0xb879c0540370b5e4, p0, p1); }
	void SET_BLIP_MARKER_LONG_DISTANCE_f(Any p0, Any p1) { FastCall<void>(0xb879c0540370b5e4, p0, p1); }
	void SET_BLIP_FLASHES(Blip blip, BOOL toggle) { Call<void>(0x33b4f46cb0c8be0d, blip, toggle); }
	void SET_BLIP_FLASHES_f(Blip blip, BOOL toggle) { FastCall<void>(0x33b4f46cb0c8be0d, blip, toggle); }
	void SET_BLIP_FLASHES_ALTERNATE(Blip blip, BOOL toggle) { Call<void>(0x3ee2f1239c7c9ca8, blip, toggle); }
	void SET_BLIP_FLASHES_ALTERNATE_f(Blip blip, BOOL toggle) { FastCall<void>(0x3ee2f1239c7c9ca8, blip, toggle); }
	BOOL IS_BLIP_FLASHING(Blip blip) { return Call<BOOL>(0x7850440f6da8252b, blip); }
	BOOL IS_BLIP_FLASHING_f(Blip blip) { return FastCall<BOOL>(0x7850440f6da8252b, blip); }
	void SET_BLIP_AS_SHORT_RANGE(Blip blip, BOOL toggle) { Call<void>(0x90c9ed492c1ba67e, blip, toggle); }
	void SET_BLIP_AS_SHORT_RANGE_f(Blip blip, BOOL toggle) { FastCall<void>(0x90c9ed492c1ba67e, blip, toggle); }
	void SET_BLIP_SCALE(Blip blip, float scale) { Call<void>(0xee78dcd318979a79, blip, scale); }
	void SET_BLIP_SCALE_f(Blip blip, float scale) { FastCall<void>(0xee78dcd318979a79, blip, scale); }
	void SET_BLIP_SCALE_2D(Blip blip, float xScale, float yScale) { Call<void>(0x42e9997ad24291d8, blip, xScale, yScale); }
	void SET_BLIP_SCALE_2D_f(Blip blip, float xScale, float yScale) { FastCall<void>(0x42e9997ad24291d8, blip, xScale, yScale); }
	void SET_BLIP_PRIORITY(Blip blip, int priority) { Call<void>(0x42e9996ac1f329f5, blip, priority); }
	void SET_BLIP_PRIORITY_f(Blip blip, int priority) { FastCall<void>(0x42e9996ac1f329f5, blip, priority); }
	void SET_BLIP_DISPLAY(Blip blip, int displayId) { Call<void>(0x33b4f46c42da1631, blip, displayId); }
	void SET_BLIP_DISPLAY_f(Blip blip, int displayId) { FastCall<void>(0x33b4f46c42da1631, blip, displayId); }
	void SET_BLIP_CATEGORY(Blip blip, int index) { Call<void>(0x42e999140a6d6d4f, blip, index); }
	void SET_BLIP_CATEGORY_f(Blip blip, int index) { FastCall<void>(0x42e999140a6d6d4f, blip, index); }
	void REMOVE_BLIP(Blip* blip) { Call<void>(0xf57fb3708f25cc, blip); }
	void REMOVE_BLIP_f(Blip* blip) { FastCall<void>(0xf57fb3708f25cc, blip); }
	void SET_BLIP_AS_FRIENDLY(Blip blip, BOOL toggle) { Call<void>(0xae08c9ac79422c27, blip, toggle); }
	void SET_BLIP_AS_FRIENDLY_f(Blip blip, BOOL toggle) { FastCall<void>(0xae08c9ac79422c27, blip, toggle); }
	void PULSE_BLIP(Blip blip) { Call<void>(0x7c7a40a42fff7, blip); }
	void PULSE_BLIP_f(Blip blip) { FastCall<void>(0x7c7a40a42fff7, blip); }
	void SHOW_NUMBER_ON_BLIP(Blip blip, int number) { Call<void>(0x4bc2b2ff52efe7dd, blip, number); }
	void SHOW_NUMBER_ON_BLIP_f(Blip blip, int number) { FastCall<void>(0x4bc2b2ff52efe7dd, blip, number); }
	void HIDE_NUMBER_ON_BLIP(Blip blip) { Call<void>(0xa0bc7c5ceda172f8, blip); }
	void HIDE_NUMBER_ON_BLIP_f(Blip blip) { FastCall<void>(0xa0bc7c5ceda172f8, blip); }
	void SHOW_HEIGHT_ON_BLIP(Blip blip, BOOL toggle) { Call<void>(0xaa57b870eea2dfbb, blip, toggle); }
	void SHOW_HEIGHT_ON_BLIP_f(Blip blip, BOOL toggle) { FastCall<void>(0xaa57b870eea2dfbb, blip, toggle); }
	void SHOW_TICK_ON_BLIP(Blip blip, BOOL toggle) { Call<void>(0xea1456465ca446b1, blip, toggle); }
	void SHOW_TICK_ON_BLIP_f(Blip blip, BOOL toggle) { FastCall<void>(0xea1456465ca446b1, blip, toggle); }
	void SHOW_GOLD_TICK_ON_BLIP(Blip blip, BOOL toggle) { Call<void>(0xee5c74f468fe916c, blip, toggle); }
	void SHOW_GOLD_TICK_ON_BLIP_f(Blip blip, BOOL toggle) { FastCall<void>(0xee5c74f468fe916c, blip, toggle); }
	void SHOW_FOR_SALE_ICON_ON_BLIP(Blip blip, BOOL toggle) { Call<void>(0xacdd4c4e0e39a2ab, blip, toggle); }
	void SHOW_FOR_SALE_ICON_ON_BLIP_f(Blip blip, BOOL toggle) { FastCall<void>(0xacdd4c4e0e39a2ab, blip, toggle); }
	void SHOW_HEADING_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) { Call<void>(0xa68ee0dfac15f722, blip, toggle); }
	void SHOW_HEADING_INDICATOR_ON_BLIP_f(Blip blip, BOOL toggle) { FastCall<void>(0xa68ee0dfac15f722, blip, toggle); }
	void SHOW_OUTLINE_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) { Call<void>(0x97c12f3b24087162, blip, toggle); }
	void SHOW_OUTLINE_INDICATOR_ON_BLIP_f(Blip blip, BOOL toggle) { FastCall<void>(0x97c12f3b24087162, blip, toggle); }
	void SHOW_FRIEND_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) { Call<void>(0xeb947c789a5c22a2, blip, toggle); }
	void SHOW_FRIEND_INDICATOR_ON_BLIP_f(Blip blip, BOOL toggle) { FastCall<void>(0xeb947c789a5c22a2, blip, toggle); }
	void SHOW_CREW_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) { Call<void>(0x90f0c9d01d64a325, blip, toggle); }
	void SHOW_CREW_INDICATOR_ON_BLIP_f(Blip blip, BOOL toggle) { FastCall<void>(0x90f0c9d01d64a325, blip, toggle); }
	void SET_BLIP_EXTENDED_HEIGHT_THRESHOLD(Blip blip, BOOL toggle) { Call<void>(0xf7fa557cdfa43948, blip, toggle); }
	void SET_BLIP_EXTENDED_HEIGHT_THRESHOLD_f(Blip blip, BOOL toggle) { FastCall<void>(0xf7fa557cdfa43948, blip, toggle); }
	void SET_BLIP_SHORT_HEIGHT_THRESHOLD(Any p0, Any p1) { Call<void>(0xf586d0a150a96747, p0, p1); }
	void SET_BLIP_SHORT_HEIGHT_THRESHOLD_f(Any p0, Any p1) { FastCall<void>(0xf586d0a150a96747, p0, p1); }
	void SET_BLIP_USE_HEIGHT_INDICATOR_ON_EDGE(Blip blip, Any p1) { Call<void>(0xc2770fb70e5da5e, blip, p1); }
	void SET_BLIP_USE_HEIGHT_INDICATOR_ON_EDGE_f(Blip blip, Any p1) { FastCall<void>(0xc2770fb70e5da5e, blip, p1); }
	void SET_BLIP_AS_MINIMAL_ON_EDGE(Blip blip, BOOL toggle) { Call<void>(0x247eb128a6132063, blip, toggle); }
	void SET_BLIP_AS_MINIMAL_ON_EDGE_f(Blip blip, BOOL toggle) { FastCall<void>(0x247eb128a6132063, blip, toggle); }
	void SET_RADIUS_BLIP_EDGE(Blip blip, BOOL toggle) { Call<void>(0x3ef0b23e3a68613b, blip, toggle); }
	void SET_RADIUS_BLIP_EDGE_f(Blip blip, BOOL toggle) { FastCall<void>(0x3ef0b23e3a68613b, blip, toggle); }
	BOOL DOES_BLIP_EXIST(Blip blip) { return Call<BOOL>(0xf2c5565366fb698f, blip); }
	BOOL DOES_BLIP_EXIST_f(Blip blip) { return FastCall<BOOL>(0xf2c5565366fb698f, blip); }
	void SET_WAYPOINT_OFF() { Call<void>(0x3afe133a563994ee); }
	void SET_WAYPOINT_OFF_f() { FastCall<void>(0x3afe133a563994ee); }
	void DELETE_WAYPOINTS_FROM_THIS_PLAYER() { Call<void>(0x4804ecd889b8dce); }
	void DELETE_WAYPOINTS_FROM_THIS_PLAYER_f() { FastCall<void>(0x4804ecd889b8dce); }
	void REFRESH_WAYPOINT() { Call<void>(0x10c0b4c50cf56d05); }
	void REFRESH_WAYPOINT_f() { FastCall<void>(0x10c0b4c50cf56d05); }
	BOOL IS_WAYPOINT_ACTIVE() { return Call<BOOL>(0x7b671b3212336fef); }
	BOOL IS_WAYPOINT_ACTIVE_f() { return FastCall<BOOL>(0x7b671b3212336fef); }
	void SET_NEW_WAYPOINT(float x, float y) { Call<void>(0x37dd28e0d65a50bd, x, y); }
	void SET_NEW_WAYPOINT_f(float x, float y) { FastCall<void>(0x37dd28e0d65a50bd, x, y); }
	void SET_BLIP_BRIGHT(Blip blip, BOOL toggle) { Call<void>(0xe0a2bd8fde30438b, blip, toggle); }
	void SET_BLIP_BRIGHT_f(Blip blip, BOOL toggle) { FastCall<void>(0xe0a2bd8fde30438b, blip, toggle); }
	void SET_BLIP_SHOW_CONE(Blip blip, BOOL toggle, int hudColorIndex) { Call<void>(0x1a49960276342cf4, blip, toggle, hudColorIndex); }
	void SET_BLIP_SHOW_CONE_f(Blip blip, BOOL toggle, int hudColorIndex) { FastCall<void>(0x1a49960276342cf4, blip, toggle, hudColorIndex); }
	void REMOVE_COP_BLIP_FROM_PED(Ped ped) { Call<void>(0x14f6af9b5dadadd2, ped); }
	void REMOVE_COP_BLIP_FROM_PED_f(Ped ped) { FastCall<void>(0x14f6af9b5dadadd2, ped); }
	void SETUP_FAKE_CONE_DATA(Blip blip, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, int p8) { Call<void>(0x95983938782ae0fe, blip, p1, p2, p3, p4, p5, p6, p7, p8); }
	void SETUP_FAKE_CONE_DATA_f(Blip blip, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, int p8) { FastCall<void>(0x95983938782ae0fe, blip, p1, p2, p3, p4, p5, p6, p7, p8); }
	void REMOVE_FAKE_CONE_DATA(Blip blip) { Call<void>(0x6d52a68b0c2ec3f7, blip); }
	void REMOVE_FAKE_CONE_DATA_f(Blip blip) { FastCall<void>(0x6d52a68b0c2ec3f7, blip); }
	void CLEAR_FAKE_CONE_ARRAY() { Call<void>(0x70c487e151de8735); }
	void CLEAR_FAKE_CONE_ARRAY_f() { FastCall<void>(0x70c487e151de8735); }
	void _SET_BLIP_GPS_ROUTE_DISPLAY_DISTANCE(Blip blip, int blipChangeParam46, BOOL blipChangeParam47) { Call<void>(0xa1cf2c189f8226ef, blip, blipChangeParam46, blipChangeParam47); }
	void _SET_BLIP_GPS_ROUTE_DISPLAY_DISTANCE_f(Blip blip, int blipChangeParam46, BOOL blipChangeParam47) { FastCall<void>(0xa1cf2c189f8226ef, blip, blipChangeParam46, blipChangeParam47); }
	BOOL SET_MINIMAP_COMPONENT(int componentId, BOOL toggle, int overrideColor) { return Call<BOOL>(0x9907453683ee3be6, componentId, toggle, overrideColor); }
	BOOL SET_MINIMAP_COMPONENT_f(int componentId, BOOL toggle, int overrideColor) { return FastCall<BOOL>(0x9907453683ee3be6, componentId, toggle, overrideColor); }
	void SET_MINIMAP_SONAR_SWEEP(BOOL toggle) { Call<void>(0x74796935ca2b1979, toggle); }
	void SET_MINIMAP_SONAR_SWEEP_f(BOOL toggle) { FastCall<void>(0x74796935ca2b1979, toggle); }
	void SHOW_ACCOUNT_PICKER() { Call<void>(0x4e6e114a25930c82); }
	void SHOW_ACCOUNT_PICKER_f() { FastCall<void>(0x4e6e114a25930c82); }
	Blip GET_MAIN_PLAYER_BLIP_ID() { return Call<Blip>(0xeaaa2071ecf2ea88); }
	Blip GET_MAIN_PLAYER_BLIP_ID_f() { return FastCall<Blip>(0xeaaa2071ecf2ea88); }
	void SET_PM_WARNINGSCREEN_ACTIVE(BOOL p0) { Call<void>(0xcde94ac5b0bfb842, p0); }
	void SET_PM_WARNINGSCREEN_ACTIVE_f(BOOL p0) { FastCall<void>(0xcde94ac5b0bfb842, p0); }
	void HIDE_LOADING_ON_FADE_THIS_FRAME() { Call<void>(0x6ff67f67d84764cf); }
	void HIDE_LOADING_ON_FADE_THIS_FRAME_f() { FastCall<void>(0x6ff67f67d84764cf); }
	void SET_RADAR_AS_INTERIOR_THIS_FRAME(Hash interior, float x, float y, int z, int zoom) { Call<void>(0x517debca21dbe324, interior, x, y, z, zoom); }
	void SET_RADAR_AS_INTERIOR_THIS_FRAME_f(Hash interior, float x, float y, int z, int zoom) { FastCall<void>(0x517debca21dbe324, interior, x, y, z, zoom); }
	void SET_INSIDE_VERY_SMALL_INTERIOR(BOOL toggle) { Call<void>(0x64b9106f0d989d8b, toggle); }
	void SET_INSIDE_VERY_SMALL_INTERIOR_f(BOOL toggle) { FastCall<void>(0x64b9106f0d989d8b, toggle); }
	void SET_INSIDE_VERY_LARGE_INTERIOR(BOOL toggle) { Call<void>(0xa3747b499eb631d7, toggle); }
	void SET_INSIDE_VERY_LARGE_INTERIOR_f(BOOL toggle) { FastCall<void>(0xa3747b499eb631d7, toggle); }
	void SET_RADAR_AS_EXTERIOR_THIS_FRAME() { Call<void>(0x6b4ca0d098e53156); }
	void SET_RADAR_AS_EXTERIOR_THIS_FRAME_f() { FastCall<void>(0x6b4ca0d098e53156); }
	void SET_FAKE_PAUSEMAP_PLAYER_POSITION_THIS_FRAME(float x, float y) { Call<void>(0x83925a137c9ace90, x, y); }
	void SET_FAKE_PAUSEMAP_PLAYER_POSITION_THIS_FRAME_f(float x, float y) { FastCall<void>(0x83925a137c9ace90, x, y); }
	void SET_FAKE_GPS_PLAYER_POSITION_THIS_FRAME(float x, float y, Any p2) { Call<void>(0x70fc3c2b09a51c66, x, y, p2); }
	void SET_FAKE_GPS_PLAYER_POSITION_THIS_FRAME_f(float x, float y, Any p2) { FastCall<void>(0x70fc3c2b09a51c66, x, y, p2); }
	BOOL IS_PAUSEMAP_IN_INTERIOR_MODE() { return Call<BOOL>(0xb7267ec4b63269dc); }
	BOOL IS_PAUSEMAP_IN_INTERIOR_MODE_f() { return FastCall<BOOL>(0xb7267ec4b63269dc); }
	void HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME() { Call<void>(0xad0b4df3a6147339); }
	void HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME_f() { FastCall<void>(0xad0b4df3a6147339); }
	void HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME() { Call<void>(0x3343fe7d8da18e07); }
	void HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME_f() { FastCall<void>(0x3343fe7d8da18e07); }
	void SET_USE_ISLAND_MAP(BOOL toggle) { Call<void>(0x8becf7f405b18b87, toggle); }
	void SET_USE_ISLAND_MAP_f(BOOL toggle) { FastCall<void>(0x8becf7f405b18b87, toggle); }
	void _SET_PAUSE_EXTERIOR_RENDERING_WHILE_IN_INTERIOR() { Call<void>(0x6c2e624056ff2d4d); }
	void _SET_PAUSE_EXTERIOR_RENDERING_WHILE_IN_INTERIOR_f() { FastCall<void>(0x6c2e624056ff2d4d); }
	void DONT_TILT_MINIMAP_THIS_FRAME() { Call<void>(0x1f41d00ca55b17a); }
	void DONT_TILT_MINIMAP_THIS_FRAME_f() { FastCall<void>(0x1f41d00ca55b17a); }
	void DONT_ZOOM_MINIMAP_WHEN_RUNNING_THIS_FRAME() { Call<void>(0x7285baaec7e366f9); }
	void DONT_ZOOM_MINIMAP_WHEN_RUNNING_THIS_FRAME_f() { FastCall<void>(0x7285baaec7e366f9); }
	void DONT_ZOOM_MINIMAP_WHEN_SNIPING_THIS_FRAME() { Call<void>(0xb7d35df9a3adb638); }
	void DONT_ZOOM_MINIMAP_WHEN_SNIPING_THIS_FRAME_f() { FastCall<void>(0xb7d35df9a3adb638); }
	void SET_WIDESCREEN_FORMAT(Any p0) { Call<void>(0x161d60ab091a487a, p0); }
	void SET_WIDESCREEN_FORMAT_f(Any p0) { FastCall<void>(0x161d60ab091a487a, p0); }
	void DISPLAY_AREA_NAME(BOOL toggle) { Call<void>(0xb4a8089f46c66fa0, toggle); }
	void DISPLAY_AREA_NAME_f(BOOL toggle) { FastCall<void>(0xb4a8089f46c66fa0, toggle); }
	void DISPLAY_CASH(BOOL toggle) { Call<void>(0x18d6e911ec211cb0, toggle); }
	void DISPLAY_CASH_f(BOOL toggle) { FastCall<void>(0x18d6e911ec211cb0, toggle); }
	void USE_FAKE_MP_CASH(BOOL toggle) { Call<void>(0xefd36c0edf40e13d, toggle); }
	void USE_FAKE_MP_CASH_f(BOOL toggle) { FastCall<void>(0xefd36c0edf40e13d, toggle); }
	void CHANGE_FAKE_MP_CASH(int cash, int bank) { Call<void>(0x18334cd715bb6194, cash, bank); }
	void CHANGE_FAKE_MP_CASH_f(int cash, int bank) { FastCall<void>(0x18334cd715bb6194, cash, bank); }
	void DISPLAY_AMMO_THIS_FRAME(BOOL display) { Call<void>(0x70351caca71dd4e0, display); }
	void DISPLAY_AMMO_THIS_FRAME_f(BOOL display) { FastCall<void>(0x70351caca71dd4e0, display); }
	void DISPLAY_SNIPER_SCOPE_THIS_FRAME() { Call<void>(0x345bfa0332c96c0a); }
	void DISPLAY_SNIPER_SCOPE_THIS_FRAME_f() { FastCall<void>(0x345bfa0332c96c0a); }
	void HIDE_HUD_AND_RADAR_THIS_FRAME() { Call<void>(0xd2f2f4a63aca2fb2); }
	void HIDE_HUD_AND_RADAR_THIS_FRAME_f() { FastCall<void>(0xd2f2f4a63aca2fb2); }
	void ALLOW_DISPLAY_OF_MULTIPLAYER_CASH_TEXT(BOOL allow) { Call<void>(0x4cd258fc31d264df, allow); }
	void ALLOW_DISPLAY_OF_MULTIPLAYER_CASH_TEXT_f(BOOL allow) { FastCall<void>(0x4cd258fc31d264df, allow); }
	void SET_MULTIPLAYER_WALLET_CASH() { Call<void>(0xd186501affde337); }
	void SET_MULTIPLAYER_WALLET_CASH_f() { FastCall<void>(0xd186501affde337); }
	void REMOVE_MULTIPLAYER_WALLET_CASH() { Call<void>(0xe4e54307f40a6979); }
	void REMOVE_MULTIPLAYER_WALLET_CASH_f() { FastCall<void>(0xe4e54307f40a6979); }
	void SET_MULTIPLAYER_BANK_CASH() { Call<void>(0x48bcd4e965e36654); }
	void SET_MULTIPLAYER_BANK_CASH_f() { FastCall<void>(0x48bcd4e965e36654); }
	void REMOVE_MULTIPLAYER_BANK_CASH() { Call<void>(0x69762f72dc809516); }
	void REMOVE_MULTIPLAYER_BANK_CASH_f() { FastCall<void>(0x69762f72dc809516); }
	void SET_MULTIPLAYER_HUD_CASH(int p0, BOOL p1) { Call<void>(0xe9927aa5a591f6dd, p0, p1); }
	void SET_MULTIPLAYER_HUD_CASH_f(int p0, BOOL p1) { FastCall<void>(0xe9927aa5a591f6dd, p0, p1); }
	void REMOVE_MULTIPLAYER_HUD_CASH() { Call<void>(0xd1da85d35f12e7db); }
	void REMOVE_MULTIPLAYER_HUD_CASH_f() { FastCall<void>(0xd1da85d35f12e7db); }
	void HIDE_HELP_TEXT_THIS_FRAME() { Call<void>(0x6ef4812bf042749d); }
	void HIDE_HELP_TEXT_THIS_FRAME_f() { FastCall<void>(0x6ef4812bf042749d); }
	BOOL IS_IME_IN_PROGRESS() { return Call<BOOL>(0xe70f98379492f54); }
	BOOL IS_IME_IN_PROGRESS_f() { return FastCall<BOOL>(0xe70f98379492f54); }
	void DISPLAY_HELP_TEXT_THIS_FRAME(char* message, BOOL p1) { Call<void>(0x5b0261b992c1013d, message, p1); }
	void DISPLAY_HELP_TEXT_THIS_FRAME_f(char* message, BOOL p1) { FastCall<void>(0x5b0261b992c1013d, message, p1); }
	void HUD_FORCE_WEAPON_WHEEL(BOOL show) { Call<void>(0x5d3f9bbf993008b4, show); }
	void HUD_FORCE_WEAPON_WHEEL_f(BOOL show) { FastCall<void>(0x5d3f9bbf993008b4, show); }
	void HUD_FORCE_SPECIAL_VEHICLE_WEAPON_WHEEL() { Call<void>(0x87b898580f05caed); }
	void HUD_FORCE_SPECIAL_VEHICLE_WEAPON_WHEEL_f() { FastCall<void>(0x87b898580f05caed); }
	void HUD_SUPPRESS_WEAPON_WHEEL_RESULTS_THIS_FRAME() { Call<void>(0x853414aa595b499a); }
	void HUD_SUPPRESS_WEAPON_WHEEL_RESULTS_THIS_FRAME_f() { FastCall<void>(0x853414aa595b499a); }
	Hash HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED() { return Call<Hash>(0x9c5fb49a7a065a84); }
	Hash HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED_f() { return FastCall<Hash>(0x9c5fb49a7a065a84); }
	void HUD_SET_WEAPON_WHEEL_TOP_SLOT(Hash weaponHash) { Call<void>(0xfd1ed44c6a8c722a, weaponHash); }
	void HUD_SET_WEAPON_WHEEL_TOP_SLOT_f(Hash weaponHash) { FastCall<void>(0xfd1ed44c6a8c722a, weaponHash); }
	Hash HUD_GET_WEAPON_WHEEL_TOP_SLOT(int weaponTypeIndex) { return Call<Hash>(0x4e1083723848d61e, weaponTypeIndex); }
	Hash HUD_GET_WEAPON_WHEEL_TOP_SLOT_f(int weaponTypeIndex) { return FastCall<Hash>(0x4e1083723848d61e, weaponTypeIndex); }
	void HUD_SHOWING_CHARACTER_SWITCH_SELECTION(BOOL toggle) { Call<void>(0x96b02e69754c15d9, toggle); }
	void HUD_SHOWING_CHARACTER_SWITCH_SELECTION_f(BOOL toggle) { FastCall<void>(0x96b02e69754c15d9, toggle); }
	void SET_GPS_FLAGS(int p0, float p1) { Call<void>(0xa4988f3d4bc0aeb5, p0, p1); }
	void SET_GPS_FLAGS_f(int p0, float p1) { FastCall<void>(0xa4988f3d4bc0aeb5, p0, p1); }
	void CLEAR_GPS_FLAGS() { Call<void>(0xeafe9fd28a4b02e0); }
	void CLEAR_GPS_FLAGS_f() { FastCall<void>(0xeafe9fd28a4b02e0); }
	void SET_RACE_TRACK_RENDER(BOOL toggle) { Call<void>(0xb8820156a2e8031b, toggle); }
	void SET_RACE_TRACK_RENDER_f(BOOL toggle) { FastCall<void>(0xb8820156a2e8031b, toggle); }
	void CLEAR_GPS_RACE_TRACK() { Call<void>(0xfd938847a83a5564); }
	void CLEAR_GPS_RACE_TRACK_f() { FastCall<void>(0xfd938847a83a5564); }
	void START_GPS_CUSTOM_ROUTE(int hudColor, BOOL displayOnFoot, BOOL followPlayer) { Call<void>(0x537f86e82cdf6bcd, hudColor, displayOnFoot, followPlayer); }
	void START_GPS_CUSTOM_ROUTE_f(int hudColor, BOOL displayOnFoot, BOOL followPlayer) { FastCall<void>(0x537f86e82cdf6bcd, hudColor, displayOnFoot, followPlayer); }
	void ADD_POINT_TO_GPS_CUSTOM_ROUTE(float x, float y, float z) { Call<void>(0x70c33140f6a5f27, x, y, z); }
	void ADD_POINT_TO_GPS_CUSTOM_ROUTE_f(float x, float y, float z) { FastCall<void>(0x70c33140f6a5f27, x, y, z); }
	void SET_GPS_CUSTOM_ROUTE_RENDER(BOOL toggle, int radarThickness, int mapThickness) { Call<void>(0x1a8b6b8f6ecdca48, toggle, radarThickness, mapThickness); }
	void SET_GPS_CUSTOM_ROUTE_RENDER_f(BOOL toggle, int radarThickness, int mapThickness) { FastCall<void>(0x1a8b6b8f6ecdca48, toggle, radarThickness, mapThickness); }
	void CLEAR_GPS_CUSTOM_ROUTE() { Call<void>(0xe1c454cbcccf2d42); }
	void CLEAR_GPS_CUSTOM_ROUTE_f() { FastCall<void>(0xe1c454cbcccf2d42); }
	void START_GPS_MULTI_ROUTE(int hudColor, BOOL routeFromPlayer, BOOL displayOnFoot) { Call<void>(0xb10b209deea5551, hudColor, routeFromPlayer, displayOnFoot); }
	void START_GPS_MULTI_ROUTE_f(int hudColor, BOOL routeFromPlayer, BOOL displayOnFoot) { FastCall<void>(0xb10b209deea5551, hudColor, routeFromPlayer, displayOnFoot); }
	void ADD_POINT_TO_GPS_MULTI_ROUTE(float x, float y, float z) { Call<void>(0x31e3af559be68eb7, x, y, z); }
	void ADD_POINT_TO_GPS_MULTI_ROUTE_f(float x, float y, float z) { FastCall<void>(0x31e3af559be68eb7, x, y, z); }
	void SET_GPS_MULTI_ROUTE_RENDER(BOOL toggle) { Call<void>(0xb68bb402c1be7c44, toggle); }
	void SET_GPS_MULTI_ROUTE_RENDER_f(BOOL toggle) { FastCall<void>(0xb68bb402c1be7c44, toggle); }
	void CLEAR_GPS_MULTI_ROUTE() { Call<void>(0xb4d0d9b65ff2113c); }
	void CLEAR_GPS_MULTI_ROUTE_f() { FastCall<void>(0xb4d0d9b65ff2113c); }
	void CLEAR_GPS_PLAYER_WAYPOINT() { Call<void>(0x829d5f90ffed50d8); }
	void CLEAR_GPS_PLAYER_WAYPOINT_f() { FastCall<void>(0x829d5f90ffed50d8); }
	void SET_GPS_FLASHES(BOOL toggle) { Call<void>(0xe0b1b5195e55294c, toggle); }
	void SET_GPS_FLASHES_f(BOOL toggle) { FastCall<void>(0xe0b1b5195e55294c, toggle); }
	void SET_PLAYER_ICON_COLOUR(int color) { Call<void>(0x6c36a76d3f571f11, color); }
	void SET_PLAYER_ICON_COLOUR_f(int color) { FastCall<void>(0x6c36a76d3f571f11, color); }
	void FLASH_MINIMAP_DISPLAY() { Call<void>(0x3dc6ab1af9bd79); }
	void FLASH_MINIMAP_DISPLAY_f() { FastCall<void>(0x3dc6ab1af9bd79); }
	void FLASH_MINIMAP_DISPLAY_WITH_COLOR(int hudColorIndex) { Call<void>(0x808472fb7361b910, hudColorIndex); }
	void FLASH_MINIMAP_DISPLAY_WITH_COLOR_f(int hudColorIndex) { FastCall<void>(0x808472fb7361b910, hudColorIndex); }
	void TOGGLE_STEALTH_RADAR(BOOL toggle) { Call<void>(0xc162d3ec01c239df, toggle); }
	void TOGGLE_STEALTH_RADAR_f(BOOL toggle) { FastCall<void>(0xc162d3ec01c239df, toggle); }
	void SET_MINIMAP_IN_SPECTATOR_MODE(BOOL toggle, Ped ped) { Call<void>(0x5e8ec449dcc9ab76, toggle, ped); }
	void SET_MINIMAP_IN_SPECTATOR_MODE_f(BOOL toggle, Ped ped) { FastCall<void>(0x5e8ec449dcc9ab76, toggle, ped); }
	void SET_MISSION_NAME(BOOL p0, char* name) { Call<void>(0x378e1ff58234c65b, p0, name); }
	void SET_MISSION_NAME_f(BOOL p0, char* name) { FastCall<void>(0x378e1ff58234c65b, p0, name); }
	void SET_MISSION_NAME_FOR_UGC_MISSION(BOOL p0, char* name) { Call<void>(0x9b41d3fcd9113aa4, p0, name); }
	void SET_MISSION_NAME_FOR_UGC_MISSION_f(BOOL p0, char* name) { FastCall<void>(0x9b41d3fcd9113aa4, p0, name); }
	void SET_DESCRIPTION_FOR_UGC_MISSION_EIGHT_STRINGS(BOOL p0, char* p1, char* p2, char* p3, char* p4, char* p5, char* p6, char* p7, char* p8) { Call<void>(0x49ddeeee88d22a3b, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void SET_DESCRIPTION_FOR_UGC_MISSION_EIGHT_STRINGS_f(BOOL p0, char* p1, char* p2, char* p3, char* p4, char* p5, char* p6, char* p7, char* p8) { FastCall<void>(0x49ddeeee88d22a3b, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void SET_MINIMAP_BLOCK_WAYPOINT(BOOL toggle) { Call<void>(0x9ba977ea7c36f62a, toggle); }
	void SET_MINIMAP_BLOCK_WAYPOINT_f(BOOL toggle) { FastCall<void>(0x9ba977ea7c36f62a, toggle); }
	void SET_MINIMAP_IN_PROLOGUE(BOOL toggle) { Call<void>(0x745c403fd7fbe4ea, toggle); }
	void SET_MINIMAP_IN_PROLOGUE_f(BOOL toggle) { FastCall<void>(0x745c403fd7fbe4ea, toggle); }
	void SET_MINIMAP_BACKGROUND_HIDDEN(BOOL toggle) { Call<void>(0xf30b2b1d86ba33e4, toggle); }
	void SET_MINIMAP_BACKGROUND_HIDDEN_f(BOOL toggle) { FastCall<void>(0xf30b2b1d86ba33e4, toggle); }
	void SET_MINIMAP_HIDE_FOW(BOOL toggle) { Call<void>(0x788c9f4184841008, toggle); }
	void SET_MINIMAP_HIDE_FOW_f(BOOL toggle) { FastCall<void>(0x788c9f4184841008, toggle); }
	float GET_MINIMAP_FOW_DISCOVERY_RATIO() { return ToFloat(Call<_float>(0x377557e519b363a8)); }
	float GET_MINIMAP_FOW_DISCOVERY_RATIO_f() { return ToFloat(FastCall<_float>(0x377557e519b363a8)); }
	BOOL GET_MINIMAP_FOW_COORDINATE_IS_REVEALED(float x, float y, float z) { return Call<BOOL>(0x2945595848b79fae, x, y, z); }
	BOOL GET_MINIMAP_FOW_COORDINATE_IS_REVEALED_f(float x, float y, float z) { return FastCall<BOOL>(0x2945595848b79fae, x, y, z); }
	void SET_MINIMAP_FOW_DO_NOT_UPDATE(BOOL p0) { Call<void>(0x7aa4f239b067c441, p0); }
	void SET_MINIMAP_FOW_DO_NOT_UPDATE_f(BOOL p0) { FastCall<void>(0x7aa4f239b067c441, p0); }
	void SET_MINIMAP_FOW_REVEAL_COORDINATE(float x, float y, float z) { Call<void>(0x1b01d0a6476e9d62, x, y, z); }
	void SET_MINIMAP_FOW_REVEAL_COORDINATE_f(float x, float y, float z) { FastCall<void>(0x1b01d0a6476e9d62, x, y, z); }
	void SET_MINIMAP_GOLF_COURSE(int hole) { Call<void>(0x7456766c2dfff761, hole); }
	void SET_MINIMAP_GOLF_COURSE_f(int hole) { FastCall<void>(0x7456766c2dfff761, hole); }
	void SET_MINIMAP_GOLF_COURSE_OFF() { Call<void>(0xde1fe8a4b4afbf71); }
	void SET_MINIMAP_GOLF_COURSE_OFF_f() { FastCall<void>(0xde1fe8a4b4afbf71); }
	void LOCK_MINIMAP_ANGLE(int angle) { Call<void>(0xd523737a89b7ad65, angle); }
	void LOCK_MINIMAP_ANGLE_f(int angle) { FastCall<void>(0xd523737a89b7ad65, angle); }
	void UNLOCK_MINIMAP_ANGLE() { Call<void>(0x51e0352c1c5da3be); }
	void UNLOCK_MINIMAP_ANGLE_f() { FastCall<void>(0x51e0352c1c5da3be); }
	void LOCK_MINIMAP_POSITION(float x, float y) { Call<void>(0x287b6140b52ac737, x, y); }
	void LOCK_MINIMAP_POSITION_f(float x, float y) { FastCall<void>(0x287b6140b52ac737, x, y); }
	void UNLOCK_MINIMAP_POSITION() { Call<void>(0xfa4bb8995461863e); }
	void UNLOCK_MINIMAP_POSITION_f() { FastCall<void>(0xfa4bb8995461863e); }
	void SET_FAKE_MINIMAP_MAX_ALTIMETER_HEIGHT(float altitude, BOOL p1, Any p2) { Call<void>(0x86321e0d94fd8a9f, altitude, p1, p2); }
	void SET_FAKE_MINIMAP_MAX_ALTIMETER_HEIGHT_f(float altitude, BOOL p1, Any p2) { FastCall<void>(0x86321e0d94fd8a9f, altitude, p1, p2); }
	void SET_HEALTH_HUD_DISPLAY_VALUES(int health, int capacity, BOOL wasAdded) { Call<void>(0x9194c695230880cd, health, capacity, wasAdded); }
	void SET_HEALTH_HUD_DISPLAY_VALUES_f(int health, int capacity, BOOL wasAdded) { FastCall<void>(0x9194c695230880cd, health, capacity, wasAdded); }
	void SET_MAX_HEALTH_HUD_DISPLAY(int maximumValue) { Call<void>(0xb7a9a4428ebd2b4f, maximumValue); }
	void SET_MAX_HEALTH_HUD_DISPLAY_f(int maximumValue) { FastCall<void>(0xb7a9a4428ebd2b4f, maximumValue); }
	void SET_MAX_ARMOUR_HUD_DISPLAY(int maximumValue) { Call<void>(0x3022d9751ac4f263, maximumValue); }
	void SET_MAX_ARMOUR_HUD_DISPLAY_f(int maximumValue) { FastCall<void>(0x3022d9751ac4f263, maximumValue); }
	void SET_BIGMAP_ACTIVE(BOOL toggleBigMap, BOOL showFullMap) { Call<void>(0x41d4987ee5958b0c, toggleBigMap, showFullMap); }
	void SET_BIGMAP_ACTIVE_f(BOOL toggleBigMap, BOOL showFullMap) { FastCall<void>(0x41d4987ee5958b0c, toggleBigMap, showFullMap); }
	BOOL IS_HUD_COMPONENT_ACTIVE(int id) { return Call<BOOL>(0x5506ec722fe90305, id); }
	BOOL IS_HUD_COMPONENT_ACTIVE_f(int id) { return FastCall<BOOL>(0x5506ec722fe90305, id); }
	BOOL IS_SCRIPTED_HUD_COMPONENT_ACTIVE(int id) { return Call<BOOL>(0x99713ef450c28930, id); }
	BOOL IS_SCRIPTED_HUD_COMPONENT_ACTIVE_f(int id) { return FastCall<BOOL>(0x99713ef450c28930, id); }
	void HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME(int id) { Call<void>(0xa317c9d872a623ae, id); }
	void HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME_f(int id) { FastCall<void>(0xa317c9d872a623ae, id); }
	void SHOW_SCRIPTED_HUD_COMPONENT_THIS_FRAME(int id) { Call<void>(0x10ff8dbfc77ff2a9, id); }
	void SHOW_SCRIPTED_HUD_COMPONENT_THIS_FRAME_f(int id) { FastCall<void>(0x10ff8dbfc77ff2a9, id); }
	BOOL IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME(int id) { return Call<BOOL>(0xf7c51f0cf28badb7, id); }
	BOOL IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME_f(int id) { return FastCall<BOOL>(0xf7c51f0cf28badb7, id); }
	void HIDE_HUD_COMPONENT_THIS_FRAME(int id) { Call<void>(0xb08dd26b003c63d3, id); }
	void HIDE_HUD_COMPONENT_THIS_FRAME_f(int id) { FastCall<void>(0xb08dd26b003c63d3, id); }
	void SHOW_HUD_COMPONENT_THIS_FRAME(int id) { Call<void>(0xec8bfdb86d9dbe78, id); }
	void SHOW_HUD_COMPONENT_THIS_FRAME_f(int id) { FastCall<void>(0xec8bfdb86d9dbe78, id); }
	void HIDE_STREET_AND_CAR_NAMES_THIS_FRAME() { Call<void>(0xa5030fe17f5a8655); }
	void HIDE_STREET_AND_CAR_NAMES_THIS_FRAME_f() { FastCall<void>(0xa5030fe17f5a8655); }
	void RESET_RETICULE_VALUES() { Call<void>(0xc250af95bbe8da7e); }
	void RESET_RETICULE_VALUES_f() { FastCall<void>(0xc250af95bbe8da7e); }
	void RESET_HUD_COMPONENT_VALUES(int id) { Call<void>(0xbebb6c9c9e812a3c, id); }
	void RESET_HUD_COMPONENT_VALUES_f(int id) { FastCall<void>(0xbebb6c9c9e812a3c, id); }
	void SET_HUD_COMPONENT_POSITION(int id, float x, float y) { Call<void>(0xd8d5626dedb16350, id, x, y); }
	void SET_HUD_COMPONENT_POSITION_f(int id, float x, float y) { FastCall<void>(0xd8d5626dedb16350, id, x, y); }
	Vector3* GET_HUD_COMPONENT_POSITION(int id) { Call<Vector3*>(0xa6199801d7817ddc, id); return GetVector(); }
	void CLEAR_REMINDER_MESSAGE() { Call<void>(0x3d35aeaa15da74ec); }
	void CLEAR_REMINDER_MESSAGE_f() { FastCall<void>(0x3d35aeaa15da74ec); }
	int GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION(float worldX, float worldY, float worldZ, float* screenX, float* screenY) { return Call<int>(0xee2f93a6c1723ff7, worldX, worldY, worldZ, screenX, screenY); }
	int GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION_f(float worldX, float worldY, float worldZ, float* screenX, float* screenY) { return FastCall<int>(0xee2f93a6c1723ff7, worldX, worldY, worldZ, screenX, screenY); }
	void OPEN_REPORTUGC_MENU() { Call<void>(0x196b7401399054b6); }
	void OPEN_REPORTUGC_MENU_f() { FastCall<void>(0x196b7401399054b6); }
	void FORCE_CLOSE_REPORTUGC_MENU() { Call<void>(0x966fc2ee8521845c); }
	void FORCE_CLOSE_REPORTUGC_MENU_f() { FastCall<void>(0x966fc2ee8521845c); }
	BOOL IS_REPORTUGC_MENU_OPEN() { return Call<BOOL>(0x643da5bf388ebf13); }
	BOOL IS_REPORTUGC_MENU_OPEN_f() { return FastCall<BOOL>(0x643da5bf388ebf13); }
	BOOL IS_FLOATING_HELP_TEXT_ON_SCREEN(int hudIndex) { return Call<BOOL>(0x66516c358f33f034, hudIndex); }
	BOOL IS_FLOATING_HELP_TEXT_ON_SCREEN_f(int hudIndex) { return FastCall<BOOL>(0x66516c358f33f034, hudIndex); }
	void SET_FLOATING_HELP_TEXT_SCREEN_POSITION(int hudIndex, float x, float y) { Call<void>(0xf5e470e5362c94ec, hudIndex, x, y); }
	void SET_FLOATING_HELP_TEXT_SCREEN_POSITION_f(int hudIndex, float x, float y) { FastCall<void>(0xf5e470e5362c94ec, hudIndex, x, y); }
	void SET_FLOATING_HELP_TEXT_WORLD_POSITION(int hudIndex, float x, float y, float z) { Call<void>(0x39b9fedf69111806, hudIndex, x, y, z); }
	void SET_FLOATING_HELP_TEXT_WORLD_POSITION_f(int hudIndex, float x, float y, float z) { FastCall<void>(0x39b9fedf69111806, hudIndex, x, y, z); }
	void SET_FLOATING_HELP_TEXT_TO_ENTITY(int hudIndex, Entity entity, float offsetX, float offsetY) { Call<void>(0xd1b03c1699d1ab77, hudIndex, entity, offsetX, offsetY); }
	void SET_FLOATING_HELP_TEXT_TO_ENTITY_f(int hudIndex, Entity entity, float offsetX, float offsetY) { FastCall<void>(0xd1b03c1699d1ab77, hudIndex, entity, offsetX, offsetY); }
	void SET_FLOATING_HELP_TEXT_STYLE(int hudIndex, int p1, int p2, int p3, int p4, int p5) { Call<void>(0xb5b9aee2e895dee1, hudIndex, p1, p2, p3, p4, p5); }
	void SET_FLOATING_HELP_TEXT_STYLE_f(int hudIndex, int p1, int p2, int p3, int p4, int p5) { FastCall<void>(0xb5b9aee2e895dee1, hudIndex, p1, p2, p3, p4, p5); }
	void CLEAR_FLOATING_HELP(int hudIndex, BOOL p1) { Call<void>(0xfbc82c98286d5948, hudIndex, p1); }
	void CLEAR_FLOATING_HELP_f(int hudIndex, BOOL p1) { FastCall<void>(0xfbc82c98286d5948, hudIndex, p1); }
	void CREATE_MP_GAMER_TAG_WITH_CREW_COLOR(Player player, char* username, BOOL pointedClanTag, BOOL isRockstarClan, char* clanTag, int clanFlag, int r, int g, int b) { Call<void>(0xf3173e0bc25f25e1, player, username, pointedClanTag, isRockstarClan, clanTag, clanFlag, r, g, b); }
	void CREATE_MP_GAMER_TAG_WITH_CREW_COLOR_f(Player player, char* username, BOOL pointedClanTag, BOOL isRockstarClan, char* clanTag, int clanFlag, int r, int g, int b) { FastCall<void>(0xf3173e0bc25f25e1, player, username, pointedClanTag, isRockstarClan, clanTag, clanFlag, r, g, b); }
	BOOL IS_MP_GAMER_TAG_MOVIE_ACTIVE() { return Call<BOOL>(0xa760ec362909fec0); }
	BOOL IS_MP_GAMER_TAG_MOVIE_ACTIVE_f() { return FastCall<BOOL>(0xa760ec362909fec0); }
	int CREATE_FAKE_MP_GAMER_TAG(Ped ped, char* username, BOOL pointedClanTag, BOOL isRockstarClan, char* clanTag, int clanFlag) { return Call<int>(0xbd413e15fc7e95e6, ped, username, pointedClanTag, isRockstarClan, clanTag, clanFlag); }
	int CREATE_FAKE_MP_GAMER_TAG_f(Ped ped, char* username, BOOL pointedClanTag, BOOL isRockstarClan, char* clanTag, int clanFlag) { return FastCall<int>(0xbd413e15fc7e95e6, ped, username, pointedClanTag, isRockstarClan, clanTag, clanFlag); }
	void REMOVE_MP_GAMER_TAG(int gamerTagId) { Call<void>(0x2eb6d850b019e59a, gamerTagId); }
	void REMOVE_MP_GAMER_TAG_f(int gamerTagId) { FastCall<void>(0x2eb6d850b019e59a, gamerTagId); }
	BOOL IS_MP_GAMER_TAG_ACTIVE(int gamerTagId) { return Call<BOOL>(0x72d44e8ea1bd36f1, gamerTagId); }
	BOOL IS_MP_GAMER_TAG_ACTIVE_f(int gamerTagId) { return FastCall<BOOL>(0x72d44e8ea1bd36f1, gamerTagId); }
	BOOL IS_MP_GAMER_TAG_FREE(int gamerTagId) { return Call<BOOL>(0xe46a3e6ab441d117, gamerTagId); }
	BOOL IS_MP_GAMER_TAG_FREE_f(int gamerTagId) { return FastCall<BOOL>(0xe46a3e6ab441d117, gamerTagId); }
	void SET_MP_GAMER_TAG_VISIBILITY(int gamerTagId, int component, BOOL toggle, Any p3) { Call<void>(0xccfa9fa78d849495, gamerTagId, component, toggle, p3); }
	void SET_MP_GAMER_TAG_VISIBILITY_f(int gamerTagId, int component, BOOL toggle, Any p3) { FastCall<void>(0xccfa9fa78d849495, gamerTagId, component, toggle, p3); }
	void SET_ALL_MP_GAMER_TAGS_VISIBILITY(int gamerTagId, BOOL toggle) { Call<void>(0x19ef398f003a7198, gamerTagId, toggle); }
	void SET_ALL_MP_GAMER_TAGS_VISIBILITY_f(int gamerTagId, BOOL toggle) { FastCall<void>(0x19ef398f003a7198, gamerTagId, toggle); }
	void SET_MP_GAMER_TAGS_SHOULD_USE_VEHICLE_HEALTH(int gamerTagId, BOOL toggle) { Call<void>(0xc75addaa13a14dcb, gamerTagId, toggle); }
	void SET_MP_GAMER_TAGS_SHOULD_USE_VEHICLE_HEALTH_f(int gamerTagId, BOOL toggle) { FastCall<void>(0xc75addaa13a14dcb, gamerTagId, toggle); }
	void SET_MP_GAMER_TAGS_SHOULD_USE_POINTS_HEALTH(int gamerTagId, BOOL toggle) { Call<void>(0xf1acb0d6a5e9e6dc, gamerTagId, toggle); }
	void SET_MP_GAMER_TAGS_SHOULD_USE_POINTS_HEALTH_f(int gamerTagId, BOOL toggle) { FastCall<void>(0xf1acb0d6a5e9e6dc, gamerTagId, toggle); }
	void SET_MP_GAMER_TAGS_POINT_HEALTH(int gamerTagId, int value, int maximumValue) { Call<void>(0x23cfe58a9a6bb613, gamerTagId, value, maximumValue); }
	void SET_MP_GAMER_TAGS_POINT_HEALTH_f(int gamerTagId, int value, int maximumValue) { FastCall<void>(0x23cfe58a9a6bb613, gamerTagId, value, maximumValue); }
	void SET_MP_GAMER_TAG_COLOUR(int gamerTagId, int component, int hudColorIndex) { Call<void>(0xf6a1010da66330cf, gamerTagId, component, hudColorIndex); }
	void SET_MP_GAMER_TAG_COLOUR_f(int gamerTagId, int component, int hudColorIndex) { FastCall<void>(0xf6a1010da66330cf, gamerTagId, component, hudColorIndex); }
	void SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR(int gamerTagId, int hudColorIndex) { Call<void>(0xfb9c2bca5b178678, gamerTagId, hudColorIndex); }
	void SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR_f(int gamerTagId, int hudColorIndex) { FastCall<void>(0xfb9c2bca5b178678, gamerTagId, hudColorIndex); }
	void SET_MP_GAMER_TAG_ALPHA(int gamerTagId, int component, int alpha) { Call<void>(0xce2639d72648cddb, gamerTagId, component, alpha); }
	void SET_MP_GAMER_TAG_ALPHA_f(int gamerTagId, int component, int alpha) { FastCall<void>(0xce2639d72648cddb, gamerTagId, component, alpha); }
	void SET_MP_GAMER_TAG_WANTED_LEVEL(int gamerTagId, int wantedlvl) { Call<void>(0x7913dda488734697, gamerTagId, wantedlvl); }
	void SET_MP_GAMER_TAG_WANTED_LEVEL_f(int gamerTagId, int wantedlvl) { FastCall<void>(0x7913dda488734697, gamerTagId, wantedlvl); }
	void SET_MP_GAMER_TAG_NUM_PACKAGES(int gamerTagId, int p1) { Call<void>(0x76219f79f7dc2a69, gamerTagId, p1); }
	void SET_MP_GAMER_TAG_NUM_PACKAGES_f(int gamerTagId, int p1) { FastCall<void>(0x76219f79f7dc2a69, gamerTagId, p1); }
	void SET_MP_GAMER_TAG_NAME(int gamerTagId, char* string) { Call<void>(0x69bf2b27f8ffd64e, gamerTagId, string); }
	void SET_MP_GAMER_TAG_NAME_f(int gamerTagId, char* string) { FastCall<void>(0x69bf2b27f8ffd64e, gamerTagId, string); }
	BOOL IS_UPDATING_MP_GAMER_TAG_NAME_AND_CREW_DETAILS(int gamerTagId) { return Call<BOOL>(0x38637bee6b09db84, gamerTagId); }
	BOOL IS_UPDATING_MP_GAMER_TAG_NAME_AND_CREW_DETAILS_f(int gamerTagId) { return FastCall<BOOL>(0x38637bee6b09db84, gamerTagId); }
	void SET_MP_GAMER_TAG_BIG_TEXT(int gamerTagId, char* string) { Call<void>(0xd264f435ed6c4b6f, gamerTagId, string); }
	void SET_MP_GAMER_TAG_BIG_TEXT_f(int gamerTagId, char* string) { FastCall<void>(0xd264f435ed6c4b6f, gamerTagId, string); }
	int GET_CURRENT_WEBPAGE_ID() { return Call<int>(0xef9e6ed75d733966); }
	int GET_CURRENT_WEBPAGE_ID_f() { return FastCall<int>(0xef9e6ed75d733966); }
	int GET_CURRENT_WEBSITE_ID() { return Call<int>(0xef9e6ed80a83e1ae); }
	int GET_CURRENT_WEBSITE_ID_f() { return FastCall<int>(0xef9e6ed80a83e1ae); }
	int GET_GLOBAL_ACTIONSCRIPT_FLAG(int flagIndex) { return Call<int>(0xaf73cb3b2efa29b7, flagIndex); }
	int GET_GLOBAL_ACTIONSCRIPT_FLAG_f(int flagIndex) { return FastCall<int>(0xaf73cb3b2efa29b7, flagIndex); }
	void RESET_GLOBAL_ACTIONSCRIPT_FLAG(int flagIndex) { Call<void>(0xd241f49d29e11de, flagIndex); }
	void RESET_GLOBAL_ACTIONSCRIPT_FLAG_f(int flagIndex) { FastCall<void>(0xd241f49d29e11de, flagIndex); }
	BOOL IS_WARNING_MESSAGE_READY_FOR_CONTROL() { return Call<BOOL>(0x499c764e159d63bb); }
	BOOL IS_WARNING_MESSAGE_READY_FOR_CONTROL_f() { return FastCall<BOOL>(0x499c764e159d63bb); }
	void SET_WARNING_MESSAGE(char* titleMsg, int flags, char* promptMsg, BOOL p3, int p4, char* p5, char* p6, BOOL showBackground, int errorCode) { Call<void>(0xb7b5a0726a400427, titleMsg, flags, promptMsg, p3, p4, p5, p6, showBackground, errorCode); }
	void SET_WARNING_MESSAGE_f(char* titleMsg, int flags, char* promptMsg, BOOL p3, int p4, char* p5, char* p6, BOOL showBackground, int errorCode) { FastCall<void>(0xb7b5a0726a400427, titleMsg, flags, promptMsg, p3, p4, p5, p6, showBackground, errorCode); }
	void SET_WARNING_MESSAGE_WITH_HEADER(char* entryHeader, char* entryLine1, int instructionalKey, char* entryLine2, BOOL p4, Any p5, Any* showBackground, Any* p7, BOOL p8, Any p9) { Call<void>(0xdbcc342987e7400e, entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, showBackground, p7, p8, p9); }
	void SET_WARNING_MESSAGE_WITH_HEADER_f(char* entryHeader, char* entryLine1, int instructionalKey, char* entryLine2, BOOL p4, Any p5, Any* showBackground, Any* p7, BOOL p8, Any p9) { FastCall<void>(0xdbcc342987e7400e, entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, showBackground, p7, p8, p9); }
	void SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS(char* entryHeader, char* entryLine1, int instructionalKey, char* entryLine2, BOOL p4, Any p5, Any additionalIntInfo, char* additionalTextInfoLine1, char* additionalTextInfoLine2, BOOL showBackground, int errorCode) { Call<void>(0x90921e8027f5eea0, entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, additionalIntInfo, additionalTextInfoLine1, additionalTextInfoLine2, showBackground, errorCode); }
	void SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS_f(char* entryHeader, char* entryLine1, int instructionalKey, char* entryLine2, BOOL p4, Any p5, Any additionalIntInfo, char* additionalTextInfoLine1, char* additionalTextInfoLine2, BOOL showBackground, int errorCode) { FastCall<void>(0x90921e8027f5eea0, entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, additionalIntInfo, additionalTextInfoLine1, additionalTextInfoLine2, showBackground, errorCode); }
	void SET_WARNING_MESSAGE_WITH_HEADER_EXTENDED(char* entryHeader, char* entryLine1, int flags, char* entryLine2, BOOL p4, Any p5, Any* p6, Any* p7, BOOL showBg, Any p9, Any p10) { Call<void>(0xbb122c1aebc77e4a, entryHeader, entryLine1, flags, entryLine2, p4, p5, p6, p7, showBg, p9, p10); }
	void SET_WARNING_MESSAGE_WITH_HEADER_EXTENDED_f(char* entryHeader, char* entryLine1, int flags, char* entryLine2, BOOL p4, Any p5, Any* p6, Any* p7, BOOL showBg, Any p9, Any p10) { FastCall<void>(0xbb122c1aebc77e4a, entryHeader, entryLine1, flags, entryLine2, p4, p5, p6, p7, showBg, p9, p10); }
	void SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS_EXTENDED(char* labelTitle, char* labelMessage, int p2, int p3, char* labelMessage2, BOOL p5, int p6, int p7, char* p8, char* p9, BOOL background, int errorCode) { Call<void>(0x9fba9c17b83f13f8, labelTitle, labelMessage, p2, p3, labelMessage2, p5, p6, p7, p8, p9, background, errorCode); }
	void SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS_EXTENDED_f(char* labelTitle, char* labelMessage, int p2, int p3, char* labelMessage2, BOOL p5, int p6, int p7, char* p8, char* p9, BOOL background, int errorCode) { FastCall<void>(0x9fba9c17b83f13f8, labelTitle, labelMessage, p2, p3, labelMessage2, p5, p6, p7, p8, p9, background, errorCode); }
	Hash GET_WARNING_SCREEN_MESSAGE_HASH() { return Call<Hash>(0xac9e255b209e388d); }
	Hash GET_WARNING_SCREEN_MESSAGE_HASH_f() { return FastCall<Hash>(0xac9e255b209e388d); }
	BOOL SET_WARNING_MESSAGE_OPTION_ITEMS(int index, char* name, int cash, int rp, int lvl, int colour) { return Call<BOOL>(0x9afc8c8aca21806e, index, name, cash, rp, lvl, colour); }
	BOOL SET_WARNING_MESSAGE_OPTION_ITEMS_f(int index, char* name, int cash, int rp, int lvl, int colour) { return FastCall<BOOL>(0x9afc8c8aca21806e, index, name, cash, rp, lvl, colour); }
	BOOL SET_WARNING_MESSAGE_OPTION_HIGHLIGHT(Any p0) { return Call<BOOL>(0x797a56e139821662, p0); }
	BOOL SET_WARNING_MESSAGE_OPTION_HIGHLIGHT_f(Any p0) { return FastCall<BOOL>(0x797a56e139821662, p0); }
	void REMOVE_WARNING_MESSAGE_OPTION_ITEMS() { Call<void>(0xa13ba12e4798936c); }
	void REMOVE_WARNING_MESSAGE_OPTION_ITEMS_f() { FastCall<void>(0xa13ba12e4798936c); }
	BOOL IS_WARNING_MESSAGE_ACTIVE() { return Call<BOOL>(0x1fc1e175753d7436); }
	BOOL IS_WARNING_MESSAGE_ACTIVE_f() { return FastCall<BOOL>(0x1fc1e175753d7436); }
	void CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE() { Call<void>(0x6891ac9a15b2d6ab); }
	void CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE_f() { FastCall<void>(0x6891ac9a15b2d6ab); }
	void CUSTOM_MINIMAP_SET_ACTIVE(BOOL toggle) { Call<void>(0x62242e484e41502b, toggle); }
	void CUSTOM_MINIMAP_SET_ACTIVE_f(BOOL toggle) { FastCall<void>(0x62242e484e41502b, toggle); }
	void CUSTOM_MINIMAP_SET_BLIP_OBJECT(int spriteId) { Call<void>(0x4eaec1b0d40f7e48, spriteId); }
	void CUSTOM_MINIMAP_SET_BLIP_OBJECT_f(int spriteId) { FastCall<void>(0x4eaec1b0d40f7e48, spriteId); }
	int CUSTOM_MINIMAP_CREATE_BLIP(float x, float y, float z) { return Call<int>(0xe2342fd4a80a4acc, x, y, z); }
	int CUSTOM_MINIMAP_CREATE_BLIP_f(float x, float y, float z) { return FastCall<int>(0xe2342fd4a80a4acc, x, y, z); }
	void CUSTOM_MINIMAP_CLEAR_BLIPS() { Call<void>(0xe2339f8caf4f0568); }
	void CUSTOM_MINIMAP_CLEAR_BLIPS_f() { FastCall<void>(0xe2339f8caf4f0568); }
	BOOL FORCE_SONAR_BLIPS_THIS_FRAME() { return Call<BOOL>(0x4bec3e692cdc34d9); }
	BOOL FORCE_SONAR_BLIPS_THIS_FRAME_f() { return FastCall<BOOL>(0x4bec3e692cdc34d9); }
	Blip GET_NORTH_BLID_INDEX() { return Call<Blip>(0xa2223892e99e905b); }
	Blip GET_NORTH_BLID_INDEX_f() { return FastCall<Blip>(0xa2223892e99e905b); }
	void DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(BOOL toggle) { Call<void>(0x8de771edba338095, toggle); }
	void DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS_f(BOOL toggle) { FastCall<void>(0x8de771edba338095, toggle); }
	void DRAW_FRONTEND_BACKGROUND_THIS_FRAME() { Call<void>(0xa0a3b8d0ce41200b); }
	void DRAW_FRONTEND_BACKGROUND_THIS_FRAME_f() { FastCall<void>(0xa0a3b8d0ce41200b); }
	void DRAW_HUD_OVER_FADE_THIS_FRAME() { Call<void>(0xb6a94eb13df291a7); }
	void DRAW_HUD_OVER_FADE_THIS_FRAME_f() { FastCall<void>(0xb6a94eb13df291a7); }
	void ACTIVATE_FRONTEND_MENU(Hash menuhash, BOOL togglePause, int component) { Call<void>(0x93cf919bf980b520, menuhash, togglePause, component); }
	void ACTIVATE_FRONTEND_MENU_f(Hash menuhash, BOOL togglePause, int component) { FastCall<void>(0x93cf919bf980b520, menuhash, togglePause, component); }
	void RESTART_FRONTEND_MENU(Hash menuHash, int p1) { Call<void>(0x1afb5124fc42b11c, menuHash, p1); }
	void RESTART_FRONTEND_MENU_f(Hash menuHash, int p1) { FastCall<void>(0x1afb5124fc42b11c, menuHash, p1); }
	Hash GET_CURRENT_FRONTEND_MENU_VERSION() { return Call<Hash>(0xd3e6a3852c333936); }
	Hash GET_CURRENT_FRONTEND_MENU_VERSION_f() { return FastCall<Hash>(0xd3e6a3852c333936); }
	void SET_PAUSE_MENU_ACTIVE(BOOL toggle) { Call<void>(0x65752c0201c54240, toggle); }
	void SET_PAUSE_MENU_ACTIVE_f(BOOL toggle) { FastCall<void>(0x65752c0201c54240, toggle); }
	void DISABLE_FRONTEND_THIS_FRAME() { Call<void>(0x2b54fba071942cc2); }
	void DISABLE_FRONTEND_THIS_FRAME_f() { FastCall<void>(0x2b54fba071942cc2); }
	void SUPPRESS_FRONTEND_RENDERING_THIS_FRAME() { Call<void>(0x32244e577ec1a822); }
	void SUPPRESS_FRONTEND_RENDERING_THIS_FRAME_f() { FastCall<void>(0x32244e577ec1a822); }
	void ALLOW_PAUSE_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME() { Call<void>(0xd2cf1839f36b7b65); }
	void ALLOW_PAUSE_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME_f() { FastCall<void>(0xd2cf1839f36b7b65); }
	void SET_FRONTEND_ACTIVE(BOOL active) { Call<void>(0x83a8ef8b3fb92bd6, active); }
	void SET_FRONTEND_ACTIVE_f(BOOL active) { FastCall<void>(0x83a8ef8b3fb92bd6, active); }
	BOOL IS_PAUSE_MENU_ACTIVE() { return Call<BOOL>(0xe0203f44bd0aa128); }
	BOOL IS_PAUSE_MENU_ACTIVE_f() { return FastCall<BOOL>(0xe0203f44bd0aa128); }
	BOOL IS_STORE_PENDING_NETWORK_SHUTDOWN_TO_OPEN() { return Call<BOOL>(0x3f9b6e1363cc20f1); }
	BOOL IS_STORE_PENDING_NETWORK_SHUTDOWN_TO_OPEN_f() { return FastCall<BOOL>(0x3f9b6e1363cc20f1); }
	int GET_PAUSE_MENU_STATE() { return Call<int>(0x30af3ae25f4c2183); }
	int GET_PAUSE_MENU_STATE_f() { return FastCall<int>(0x30af3ae25f4c2183); }
	Vector3* GET_PAUSE_MENU_POSITION() { Call<Vector3*>(0x77b56d1bba7142d7); return GetVector(); }
	BOOL IS_PAUSE_MENU_RESTARTING() { return Call<BOOL>(0x4bb2ff88237b4495); }
	BOOL IS_PAUSE_MENU_RESTARTING_f() { return FastCall<BOOL>(0x4bb2ff88237b4495); }
	void FORCE_SCRIPTED_GFX_WHEN_FRONTEND_ACTIVE(char* p0) { Call<void>(0x7651bbd5b5d80f75, p0); }
	void FORCE_SCRIPTED_GFX_WHEN_FRONTEND_ACTIVE_f(char* p0) { FastCall<void>(0x7651bbd5b5d80f75, p0); }
	void PAUSE_MENUCEPTION_GO_DEEPER(int page) { Call<void>(0xf1e5827bd520f0eb, page); }
	void PAUSE_MENUCEPTION_GO_DEEPER_f(int page) { FastCall<void>(0xf1e5827bd520f0eb, page); }
	void PAUSE_MENUCEPTION_THE_KICK() { Call<void>(0xde834697b86702f9); }
	void PAUSE_MENUCEPTION_THE_KICK_f() { FastCall<void>(0xde834697b86702f9); }
	void PAUSE_TOGGLE_FULLSCREEN_MAP(Any p0) { Call<void>(0x4f5445959cf5e15a, p0); }
	void PAUSE_TOGGLE_FULLSCREEN_MAP_f(Any p0) { FastCall<void>(0x4f5445959cf5e15a, p0); }
	void PAUSE_MENU_ACTIVATE_CONTEXT(Hash contextHash) { Call<void>(0x83c0ee1c5806337a, contextHash); }
	void PAUSE_MENU_ACTIVATE_CONTEXT_f(Hash contextHash) { FastCall<void>(0x83c0ee1c5806337a, contextHash); }
	void PAUSE_MENU_DEACTIVATE_CONTEXT(Hash contextHash) { Call<void>(0x43213667cb09a83b, contextHash); }
	void PAUSE_MENU_DEACTIVATE_CONTEXT_f(Hash contextHash) { FastCall<void>(0x43213667cb09a83b, contextHash); }
	BOOL PAUSE_MENU_IS_CONTEXT_ACTIVE(Hash contextHash) { return Call<BOOL>(0x77b5c316c638c914, contextHash); }
	BOOL PAUSE_MENU_IS_CONTEXT_ACTIVE_f(Hash contextHash) { return FastCall<BOOL>(0x77b5c316c638c914, contextHash); }
	BOOL PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE() { return Call<BOOL>(0xf96c18399e58ac98); }
	BOOL PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE_f() { return FastCall<BOOL>(0xf96c18399e58ac98); }
	int PAUSE_MENU_GET_HAIR_COLOUR_INDEX() { return Call<int>(0x9665612f4eb22a1c); }
	int PAUSE_MENU_GET_HAIR_COLOUR_INDEX_f() { return FastCall<int>(0x9665612f4eb22a1c); }
	int PAUSE_MENU_GET_MOUSE_HOVER_INDEX() { return Call<int>(0x70f582ee48ab7f75); }
	int PAUSE_MENU_GET_MOUSE_HOVER_INDEX_f() { return FastCall<int>(0x70f582ee48ab7f75); }
	int PAUSE_MENU_GET_MOUSE_HOVER_UNIQUE_ID() { return Call<int>(0x2382654b0f69c58c); }
	int PAUSE_MENU_GET_MOUSE_HOVER_UNIQUE_ID_f() { return FastCall<int>(0x2382654b0f69c58c); }
	BOOL PAUSE_MENU_GET_MOUSE_CLICK_EVENT(Any* p0, Any* p1, Any* p2) { return Call<BOOL>(0x70e6a169b99b5c89, p0, p1, p2); }
	BOOL PAUSE_MENU_GET_MOUSE_CLICK_EVENT_f(Any* p0, Any* p1, Any* p2) { return FastCall<BOOL>(0x70e6a169b99b5c89, p0, p1, p2); }
	void PAUSE_MENU_REDRAW_INSTRUCTIONAL_BUTTONS(int p0) { Call<void>(0x55c491c57208b8aa, p0); }
	void PAUSE_MENU_REDRAW_INSTRUCTIONAL_BUTTONS_f(int p0) { FastCall<void>(0x55c491c57208b8aa, p0); }
	void PAUSE_MENU_SET_BUSY_SPINNER(BOOL p0, int position, int spinnerIndex) { Call<void>(0x7981fa73601cf3c7, p0, position, spinnerIndex); }
	void PAUSE_MENU_SET_BUSY_SPINNER_f(BOOL p0, int position, int spinnerIndex) { FastCall<void>(0x7981fa73601cf3c7, p0, position, spinnerIndex); }
	void PAUSE_MENU_SET_WARN_ON_TAB_CHANGE(BOOL p0) { Call<void>(0xcdb75aa2bbf40735, p0); }
	void PAUSE_MENU_SET_WARN_ON_TAB_CHANGE_f(BOOL p0) { FastCall<void>(0xcdb75aa2bbf40735, p0); }
	BOOL IS_FRONTEND_READY_FOR_CONTROL() { return Call<BOOL>(0x38ee6c68c8f38e33); }
	BOOL IS_FRONTEND_READY_FOR_CONTROL_f() { return FastCall<BOOL>(0x38ee6c68c8f38e33); }
	void TAKE_CONTROL_OF_FRONTEND() { Call<void>(0x4cd63d0c2cf753c0); }
	void TAKE_CONTROL_OF_FRONTEND_f() { FastCall<void>(0x4cd63d0c2cf753c0); }
	void RELEASE_CONTROL_OF_FRONTEND() { Call<void>(0xa0942139b6ef6b20); }
	void RELEASE_CONTROL_OF_FRONTEND_f() { FastCall<void>(0xa0942139b6ef6b20); }
	BOOL CODE_WANTS_SCRIPT_TO_TAKE_CONTROL() { return Call<BOOL>(0xb52ff0f172b0a5e3); }
	BOOL CODE_WANTS_SCRIPT_TO_TAKE_CONTROL_f() { return FastCall<BOOL>(0xb52ff0f172b0a5e3); }
	int GET_SCREEN_CODE_WANTS_SCRIPT_TO_CONTROL() { return Call<int>(0x5bec39c6d3de7089); }
	int GET_SCREEN_CODE_WANTS_SCRIPT_TO_CONTROL_f() { return FastCall<int>(0x5bec39c6d3de7089); }
	BOOL IS_NAVIGATING_MENU_CONTENT() { return Call<BOOL>(0x5ea7e1cd43ab5c15); }
	BOOL IS_NAVIGATING_MENU_CONTENT_f() { return FastCall<BOOL>(0x5ea7e1cd43ab5c15); }
	BOOL HAS_MENU_TRIGGER_EVENT_OCCURRED() { return Call<BOOL>(0x73aff1f924ce556c); }
	BOOL HAS_MENU_TRIGGER_EVENT_OCCURRED_f() { return FastCall<BOOL>(0x73aff1f924ce556c); }
	BOOL HAS_MENU_LAYOUT_CHANGED_EVENT_OCCURRED() { return Call<BOOL>(0xdf19b35ef6bc400f); }
	BOOL HAS_MENU_LAYOUT_CHANGED_EVENT_OCCURRED_f() { return FastCall<BOOL>(0xdf19b35ef6bc400f); }
	void SET_SAVEGAME_LIST_UNIQUE_ID(Any p0) { Call<void>(0x24a36388cc8f803b, p0); }
	void SET_SAVEGAME_LIST_UNIQUE_ID_f(Any p0) { FastCall<void>(0x24a36388cc8f803b, p0); }
	void GET_MENU_TRIGGER_EVENT_DETAILS(int* lastItemMenuId, int* selectedItemUniqueId) { Call<void>(0x9258cebd8ecdcebf, lastItemMenuId, selectedItemUniqueId); }
	void GET_MENU_TRIGGER_EVENT_DETAILS_f(int* lastItemMenuId, int* selectedItemUniqueId) { FastCall<void>(0x9258cebd8ecdcebf, lastItemMenuId, selectedItemUniqueId); }
	void GET_MENU_LAYOUT_CHANGED_EVENT_DETAILS(int* lastItemMenuId, int* selectedItemMenuId, int* selectedItemUniqueId) { Call<void>(0x53beb22cb0c063b4, lastItemMenuId, selectedItemMenuId, selectedItemUniqueId); }
	void GET_MENU_LAYOUT_CHANGED_EVENT_DETAILS_f(int* lastItemMenuId, int* selectedItemMenuId, int* selectedItemUniqueId) { FastCall<void>(0x53beb22cb0c063b4, lastItemMenuId, selectedItemMenuId, selectedItemUniqueId); }
	BOOL GET_PM_PLAYER_CREW_COLOR(int* r, int* g, int* b) { return Call<BOOL>(0x93ced0f876b5f2aa, r, g, b); }
	BOOL GET_PM_PLAYER_CREW_COLOR_f(int* r, int* g, int* b) { return FastCall<BOOL>(0x93ced0f876b5f2aa, r, g, b); }
	BOOL GET_MENU_PED_INT_STAT(Any p0, Any* p1) { return Call<BOOL>(0x8d557f1d10bfe82b, p0, p1); }
	BOOL GET_MENU_PED_INT_STAT_f(Any p0, Any* p1) { return FastCall<BOOL>(0x8d557f1d10bfe82b, p0, p1); }
	BOOL GET_CHARACTER_MENU_PED_INT_STAT(Any p0, Any* p1, Any p2) { return Call<BOOL>(0x69408599d9c3f3b5, p0, p1, p2); }
	BOOL GET_CHARACTER_MENU_PED_INT_STAT_f(Any p0, Any* p1, Any p2) { return FastCall<BOOL>(0x69408599d9c3f3b5, p0, p1, p2); }
	BOOL GET_MENU_PED_MASKED_INT_STAT(Hash statHash, int* outValue, int mask, BOOL p3) { return Call<BOOL>(0x7996545987c230b1, statHash, outValue, mask, p3); }
	BOOL GET_MENU_PED_MASKED_INT_STAT_f(Hash statHash, int* outValue, int mask, BOOL p3) { return FastCall<BOOL>(0x7996545987c230b1, statHash, outValue, mask, p3); }
	BOOL GET_CHARACTER_MENU_PED_MASKED_INT_STAT(Hash statHash, Any* outValue, int p2, int mask, BOOL p4) { return Call<BOOL>(0xf140007fe8df5e7, statHash, outValue, p2, mask, p4); }
	BOOL GET_CHARACTER_MENU_PED_MASKED_INT_STAT_f(Hash statHash, Any* outValue, int p2, int mask, BOOL p4) { return FastCall<BOOL>(0xf140007fe8df5e7, statHash, outValue, p2, mask, p4); }
	BOOL GET_MENU_PED_FLOAT_STAT(Hash statHash, float* outValue) { return Call<BOOL>(0x8df1e244a2f8981e, statHash, outValue); }
	BOOL GET_MENU_PED_FLOAT_STAT_f(Hash statHash, float* outValue) { return FastCall<BOOL>(0x8df1e244a2f8981e, statHash, outValue); }
	BOOL GET_CHARACTER_MENU_PED_FLOAT_STAT(float statHash, float* outValue, BOOL p2) { return Call<BOOL>(0x1b353cb33b27e928, statHash, outValue, p2); }
	BOOL GET_CHARACTER_MENU_PED_FLOAT_STAT_f(float statHash, float* outValue, BOOL p2) { return FastCall<BOOL>(0x1b353cb33b27e928, statHash, outValue, p2); }
	BOOL GET_MENU_PED_BOOL_STAT(Hash statHash, BOOL* outValue) { return Call<BOOL>(0x1d5a5f1c38fcf002, statHash, outValue); }
	BOOL GET_MENU_PED_BOOL_STAT_f(Hash statHash, BOOL* outValue) { return FastCall<BOOL>(0x1d5a5f1c38fcf002, statHash, outValue); }
	void CLEAR_PED_IN_PAUSE_MENU() { Call<void>(0xa7cb37f0cbe7f0a0); }
	void CLEAR_PED_IN_PAUSE_MENU_f() { FastCall<void>(0xa7cb37f0cbe7f0a0); }
	void GIVE_PED_TO_PAUSE_MENU(Ped ped, int p1) { Call<void>(0x43715223c8a6916e, ped, p1); }
	void GIVE_PED_TO_PAUSE_MENU_f(Ped ped, int p1) { FastCall<void>(0x43715223c8a6916e, ped, p1); }
	void SET_PAUSE_MENU_PED_LIGHTING(BOOL state) { Call<void>(0xbb5cb7b1c76a4816, state); }
	void SET_PAUSE_MENU_PED_LIGHTING_f(BOOL state) { FastCall<void>(0xbb5cb7b1c76a4816, state); }
	void SET_PAUSE_MENU_PED_SLEEP_STATE(BOOL state) { Call<void>(0x8ab961fa0a4a979f, state); }
	void SET_PAUSE_MENU_PED_SLEEP_STATE_f(BOOL state) { FastCall<void>(0x8ab961fa0a4a979f, state); }
	void OPEN_ONLINE_POLICIES_MENU() { Call<void>(0xb78f3473808a54d7); }
	void OPEN_ONLINE_POLICIES_MENU_f() { FastCall<void>(0xb78f3473808a54d7); }
	BOOL ARE_ONLINE_POLICIES_UP_TO_DATE() { return Call<BOOL>(0xb8b02e6ecc0c1c9c); }
	BOOL ARE_ONLINE_POLICIES_UP_TO_DATE_f() { return FastCall<BOOL>(0xb8b02e6ecc0c1c9c); }
	BOOL IS_ONLINE_POLICIES_MENU_ACTIVE() { return Call<BOOL>(0x4cb851d526de264e); }
	BOOL IS_ONLINE_POLICIES_MENU_ACTIVE_f() { return FastCall<BOOL>(0x4cb851d526de264e); }
	void OPEN_SOCIAL_CLUB_MENU(Hash menu) { Call<void>(0x54804fa1000c6e4b, menu); }
	void OPEN_SOCIAL_CLUB_MENU_f(Hash menu) { FastCall<void>(0x54804fa1000c6e4b, menu); }
	void CLOSE_SOCIAL_CLUB_MENU() { Call<void>(0xecf277077dcff47d); }
	void CLOSE_SOCIAL_CLUB_MENU_f() { FastCall<void>(0xecf277077dcff47d); }
	void SET_SOCIAL_CLUB_TOUR(char* name) { Call<void>(0x6cc6a86a6f2cd04c, name); }
	void SET_SOCIAL_CLUB_TOUR_f(char* name) { FastCall<void>(0x6cc6a86a6f2cd04c, name); }
	BOOL IS_SOCIAL_CLUB_ACTIVE() { return Call<BOOL>(0x30758c9fe38ab212); }
	BOOL IS_SOCIAL_CLUB_ACTIVE_f() { return FastCall<BOOL>(0x30758c9fe38ab212); }
	void SET_TEXT_INPUT_BOX_ENABLED(BOOL p0) { Call<void>(0x62c4f8130abffd83, p0); }
	void SET_TEXT_INPUT_BOX_ENABLED_f(BOOL p0) { FastCall<void>(0x62c4f8130abffd83, p0); }
	void FORCE_CLOSE_TEXT_INPUT_BOX() { Call<void>(0x3f0ac30d9abff13f); }
	void FORCE_CLOSE_TEXT_INPUT_BOX_f() { FastCall<void>(0x3f0ac30d9abff13f); }
	void SET_ALLOW_COMMA_ON_TEXT_INPUT(Any p0) { Call<void>(0xddda48413708849b, p0); }
	void SET_ALLOW_COMMA_ON_TEXT_INPUT_f(Any p0) { FastCall<void>(0xddda48413708849b, p0); }
	void OVERRIDE_MP_TEXT_CHAT_TEAM_STRING(Hash gxtEntryHash) { Call<void>(0xd42548d79215, gxtEntryHash); }
	void OVERRIDE_MP_TEXT_CHAT_TEAM_STRING_f(Hash gxtEntryHash) { FastCall<void>(0xd42548d79215, gxtEntryHash); }
	BOOL IS_MP_TEXT_CHAT_TYPING() { return Call<BOOL>(0x8268ea4e3b6848b3); }
	BOOL IS_MP_TEXT_CHAT_TYPING_f() { return FastCall<BOOL>(0x8268ea4e3b6848b3); }
	void CLOSE_MP_TEXT_CHAT() { Call<void>(0x89d41e626f4c9295); }
	void CLOSE_MP_TEXT_CHAT_f() { FastCall<void>(0x89d41e626f4c9295); }
	void MP_TEXT_CHAT_IS_TEAM_JOB(Any p0) { Call<void>(0x945dbf10d9af32ff, p0); }
	void MP_TEXT_CHAT_IS_TEAM_JOB_f(Any p0) { FastCall<void>(0x945dbf10d9af32ff, p0); }
	void OVERRIDE_MP_TEXT_CHAT_COLOR(int p0, int hudColor) { Call<void>(0x96d617a3113c36a5, p0, hudColor); }
	void OVERRIDE_MP_TEXT_CHAT_COLOR_f(int p0, int hudColor) { FastCall<void>(0x96d617a3113c36a5, p0, hudColor); }
	void MP_TEXT_CHAT_DISABLE(BOOL toggle) { Call<void>(0xee66722c55d2b717, toggle); }
	void MP_TEXT_CHAT_DISABLE_f(BOOL toggle) { FastCall<void>(0xee66722c55d2b717, toggle); }
	void FLAG_PLAYER_CONTEXT_IN_TOURNAMENT(BOOL toggle) { Call<void>(0xa2587367fd22a3a8, toggle); }
	void FLAG_PLAYER_CONTEXT_IN_TOURNAMENT_f(BOOL toggle) { FastCall<void>(0xa2587367fd22a3a8, toggle); }
	void SET_PED_HAS_AI_BLIP(Ped ped, BOOL hasCone) { Call<void>(0x3326085c7798ca96, ped, hasCone); }
	void SET_PED_HAS_AI_BLIP_f(Ped ped, BOOL hasCone) { FastCall<void>(0x3326085c7798ca96, ped, hasCone); }
	void SET_PED_HAS_AI_BLIP_WITH_COLOUR(Ped ped, BOOL hasCone, int color) { Call<void>(0x1ec7f1330b20b33c, ped, hasCone, color); }
	void SET_PED_HAS_AI_BLIP_WITH_COLOUR_f(Ped ped, BOOL hasCone, int color) { FastCall<void>(0x1ec7f1330b20b33c, ped, hasCone, color); }
	BOOL DOES_PED_HAVE_AI_BLIP(Ped ped) { return Call<BOOL>(0x22601c2fa02c8327, ped); }
	BOOL DOES_PED_HAVE_AI_BLIP_f(Ped ped) { return FastCall<BOOL>(0x22601c2fa02c8327, ped); }
	void SET_PED_AI_BLIP_GANG_ID(Ped ped, int gangId) { Call<void>(0x78fc3a6a5f8b6163, ped, gangId); }
	void SET_PED_AI_BLIP_GANG_ID_f(Ped ped, int gangId) { FastCall<void>(0x78fc3a6a5f8b6163, ped, gangId); }
	void SET_PED_AI_BLIP_HAS_CONE(Ped ped, BOOL toggle) { Call<void>(0xa68b12e8038fc4ac, ped, toggle); }
	void SET_PED_AI_BLIP_HAS_CONE_f(Ped ped, BOOL toggle) { FastCall<void>(0xa68b12e8038fc4ac, ped, toggle); }
	void SET_PED_AI_BLIP_FORCED_ON(Ped ped, BOOL toggle) { Call<void>(0x2ad748e48f99eaa1, ped, toggle); }
	void SET_PED_AI_BLIP_FORCED_ON_f(Ped ped, BOOL toggle) { FastCall<void>(0x2ad748e48f99eaa1, ped, toggle); }
	void SET_PED_AI_BLIP_NOTICE_RANGE(Ped ped, float range) { Call<void>(0x75bdf9960d7319da, ped, range); }
	void SET_PED_AI_BLIP_NOTICE_RANGE_f(Ped ped, float range) { FastCall<void>(0x75bdf9960d7319da, ped, range); }
	void SET_PED_AI_BLIP_SPRITE(Ped ped, int spriteId) { Call<void>(0x4e39af4dd653dea9, ped, spriteId); }
	void SET_PED_AI_BLIP_SPRITE_f(Ped ped, int spriteId) { FastCall<void>(0x4e39af4dd653dea9, ped, spriteId); }
	Blip GET_AI_PED_PED_BLIP_INDEX(Ped ped) { return Call<Blip>(0x2f8b0ca4d1d509b2, ped); }
	Blip GET_AI_PED_PED_BLIP_INDEX_f(Ped ped) { return FastCall<Blip>(0x2f8b0ca4d1d509b2, ped); }
	Blip GET_AI_PED_VEHICLE_BLIP_INDEX(Ped ped) { return Call<Blip>(0x9bc63635fcd9b075, ped); }
	Blip GET_AI_PED_VEHICLE_BLIP_INDEX_f(Ped ped) { return FastCall<Blip>(0x9bc63635fcd9b075, ped); }
	BOOL HAS_DIRECTOR_MODE_BEEN_LAUNCHED_BY_CODE() { return Call<BOOL>(0x1f5275b5e0c8cc8d); }
	BOOL HAS_DIRECTOR_MODE_BEEN_LAUNCHED_BY_CODE_f() { return FastCall<BOOL>(0x1f5275b5e0c8cc8d); }
	void SET_DIRECTOR_MODE_LAUNCHED_BY_SCRIPT() { Call<void>(0xa4bda2d4f7dc920c); }
	void SET_DIRECTOR_MODE_LAUNCHED_BY_SCRIPT_f() { FastCall<void>(0xa4bda2d4f7dc920c); }
	void SET_PLAYER_IS_IN_DIRECTOR_MODE(BOOL toggle) { Call<void>(0xf0d62c74307fc710, toggle); }
	void SET_PLAYER_IS_IN_DIRECTOR_MODE_f(BOOL toggle) { FastCall<void>(0xf0d62c74307fc710, toggle); }
	void SET_DIRECTOR_MODE_AVAILABLE(BOOL toggle) { Call<void>(0xd7b9f6fc2bcf9723, toggle); }
	void SET_DIRECTOR_MODE_AVAILABLE_f(BOOL toggle) { FastCall<void>(0xd7b9f6fc2bcf9723, toggle); }
	void HIDE_HUDMARKERS_THIS_FRAME() { Call<void>(0xecf0c6e3a3db6aec); }
	void HIDE_HUDMARKERS_THIS_FRAME_f() { FastCall<void>(0xecf0c6e3a3db6aec); }
}
namespace INTERIOR
{
	float GET_INTERIOR_HEADING(Interior interior) { return ToFloat(Call<_float>(0x58d4bd3be8b6083c, interior)); }
	float GET_INTERIOR_HEADING_f(Interior interior) { return ToFloat(FastCall<_float>(0x58d4bd3be8b6083c, interior)); }
	void GET_INTERIOR_LOCATION_AND_NAMEHASH(Interior interior, Vector3* position, Hash* nameHash) { Call<void>(0xdeee173f2e040c5, interior, position, nameHash); }
	void GET_INTERIOR_LOCATION_AND_NAMEHASH_f(Interior interior, Vector3* position, Hash* nameHash) { FastCall<void>(0xdeee173f2e040c5, interior, position, nameHash); }
	int GET_INTERIOR_GROUP_ID(Interior interior) { return Call<int>(0xc1c2ea3d8eb1abe1, interior); }
	int GET_INTERIOR_GROUP_ID_f(Interior interior) { return FastCall<int>(0xc1c2ea3d8eb1abe1, interior); }
	Vector3* GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(Interior interior, float x, float y, float z) { Call<Vector3*>(0x2c9ca56524343d88, interior, x, y, z); return GetVector(); }
	BOOL IS_INTERIOR_SCENE() { return Call<BOOL>(0xef5c7e8d6553d0d2); }
	BOOL IS_INTERIOR_SCENE_f() { return FastCall<BOOL>(0xef5c7e8d6553d0d2); }
	BOOL IS_VALID_INTERIOR(Interior interior) { return Call<BOOL>(0x93ad79c4e26f0268, interior); }
	BOOL IS_VALID_INTERIOR_f(Interior interior) { return FastCall<BOOL>(0x93ad79c4e26f0268, interior); }
	void CLEAR_ROOM_FOR_ENTITY(Entity entity) { Call<void>(0x8fdce8f489fed40b, entity); }
	void CLEAR_ROOM_FOR_ENTITY_f(Entity entity) { FastCall<void>(0x8fdce8f489fed40b, entity); }
	void FORCE_ROOM_FOR_ENTITY(Entity entity, Interior interior, Hash roomHashKey) { Call<void>(0xcd9dc61b48d9aca9, entity, interior, roomHashKey); }
	void FORCE_ROOM_FOR_ENTITY_f(Entity entity, Interior interior, Hash roomHashKey) { FastCall<void>(0xcd9dc61b48d9aca9, entity, interior, roomHashKey); }
	Hash GET_ROOM_KEY_FROM_ENTITY(Entity entity) { return Call<Hash>(0xf84409ef0b2bca1d, entity); }
	Hash GET_ROOM_KEY_FROM_ENTITY_f(Entity entity) { return FastCall<Hash>(0xf84409ef0b2bca1d, entity); }
	Hash GET_KEY_FOR_ENTITY_IN_ROOM(Entity entity) { return Call<Hash>(0x43b4772dab5a0ed8, entity); }
	Hash GET_KEY_FOR_ENTITY_IN_ROOM_f(Entity entity) { return FastCall<Hash>(0x43b4772dab5a0ed8, entity); }
	Interior GET_INTERIOR_FROM_ENTITY(Entity entity) { return Call<Interior>(0x3975e7dd8f50f372, entity); }
	Interior GET_INTERIOR_FROM_ENTITY_f(Entity entity) { return FastCall<Interior>(0x3975e7dd8f50f372, entity); }
	void RETAIN_ENTITY_IN_INTERIOR(Entity entity, Interior interior) { Call<void>(0x966c885a90aa32a8, entity, interior); }
	void RETAIN_ENTITY_IN_INTERIOR_f(Entity entity, Interior interior) { FastCall<void>(0x966c885a90aa32a8, entity, interior); }
	void CLEAR_INTERIOR_STATE_OF_ENTITY(Entity entity) { Call<void>(0xb9ce3806fab2d640, entity); }
	void CLEAR_INTERIOR_STATE_OF_ENTITY_f(Entity entity) { FastCall<void>(0xb9ce3806fab2d640, entity); }
	void FORCE_ACTIVATING_TRACKING_ON_ENTITY(Any p0, Any p1) { Call<void>(0xc2eddb8c4a2bf3f6, p0, p1); }
	void FORCE_ACTIVATING_TRACKING_ON_ENTITY_f(Any p0, Any p1) { FastCall<void>(0xc2eddb8c4a2bf3f6, p0, p1); }
	void FORCE_ROOM_FOR_GAME_VIEWPORT(int interiorID, Hash roomHashKey) { Call<void>(0x19135f1cec0f86cd, interiorID, roomHashKey); }
	void FORCE_ROOM_FOR_GAME_VIEWPORT_f(int interiorID, Hash roomHashKey) { FastCall<void>(0x19135f1cec0f86cd, interiorID, roomHashKey); }
	void SET_ROOM_FOR_GAME_VIEWPORT_BY_NAME(char* roomName) { Call<void>(0x256c975a749635aa, roomName); }
	void SET_ROOM_FOR_GAME_VIEWPORT_BY_NAME_f(char* roomName) { FastCall<void>(0x256c975a749635aa, roomName); }
	void SET_ROOM_FOR_GAME_VIEWPORT_BY_KEY(Hash roomHashKey) { Call<void>(0x8d9825ea24caff40, roomHashKey); }
	void SET_ROOM_FOR_GAME_VIEWPORT_BY_KEY_f(Hash roomHashKey) { FastCall<void>(0x8d9825ea24caff40, roomHashKey); }
	Hash GET_ROOM_KEY_FOR_GAME_VIEWPORT() { return Call<Hash>(0xeead69cb0be26d82); }
	Hash GET_ROOM_KEY_FOR_GAME_VIEWPORT_f() { return FastCall<Hash>(0xeead69cb0be26d82); }
	void CLEAR_ROOM_FOR_GAME_VIEWPORT() { Call<void>(0xb917325b1953ad2b); }
	void CLEAR_ROOM_FOR_GAME_VIEWPORT_f() { FastCall<void>(0xb917325b1953ad2b); }
	Interior GET_INTERIOR_FROM_PRIMARY_VIEW() { return Call<Interior>(0x1976b8fddb742331); }
	Interior GET_INTERIOR_FROM_PRIMARY_VIEW_f() { return FastCall<Interior>(0x1976b8fddb742331); }
	Interior GET_INTERIOR_AT_COORDS(float x, float y, float z) { return Call<Interior>(0x769a58dccd42cd84, x, y, z); }
	Interior GET_INTERIOR_AT_COORDS_f(float x, float y, float z) { return FastCall<Interior>(0x769a58dccd42cd84, x, y, z); }
	void ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(Pickup pickup, char* roomName) { Call<void>(0x5fec06df266dca1f, pickup, roomName); }
	void ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME_f(Pickup pickup, char* roomName) { FastCall<void>(0x5fec06df266dca1f, pickup, roomName); }
	void PIN_INTERIOR_IN_MEMORY(Interior interior) { Call<void>(0xd97841ed8fee3096, interior); }
	void PIN_INTERIOR_IN_MEMORY_f(Interior interior) { FastCall<void>(0xd97841ed8fee3096, interior); }
	void UNPIN_INTERIOR(Interior interior) { Call<void>(0xf4eb12e84bb5e253, interior); }
	void UNPIN_INTERIOR_f(Interior interior) { FastCall<void>(0xf4eb12e84bb5e253, interior); }
	BOOL IS_INTERIOR_READY(Interior interior) { return Call<BOOL>(0xef5c7e8d654691e9, interior); }
	BOOL IS_INTERIOR_READY_f(Interior interior) { return FastCall<BOOL>(0xef5c7e8d654691e9, interior); }
	BOOL SET_INTERIOR_IN_USE(Interior interior) { return Call<BOOL>(0x85cbc9a5215ccabf, interior); }
	BOOL SET_INTERIOR_IN_USE_f(Interior interior) { return FastCall<BOOL>(0x85cbc9a5215ccabf, interior); }
	Interior GET_INTERIOR_AT_COORDS_WITH_TYPE(float x, float y, float z, char* interiorType) { return Call<Interior>(0x5755ce181155d618, x, y, z, interiorType); }
	Interior GET_INTERIOR_AT_COORDS_WITH_TYPE_f(float x, float y, float z, char* interiorType) { return FastCall<Interior>(0x5755ce181155d618, x, y, z, interiorType); }
	Interior GET_INTERIOR_AT_COORDS_WITH_TYPEHASH(float x, float y, float z, Hash typeHash) { return Call<Interior>(0xfd11f66127eec326, x, y, z, typeHash); }
	Interior GET_INTERIOR_AT_COORDS_WITH_TYPEHASH_f(float x, float y, float z, Hash typeHash) { return FastCall<Interior>(0xfd11f66127eec326, x, y, z, typeHash); }
	void ACTIVATE_INTERIOR_GROUPS_USING_CAMERA() { Call<void>(0x91d4957dc005b6a8); }
	void ACTIVATE_INTERIOR_GROUPS_USING_CAMERA_f() { FastCall<void>(0x91d4957dc005b6a8); }
	BOOL IS_COLLISION_MARKED_OUTSIDE(float x, float y, float z) { return Call<BOOL>(0x1d28233f8ae322b4, x, y, z); }
	BOOL IS_COLLISION_MARKED_OUTSIDE_f(float x, float y, float z) { return FastCall<BOOL>(0x1d28233f8ae322b4, x, y, z); }
	Interior GET_INTERIOR_FROM_COLLISION(float x, float y, float z) { return Call<Interior>(0xbfd16ea07a025d23, x, y, z); }
	Interior GET_INTERIOR_FROM_COLLISION_f(float x, float y, float z) { return FastCall<Interior>(0xbfd16ea07a025d23, x, y, z); }
	void ENABLE_STADIUM_PROBES_THIS_FRAME(BOOL toggle) { Call<void>(0x3d053e3dafbc6fca, toggle); }
	void ENABLE_STADIUM_PROBES_THIS_FRAME_f(BOOL toggle) { FastCall<void>(0x3d053e3dafbc6fca, toggle); }
	void ACTIVATE_INTERIOR_ENTITY_SET(Interior interior, char* entitySetName) { Call<void>(0x1a4485a85113a89, interior, entitySetName); }
	void ACTIVATE_INTERIOR_ENTITY_SET_f(Interior interior, char* entitySetName) { FastCall<void>(0x1a4485a85113a89, interior, entitySetName); }
	void DEACTIVATE_INTERIOR_ENTITY_SET(Interior interior, char* entitySetName) { Call<void>(0xffb37d67d577678a, interior, entitySetName); }
	void DEACTIVATE_INTERIOR_ENTITY_SET_f(Interior interior, char* entitySetName) { FastCall<void>(0xffb37d67d577678a, interior, entitySetName); }
	BOOL IS_INTERIOR_ENTITY_SET_ACTIVE(Interior interior, char* entitySetName) { return Call<BOOL>(0x228b77d57bbccae5, interior, entitySetName); }
	BOOL IS_INTERIOR_ENTITY_SET_ACTIVE_f(Interior interior, char* entitySetName) { return FastCall<BOOL>(0x228b77d57bbccae5, interior, entitySetName); }
	void SET_INTERIOR_ENTITY_SET_TINT_INDEX(Interior interior, char* entitySetName, int color) { Call<void>(0x8c95d7424c64acb5, interior, entitySetName, color); }
	void SET_INTERIOR_ENTITY_SET_TINT_INDEX_f(Interior interior, char* entitySetName, int color) { FastCall<void>(0x8c95d7424c64acb5, interior, entitySetName, color); }
	void REFRESH_INTERIOR(Interior interior) { Call<void>(0x10c0b46e05341ab4, interior); }
	void REFRESH_INTERIOR_f(Interior interior) { FastCall<void>(0x10c0b46e05341ab4, interior); }
	void ENABLE_EXTERIOR_CULL_MODEL_THIS_FRAME(Hash mapObjectHash) { Call<void>(0x5f0949803b672e0a, mapObjectHash); }
	void ENABLE_EXTERIOR_CULL_MODEL_THIS_FRAME_f(Hash mapObjectHash) { FastCall<void>(0x5f0949803b672e0a, mapObjectHash); }
	void ENABLE_SHADOW_CULL_MODEL_THIS_FRAME(Hash mapObjectHash) { Call<void>(0x53e184220994e1ec, mapObjectHash); }
	void ENABLE_SHADOW_CULL_MODEL_THIS_FRAME_f(Hash mapObjectHash) { FastCall<void>(0x53e184220994e1ec, mapObjectHash); }
	void DISABLE_INTERIOR(Interior interior, BOOL toggle) { Call<void>(0xead75386b2054947, interior, toggle); }
	void DISABLE_INTERIOR_f(Interior interior, BOOL toggle) { FastCall<void>(0xead75386b2054947, interior, toggle); }
	BOOL IS_INTERIOR_DISABLED(Interior interior) { return Call<BOOL>(0xbcab0803d319d856, interior); }
	BOOL IS_INTERIOR_DISABLED_f(Interior interior) { return FastCall<BOOL>(0xbcab0803d319d856, interior); }
	void CAP_INTERIOR(Interior interior, BOOL toggle) { Call<void>(0x18651c0b7e8ddb9d, interior, toggle); }
	void CAP_INTERIOR_f(Interior interior, BOOL toggle) { FastCall<void>(0x18651c0b7e8ddb9d, interior, toggle); }
	BOOL IS_INTERIOR_CAPPED(Interior interior) { return Call<BOOL>(0xfc33531f29c19857, interior); }
	BOOL IS_INTERIOR_CAPPED_f(Interior interior) { return FastCall<BOOL>(0xfc33531f29c19857, interior); }
	void DISABLE_METRO_SYSTEM(BOOL toggle) { Call<void>(0x41aed5a7f5d9d44c, toggle); }
	void DISABLE_METRO_SYSTEM_f(BOOL toggle) { FastCall<void>(0x41aed5a7f5d9d44c, toggle); }
	void SET_IS_EXTERIOR_ONLY(Entity entity, BOOL toggle) { Call<void>(0xf0ed8b22e0088c95, entity, toggle); }
	void SET_IS_EXTERIOR_ONLY_f(Entity entity, BOOL toggle) { FastCall<void>(0xf0ed8b22e0088c95, entity, toggle); }
}
namespace ITEMSET
{
	ScrHandle CREATE_ITEMSET(BOOL p0) { return Call<ScrHandle>(0x492ac117b800100c, p0); }
	ScrHandle CREATE_ITEMSET_f(BOOL p0) { return FastCall<ScrHandle>(0x492ac117b800100c, p0); }
	void DESTROY_ITEMSET(ScrHandle itemset) { Call<void>(0x4f66458a6f08e8ea, itemset); }
	void DESTROY_ITEMSET_f(ScrHandle itemset) { FastCall<void>(0x4f66458a6f08e8ea, itemset); }
	BOOL IS_ITEMSET_VALID(ScrHandle itemset) { return Call<BOOL>(0xc79ad5b47fcf5d97, itemset); }
	BOOL IS_ITEMSET_VALID_f(ScrHandle itemset) { return FastCall<BOOL>(0xc79ad5b47fcf5d97, itemset); }
	BOOL ADD_TO_ITEMSET(ScrHandle item, ScrHandle itemset) { return Call<BOOL>(0xa6601a01ee1c509, item, itemset); }
	BOOL ADD_TO_ITEMSET_f(ScrHandle item, ScrHandle itemset) { return FastCall<BOOL>(0xa6601a01ee1c509, item, itemset); }
	void REMOVE_FROM_ITEMSET(ScrHandle item, ScrHandle itemset) { Call<void>(0x2c434dbd4aaef095, item, itemset); }
	void REMOVE_FROM_ITEMSET_f(ScrHandle item, ScrHandle itemset) { FastCall<void>(0x2c434dbd4aaef095, item, itemset); }
	int GET_ITEMSET_SIZE(ScrHandle itemset) { return Call<int>(0x8f24afc268d9985a, itemset); }
	int GET_ITEMSET_SIZE_f(ScrHandle itemset) { return FastCall<int>(0x8f24afc268d9985a, itemset); }
	ScrHandle GET_INDEXED_ITEM_IN_ITEMSET(int index, ScrHandle itemset) { return Call<ScrHandle>(0x63fe77c4a802526a, index, itemset); }
	ScrHandle GET_INDEXED_ITEM_IN_ITEMSET_f(int index, ScrHandle itemset) { return FastCall<ScrHandle>(0x63fe77c4a802526a, index, itemset); }
	BOOL IS_IN_ITEMSET(ScrHandle item, ScrHandle itemset) { return Call<BOOL>(0x3c56e8e5ce1d196a, item, itemset); }
	BOOL IS_IN_ITEMSET_f(ScrHandle item, ScrHandle itemset) { return FastCall<BOOL>(0x3c56e8e5ce1d196a, item, itemset); }
	void CLEAN_ITEMSET(ScrHandle itemset) { Call<void>(0xf7fc85fd3fa9bc39, itemset); }
	void CLEAN_ITEMSET_f(ScrHandle itemset) { FastCall<void>(0xf7fc85fd3fa9bc39, itemset); }
}
namespace LOADINGSCREEN
{
	BOOL LOBBY_AUTO_MULTIPLAYER_MENU() { return Call<BOOL>(0xa3de59015de41e0b); }
	BOOL LOBBY_AUTO_MULTIPLAYER_MENU_f() { return FastCall<BOOL>(0xa3de59015de41e0b); }
	BOOL LOBBY_AUTO_MULTIPLAYER_FREEMODE() { return Call<BOOL>(0x6b1d1b6f3bb004bb); }
	BOOL LOBBY_AUTO_MULTIPLAYER_FREEMODE_f() { return FastCall<BOOL>(0x6b1d1b6f3bb004bb); }
	void LOBBY_SET_AUTO_MULTIPLAYER(BOOL toggle) { Call<void>(0x36e9ed242907cdf0, toggle); }
	void LOBBY_SET_AUTO_MULTIPLAYER_f(BOOL toggle) { FastCall<void>(0x36e9ed242907cdf0, toggle); }
	BOOL LOBBY_AUTO_MULTIPLAYER_EVENT() { return Call<BOOL>(0xd7ecc72a5e367f4e); }
	BOOL LOBBY_AUTO_MULTIPLAYER_EVENT_f() { return FastCall<BOOL>(0xd7ecc72a5e367f4e); }
	void LOBBY_SET_AUTO_MULTIPLAYER_EVENT(BOOL toggle) { Call<void>(0x41defe7ba322776b, toggle); }
	void LOBBY_SET_AUTO_MULTIPLAYER_EVENT_f(BOOL toggle) { FastCall<void>(0x41defe7ba322776b, toggle); }
	BOOL LOBBY_AUTO_MULTIPLAYER_RANDOM_JOB() { return Call<BOOL>(0x184510282005edcd); }
	BOOL LOBBY_AUTO_MULTIPLAYER_RANDOM_JOB_f() { return FastCall<BOOL>(0x184510282005edcd); }
	void LOBBY_SET_AUTO_MP_RANDOM_JOB(BOOL toggle) { Call<void>(0x2296f98402690973, toggle); }
	void LOBBY_SET_AUTO_MP_RANDOM_JOB_f(BOOL toggle) { FastCall<void>(0x2296f98402690973, toggle); }
	void SHUTDOWN_SESSION_CLEARS_AUTO_MULTIPLAYER(BOOL toggle) { Call<void>(0x7f22ee7b5e871d51, toggle); }
	void SHUTDOWN_SESSION_CLEARS_AUTO_MULTIPLAYER_f(BOOL toggle) { FastCall<void>(0x7f22ee7b5e871d51, toggle); }
}
namespace LOCALIZATION
{
	int LOCALIZATION_GET_SYSTEM_LANGUAGE() { return Call<int>(0xb684fe55e61d05b9); }
	int LOCALIZATION_GET_SYSTEM_LANGUAGE_f() { return FastCall<int>(0xb684fe55e61d05b9); }
	int GET_CURRENT_LANGUAGE() { return Call<int>(0x26139c3526474167); }
	int GET_CURRENT_LANGUAGE_f() { return FastCall<int>(0x26139c3526474167); }
	int LOCALIZATION_GET_SYSTEM_DATE_TYPE() { return Call<int>(0x1a1ac63375f1beea); }
	int LOCALIZATION_GET_SYSTEM_DATE_TYPE_f() { return FastCall<int>(0x1a1ac63375f1beea); }
}
namespace MISC
{
	int GET_ALLOCATED_STACK_SIZE() { return Call<int>(0x3446ec5ef6ef9b79); }
	int GET_ALLOCATED_STACK_SIZE_f() { return FastCall<int>(0x3446ec5ef6ef9b79); }
	int GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE(int stackSize) { return Call<int>(0x805d0898b327d236, stackSize); }
	int GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE_f(int stackSize) { return FastCall<int>(0x805d0898b327d236, stackSize); }
	void SET_RANDOM_SEED(int seed) { Call<void>(0xe0d04fc67938f3f0, seed); }
	void SET_RANDOM_SEED_f(int seed) { FastCall<void>(0xe0d04fc67938f3f0, seed); }
	void SET_TIME_SCALE(float timeScale) { Call<void>(0xee7a8b6de2946955, timeScale); }
	void SET_TIME_SCALE_f(float timeScale) { FastCall<void>(0xee7a8b6de2946955, timeScale); }
	void SET_MISSION_FLAG(BOOL toggle) { Call<void>(0x378e1ff582314b3c, toggle); }
	void SET_MISSION_FLAG_f(BOOL toggle) { FastCall<void>(0x378e1ff582314b3c, toggle); }
	BOOL GET_MISSION_FLAG() { return Call<BOOL>(0x906f1066ef5ae4c8); }
	BOOL GET_MISSION_FLAG_f() { return FastCall<BOOL>(0x906f1066ef5ae4c8); }
	void SET_RANDOM_EVENT_FLAG(BOOL toggle) { Call<void>(0x14363697f3868450, toggle); }
	void SET_RANDOM_EVENT_FLAG_f(BOOL toggle) { FastCall<void>(0x14363697f3868450, toggle); }
	BOOL GET_RANDOM_EVENT_FLAG() { return Call<BOOL>(0x93f92bff5c5b0244); }
	BOOL GET_RANDOM_EVENT_FLAG_f() { return FastCall<BOOL>(0x93f92bff5c5b0244); }
	char* GET_CONTENT_TO_LOAD() { Call<char*>(0x5065266b4746fb3b); }
	char* GET_CONTENT_TO_LOAD_f() { FastCall<char*>(0x5065266b4746fb3b); }
	void ACTIVITY_FEED_CREATE(char* p0, char* p1) { Call<void>(0xe0c2c199a2cde98d, p0, p1); }
	void ACTIVITY_FEED_CREATE_f(char* p0, char* p1) { FastCall<void>(0xe0c2c199a2cde98d, p0, p1); }
	void ACTIVITY_FEED_ADD_SUBSTRING_TO_CAPTION(char* p0) { Call<void>(0x61ee7fa97cb3461f, p0); }
	void ACTIVITY_FEED_ADD_SUBSTRING_TO_CAPTION_f(char* p0) { FastCall<void>(0x61ee7fa97cb3461f, p0); }
	void ACTIVITY_FEED_ADD_LITERAL_SUBSTRING_TO_CAPTION(char* p0) { Call<void>(0x4649aafe8b54b4cf, p0); }
	void ACTIVITY_FEED_ADD_LITERAL_SUBSTRING_TO_CAPTION_f(char* p0) { FastCall<void>(0x4649aafe8b54b4cf, p0); }
	void ACTIVITY_FEED_ADD_INT_TO_CAPTION(Any p0) { Call<void>(0x6e49625960d80101, p0); }
	void ACTIVITY_FEED_ADD_INT_TO_CAPTION_f(Any p0) { FastCall<void>(0x6e49625960d80101, p0); }
	void ACTIVITY_FEED_LARGE_IMAGE_URL(char* p0) { Call<void>(0x7d8b85af93ec2ab6, p0); }
	void ACTIVITY_FEED_LARGE_IMAGE_URL_f(char* p0) { FastCall<void>(0x7d8b85af93ec2ab6, p0); }
	void ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE(char* p0, char* p1) { Call<void>(0xf56b758cf1bd7b2c, p0, p1); }
	void ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE_f(char* p0, char* p1) { FastCall<void>(0xf56b758cf1bd7b2c, p0, p1); }
	void ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE_ADD(char* p0) { Call<void>(0xc06b1e1a932030ee, p0); }
	void ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE_ADD_f(char* p0) { FastCall<void>(0xc06b1e1a932030ee, p0); }
	void ACTIVITY_FEED_POST() { Call<void>(0x4e49317bc3b8d571); }
	void ACTIVITY_FEED_POST_f() { FastCall<void>(0x4e49317bc3b8d571); }
	void ACTIVITY_FEED_ONLINE_PLAYED_WITH_POST(char* p0) { Call<void>(0x733e39a763381208, p0); }
	void ACTIVITY_FEED_ONLINE_PLAYED_WITH_POST_f(char* p0) { FastCall<void>(0x733e39a763381208, p0); }
	BOOL HAS_RESUMED_FROM_SUSPEND() { return Call<BOOL>(0x65bc660cc834aeb4); }
	BOOL HAS_RESUMED_FROM_SUSPEND_f() { return FastCall<BOOL>(0x65bc660cc834aeb4); }
	void SET_SCRIPT_HIGH_PRIO(BOOL toggle) { Call<void>(0xe497644362c79f0e, toggle); }
	void SET_SCRIPT_HIGH_PRIO_f(BOOL toggle) { FastCall<void>(0xe497644362c79f0e, toggle); }
	void SET_THIS_IS_A_TRIGGER_SCRIPT(BOOL toggle) { Call<void>(0xc33a3d0b4327d5c1, toggle); }
	void SET_THIS_IS_A_TRIGGER_SCRIPT_f(BOOL toggle) { FastCall<void>(0xc33a3d0b4327d5c1, toggle); }
	void INFORM_CODE_OF_CONTENT_ID_OF_CURRENT_UGC_MISSION(char* p0) { Call<void>(0x2eb178b70f0b4762, p0); }
	void INFORM_CODE_OF_CONTENT_ID_OF_CURRENT_UGC_MISSION_f(char* p0) { FastCall<void>(0x2eb178b70f0b4762, p0); }
	BOOL GET_BASE_ELEMENT_LOCATION_FROM_METADATA_BLOCK(Any* p0, Any* p1, Any p2, BOOL p3) { return Call<BOOL>(0x4a552ade337ca270, p0, p1, p2, p3); }
	BOOL GET_BASE_ELEMENT_LOCATION_FROM_METADATA_BLOCK_f(Any* p0, Any* p1, Any p2, BOOL p3) { return FastCall<BOOL>(0x4a552ade337ca270, p0, p1, p2, p3); }
	Hash GET_PREV_WEATHER_TYPE_HASH_NAME() { return Call<Hash>(0xe097628335723225); }
	Hash GET_PREV_WEATHER_TYPE_HASH_NAME_f() { return FastCall<Hash>(0xe097628335723225); }
	Hash GET_NEXT_WEATHER_TYPE_HASH_NAME() { return Call<Hash>(0xee1a58de82597165); }
	Hash GET_NEXT_WEATHER_TYPE_HASH_NAME_f() { return FastCall<Hash>(0xee1a58de82597165); }
	BOOL IS_PREV_WEATHER_TYPE(char* weatherType) { return Call<BOOL>(0x53711d323569b77c, weatherType); }
	BOOL IS_PREV_WEATHER_TYPE_f(char* weatherType) { return FastCall<BOOL>(0x53711d323569b77c, weatherType); }
	BOOL IS_NEXT_WEATHER_TYPE(char* weatherType) { return Call<BOOL>(0x3ea643d1073b06bc, weatherType); }
	BOOL IS_NEXT_WEATHER_TYPE_f(char* weatherType) { return FastCall<BOOL>(0x3ea643d1073b06bc, weatherType); }
	void SET_WEATHER_TYPE_PERSIST(char* weatherType) { Call<void>(0xe11103b1b7281017, weatherType); }
	void SET_WEATHER_TYPE_PERSIST_f(char* weatherType) { FastCall<void>(0xe11103b1b7281017, weatherType); }
	void SET_WEATHER_TYPE_NOW_PERSIST(char* weatherType) { Call<void>(0x249af9f4454fe60e, weatherType); }
	void SET_WEATHER_TYPE_NOW_PERSIST_f(char* weatherType) { FastCall<void>(0x249af9f4454fe60e, weatherType); }
	void SET_WEATHER_TYPE_NOW(char* weatherType) { Call<void>(0x224ff5200b40a299, weatherType); }
	void SET_WEATHER_TYPE_NOW_f(char* weatherType) { FastCall<void>(0x224ff5200b40a299, weatherType); }
	void SET_WEATHER_TYPE_OVERTIME_PERSIST(char* weatherType, float time) { Call<void>(0x1de6093869cae613, weatherType, time); }
	void SET_WEATHER_TYPE_OVERTIME_PERSIST_f(char* weatherType, float time) { FastCall<void>(0x1de6093869cae613, weatherType, time); }
	void SET_RANDOM_WEATHER_TYPE() { Call<void>(0xe5a9ebb35357ff44); }
	void SET_RANDOM_WEATHER_TYPE_f() { FastCall<void>(0xe5a9ebb35357ff44); }
	void CLEAR_WEATHER_TYPE_PERSIST() { Call<void>(0x640a73f47378030c); }
	void CLEAR_WEATHER_TYPE_PERSIST_f() { FastCall<void>(0x640a73f47378030c); }
	void CLEAR_WEATHER_TYPE_NOW_PERSIST_NETWORK(int milliseconds) { Call<void>(0xc9de3f4205eb052, milliseconds); }
	void CLEAR_WEATHER_TYPE_NOW_PERSIST_NETWORK_f(int milliseconds) { FastCall<void>(0xc9de3f4205eb052, milliseconds); }
	void GET_CURR_WEATHER_STATE(Hash* weatherType1, Hash* weatherType2, float* percentWeather2) { Call<void>(0xb6c426647fa120a2, weatherType1, weatherType2, percentWeather2); }
	void GET_CURR_WEATHER_STATE_f(Hash* weatherType1, Hash* weatherType2, float* percentWeather2) { FastCall<void>(0xb6c426647fa120a2, weatherType1, weatherType2, percentWeather2); }
	void SET_CURR_WEATHER_STATE(Hash weatherType1, Hash weatherType2, float percentWeather2) { Call<void>(0x3e286edecde5e016, weatherType1, weatherType2, percentWeather2); }
	void SET_CURR_WEATHER_STATE_f(Hash weatherType1, Hash weatherType2, float percentWeather2) { FastCall<void>(0x3e286edecde5e016, weatherType1, weatherType2, percentWeather2); }
	void SET_OVERRIDE_WEATHER(char* weatherType) { Call<void>(0x80129f05d01e58be, weatherType); }
	void SET_OVERRIDE_WEATHER_f(char* weatherType) { FastCall<void>(0x80129f05d01e58be, weatherType); }
	void SET_OVERRIDE_WEATHEREX(char* weatherType, BOOL p1) { Call<void>(0xc5e6f4d241eb29f1, weatherType, p1); }
	void SET_OVERRIDE_WEATHEREX_f(char* weatherType, BOOL p1) { FastCall<void>(0xc5e6f4d241eb29f1, weatherType, p1); }
	void CLEAR_OVERRIDE_WEATHER() { Call<void>(0x7468503a57e00e33); }
	void CLEAR_OVERRIDE_WEATHER_f() { FastCall<void>(0x7468503a57e00e33); }
	void WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE(float amplitude) { Call<void>(0x581a6c8082ee8005, amplitude); }
	void WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE_f(float amplitude) { FastCall<void>(0x581a6c8082ee8005, amplitude); }
	void WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE(float minAmplitude) { Call<void>(0xaf27db33269fcb8f, minAmplitude); }
	void WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE_f(float minAmplitude) { FastCall<void>(0xaf27db33269fcb8f, minAmplitude); }
	void WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE(float maxAmplitude) { Call<void>(0xaf1180160a58a0bd, maxAmplitude); }
	void WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE_f(float maxAmplitude) { FastCall<void>(0xaf1180160a58a0bd, maxAmplitude); }
	void WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE(float minAmplitude) { Call<void>(0x2bb4887ea9f722f5, minAmplitude); }
	void WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE_f(float minAmplitude) { FastCall<void>(0x2bb4887ea9f722f5, minAmplitude); }
	void WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE(float amplitude) { Call<void>(0x9561978006dcff14, amplitude); }
	void WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE_f(float amplitude) { FastCall<void>(0x9561978006dcff14, amplitude); }
	void WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE(float minAmplitude) { Call<void>(0xac0c97cd2db3be20, minAmplitude); }
	void WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE_f(float minAmplitude) { FastCall<void>(0xac0c97cd2db3be20, minAmplitude); }
	void WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE(float maxAmplitude) { Call<void>(0xabf63cb0116c934e, maxAmplitude); }
	void WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE_f(float maxAmplitude) { FastCall<void>(0xabf63cb0116c934e, maxAmplitude); }
	void WATER_OVERRIDE_SET_RIPPLEBUMPINESS(float bumpiness) { Call<void>(0xaa11eda127c5add2, bumpiness); }
	void WATER_OVERRIDE_SET_RIPPLEBUMPINESS_f(float bumpiness) { FastCall<void>(0xaa11eda127c5add2, bumpiness); }
	void WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS(float minBumpiness) { Call<void>(0x401246914372cc90, minBumpiness); }
	void WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS_f(float minBumpiness) { FastCall<void>(0x401246914372cc90, minBumpiness); }
	void WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS(float maxBumpiness) { Call<void>(0x3ffbeb74272ba1be, maxBumpiness); }
	void WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS_f(float maxBumpiness) { FastCall<void>(0x3ffbeb74272ba1be, maxBumpiness); }
	void WATER_OVERRIDE_SET_RIPPLEDISTURB(float disturb) { Call<void>(0xad52147e504b307, disturb); }
	void WATER_OVERRIDE_SET_RIPPLEDISTURB_f(float disturb) { FastCall<void>(0xad52147e504b307, disturb); }
	void WATER_OVERRIDE_SET_STRENGTH(float strength) { Call<void>(0x679c28cd9922fe9, strength); }
	void WATER_OVERRIDE_SET_STRENGTH_f(float strength) { FastCall<void>(0x679c28cd9922fe9, strength); }
	void WATER_OVERRIDE_FADE_IN(float p0) { Call<void>(0x249778a58eeba69d, p0); }
	void WATER_OVERRIDE_FADE_IN_f(float p0) { FastCall<void>(0x249778a58eeba69d, p0); }
	void WATER_OVERRIDE_FADE_OUT(float p0) { Call<void>(0x6e579c0c4e8944b6, p0); }
	void WATER_OVERRIDE_FADE_OUT_f(float p0) { FastCall<void>(0x6e579c0c4e8944b6, p0); }
	void SET_WIND(float speed) { Call<void>(0x22284c9f9e5, speed); }
	void SET_WIND_f(float speed) { FastCall<void>(0x22284c9f9e5, speed); }
	void SET_WIND_SPEED(float speed) { Call<void>(0xee7ad397f271a54d, speed); }
	void SET_WIND_SPEED_f(float speed) { FastCall<void>(0xee7ad397f271a54d, speed); }
	float GET_WIND_SPEED() { return ToFloat(Call<_float>(0xc2437bd5c0c31d9)); }
	float GET_WIND_SPEED_f() { return ToFloat(FastCall<_float>(0xc2437bd5c0c31d9)); }
	void SET_WIND_DIRECTION(float direction) { Call<void>(0xc7367cc393f3b185, direction); }
	void SET_WIND_DIRECTION_f(float direction) { FastCall<void>(0xc7367cc393f3b185, direction); }
	Vector3* GET_WIND_DIRECTION() { Call<Vector3*>(0x6b9d168e5d1d1811); return GetVector(); }
	void SET_RAIN(float intensity) { Call<void>(0x22284c79571, intensity); }
	void SET_RAIN_f(float intensity) { FastCall<void>(0x22284c79571, intensity); }
	float GET_RAIN_LEVEL() { return ToFloat(Call<_float>(0xc23b92efdaa8fa2)); }
	float GET_RAIN_LEVEL_f() { return ToFloat(FastCall<_float>(0xc23b92efdaa8fa2)); }
	void SET_SNOW(float level) { Call<void>(0x22284c83b60, level); }
	void SET_SNOW_f(float level) { FastCall<void>(0x22284c83b60, level); }
	float GET_SNOW_LEVEL() { return ToFloat(Call<_float>(0xc23db78c4ccc651)); }
	float GET_SNOW_LEVEL_f() { return ToFloat(FastCall<_float>(0xc23db78c4ccc651)); }
	void FORCE_LIGHTNING_FLASH() { Call<void>(0x4edeaab7a19e8887); }
	void FORCE_LIGHTNING_FLASH_f() { FastCall<void>(0x4edeaab7a19e8887); }
	void SET_CLOUD_SETTINGS_OVERRIDE(char* p0) { Call<void>(0x658f50b16dd1fbc1, p0); }
	void SET_CLOUD_SETTINGS_OVERRIDE_f(char* p0) { FastCall<void>(0x658f50b16dd1fbc1, p0); }
	void PRELOAD_CLOUD_HAT(char* name) { Call<void>(0xc9f6de490b197e7b, name); }
	void PRELOAD_CLOUD_HAT_f(char* name) { FastCall<void>(0xc9f6de490b197e7b, name); }
	void LOAD_CLOUD_HAT(char* name, float transitionTime) { Call<void>(0x10c15fee5d276938, name, transitionTime); }
	void LOAD_CLOUD_HAT_f(char* name, float transitionTime) { FastCall<void>(0x10c15fee5d276938, name, transitionTime); }
	void UNLOAD_CLOUD_HAT(char* name, float p1) { Call<void>(0x57b3baada3707411, name, p1); }
	void UNLOAD_CLOUD_HAT_f(char* name, float p1) { FastCall<void>(0x57b3baada3707411, name, p1); }
	void UNLOAD_ALL_CLOUD_HATS() { Call<void>(0x6732de8cf5aefbe0); }
	void UNLOAD_ALL_CLOUD_HATS_f() { FastCall<void>(0x6732de8cf5aefbe0); }
	void SET_CLOUDS_ALPHA(float opacity) { Call<void>(0x340fcccb32e37f7a, opacity); }
	void SET_CLOUDS_ALPHA_f(float opacity) { FastCall<void>(0x340fcccb32e37f7a, opacity); }
	float GET_CLOUDS_ALPHA() { return ToFloat(Call<_float>(0x8cf0bd3ca00d1906)); }
	float GET_CLOUDS_ALPHA_f() { return ToFloat(FastCall<_float>(0x8cf0bd3ca00d1906)); }
	int GET_GAME_TIMER() { return Call<int>(0xc22b0c34261bd41); }
	int GET_GAME_TIMER_f() { return FastCall<int>(0xc22b0c34261bd41); }
	float GET_FRAME_TIME() { return ToFloat(Call<_float>(0xc22a59bc3895f28)); }
	float GET_FRAME_TIME_f() { return ToFloat(FastCall<_float>(0xc22a59bc3895f28)); }
	float GET_SYSTEM_TIME_STEP() { return ToFloat(Call<_float>(0x90734d27262638d7)); }
	float GET_SYSTEM_TIME_STEP_f() { return ToFloat(FastCall<_float>(0x90734d27262638d7)); }
	int GET_FRAME_COUNT() { return Call<int>(0x78320ddcacb5cff4); }
	int GET_FRAME_COUNT_f() { return FastCall<int>(0x78320ddcacb5cff4); }
	float GET_RANDOM_FLOAT_IN_RANGE(float startRange, float endRange) { return ToFloat(Call<_float>(0x446825a9fa3646d9, startRange, endRange)); }
	float GET_RANDOM_FLOAT_IN_RANGE_f(float startRange, float endRange) { return ToFloat(FastCall<_float>(0x446825a9fa3646d9, startRange, endRange)); }
	int GET_RANDOM_INT_IN_RANGE(int startRange, int endRange) { return Call<int>(0x7bb1671e83247b66, startRange, endRange); }
	int GET_RANDOM_INT_IN_RANGE_f(int startRange, int endRange) { return FastCall<int>(0x7bb1671e83247b66, startRange, endRange); }
	int GET_RANDOM_MWC_INT_IN_RANGE(int startRange, int endRange) { return Call<int>(0xedc031eb3c75908c, startRange, endRange); }
	int GET_RANDOM_MWC_INT_IN_RANGE_f(int startRange, int endRange) { return FastCall<int>(0xedc031eb3c75908c, startRange, endRange); }
	BOOL GET_GROUND_Z_FOR_3D_COORD(float x, float y, float z, float* groundZ, BOOL ignoreWater, BOOL p5) { return Call<BOOL>(0xb6c8da06be8ad791, x, y, z, groundZ, ignoreWater, p5); }
	BOOL GET_GROUND_Z_FOR_3D_COORD_f(float x, float y, float z, float* groundZ, BOOL ignoreWater, BOOL p5) { return FastCall<BOOL>(0xb6c8da06be8ad791, x, y, z, groundZ, ignoreWater, p5); }
	BOOL GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD(float x, float y, float z, float* groundZ, Vector3* normal) { return Call<BOOL>(0x29fdab549e111679, x, y, z, groundZ, normal); }
	BOOL GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD_f(float x, float y, float z, float* groundZ, Vector3* normal) { return FastCall<BOOL>(0x29fdab549e111679, x, y, z, groundZ, normal); }
	BOOL GET_GROUND_Z_EXCLUDING_OBJECTS_FOR_3D_COORD(float x, float y, float z, float* groundZ, BOOL p4, BOOL p5) { return Call<BOOL>(0x4a382a9c2f35c744, x, y, z, groundZ, p4, p5); }
	BOOL GET_GROUND_Z_EXCLUDING_OBJECTS_FOR_3D_COORD_f(float x, float y, float z, float* groundZ, BOOL p4, BOOL p5) { return FastCall<BOOL>(0x4a382a9c2f35c744, x, y, z, groundZ, p4, p5); }
	float ASIN(float p0) { return ToFloat(Call<_float>(0x1eccd7, p0)); }
	float ASIN_f(float p0) { return ToFloat(FastCall<_float>(0x1eccd7, p0)); }
	float ACOS(float p0) { return ToFloat(Call<_float>(0x1e9186, p0)); }
	float ACOS_f(float p0) { return ToFloat(FastCall<_float>(0x1e9186, p0)); }
	float TAN(float p0) { return ToFloat(Call<_float>(0x14381, p0)); }
	float TAN_f(float p0) { return ToFloat(FastCall<_float>(0x14381, p0)); }
	float ATAN(float p0) { return ToFloat(Call<_float>(0x1ecfa0, p0)); }
	float ATAN_f(float p0) { return ToFloat(FastCall<_float>(0x1ecfa0, p0)); }
	float ATAN2(float p0, float p1) { return ToFloat(Call<_float>(0x3bb2492, p0, p1)); }
	float ATAN2_f(float p0, float p1) { return ToFloat(FastCall<_float>(0x3bb2492, p0, p1)); }
	float GET_DISTANCE_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, BOOL useZ) { return ToFloat(Call<_float>(0x5f68c0a3010327d6, x1, y1, z1, x2, y2, z2, useZ)); }
	float GET_DISTANCE_BETWEEN_COORDS_f(float x1, float y1, float z1, float x2, float y2, float z2, BOOL useZ) { return ToFloat(FastCall<_float>(0x5f68c0a3010327d6, x1, y1, z1, x2, y2, z2, useZ)); }
	float GET_ANGLE_BETWEEN_2D_VECTORS(float x1, float y1, float x2, float y2) { return ToFloat(Call<_float>(0xb9eff8a1ead5ff2f, x1, y1, x2, y2)); }
	float GET_ANGLE_BETWEEN_2D_VECTORS_f(float x1, float y1, float x2, float y2) { return ToFloat(FastCall<_float>(0xb9eff8a1ead5ff2f, x1, y1, x2, y2)); }
	float GET_HEADING_FROM_VECTOR_2D(float dx, float dy) { return ToFloat(Call<_float>(0x81f75016c5e29b9f, dx, dy)); }
	float GET_HEADING_FROM_VECTOR_2D_f(float dx, float dy) { return ToFloat(FastCall<_float>(0x81f75016c5e29b9f, dx, dy)); }
	float GET_RATIO_OF_CLOSEST_POINT_ON_LINE(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, BOOL clamp) { return ToFloat(Call<_float>(0x620e5f1f495a1294, x1, y1, z1, x2, y2, z2, x3, y3, z3, clamp)); }
	float GET_RATIO_OF_CLOSEST_POINT_ON_LINE_f(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, BOOL clamp) { return ToFloat(FastCall<_float>(0x620e5f1f495a1294, x1, y1, z1, x2, y2, z2, x3, y3, z3, clamp)); }
	Vector3* GET_CLOSEST_POINT_ON_LINE(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, BOOL clamp) { Call<Vector3*>(0xd058526726f07ab6, x1, y1, z1, x2, y2, z2, x3, y3, z3, clamp); return GetVector(); }
	BOOL GET_LINE_PLANE_INTERSECTION(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float* p12) { return Call<BOOL>(0xc35ffabf425803ce, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12); }
	BOOL GET_LINE_PLANE_INTERSECTION_f(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float* p12) { return FastCall<BOOL>(0xc35ffabf425803ce, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12); }
	BOOL GET_POINT_AREA_OVERLAP(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12, Any p13) { return Call<BOOL>(0x62324cf34557508d, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13); }
	BOOL GET_POINT_AREA_OVERLAP_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12, Any p13) { return FastCall<BOOL>(0x62324cf34557508d, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13); }
	void SET_BIT(int* address, int offset) { Call<void>(0x11a12f7f70, address, offset); }
	void SET_BIT_f(int* address, int offset) { FastCall<void>(0x11a12f7f70, address, offset); }
	void CLEAR_BIT(int* address, int offset) { Call<void>(0x35ee5a6b0fdb, address, offset); }
	void CLEAR_BIT_f(int* address, int offset) { FastCall<void>(0x35ee5a6b0fdb, address, offset); }
	Hash GET_HASH_KEY(const char* string) { return Call<Hash>(0x19da357ca8f62e77, string); }
	Hash GET_HASH_KEY_f(const char* string) { return FastCall<Hash>(0x19da357ca8f62e77, string); }
	void SLERP_NEAR_QUATERNION(float t, float x, float y, float z, float w, float x1, float y1, float z1, float w1, float* outX, float* outY, float* outZ, float* outW) { Call<void>(0xa670f71b6e405da0, t, x, y, z, w, x1, y1, z1, w1, outX, outY, outZ, outW); }
	void SLERP_NEAR_QUATERNION_f(float t, float x, float y, float z, float w, float x1, float y1, float z1, float w1, float* outX, float* outY, float* outZ, float* outW) { FastCall<void>(0xa670f71b6e405da0, t, x, y, z, w, x1, y1, z1, w1, outX, outY, outZ, outW); }
	BOOL IS_AREA_OCCUPIED(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7, BOOL p8, BOOL p9, BOOL p10, Any p11, BOOL p12) { return Call<BOOL>(0x6f727be8d7ca93bb, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12); }
	BOOL IS_AREA_OCCUPIED_f(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7, BOOL p8, BOOL p9, BOOL p10, Any p11, BOOL p12) { return FastCall<BOOL>(0x6f727be8d7ca93bb, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12); }
	BOOL IS_AREA_OCCUPIED_SLOW(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12) { return Call<BOOL>(0xd936f0b493552405, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12); }
	BOOL IS_AREA_OCCUPIED_SLOW_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12) { return FastCall<BOOL>(0xd936f0b493552405, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12); }
	BOOL IS_POSITION_OCCUPIED(float x, float y, float z, float range, BOOL p4, BOOL checkVehicles, BOOL checkPeds, BOOL p7, BOOL p8, Entity ignoreEntity, BOOL p10) { return Call<BOOL>(0xf14e124d41e6f51f, x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10); }
	BOOL IS_POSITION_OCCUPIED_f(float x, float y, float z, float range, BOOL p4, BOOL checkVehicles, BOOL checkPeds, BOOL p7, BOOL p8, Entity ignoreEntity, BOOL p10) { return FastCall<BOOL>(0xf14e124d41e6f51f, x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10); }
	BOOL IS_POINT_OBSCURED_BY_A_MISSION_ENTITY(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) { return Call<BOOL>(0x96b032913f2cba00, p0, p1, p2, p3, p4, p5, p6); }
	BOOL IS_POINT_OBSCURED_BY_A_MISSION_ENTITY_f(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) { return FastCall<BOOL>(0x96b032913f2cba00, p0, p1, p2, p3, p4, p5, p6); }
	void CLEAR_AREA(float X, float Y, float Z, float radius, BOOL p4, BOOL ignoreCopCars, BOOL ignoreObjects, BOOL p7) { Call<void>(0x687dcf2f6975f, X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7); }
	void CLEAR_AREA_f(float X, float Y, float Z, float radius, BOOL p4, BOOL ignoreCopCars, BOOL ignoreObjects, BOOL p7) { FastCall<void>(0x687dcf2f6975f, X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7); }
	void CLEAR_AREA_LEAVE_VEHICLE_HEALTH(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7) { Call<void>(0x8e94dcca5283ee77, x, y, z, radius, p4, p5, p6, p7); }
	void CLEAR_AREA_LEAVE_VEHICLE_HEALTH_f(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7) { FastCall<void>(0x8e94dcca5283ee77, x, y, z, radius, p4, p5, p6, p7); }
	void CLEAR_AREA_OF_VEHICLES(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8, BOOL p9, Any p10) { Call<void>(0xd96de67c43196f4f, x, y, z, radius, p4, p5, p6, p7, p8, p9, p10); }
	void CLEAR_AREA_OF_VEHICLES_f(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8, BOOL p9, Any p10) { FastCall<void>(0xd96de67c43196f4f, x, y, z, radius, p4, p5, p6, p7, p8, p9, p10); }
	void CLEAR_ANGLED_AREA_OF_VEHICLES(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL p7, BOOL p8, BOOL p9, BOOL p10, BOOL p11, Any p12, Any p13) { Call<void>(0xce4a1c6a839ae3f9, x1, y1, z1, x2, y2, z2, width, p7, p8, p9, p10, p11, p12, p13); }
	void CLEAR_ANGLED_AREA_OF_VEHICLES_f(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL p7, BOOL p8, BOOL p9, BOOL p10, BOOL p11, Any p12, Any p13) { FastCall<void>(0xce4a1c6a839ae3f9, x1, y1, z1, x2, y2, z2, width, p7, p8, p9, p10, p11, p12, p13); }
	void CLEAR_AREA_OF_OBJECTS(float x, float y, float z, float radius, int flags) { Call<void>(0x82e2834cdd6ef76c, x, y, z, radius, flags); }
	void CLEAR_AREA_OF_OBJECTS_f(float x, float y, float z, float radius, int flags) { FastCall<void>(0x82e2834cdd6ef76c, x, y, z, radius, flags); }
	void CLEAR_AREA_OF_PEDS(float x, float y, float z, float radius, int flags) { Call<void>(0x92cf84245c4415cc, x, y, z, radius, flags); }
	void CLEAR_AREA_OF_PEDS_f(float x, float y, float z, float radius, int flags) { FastCall<void>(0x92cf84245c4415cc, x, y, z, radius, flags); }
	void CLEAR_AREA_OF_COPS(float x, float y, float z, float radius, int flags) { Call<void>(0x92cf84245c3e53f7, x, y, z, radius, flags); }
	void CLEAR_AREA_OF_COPS_f(float x, float y, float z, float radius, int flags) { FastCall<void>(0x92cf84245c3e53f7, x, y, z, radius, flags); }
	void CLEAR_AREA_OF_PROJECTILES(float x, float y, float z, float radius, int flags) { Call<void>(0x7c289be5283fb202, x, y, z, radius, flags); }
	void CLEAR_AREA_OF_PROJECTILES_f(float x, float y, float z, float radius, int flags) { FastCall<void>(0x7c289be5283fb202, x, y, z, radius, flags); }
	void CLEAR_SCENARIO_SPAWN_HISTORY() { Call<void>(0x177903faa5fabf73); }
	void CLEAR_SCENARIO_SPAWN_HISTORY_f() { FastCall<void>(0x177903faa5fabf73); }
	void SET_SAVE_MENU_ACTIVE(BOOL ignoreVehicle) { Call<void>(0xf81951354e719c81, ignoreVehicle); }
	void SET_SAVE_MENU_ACTIVE_f(BOOL ignoreVehicle) { FastCall<void>(0xf81951354e719c81, ignoreVehicle); }
	int GET_STATUS_OF_MANUAL_SAVE() { return Call<int>(0x54bd2615216dcf92); }
	int GET_STATUS_OF_MANUAL_SAVE_f() { return FastCall<int>(0x54bd2615216dcf92); }
	void SET_CREDITS_ACTIVE(BOOL toggle) { Call<void>(0xad2e18ef099cf408, toggle); }
	void SET_CREDITS_ACTIVE_f(BOOL toggle) { FastCall<void>(0xad2e18ef099cf408, toggle); }
	void SET_CREDITS_FADE_OUT_WITH_SCREEN(BOOL toggle) { Call<void>(0x4d0f393b38693c33, toggle); }
	void SET_CREDITS_FADE_OUT_WITH_SCREEN_f(BOOL toggle) { FastCall<void>(0x4d0f393b38693c33, toggle); }
	BOOL HAVE_CREDITS_REACHED_END() { return Call<BOOL>(0xb07c3a51599b6e92); }
	BOOL HAVE_CREDITS_REACHED_END_f() { return FastCall<BOOL>(0xb07c3a51599b6e92); }
	BOOL ARE_CREDITS_RUNNING() { return Call<BOOL>(0x2c7fdd859729dacf); }
	BOOL ARE_CREDITS_RUNNING_f() { return FastCall<BOOL>(0x2c7fdd859729dacf); }
	void TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME(char* scriptName) { Call<void>(0xfcf92bf9f1ae30c6, scriptName); }
	void TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME_f(char* scriptName) { FastCall<void>(0xfcf92bf9f1ae30c6, scriptName); }
	void NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME() { Call<void>(0xba105bfc7806efbc); }
	void NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME_f() { FastCall<void>(0xba105bfc7806efbc); }
	int ADD_HOSPITAL_RESTART(float x, float y, float z, float p3, Any p4) { return Call<int>(0xe1c034df9728bce8, x, y, z, p3, p4); }
	int ADD_HOSPITAL_RESTART_f(float x, float y, float z, float p3, Any p4) { return FastCall<int>(0xe1c034df9728bce8, x, y, z, p3, p4); }
	void DISABLE_HOSPITAL_RESTART(int hospitalIndex, BOOL toggle) { Call<void>(0x23f30b5599700181, hospitalIndex, toggle); }
	void DISABLE_HOSPITAL_RESTART_f(int hospitalIndex, BOOL toggle) { FastCall<void>(0x23f30b5599700181, hospitalIndex, toggle); }
	int ADD_POLICE_RESTART(float p0, float p1, float p2, float p3, Any p4) { return Call<int>(0x2c26fbe265772b4c, p0, p1, p2, p3, p4); }
	int ADD_POLICE_RESTART_f(float p0, float p1, float p2, float p3, Any p4) { return FastCall<int>(0x2c26fbe265772b4c, p0, p1, p2, p3, p4); }
	void DISABLE_POLICE_RESTART(int policeIndex, BOOL toggle) { Call<void>(0xf447894b35c8c225, policeIndex, toggle); }
	void DISABLE_POLICE_RESTART_f(int policeIndex, BOOL toggle) { FastCall<void>(0xf447894b35c8c225, policeIndex, toggle); }
	void SET_RESTART_COORD_OVERRIDE(float x, float y, float z, float heading) { Call<void>(0xd577ea7ca04516e3, x, y, z, heading); }
	void SET_RESTART_COORD_OVERRIDE_f(float x, float y, float z, float heading) { FastCall<void>(0xd577ea7ca04516e3, x, y, z, heading); }
	void CLEAR_RESTART_COORD_OVERRIDE() { Call<void>(0x7fd6550188642098); }
	void CLEAR_RESTART_COORD_OVERRIDE_f() { FastCall<void>(0x7fd6550188642098); }
	void PAUSE_DEATH_ARREST_RESTART(BOOL toggle) { Call<void>(0xa1b74f001895c749, toggle); }
	void PAUSE_DEATH_ARREST_RESTART_f(BOOL toggle) { FastCall<void>(0xa1b74f001895c749, toggle); }
	void IGNORE_NEXT_RESTART(BOOL toggle) { Call<void>(0x396cc8d897bd2df0, toggle); }
	void IGNORE_NEXT_RESTART_f(BOOL toggle) { FastCall<void>(0x396cc8d897bd2df0, toggle); }
	void SET_FADE_OUT_AFTER_DEATH(BOOL toggle) { Call<void>(0x742004c46bfbae9a, toggle); }
	void SET_FADE_OUT_AFTER_DEATH_f(BOOL toggle) { FastCall<void>(0x742004c46bfbae9a, toggle); }
	void SET_FADE_OUT_AFTER_ARREST(BOOL toggle) { Call<void>(0xfe093c90f1a4fff, toggle); }
	void SET_FADE_OUT_AFTER_ARREST_f(BOOL toggle) { FastCall<void>(0xfe093c90f1a4fff, toggle); }
	void SET_FADE_IN_AFTER_DEATH_ARREST(BOOL toggle) { Call<void>(0xe546e49a43df8767, toggle); }
	void SET_FADE_IN_AFTER_DEATH_ARREST_f(BOOL toggle) { FastCall<void>(0xe546e49a43df8767, toggle); }
	void SET_FADE_IN_AFTER_LOAD(BOOL toggle) { Call<void>(0x90c259d59c14137d, toggle); }
	void SET_FADE_IN_AFTER_LOAD_f(BOOL toggle) { FastCall<void>(0x90c259d59c14137d, toggle); }
	int REGISTER_SAVE_HOUSE(float x, float y, float z, float p3, char* p4, Any p5, Any p6) { return Call<int>(0x634bf26774b4dcda, x, y, z, p3, p4, p5, p6); }
	int REGISTER_SAVE_HOUSE_f(float x, float y, float z, float p3, char* p4, Any p5, Any p6) { return FastCall<int>(0x634bf26774b4dcda, x, y, z, p3, p4, p5, p6); }
	void SET_SAVE_HOUSE(int savehouseHandle, BOOL p1, BOOL p2) { Call<void>(0xee7a6d66f27cd1db, savehouseHandle, p1, p2); }
	void SET_SAVE_HOUSE_f(int savehouseHandle, BOOL p1, BOOL p2) { FastCall<void>(0xee7a6d66f27cd1db, savehouseHandle, p1, p2); }
	BOOL OVERRIDE_SAVE_HOUSE(BOOL p0, float p1, float p2, float p3, float p4, BOOL p5, float p6, float p7) { return Call<BOOL>(0x9559990d05474c11, p0, p1, p2, p3, p4, p5, p6, p7); }
	BOOL OVERRIDE_SAVE_HOUSE_f(BOOL p0, float p1, float p2, float p3, float p4, BOOL p5, float p6, float p7) { return FastCall<BOOL>(0x9559990d05474c11, p0, p1, p2, p3, p4, p5, p6, p7); }
	BOOL GET_SAVE_HOUSE_DETAILS_AFTER_SUCCESSFUL_LOAD(Vector3* p0, float* p1, BOOL* fadeInAfterLoad, BOOL* p3) { return Call<BOOL>(0xe8c2423d248614b3, p0, p1, fadeInAfterLoad, p3); }
	BOOL GET_SAVE_HOUSE_DETAILS_AFTER_SUCCESSFUL_LOAD_f(Vector3* p0, float* p1, BOOL* fadeInAfterLoad, BOOL* p3) { return FastCall<BOOL>(0xe8c2423d248614b3, p0, p1, fadeInAfterLoad, p3); }
	void DO_AUTO_SAVE() { Call<void>(0x18e976ebafe3e359); }
	void DO_AUTO_SAVE_f() { FastCall<void>(0x18e976ebafe3e359); }
	BOOL GET_IS_AUTO_SAVE_OFF() { return Call<BOOL>(0xe94dad06754a4fb1); }
	BOOL GET_IS_AUTO_SAVE_OFF_f() { return FastCall<BOOL>(0xe94dad06754a4fb1); }
	BOOL IS_AUTO_SAVE_IN_PROGRESS() { return Call<BOOL>(0xe2900670d9668780); }
	BOOL IS_AUTO_SAVE_IN_PROGRESS_f() { return FastCall<BOOL>(0xe2900670d9668780); }
	BOOL HAS_CODE_REQUESTED_AUTOSAVE() { return Call<BOOL>(0x66c70ea03303c64a); }
	BOOL HAS_CODE_REQUESTED_AUTOSAVE_f() { return FastCall<BOOL>(0x66c70ea03303c64a); }
	void CLEAR_CODE_REQUESTED_AUTOSAVE() { Call<void>(0x340e21c350d744fd); }
	void CLEAR_CODE_REQUESTED_AUTOSAVE_f() { FastCall<void>(0x340e21c350d744fd); }
	void BEGIN_REPLAY_STATS(Any p0, Any p1) { Call<void>(0x98fbb8f44d79721d, p0, p1); }
	void BEGIN_REPLAY_STATS_f(Any p0, Any p1) { FastCall<void>(0x98fbb8f44d79721d, p0, p1); }
	void ADD_REPLAY_STAT_VALUE(Any value) { Call<void>(0xed661a55cc3386c0, value); }
	void ADD_REPLAY_STAT_VALUE_f(Any value) { FastCall<void>(0xed661a55cc3386c0, value); }
	void END_REPLAY_STATS() { Call<void>(0x96e0ca6e0d8fc72b); }
	void END_REPLAY_STATS_f() { FastCall<void>(0x96e0ca6e0d8fc72b); }
	BOOL HAVE_REPLAY_STATS_BEEN_STORED() { return Call<BOOL>(0xf6b86955a747fbf5); }
	BOOL HAVE_REPLAY_STATS_BEEN_STORED_f() { return FastCall<BOOL>(0xf6b86955a747fbf5); }
	int GET_REPLAY_STAT_MISSION_ID() { return Call<int>(0x6f50e569a04fa66a); }
	int GET_REPLAY_STAT_MISSION_ID_f() { return FastCall<int>(0x6f50e569a04fa66a); }
	int GET_REPLAY_STAT_MISSION_TYPE() { return Call<int>(0xdead3182cb050cc9); }
	int GET_REPLAY_STAT_MISSION_TYPE_f() { return FastCall<int>(0xdead3182cb050cc9); }
	int GET_REPLAY_STAT_COUNT() { return Call<int>(0xdf308409d90bf9d3); }
	int GET_REPLAY_STAT_COUNT_f() { return FastCall<int>(0xdf308409d90bf9d3); }
	int GET_REPLAY_STAT_AT_INDEX(int index) { return Call<int>(0xced575f5422a6e42, index); }
	int GET_REPLAY_STAT_AT_INDEX_f(int index) { return FastCall<int>(0xced575f5422a6e42, index); }
	void CLEAR_REPLAY_STATS() { Call<void>(0x98a94c813c287ef9); }
	void CLEAR_REPLAY_STATS_f() { FastCall<void>(0x98a94c813c287ef9); }
	BOOL QUEUE_MISSION_REPEAT_LOAD() { return Call<BOOL>(0x25ba0deb72379269); }
	BOOL QUEUE_MISSION_REPEAT_LOAD_f() { return FastCall<BOOL>(0x25ba0deb72379269); }
	BOOL QUEUE_MISSION_REPEAT_SAVE() { return Call<BOOL>(0x25ba0deb723a8f00); }
	BOOL QUEUE_MISSION_REPEAT_SAVE_f() { return FastCall<BOOL>(0x25ba0deb723a8f00); }
	BOOL QUEUE_MISSION_REPEAT_SAVE_FOR_BENCHMARK_TEST() { return Call<BOOL>(0xec1ec4e7cef414a9); }
	BOOL QUEUE_MISSION_REPEAT_SAVE_FOR_BENCHMARK_TEST_f() { return FastCall<BOOL>(0xec1ec4e7cef414a9); }
	int GET_STATUS_OF_MISSION_REPEAT_SAVE() { return Call<int>(0xa0d1cc364426948a); }
	int GET_STATUS_OF_MISSION_REPEAT_SAVE_f() { return FastCall<int>(0xa0d1cc364426948a); }
	BOOL IS_MEMORY_CARD_IN_USE() { return Call<BOOL>(0x739d8301cac9be53); }
	BOOL IS_MEMORY_CARD_IN_USE_f() { return FastCall<BOOL>(0x739d8301cac9be53); }
	void SHOOT_SINGLE_BULLET_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed) { Call<void>(0x103504c87cb580bb, x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed); }
	void SHOOT_SINGLE_BULLET_BETWEEN_COORDS_f(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed) { FastCall<void>(0x103504c87cb580bb, x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed); }
	void SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity, Any p14) { Call<void>(0xe811301744e1826c, x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14); }
	void SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_f(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity, Any p14) { FastCall<void>(0xe811301744e1826c, x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14); }
	void SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity, BOOL p14, BOOL p15, Entity targetEntity, BOOL p17, Any p18, Any p19, Any p20) { Call<void>(0x1d41173f1a6ec92d, x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14, p15, targetEntity, p17, p18, p19, p20); }
	void SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW_f(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity, BOOL p14, BOOL p15, Entity targetEntity, BOOL p17, Any p18, Any p19, Any p20) { FastCall<void>(0x1d41173f1a6ec92d, x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14, p15, targetEntity, p17, p18, p19, p20); }
	void GET_MODEL_DIMENSIONS(Hash modelHash, Vector3* minimum, Vector3* maximum) { Call<void>(0x699767e2b6bdd0ac, modelHash, minimum, maximum); }
	void GET_MODEL_DIMENSIONS_f(Hash modelHash, Vector3* minimum, Vector3* maximum) { FastCall<void>(0x699767e2b6bdd0ac, modelHash, minimum, maximum); }
	void SET_FAKE_WANTED_LEVEL(int fakeWantedLevel) { Call<void>(0xc24647b130f69fc1, fakeWantedLevel); }
	void SET_FAKE_WANTED_LEVEL_f(int fakeWantedLevel) { FastCall<void>(0xc24647b130f69fc1, fakeWantedLevel); }
	int GET_FAKE_WANTED_LEVEL() { return Call<int>(0x42093d1899cb1db5); }
	int GET_FAKE_WANTED_LEVEL_f() { return FastCall<int>(0x42093d1899cb1db5); }
	void USING_MISSION_CREATOR(BOOL toggle) { Call<void>(0x7ed3f480223e465e, toggle); }
	void USING_MISSION_CREATOR_f(BOOL toggle) { FastCall<void>(0x7ed3f480223e465e, toggle); }
	void ALLOW_MISSION_CREATOR_WARP(BOOL toggle) { Call<void>(0xeda5155291cd9e24, toggle); }
	void ALLOW_MISSION_CREATOR_WARP_f(BOOL toggle) { FastCall<void>(0xeda5155291cd9e24, toggle); }
	void SET_MINIGAME_IN_PROGRESS(BOOL toggle) { Call<void>(0xb6838e740abf216e, toggle); }
	void SET_MINIGAME_IN_PROGRESS_f(BOOL toggle) { FastCall<void>(0xb6838e740abf216e, toggle); }
	BOOL IS_MINIGAME_IN_PROGRESS() { return Call<BOOL>(0xc0b9f112f87e7986); }
	BOOL IS_MINIGAME_IN_PROGRESS_f() { return FastCall<BOOL>(0xc0b9f112f87e7986); }
	BOOL IS_THIS_A_MINIGAME_SCRIPT() { return Call<BOOL>(0xc3f57af5e5730057); }
	BOOL IS_THIS_A_MINIGAME_SCRIPT_f() { return FastCall<BOOL>(0xc3f57af5e5730057); }
	BOOL IS_SNIPER_INVERTED() { return Call<BOOL>(0xdec44e5503044f30); }
	BOOL IS_SNIPER_INVERTED_f() { return FastCall<BOOL>(0xdec44e5503044f30); }
	BOOL SHOULD_USE_METRIC_MEASUREMENTS() { return Call<BOOL>(0x4c38c1bc3ab44502); }
	BOOL SHOULD_USE_METRIC_MEASUREMENTS_f() { return FastCall<BOOL>(0x4c38c1bc3ab44502); }
	int GET_PROFILE_SETTING(int profileSetting) { return Call<int>(0xc036bc69743ffa71, profileSetting); }
	int GET_PROFILE_SETTING_f(int profileSetting) { return FastCall<int>(0xc036bc69743ffa71, profileSetting); }
	BOOL ARE_STRINGS_EQUAL(char* string1, char* string2) { return Call<BOOL>(0xd6f4ef03c345142c, string1, string2); }
	BOOL ARE_STRINGS_EQUAL_f(char* string1, char* string2) { return FastCall<BOOL>(0xd6f4ef03c345142c, string1, string2); }
	int COMPARE_STRINGS(char* str1, char* str2, BOOL matchCase, int maxLength) { return Call<int>(0x401e4e8ca80608e8, str1, str2, matchCase, maxLength); }
	int COMPARE_STRINGS_f(char* str1, char* str2, BOOL matchCase, int maxLength) { return FastCall<int>(0x401e4e8ca80608e8, str1, str2, matchCase, maxLength); }
	int ABSI(int value) { return Call<int>(0x1e8e37, value); }
	int ABSI_f(int value) { return FastCall<int>(0x1e8e37, value); }
	float ABSF(float value) { return ToFloat(Call<_float>(0x1e8e34, value)); }
	float ABSF_f(float value) { return ToFloat(FastCall<_float>(0x1e8e34, value)); }
	BOOL IS_SNIPER_BULLET_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { return Call<BOOL>(0x77ec11a77d63bd25, x1, y1, z1, x2, y2, z2); }
	BOOL IS_SNIPER_BULLET_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<BOOL>(0x77ec11a77d63bd25, x1, y1, z1, x2, y2, z2); }
	BOOL IS_PROJECTILE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByPlayer) { return Call<BOOL>(0xfdd5a8f7ce3d9446, x1, y1, z1, x2, y2, z2, ownedByPlayer); }
	BOOL IS_PROJECTILE_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByPlayer) { return FastCall<BOOL>(0xfdd5a8f7ce3d9446, x1, y1, z1, x2, y2, z2, ownedByPlayer); }
	BOOL IS_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, int type, BOOL ownedByPlayer) { return Call<BOOL>(0xb84fe115855cc1e3, x1, y1, z1, x2, y2, z2, type, ownedByPlayer); }
	BOOL IS_PROJECTILE_TYPE_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, int type, BOOL ownedByPlayer) { return FastCall<BOOL>(0xb84fe115855cc1e3, x1, y1, z1, x2, y2, z2, type, ownedByPlayer); }
	BOOL IS_PROJECTILE_TYPE_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, Any p7, BOOL ownedByPlayer) { return Call<BOOL>(0xe5037a386423f405, x1, y1, z1, x2, y2, z2, width, p7, ownedByPlayer); }
	BOOL IS_PROJECTILE_TYPE_IN_ANGLED_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, float width, Any p7, BOOL ownedByPlayer) { return FastCall<BOOL>(0xe5037a386423f405, x1, y1, z1, x2, y2, z2, width, p7, ownedByPlayer); }
	BOOL IS_PROJECTILE_TYPE_WITHIN_DISTANCE(float x, float y, float z, Hash projectileHash, float radius, BOOL ownedByPlayer) { return Call<BOOL>(0x21305c1eeb067bc5, x, y, z, projectileHash, radius, ownedByPlayer); }
	BOOL IS_PROJECTILE_TYPE_WITHIN_DISTANCE_f(float x, float y, float z, Hash projectileHash, float radius, BOOL ownedByPlayer) { return FastCall<BOOL>(0x21305c1eeb067bc5, x, y, z, projectileHash, radius, ownedByPlayer); }
	BOOL GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, Hash projectileHash, Vector3* projectilePos, BOOL ownedByPlayer) { return Call<BOOL>(0xe9fca4c204115588, x1, y1, z1, x2, y2, z2, projectileHash, projectilePos, ownedByPlayer); }
	BOOL GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, Hash projectileHash, Vector3* projectilePos, BOOL ownedByPlayer) { return FastCall<BOOL>(0xe9fca4c204115588, x1, y1, z1, x2, y2, z2, projectileHash, projectilePos, ownedByPlayer); }
	BOOL GET_COORDS_OF_PROJECTILE_TYPE_IN_ANGLED_AREA(float vecAngledAreaPoint1X, float vecAngledAreaPoint1Y, float vecAngledAreaPoint1Z, float vecAngledAreaPoint2X, float vecAngledAreaPoint2Y, float vecAngledAreaPoint2Z, float distanceOfOppositeFace, Hash weaponType, Vector3* positionOut, BOOL bIsPlayer) { return Call<BOOL>(0x35f50d3cf3d5ecc0, vecAngledAreaPoint1X, vecAngledAreaPoint1Y, vecAngledAreaPoint1Z, vecAngledAreaPoint2X, vecAngledAreaPoint2Y, vecAngledAreaPoint2Z, distanceOfOppositeFace, weaponType, positionOut, bIsPlayer); }
	BOOL GET_COORDS_OF_PROJECTILE_TYPE_IN_ANGLED_AREA_f(float vecAngledAreaPoint1X, float vecAngledAreaPoint1Y, float vecAngledAreaPoint1Z, float vecAngledAreaPoint2X, float vecAngledAreaPoint2Y, float vecAngledAreaPoint2Z, float distanceOfOppositeFace, Hash weaponType, Vector3* positionOut, BOOL bIsPlayer) { return FastCall<BOOL>(0x35f50d3cf3d5ecc0, vecAngledAreaPoint1X, vecAngledAreaPoint1Y, vecAngledAreaPoint1Z, vecAngledAreaPoint2X, vecAngledAreaPoint2Y, vecAngledAreaPoint2Z, distanceOfOppositeFace, weaponType, positionOut, bIsPlayer); }
	BOOL GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(Ped ped, Hash weaponHash, float distance, Vector3* outCoords, BOOL p4) { return Call<BOOL>(0xee7129ac51939a6a, ped, weaponHash, distance, outCoords, p4); }
	BOOL GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE_f(Ped ped, Hash weaponHash, float distance, Vector3* outCoords, BOOL p4) { return FastCall<BOOL>(0xee7129ac51939a6a, ped, weaponHash, distance, outCoords, p4); }
	BOOL GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(Ped ped, Hash weaponHash, float distance, Vector3* outCoords, Object* outProjectile, BOOL p5) { return Call<BOOL>(0x815d691f2aa09d3f, ped, weaponHash, distance, outCoords, outProjectile, p5); }
	BOOL GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE_f(Ped ped, Hash weaponHash, float distance, Vector3* outCoords, Object* outProjectile, BOOL p5) { return FastCall<BOOL>(0x815d691f2aa09d3f, ped, weaponHash, distance, outCoords, outProjectile, p5); }
	BOOL IS_BULLET_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL ownedByPlayer) { return Call<BOOL>(0x188ce6e15f163189, x1, y1, z1, x2, y2, z2, width, ownedByPlayer); }
	BOOL IS_BULLET_IN_ANGLED_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL ownedByPlayer) { return FastCall<BOOL>(0x188ce6e15f163189, x1, y1, z1, x2, y2, z2, width, ownedByPlayer); }
	BOOL IS_BULLET_IN_AREA(float x, float y, float z, float radius, BOOL ownedByPlayer) { return Call<BOOL>(0xf51a10fd0f62f0df, x, y, z, radius, ownedByPlayer); }
	BOOL IS_BULLET_IN_AREA_f(float x, float y, float z, float radius, BOOL ownedByPlayer) { return FastCall<BOOL>(0xf51a10fd0f62f0df, x, y, z, radius, ownedByPlayer); }
	BOOL IS_BULLET_IN_BOX(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByPlayer) { return Call<BOOL>(0x7b84f84a3a4d8719, x1, y1, z1, x2, y2, z2, ownedByPlayer); }
	BOOL IS_BULLET_IN_BOX_f(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByPlayer) { return FastCall<BOOL>(0x7b84f84a3a4d8719, x1, y1, z1, x2, y2, z2, ownedByPlayer); }
	BOOL HAS_BULLET_IMPACTED_IN_AREA(float x, float y, float z, float p3, BOOL p4, BOOL p5) { return Call<BOOL>(0xa6dad194e5079465, x, y, z, p3, p4, p5); }
	BOOL HAS_BULLET_IMPACTED_IN_AREA_f(float x, float y, float z, float p3, BOOL p4, BOOL p5) { return FastCall<BOOL>(0xa6dad194e5079465, x, y, z, p3, p4, p5); }
	BOOL HAS_BULLET_IMPACTED_IN_BOX(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7) { return Call<BOOL>(0x687aabec07635ad3, p0, p1, p2, p3, p4, p5, p6, p7); }
	BOOL HAS_BULLET_IMPACTED_IN_BOX_f(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7) { return FastCall<BOOL>(0x687aabec07635ad3, p0, p1, p2, p3, p4, p5, p6, p7); }
	BOOL IS_ORBIS_VERSION() { return Call<BOOL>(0x8733ad941c7284d); }
	BOOL IS_ORBIS_VERSION_f() { return FastCall<BOOL>(0x8733ad941c7284d); }
	BOOL IS_DURANGO_VERSION() { return Call<BOOL>(0xfd603999cc486f9a); }
	BOOL IS_DURANGO_VERSION_f() { return FastCall<BOOL>(0xfd603999cc486f9a); }
	BOOL IS_XBOX360_VERSION() { return Call<BOOL>(0x6c281219121abf5e); }
	BOOL IS_XBOX360_VERSION_f() { return FastCall<BOOL>(0x6c281219121abf5e); }
	BOOL IS_PS3_VERSION() { return Call<BOOL>(0x4e9aec9da8dfee74); }
	BOOL IS_PS3_VERSION_f() { return FastCall<BOOL>(0x4e9aec9da8dfee74); }
	BOOL IS_PC_VERSION() { return Call<BOOL>(0x3c5788b3b40084a1); }
	BOOL IS_PC_VERSION_f() { return FastCall<BOOL>(0x3c5788b3b40084a1); }
	BOOL IS_STEAM_VERSION() { return Call<BOOL>(0x34e9186dadfe8254); }
	BOOL IS_STEAM_VERSION_f() { return FastCall<BOOL>(0x34e9186dadfe8254); }
	BOOL IS_AUSSIE_VERSION() { return Call<BOOL>(0xa4ca1cd2366b14de); }
	BOOL IS_AUSSIE_VERSION_f() { return FastCall<BOOL>(0xa4ca1cd2366b14de); }
	BOOL IS_JAPANESE_VERSION() { return Call<BOOL>(0xae526c56e9b5d09f); }
	BOOL IS_JAPANESE_VERSION_f() { return FastCall<BOOL>(0xae526c56e9b5d09f); }
	BOOL IS_XBOX_PLATFORM() { return Call<BOOL>(0x65574972ce7afe8a); }
	BOOL IS_XBOX_PLATFORM_f() { return FastCall<BOOL>(0x65574972ce7afe8a); }
	BOOL IS_SCARLETT_VERSION() { return Call<BOOL>(0x1b46fd8dbb2ab7a8); }
	BOOL IS_SCARLETT_VERSION_f() { return FastCall<BOOL>(0x1b46fd8dbb2ab7a8); }
	BOOL IS_SCE_PLATFORM() { return Call<BOOL>(0x85a48f404f208272); }
	BOOL IS_SCE_PLATFORM_f() { return FastCall<BOOL>(0x85a48f404f208272); }
	BOOL IS_PROSPERO_VERSION() { return Call<BOOL>(0x8823d7cf3d1ed46); }
	BOOL IS_PROSPERO_VERSION_f() { return FastCall<BOOL>(0x8823d7cf3d1ed46); }
	BOOL IS_STRING_NULL(char* string) { return Call<BOOL>(0x4ea3d87ebfb3fd60, string); }
	BOOL IS_STRING_NULL_f(char* string) { return FastCall<BOOL>(0x4ea3d87ebfb3fd60, string); }
	BOOL IS_STRING_NULL_OR_EMPTY(char* string) { return Call<BOOL>(0x7fc090a715b103d0, string); }
	BOOL IS_STRING_NULL_OR_EMPTY_f(char* string) { return FastCall<BOOL>(0x7fc090a715b103d0, string); }
	BOOL STRING_TO_INT(char* string, int* outInteger) { return Call<BOOL>(0xa9dab9a86691c3f9, string, outInteger); }
	BOOL STRING_TO_INT_f(char* string, int* outInteger) { return FastCall<BOOL>(0xa9dab9a86691c3f9, string, outInteger); }
	void SET_BITS_IN_RANGE(int* var, int rangeStart, int rangeEnd, int p3) { Call<void>(0x41fb1aad687a4f5f, var, rangeStart, rangeEnd, p3); }
	void SET_BITS_IN_RANGE_f(int* var, int rangeStart, int rangeEnd, int p3) { FastCall<void>(0x41fb1aad687a4f5f, var, rangeStart, rangeEnd, p3); }
	int GET_BITS_IN_RANGE(int var, int rangeStart, int rangeEnd) { return Call<int>(0x5383869a083e753, var, rangeStart, rangeEnd); }
	int GET_BITS_IN_RANGE_f(int var, int rangeStart, int rangeEnd) { return FastCall<int>(0x5383869a083e753, var, rangeStart, rangeEnd); }
	int ADD_STUNT_JUMP(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, float x4, float y4, float z4, float camX, float camY, float camZ, int p15, int p16, int p17) { return Call<int>(0xa65ed360b0ef4f1, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, p15, p16, p17); }
	int ADD_STUNT_JUMP_f(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, float x4, float y4, float z4, float camX, float camY, float camZ, int p15, int p16, int p17) { return FastCall<int>(0xa65ed360b0ef4f1, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, p15, p16, p17); }
	int ADD_STUNT_JUMP_ANGLED(float x1, float y1, float z1, float x2, float y2, float z2, float radius1, float x3, float y3, float z3, float x4, float y4, float z4, float radius2, float camX, float camY, float camZ, int p17, int p18, int p19) { return Call<int>(0x10db666687b95cff, x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, p17, p18, p19); }
	int ADD_STUNT_JUMP_ANGLED_f(float x1, float y1, float z1, float x2, float y2, float z2, float radius1, float x3, float y3, float z3, float x4, float y4, float z4, float radius2, float camX, float camY, float camZ, int p17, int p18, int p19) { return FastCall<int>(0x10db666687b95cff, x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, p17, p18, p19); }
	void TOGGLE_SHOW_OPTIONAL_STUNT_JUMP_CAMERA(BOOL toggle) { Call<void>(0x69c4d28b538be4e9, toggle); }
	void TOGGLE_SHOW_OPTIONAL_STUNT_JUMP_CAMERA_f(BOOL toggle) { FastCall<void>(0x69c4d28b538be4e9, toggle); }
	void DELETE_STUNT_JUMP(int p0) { Call<void>(0x971a5b068fb7987, p0); }
	void DELETE_STUNT_JUMP_f(int p0) { FastCall<void>(0x971a5b068fb7987, p0); }
	void ENABLE_STUNT_JUMP_SET(int p0) { Call<void>(0x76effa25ac2482b2, p0); }
	void ENABLE_STUNT_JUMP_SET_f(int p0) { FastCall<void>(0x76effa25ac2482b2, p0); }
	void DISABLE_STUNT_JUMP_SET(int p0) { Call<void>(0x26c18b7420371acd, p0); }
	void DISABLE_STUNT_JUMP_SET_f(int p0) { FastCall<void>(0x26c18b7420371acd, p0); }
	void SET_STUNT_JUMPS_CAN_TRIGGER(BOOL toggle) { Call<void>(0xed59f61a012a018d, toggle); }
	void SET_STUNT_JUMPS_CAN_TRIGGER_f(BOOL toggle) { FastCall<void>(0xed59f61a012a018d, toggle); }
	BOOL IS_STUNT_JUMP_IN_PROGRESS() { return Call<BOOL>(0x82d4d357e9588af0); }
	BOOL IS_STUNT_JUMP_IN_PROGRESS_f() { return FastCall<BOOL>(0x82d4d357e9588af0); }
	BOOL IS_STUNT_JUMP_MESSAGE_SHOWING() { return Call<BOOL>(0x51cdf496ecf901b6); }
	BOOL IS_STUNT_JUMP_MESSAGE_SHOWING_f() { return FastCall<BOOL>(0x51cdf496ecf901b6); }
	int GET_NUM_SUCCESSFUL_STUNT_JUMPS() { return Call<int>(0x257b6ddc74eb75bd); }
	int GET_NUM_SUCCESSFUL_STUNT_JUMPS_f() { return FastCall<int>(0x257b6ddc74eb75bd); }
	int GET_TOTAL_SUCCESSFUL_STUNT_JUMPS() { return Call<int>(0x253b20d33e2c65ff); }
	int GET_TOTAL_SUCCESSFUL_STUNT_JUMPS_f() { return FastCall<int>(0x253b20d33e2c65ff); }
	void CANCEL_STUNT_JUMP() { Call<void>(0xec338ac7be338958); }
	void CANCEL_STUNT_JUMP_f() { FastCall<void>(0xec338ac7be338958); }
	void SET_GAME_PAUSED(BOOL toggle) { Call<void>(0xe0b0471d38de9d9e, toggle); }
	void SET_GAME_PAUSED_f(BOOL toggle) { FastCall<void>(0xe0b0471d38de9d9e, toggle); }
	void SET_THIS_SCRIPT_CAN_BE_PAUSED(BOOL toggle) { Call<void>(0xe0f3505bf98167ab, toggle); }
	void SET_THIS_SCRIPT_CAN_BE_PAUSED_f(BOOL toggle) { FastCall<void>(0xe0f3505bf98167ab, toggle); }
	void SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT(BOOL toggle) { Call<void>(0xe24d8f7e2a43d836, toggle); }
	void SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT_f(BOOL toggle) { FastCall<void>(0xe24d8f7e2a43d836, toggle); }
	BOOL HAS_CHEAT_WITH_HASH_BEEN_ACTIVATED(Hash hash, int amount) { return Call<BOOL>(0xc55a992c6a419827, hash, amount); }
	BOOL HAS_CHEAT_WITH_HASH_BEEN_ACTIVATED_f(Hash hash, int amount) { return FastCall<BOOL>(0xc55a992c6a419827, hash, amount); }
	BOOL HAS_PC_CHEAT_WITH_HASH_BEEN_ACTIVATED(Hash hash) { return Call<BOOL>(0x5666ca2828433509, hash); }
	BOOL HAS_PC_CHEAT_WITH_HASH_BEEN_ACTIVATED_f(Hash hash) { return FastCall<BOOL>(0x5666ca2828433509, hash); }
	void OVERRIDE_FREEZE_FLAGS(BOOL p0) { Call<void>(0xa0f1f2308b4ce452, p0); }
	void OVERRIDE_FREEZE_FLAGS_f(BOOL p0) { FastCall<void>(0xa0f1f2308b4ce452, p0); }
	void SET_INSTANCE_PRIORITY_MODE(int p0) { Call<void>(0x1e0cfbc2b89289d1, p0); }
	void SET_INSTANCE_PRIORITY_MODE_f(int p0) { FastCall<void>(0x1e0cfbc2b89289d1, p0); }
	void SET_INSTANCE_PRIORITY_HINT(int flag) { Call<void>(0x1e0cfbc2b8902eb5, flag); }
	void SET_INSTANCE_PRIORITY_HINT_f(int flag) { FastCall<void>(0x1e0cfbc2b8902eb5, flag); }
	BOOL IS_FRONTEND_FADING() { return Call<BOOL>(0xfa1079055b7de9f1); }
	BOOL IS_FRONTEND_FADING_f() { return FastCall<BOOL>(0xfa1079055b7de9f1); }
	void POPULATE_NOW() { Call<void>(0x1d2357fec46131e1); }
	void POPULATE_NOW_f() { FastCall<void>(0x1d2357fec46131e1); }
	int GET_INDEX_OF_CURRENT_LEVEL() { return Call<int>(0x7a2730b2906e7bac); }
	int GET_INDEX_OF_CURRENT_LEVEL_f() { return FastCall<int>(0x7a2730b2906e7bac); }
	void SET_GRAVITY_LEVEL(int level) { Call<void>(0x7b981e0d2488a0d6, level); }
	void SET_GRAVITY_LEVEL_f(int level) { FastCall<void>(0x7b981e0d2488a0d6, level); }
	void START_SAVE_DATA(Any* p0, Any p1, BOOL p2) { Call<void>(0xe77f43e07a2e296f, p0, p1, p2); }
	void START_SAVE_DATA_f(Any* p0, Any p1, BOOL p2) { FastCall<void>(0xe77f43e07a2e296f, p0, p1, p2); }
	void STOP_SAVE_DATA() { Call<void>(0x9083b040bf3ead2f); }
	void STOP_SAVE_DATA_f() { FastCall<void>(0x9083b040bf3ead2f); }
	int GET_SIZE_OF_SAVE_DATA(BOOL p0) { return Call<int>(0x1dcb296d3fb46779, p0); }
	int GET_SIZE_OF_SAVE_DATA_f(BOOL p0) { return FastCall<int>(0x1dcb296d3fb46779, p0); }
	void REGISTER_INT_TO_SAVE(Any* p0, char* name) { Call<void>(0x61673bfe3f5e0b5, p0, name); }
	void REGISTER_INT_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0x61673bfe3f5e0b5, p0, name); }
	void REGISTER_INT64_TO_SAVE(Any* p0, char* name) { Call<void>(0xda4490fe48afc8b3, p0, name); }
	void REGISTER_INT64_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0xda4490fe48afc8b3, p0, name); }
	void REGISTER_ENUM_TO_SAVE(Any* p0, char* name) { Call<void>(0xbb4efb196808cb9f, p0, name); }
	void REGISTER_ENUM_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0xbb4efb196808cb9f, p0, name); }
	void REGISTER_FLOAT_TO_SAVE(Any* p0, char* name) { Call<void>(0xb8b793f48d01a922, p0, name); }
	void REGISTER_FLOAT_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0xb8b793f48d01a922, p0, name); }
	void REGISTER_BOOL_TO_SAVE(Any* p0, char* name) { Call<void>(0xba4284dd97db7888, p0, name); }
	void REGISTER_BOOL_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0xba4284dd97db7888, p0, name); }
	void REGISTER_TEXT_LABEL_TO_SAVE(Any* p0, char* name) { Call<void>(0x93d282db0819b9e0, p0, name); }
	void REGISTER_TEXT_LABEL_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0x93d282db0819b9e0, p0, name); }
	void REGISTER_TEXT_LABEL_15_TO_SAVE(Any* p0, char* name) { Call<void>(0x3e66712682180027, p0, name); }
	void REGISTER_TEXT_LABEL_15_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0x3e66712682180027, p0, name); }
	void REGISTER_TEXT_LABEL_23_TO_SAVE(Any* p0, char* name) { Call<void>(0x3e6687a54dd89344, p0, name); }
	void REGISTER_TEXT_LABEL_23_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0x3e6687a54dd89344, p0, name); }
	void REGISTER_TEXT_LABEL_31_TO_SAVE(Any* p0, char* name) { Call<void>(0x3e669e2419992661, p0, name); }
	void REGISTER_TEXT_LABEL_31_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0x3e669e2419992661, p0, name); }
	void REGISTER_TEXT_LABEL_63_TO_SAVE(Any* p0, char* name) { Call<void>(0x3e66e7d51efe57c0, p0, name); }
	void REGISTER_TEXT_LABEL_63_TO_SAVE_f(Any* p0, char* name) { FastCall<void>(0x3e66e7d51efe57c0, p0, name); }
	void START_SAVE_STRUCT_WITH_SIZE(Any* p0, int size, char* structName) { Call<void>(0xa51489ea3169aa35, p0, size, structName); }
	void START_SAVE_STRUCT_WITH_SIZE_f(Any* p0, int size, char* structName) { FastCall<void>(0xa51489ea3169aa35, p0, size, structName); }
	void STOP_SAVE_STRUCT() { Call<void>(0x7e58a30e04ebf81a); }
	void STOP_SAVE_STRUCT_f() { FastCall<void>(0x7e58a30e04ebf81a); }
	void START_SAVE_ARRAY_WITH_SIZE(Any* p0, int size, char* arrayName) { Call<void>(0xea72a8c24bb966f, p0, size, arrayName); }
	void START_SAVE_ARRAY_WITH_SIZE_f(Any* p0, int size, char* arrayName) { FastCall<void>(0xea72a8c24bb966f, p0, size, arrayName); }
	void STOP_SAVE_ARRAY() { Call<void>(0x7ff257d728746554); }
	void STOP_SAVE_ARRAY_f() { FastCall<void>(0x7ff257d728746554); }
	void COPY_SCRIPT_STRUCT(Any* dst, Any* src, int size) { Call<void>(0xbee7d284340e967f, dst, src, size); }
	void COPY_SCRIPT_STRUCT_f(Any* dst, Any* src, int size) { FastCall<void>(0xbee7d284340e967f, dst, src, size); }
	void ENABLE_DISPATCH_SERVICE(int dispatchService, BOOL toggle) { Call<void>(0xb37b24e5cd04330c, dispatchService, toggle); }
	void ENABLE_DISPATCH_SERVICE_f(int dispatchService, BOOL toggle) { FastCall<void>(0xb37b24e5cd04330c, dispatchService, toggle); }
	void BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION(int dispatchService, BOOL toggle) { Call<void>(0x6cb0f9daccc51253, dispatchService, toggle); }
	void BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION_f(int dispatchService, BOOL toggle) { FastCall<void>(0x6cb0f9daccc51253, dispatchService, toggle); }
	int GET_NUMBER_RESOURCES_ALLOCATED_TO_WANTED_LEVEL(int dispatchService) { return Call<int>(0xa098d159b39f4a79, dispatchService); }
	int GET_NUMBER_RESOURCES_ALLOCATED_TO_WANTED_LEVEL_f(int dispatchService) { return FastCall<int>(0xa098d159b39f4a79, dispatchService); }
	BOOL CREATE_INCIDENT(int dispatchService, float x, float y, float z, int numUnits, float radius, int* outIncidentID, Any p7, Any p8) { return Call<BOOL>(0xdc2d61de06f3acb5, dispatchService, x, y, z, numUnits, radius, outIncidentID, p7, p8); }
	BOOL CREATE_INCIDENT_f(int dispatchService, float x, float y, float z, int numUnits, float radius, int* outIncidentID, Any p7, Any p8) { return FastCall<BOOL>(0xdc2d61de06f3acb5, dispatchService, x, y, z, numUnits, radius, outIncidentID, p7, p8); }
	BOOL CREATE_INCIDENT_WITH_ENTITY(int dispatchService, Ped ped, int numUnits, float radius, int* outIncidentID, Any p5, Any p6) { return Call<BOOL>(0xf52ebb72f47584f2, dispatchService, ped, numUnits, radius, outIncidentID, p5, p6); }
	BOOL CREATE_INCIDENT_WITH_ENTITY_f(int dispatchService, Ped ped, int numUnits, float radius, int* outIncidentID, Any p5, Any p6) { return FastCall<BOOL>(0xf52ebb72f47584f2, dispatchService, ped, numUnits, radius, outIncidentID, p5, p6); }
	void DELETE_INCIDENT(int incidentId) { Call<void>(0xfd9cc10c8ce79ce6, incidentId); }
	void DELETE_INCIDENT_f(int incidentId) { FastCall<void>(0xfd9cc10c8ce79ce6, incidentId); }
	BOOL IS_INCIDENT_VALID(int incidentId) { return Call<BOOL>(0xe9683daf8b1975e4, incidentId); }
	BOOL IS_INCIDENT_VALID_f(int incidentId) { return FastCall<BOOL>(0xe9683daf8b1975e4, incidentId); }
	void SET_INCIDENT_REQUESTED_UNITS(int incidentId, int dispatchService, int numUnits) { Call<void>(0xdf3f0462d9719f0e, incidentId, dispatchService, numUnits); }
	void SET_INCIDENT_REQUESTED_UNITS_f(int incidentId, int dispatchService, int numUnits) { FastCall<void>(0xdf3f0462d9719f0e, incidentId, dispatchService, numUnits); }
	void SET_IDEAL_SPAWN_DISTANCE_FOR_INCIDENT(int incidentId, float p1) { Call<void>(0xaddba31bd7c6807, incidentId, p1); }
	void SET_IDEAL_SPAWN_DISTANCE_FOR_INCIDENT_f(int incidentId, float p1) { FastCall<void>(0xaddba31bd7c6807, incidentId, p1); }
	BOOL FIND_SPAWN_POINT_IN_DIRECTION(float posX, float posY, float posZ, float fwdVecX, float fwdVecY, float fwdVecZ, float distance, Vector3* spawnPoint) { return Call<BOOL>(0xb36434e87b720a5e, posX, posY, posZ, fwdVecX, fwdVecY, fwdVecZ, distance, spawnPoint); }
	BOOL FIND_SPAWN_POINT_IN_DIRECTION_f(float posX, float posY, float posZ, float fwdVecX, float fwdVecY, float fwdVecZ, float distance, Vector3* spawnPoint) { return FastCall<BOOL>(0xb36434e87b720a5e, posX, posY, posZ, fwdVecX, fwdVecY, fwdVecZ, distance, spawnPoint); }
	int ADD_POP_MULTIPLIER_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float p6, float p7, BOOL p8, BOOL p9) { return Call<int>(0xf58c776e5620517f, x1, y1, z1, x2, y2, z2, p6, p7, p8, p9); }
	int ADD_POP_MULTIPLIER_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, float p6, float p7, BOOL p8, BOOL p9) { return FastCall<int>(0xf58c776e5620517f, x1, y1, z1, x2, y2, z2, p6, p7, p8, p9); }
	BOOL DOES_POP_MULTIPLIER_AREA_EXIST(int id) { return Call<BOOL>(0x1814af43b7f5e40f, id); }
	BOOL DOES_POP_MULTIPLIER_AREA_EXIST_f(int id) { return FastCall<BOOL>(0x1814af43b7f5e40f, id); }
	void REMOVE_POP_MULTIPLIER_AREA(int id, BOOL p1) { Call<void>(0xe1bbea79ebf02202, id, p1); }
	void REMOVE_POP_MULTIPLIER_AREA_f(int id, BOOL p1) { FastCall<void>(0xe1bbea79ebf02202, id, p1); }
	BOOL IS_POP_MULTIPLIER_AREA_NETWORKED(int id) { return Call<BOOL>(0x4a8370131f3e9b56, id); }
	BOOL IS_POP_MULTIPLIER_AREA_NETWORKED_f(int id) { return FastCall<BOOL>(0x4a8370131f3e9b56, id); }
	int ADD_POP_MULTIPLIER_SPHERE(float x, float y, float z, float radius, float pedMultiplier, float vehicleMultiplier, BOOL p6, BOOL p7) { return Call<int>(0xc44c55316dee703f, x, y, z, radius, pedMultiplier, vehicleMultiplier, p6, p7); }
	int ADD_POP_MULTIPLIER_SPHERE_f(float x, float y, float z, float radius, float pedMultiplier, float vehicleMultiplier, BOOL p6, BOOL p7) { return FastCall<int>(0xc44c55316dee703f, x, y, z, radius, pedMultiplier, vehicleMultiplier, p6, p7); }
	BOOL DOES_POP_MULTIPLIER_SPHERE_EXIST(int id) { return Call<BOOL>(0x6bf93cfbe5fbd4cf, id); }
	BOOL DOES_POP_MULTIPLIER_SPHERE_EXIST_f(int id) { return FastCall<BOOL>(0x6bf93cfbe5fbd4cf, id); }
	void REMOVE_POP_MULTIPLIER_SPHERE(int id, BOOL p1) { Call<void>(0x626b33aecf0c2c02, id, p1); }
	void REMOVE_POP_MULTIPLIER_SPHERE_f(int id, BOOL p1) { FastCall<void>(0x626b33aecf0c2c02, id, p1); }
	void ENABLE_TENNIS_MODE(Ped ped, BOOL toggle, BOOL p2) { Call<void>(0x4fc3653060b6f9cb, ped, toggle, p2); }
	void ENABLE_TENNIS_MODE_f(Ped ped, BOOL toggle, BOOL p2) { FastCall<void>(0x4fc3653060b6f9cb, ped, toggle, p2); }
	BOOL IS_TENNIS_MODE(Ped ped) { return Call<BOOL>(0x4ea55642c699a6f2, ped); }
	BOOL IS_TENNIS_MODE_f(Ped ped) { return FastCall<BOOL>(0x4ea55642c699a6f2, ped); }
	void PLAY_TENNIS_SWING_ANIM(Ped ped, char* animDict, char* animName, float p3, float p4, BOOL p5) { Call<void>(0xa53592a515e7906b, ped, animDict, animName, p3, p4, p5); }
	void PLAY_TENNIS_SWING_ANIM_f(Ped ped, char* animDict, char* animName, float p3, float p4, BOOL p5) { FastCall<void>(0xa53592a515e7906b, ped, animDict, animName, p3, p4, p5); }
	BOOL GET_TENNIS_SWING_ANIM_COMPLETE(Ped ped) { return Call<BOOL>(0x90c0c13e7da9894b, ped); }
	BOOL GET_TENNIS_SWING_ANIM_COMPLETE_f(Ped ped) { return FastCall<BOOL>(0x90c0c13e7da9894b, ped); }
	BOOL GET_TENNIS_SWING_ANIM_CAN_BE_INTERRUPTED(Ped ped) { return Call<BOOL>(0x75aece6069c66a27, ped); }
	BOOL GET_TENNIS_SWING_ANIM_CAN_BE_INTERRUPTED_f(Ped ped) { return FastCall<BOOL>(0x75aece6069c66a27, ped); }
	BOOL GET_TENNIS_SWING_ANIM_SWUNG(Ped ped) { return Call<BOOL>(0x8e81818823995518, ped); }
	BOOL GET_TENNIS_SWING_ANIM_SWUNG_f(Ped ped) { return FastCall<BOOL>(0x8e81818823995518, ped); }
	void PLAY_TENNIS_DIVE_ANIM(Ped ped, int p1, float p2, float p3, float p4, BOOL p5) { Call<void>(0xa23b7ce24c3e24c3, ped, p1, p2, p3, p4, p5); }
	void PLAY_TENNIS_DIVE_ANIM_f(Ped ped, int p1, float p2, float p3, float p4, BOOL p5) { FastCall<void>(0xa23b7ce24c3e24c3, ped, p1, p2, p3, p4, p5); }
	void SET_TENNIS_MOVE_NETWORK_SIGNAL_FLOAT(Ped ped, char* p1, float p2) { Call<void>(0x984e5fe035520e1d, ped, p1, p2); }
	void SET_TENNIS_MOVE_NETWORK_SIGNAL_FLOAT_f(Ped ped, char* p1, float p2) { FastCall<void>(0x984e5fe035520e1d, ped, p1, p2); }
	void RESET_DISPATCH_SPAWN_LOCATION() { Call<void>(0x2290c23caa231f6e); }
	void RESET_DISPATCH_SPAWN_LOCATION_f() { FastCall<void>(0x2290c23caa231f6e); }
	void SET_DISPATCH_SPAWN_LOCATION(float x, float y, float z) { Call<void>(0xafa36be78634f181, x, y, z); }
	void SET_DISPATCH_SPAWN_LOCATION_f(float x, float y, float z) { FastCall<void>(0xafa36be78634f181, x, y, z); }
	void RESET_DISPATCH_IDEAL_SPAWN_DISTANCE() { Call<void>(0xc6c929d7f6e2d38); }
	void RESET_DISPATCH_IDEAL_SPAWN_DISTANCE_f() { FastCall<void>(0xc6c929d7f6e2d38); }
	void SET_DISPATCH_IDEAL_SPAWN_DISTANCE(float distance) { Call<void>(0x4f795e661470e50b, distance); }
	void SET_DISPATCH_IDEAL_SPAWN_DISTANCE_f(float distance) { FastCall<void>(0x4f795e661470e50b, distance); }
	void RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(Any p0) { Call<void>(0x32a5ad0c462db95e, p0); }
	void RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_f(Any p0) { FastCall<void>(0x32a5ad0c462db95e, p0); }
	void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(Any p0, float p1) { Call<void>(0x1b2108ae00971e2b, p0, p1); }
	void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_f(Any p0, float p1) { FastCall<void>(0x1b2108ae00971e2b, p0, p1); }
	void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER(Any p0, float p1) { Call<void>(0x62a4dbe85070a855, p0, p1); }
	void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER_f(Any p0, float p1) { FastCall<void>(0x62a4dbe85070a855, p0, p1); }
	int ADD_DISPATCH_SPAWN_ANGLED_BLOCKING_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width) { return Call<int>(0xff3c098138c40514, x1, y1, z1, x2, y2, z2, width); }
	int ADD_DISPATCH_SPAWN_ANGLED_BLOCKING_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, float width) { return FastCall<int>(0xff3c098138c40514, x1, y1, z1, x2, y2, z2, width); }
	int ADD_DISPATCH_SPAWN_SPHERE_BLOCKING_AREA(float x1, float y1, float x2, float y2) { return Call<int>(0xd80b70e47baa59f0, x1, y1, x2, y2); }
	int ADD_DISPATCH_SPAWN_SPHERE_BLOCKING_AREA_f(float x1, float y1, float x2, float y2) { return FastCall<int>(0xd80b70e47baa59f0, x1, y1, x2, y2); }
	void REMOVE_DISPATCH_SPAWN_BLOCKING_AREA(int p0) { Call<void>(0x57dfe969dd036f09, p0); }
	void REMOVE_DISPATCH_SPAWN_BLOCKING_AREA_f(int p0) { FastCall<void>(0x57dfe969dd036f09, p0); }
	void RESET_DISPATCH_SPAWN_BLOCKING_AREAS() { Call<void>(0x9f6cf83cfcfc6dd5); }
	void RESET_DISPATCH_SPAWN_BLOCKING_AREAS_f() { FastCall<void>(0x9f6cf83cfcfc6dd5); }
	void RESET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN() { Call<void>(0x2869a64dc34b401b); }
	void RESET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN_f() { FastCall<void>(0x2869a64dc34b401b); }
	void SET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN(int p0, int p1) { Call<void>(0x3d2381ea25b7d66e, p0, p1); }
	void SET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN_f(int p0, int p1) { FastCall<void>(0x3d2381ea25b7d66e, p0, p1); }
	void ADD_TACTICAL_NAV_MESH_POINT(float x, float y, float z) { Call<void>(0xab8a7d823a0cabf8, x, y, z); }
	void ADD_TACTICAL_NAV_MESH_POINT_f(float x, float y, float z) { FastCall<void>(0xab8a7d823a0cabf8, x, y, z); }
	void CLEAR_TACTICAL_NAV_MESH_POINTS() { Call<void>(0xdaa98d76a9a50b2f); }
	void CLEAR_TACTICAL_NAV_MESH_POINTS_f() { FastCall<void>(0xdaa98d76a9a50b2f); }
	void SET_RIOT_MODE_ENABLED(BOOL toggle) { Call<void>(0x68d4d9b2e9beb6cb, toggle); }
	void SET_RIOT_MODE_ENABLED_f(BOOL toggle) { FastCall<void>(0x68d4d9b2e9beb6cb, toggle); }
	void DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(int p0, char* windowTitle, Any* p2, char* defaultText, char* defaultConcat1, char* defaultConcat2, char* defaultConcat3, char* defaultConcat4, char* defaultConcat5, char* defaultConcat6, char* defaultConcat7, int maxInputLength) { Call<void>(0x98db2a61b6900e4a, p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, defaultConcat4, defaultConcat5, defaultConcat6, defaultConcat7, maxInputLength); }
	void DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING_f(int p0, char* windowTitle, Any* p2, char* defaultText, char* defaultConcat1, char* defaultConcat2, char* defaultConcat3, char* defaultConcat4, char* defaultConcat5, char* defaultConcat6, char* defaultConcat7, int maxInputLength) { FastCall<void>(0x98db2a61b6900e4a, p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, defaultConcat4, defaultConcat5, defaultConcat6, defaultConcat7, maxInputLength); }
	void DISPLAY_ONSCREEN_KEYBOARD(int p0, char* windowTitle, char* p2, char* defaultText, char* defaultConcat1, char* defaultConcat2, char* defaultConcat3, int maxInputLength) { Call<void>(0xa001bad74a00a03e, p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength); }
	void DISPLAY_ONSCREEN_KEYBOARD_f(int p0, char* windowTitle, char* p2, char* defaultText, char* defaultConcat1, char* defaultConcat2, char* defaultConcat3, int maxInputLength) { FastCall<void>(0xa001bad74a00a03e, p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength); }
	int UPDATE_ONSCREEN_KEYBOARD() { return Call<int>(0x720b24a65860ca5); }
	int UPDATE_ONSCREEN_KEYBOARD_f() { return FastCall<int>(0x720b24a65860ca5); }
	char* GET_ONSCREEN_KEYBOARD_RESULT() { Call<char*>(0x9b3d31ee6fb0572a); }
	char* GET_ONSCREEN_KEYBOARD_RESULT_f() { FastCall<char*>(0x9b3d31ee6fb0572a); }
	void CANCEL_ONSCREEN_KEYBOARD() { Call<void>(0x969424fabc1a5816); }
	void CANCEL_ONSCREEN_KEYBOARD_f() { FastCall<void>(0x969424fabc1a5816); }
	void NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(int p0) { Call<void>(0x8c15b8d1024fed95, p0); }
	void NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS_f(int p0) { FastCall<void>(0x8c15b8d1024fed95, p0); }
	void ACTION_MANAGER_ENABLE_ACTION(Hash hash, BOOL enable) { Call<void>(0x38021826324e65f7, hash, enable); }
	void ACTION_MANAGER_ENABLE_ACTION_f(Hash hash, BOOL enable) { FastCall<void>(0x38021826324e65f7, hash, enable); }
	int GET_REAL_WORLD_TIME() { return Call<int>(0x5c3b20d2e59e9b2); }
	int GET_REAL_WORLD_TIME_f() { return FastCall<int>(0x5c3b20d2e59e9b2); }
	void SUPRESS_RANDOM_EVENT_THIS_FRAME(int eventType, BOOL suppress) { Call<void>(0x7d54a9e1e066c00f, eventType, suppress); }
	void SUPRESS_RANDOM_EVENT_THIS_FRAME_f(int eventType, BOOL suppress) { FastCall<void>(0x7d54a9e1e066c00f, eventType, suppress); }
	void SET_EXPLOSIVE_AMMO_THIS_FRAME(Player player) { Call<void>(0xfc3b221cb0423846, player); }
	void SET_EXPLOSIVE_AMMO_THIS_FRAME_f(Player player) { FastCall<void>(0xfc3b221cb0423846, player); }
	void SET_FIRE_AMMO_THIS_FRAME(Player player) { Call<void>(0x616f17fe4fd46e51, player); }
	void SET_FIRE_AMMO_THIS_FRAME_f(Player player) { FastCall<void>(0x616f17fe4fd46e51, player); }
	void SET_EXPLOSIVE_MELEE_THIS_FRAME(Player player) { Call<void>(0x2369d079066aaf8e, player); }
	void SET_EXPLOSIVE_MELEE_THIS_FRAME_f(Player player) { FastCall<void>(0x2369d079066aaf8e, player); }
	void SET_SUPER_JUMP_THIS_FRAME(Player player) { Call<void>(0xf005a2d57b95c7fc, player); }
	void SET_SUPER_JUMP_THIS_FRAME_f(Player player) { FastCall<void>(0xf005a2d57b95c7fc, player); }
	void SET_BEAST_JUMP_THIS_FRAME(Player player) { Call<void>(0xee1425df7fa273e0, player); }
	void SET_BEAST_JUMP_THIS_FRAME_f(Player player) { FastCall<void>(0xee1425df7fa273e0, player); }
	void SET_FORCED_JUMP_THIS_FRAME(Player player) { Call<void>(0x7d717efbe756cc54, player); }
	void SET_FORCED_JUMP_THIS_FRAME_f(Player player) { FastCall<void>(0x7d717efbe756cc54, player); }
	BOOL HAS_GAME_INSTALLED_THIS_SESSION() { return Call<BOOL>(0x2ab2d1d208c6e542); }
	BOOL HAS_GAME_INSTALLED_THIS_SESSION_f() { return FastCall<BOOL>(0x2ab2d1d208c6e542); }
	void SET_TICKER_JOHNMARSTON_IS_DONE() { Call<void>(0xfd32da314d6ccd73); }
	void SET_TICKER_JOHNMARSTON_IS_DONE_f() { FastCall<void>(0xfd32da314d6ccd73); }
	BOOL ARE_PROFILE_SETTINGS_VALID() { return Call<BOOL>(0x57a58db18bf85ca1); }
	BOOL ARE_PROFILE_SETTINGS_VALID_f() { return FastCall<BOOL>(0x57a58db18bf85ca1); }
	void PREVENT_ARREST_STATE_THIS_FRAME() { Call<void>(0x84b25d7e082594ed); }
	void PREVENT_ARREST_STATE_THIS_FRAME_f() { FastCall<void>(0x84b25d7e082594ed); }
	void FORCE_GAME_STATE_PLAYING() { Call<void>(0x49490ae934ac86a7); }
	void FORCE_GAME_STATE_PLAYING_f() { FastCall<void>(0x49490ae934ac86a7); }
	void SCRIPT_RACE_INIT(int p0, int p1, Any p2, Any p3) { Call<void>(0x911f5a081e636b4a, p0, p1, p2, p3); }
	void SCRIPT_RACE_INIT_f(int p0, int p1, Any p2, Any p3) { FastCall<void>(0x911f5a081e636b4a, p0, p1, p2, p3); }
	void SCRIPT_RACE_SHUTDOWN() { Call<void>(0xde54c28102c95790); }
	void SCRIPT_RACE_SHUTDOWN_f() { FastCall<void>(0xde54c28102c95790); }
	void SCRIPT_RACE_PLAYER_HIT_CHECKPOINT(Player player, Any p1, Any p2, Any p3) { Call<void>(0xfc77354578e377f8, player, p1, p2, p3); }
	void SCRIPT_RACE_PLAYER_HIT_CHECKPOINT_f(Player player, Any p1, Any p2, Any p3) { FastCall<void>(0xfc77354578e377f8, player, p1, p2, p3); }
	BOOL SCRIPT_RACE_GET_PLAYER_SPLIT_TIME(Player player, int* p1, int* p2) { return Call<BOOL>(0x4d8faa637915d54d, player, p1, p2); }
	BOOL SCRIPT_RACE_GET_PLAYER_SPLIT_TIME_f(Player player, int* p1, int* p2) { return FastCall<BOOL>(0x4d8faa637915d54d, player, p1, p2); }
	void START_END_USER_BENCHMARK() { Call<void>(0x6ac9a9f9efbc208a); }
	void START_END_USER_BENCHMARK_f() { FastCall<void>(0x6ac9a9f9efbc208a); }
	void STOP_END_USER_BENCHMARK() { Call<void>(0x38060a728a3d4ca); }
	void STOP_END_USER_BENCHMARK_f() { FastCall<void>(0x38060a728a3d4ca); }
	void RESET_END_USER_BENCHMARK() { Call<void>(0xd1e6511b6c753e7d); }
	void RESET_END_USER_BENCHMARK_f() { FastCall<void>(0xd1e6511b6c753e7d); }
	void SAVE_END_USER_BENCHMARK() { Call<void>(0xc4a93f7690f17b6f); }
	void SAVE_END_USER_BENCHMARK_f() { FastCall<void>(0xc4a93f7690f17b6f); }
	BOOL UI_STARTED_END_USER_BENCHMARK() { return Call<BOOL>(0xac52793622ce4696); }
	BOOL UI_STARTED_END_USER_BENCHMARK_f() { return FastCall<BOOL>(0xac52793622ce4696); }
	BOOL LANDING_SCREEN_STARTED_END_USER_BENCHMARK() { return Call<BOOL>(0x43bbe15cc5fb8576); }
	BOOL LANDING_SCREEN_STARTED_END_USER_BENCHMARK_f() { return FastCall<BOOL>(0x43bbe15cc5fb8576); }
	BOOL IS_COMMANDLINE_END_USER_BENCHMARK() { return Call<BOOL>(0x80f84d806df149c2); }
	BOOL IS_COMMANDLINE_END_USER_BENCHMARK_f() { return FastCall<BOOL>(0x80f84d806df149c2); }
	int GET_BENCHMARK_ITERATIONS() { return Call<int>(0xce41145249b92741); }
	int GET_BENCHMARK_ITERATIONS_f() { return FastCall<int>(0xce41145249b92741); }
	int GET_BENCHMARK_PASS() { return Call<int>(0x73c71d8e9785ce5c); }
	int GET_BENCHMARK_PASS_f() { return FastCall<int>(0x73c71d8e9785ce5c); }
	void RESTART_GAME() { Call<void>(0x1dbb0a5f596db042); }
	void RESTART_GAME_f() { FastCall<void>(0x1dbb0a5f596db042); }
	void QUIT_GAME() { Call<void>(0x410511c4fbe2); }
	void QUIT_GAME_f() { FastCall<void>(0x410511c4fbe2); }
	BOOL HAS_ASYNC_INSTALL_FINISHED() { return Call<BOOL>(0x376878070d47a59e); }
	BOOL HAS_ASYNC_INSTALL_FINISHED_f() { return FastCall<BOOL>(0x376878070d47a59e); }
	void CLEANUP_ASYNC_INSTALL() { Call<void>(0xcb0f7def00cc441d); }
	void CLEANUP_ASYNC_INSTALL_f() { FastCall<void>(0xcb0f7def00cc441d); }
	BOOL PLM_IS_IN_CONSTRAINED_MODE() { return Call<BOOL>(0x93cdc045d8b3977f); }
	BOOL PLM_IS_IN_CONSTRAINED_MODE_f() { return FastCall<BOOL>(0x93cdc045d8b3977f); }
	int PLM_GET_CONSTRAINED_DURATION_MS() { return Call<int>(0x5b564e3fc9f7a231); }
	int PLM_GET_CONSTRAINED_DURATION_MS_f() { return FastCall<int>(0x5b564e3fc9f7a231); }
	void SET_PLAYER_IS_IN_ANIMAL_FORM(BOOL toggle) { Call<void>(0xcb34eef5e3f74041, toggle); }
	void SET_PLAYER_IS_IN_ANIMAL_FORM_f(BOOL toggle) { FastCall<void>(0xcb34eef5e3f74041, toggle); }
	BOOL GET_IS_PLAYER_IN_ANIMAL_FORM() { return Call<BOOL>(0xc428c22ffd3e29bf); }
	BOOL GET_IS_PLAYER_IN_ANIMAL_FORM_f() { return FastCall<BOOL>(0xc428c22ffd3e29bf); }
	void SET_PLAYER_IS_REPEATING_A_MISSION(BOOL toggle) { Call<void>(0x4a1ab71d35b352c2, toggle); }
	void SET_PLAYER_IS_REPEATING_A_MISSION_f(BOOL toggle) { FastCall<void>(0x4a1ab71d35b352c2, toggle); }
	void DISABLE_SCREEN_DIMMING_THIS_FRAME() { Call<void>(0xb83f891073f7c92a); }
	void DISABLE_SCREEN_DIMMING_THIS_FRAME_f() { FastCall<void>(0xb83f891073f7c92a); }
	float GET_CITY_DENSITY() { return ToFloat(Call<_float>(0x8ce87ce4a77e7c5d)); }
	float GET_CITY_DENSITY_f() { return ToFloat(FastCall<_float>(0x8ce87ce4a77e7c5d)); }
	void USE_ACTIVE_CAMERA_FOR_TIMESLICING_CENTRE() { Call<void>(0xdede6e6be1307887); }
	void USE_ACTIVE_CAMERA_FOR_TIMESLICING_CENTRE_f() { FastCall<void>(0xdede6e6be1307887); }
	void SET_CONTENT_ID_INDEX(Hash contentId, int index) { Call<void>(0x97185477c0725011, contentId, index); }
	void SET_CONTENT_ID_INDEX_f(Hash contentId, int index) { FastCall<void>(0x97185477c0725011, contentId, index); }
	int GET_CONTENT_ID_INDEX(Hash contentId) { return Call<int>(0xbc3fa6b4e4dc439d, contentId); }
	int GET_CONTENT_ID_INDEX_f(Hash contentId) { return FastCall<int>(0xbc3fa6b4e4dc439d, contentId); }
	void _SET_CONTENT_PROP_TYPE(Hash model, int type) { Call<void>(0x3bcc28b7b42cc874, model, type); }
	void _SET_CONTENT_PROP_TYPE_f(Hash model, int type) { FastCall<void>(0x3bcc28b7b42cc874, model, type); }
	int _GET_CONTENT_PROP_TYPE(Hash model) { return Call<int>(0xbb8f1e1f1d014668, model); }
	int _GET_CONTENT_PROP_TYPE_f(Hash model) { return FastCall<int>(0xbb8f1e1f1d014668, model); }
}
namespace MOBILE
{
	void CREATE_MOBILE_PHONE(int phoneType) { Call<void>(0x623989eef28b79d4, phoneType); }
	void CREATE_MOBILE_PHONE_f(int phoneType) { FastCall<void>(0x623989eef28b79d4, phoneType); }
	void DESTROY_MOBILE_PHONE() { Call<void>(0xc5152af721d7bb6); }
	void DESTROY_MOBILE_PHONE_f() { FastCall<void>(0xc5152af721d7bb6); }
	void SET_MOBILE_PHONE_SCALE(float scale) { Call<void>(0xdd1f665de02d51f9, scale); }
	void SET_MOBILE_PHONE_SCALE_f(float scale) { FastCall<void>(0xdd1f665de02d51f9, scale); }
	void SET_MOBILE_PHONE_ROTATION(float rotX, float rotY, float rotZ, Any p3) { Call<void>(0x49098666ecb8d84f, rotX, rotY, rotZ, p3); }
	void SET_MOBILE_PHONE_ROTATION_f(float rotX, float rotY, float rotZ, Any p3) { FastCall<void>(0x49098666ecb8d84f, rotX, rotY, rotZ, p3); }
	void GET_MOBILE_PHONE_ROTATION(Vector3* rotation, Vehicle p1) { Call<void>(0x99fb358cba753c43, rotation, p1); }
	void GET_MOBILE_PHONE_ROTATION_f(Vector3* rotation, Vehicle p1) { FastCall<void>(0x99fb358cba753c43, rotation, p1); }
	void SET_MOBILE_PHONE_POSITION(float posX, float posY, float posZ) { Call<void>(0x4909865a1bb261fa, posX, posY, posZ); }
	void SET_MOBILE_PHONE_POSITION_f(float posX, float posY, float posZ) { FastCall<void>(0x4909865a1bb261fa, posX, posY, posZ); }
	void GET_MOBILE_PHONE_POSITION(Vector3* position) { Call<void>(0x99fb357fe96ec5ee, position); }
	void GET_MOBILE_PHONE_POSITION_f(Vector3* position) { FastCall<void>(0x99fb357fe96ec5ee, position); }
	void SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN(BOOL toggle) { Call<void>(0x5e57b28c1e025edd, toggle); }
	void SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN_f(BOOL toggle) { FastCall<void>(0x5e57b28c1e025edd, toggle); }
	BOOL CAN_PHONE_BE_SEEN_ON_SCREEN() { return Call<BOOL>(0x56e805184794e944); }
	BOOL CAN_PHONE_BE_SEEN_ON_SCREEN_f() { return FastCall<BOOL>(0x56e805184794e944); }
	void SET_MOBILE_PHONE_DOF_STATE(BOOL toggle) { Call<void>(0xd8273b97dd34f99c, toggle); }
	void SET_MOBILE_PHONE_DOF_STATE_f(BOOL toggle) { FastCall<void>(0xd8273b97dd34f99c, toggle); }
	void CELL_SET_INPUT(int direction) { Call<void>(0xbda951339df1f2d0, direction); }
	void CELL_SET_INPUT_f(int direction) { FastCall<void>(0xbda951339df1f2d0, direction); }
	void CELL_HORIZONTAL_MODE_TOGGLE(BOOL toggle) { Call<void>(0x5b74d200a3189d52, toggle); }
	void CELL_HORIZONTAL_MODE_TOGGLE_f(BOOL toggle) { FastCall<void>(0x5b74d200a3189d52, toggle); }
	void CELL_CAM_ACTIVATE(BOOL p0, BOOL p1) { Call<void>(0x14efe965435e5f40, p0, p1); }
	void CELL_CAM_ACTIVATE_f(BOOL p0, BOOL p1) { FastCall<void>(0x14efe965435e5f40, p0, p1); }
	void CELL_CAM_ACTIVATE_SELFIE_MODE(BOOL toggle) { Call<void>(0x6df2d0b95c0ebb9b, toggle); }
	void CELL_CAM_ACTIVATE_SELFIE_MODE_f(BOOL toggle) { FastCall<void>(0x6df2d0b95c0ebb9b, toggle); }
	void CELL_CAM_ACTIVATE_SHALLOW_DOF_MODE(BOOL toggle) { Call<void>(0x73034016985d9b51, toggle); }
	void CELL_CAM_ACTIVATE_SHALLOW_DOF_MODE_f(BOOL toggle) { FastCall<void>(0x73034016985d9b51, toggle); }
	void CELL_CAM_SET_SELFIE_MODE_SIDE_OFFSET_SCALING(float p0) { Call<void>(0x9a74b98f1a31c794, p0); }
	void CELL_CAM_SET_SELFIE_MODE_SIDE_OFFSET_SCALING_f(float p0) { FastCall<void>(0x9a74b98f1a31c794, p0); }
	void CELL_CAM_SET_SELFIE_MODE_HORZ_PAN_OFFSET(float horizontalPan) { Call<void>(0x1db30c8ed063f7b6, horizontalPan); }
	void CELL_CAM_SET_SELFIE_MODE_HORZ_PAN_OFFSET_f(float horizontalPan) { FastCall<void>(0x1db30c8ed063f7b6, horizontalPan); }
	void CELL_CAM_SET_SELFIE_MODE_VERT_PAN_OFFSET(float vertPan) { Call<void>(0x58def224b99006d4, vertPan); }
	void CELL_CAM_SET_SELFIE_MODE_VERT_PAN_OFFSET_f(float vertPan) { FastCall<void>(0x58def224b99006d4, vertPan); }
	void CELL_CAM_SET_SELFIE_MODE_ROLL_OFFSET(float roll) { Call<void>(0xcc71b5d45ec66b86, roll); }
	void CELL_CAM_SET_SELFIE_MODE_ROLL_OFFSET_f(float roll) { FastCall<void>(0xcc71b5d45ec66b86, roll); }
	void CELL_CAM_SET_SELFIE_MODE_DISTANCE_SCALING(float distanceScaling) { Call<void>(0x3367d68e553baecc, distanceScaling); }
	void CELL_CAM_SET_SELFIE_MODE_DISTANCE_SCALING_f(float distanceScaling) { FastCall<void>(0x3367d68e553baecc, distanceScaling); }
	void CELL_CAM_SET_SELFIE_MODE_HEAD_YAW_OFFSET(float yaw) { Call<void>(0x1f80aee2bb4200b3, yaw); }
	void CELL_CAM_SET_SELFIE_MODE_HEAD_YAW_OFFSET_f(float yaw) { FastCall<void>(0x1f80aee2bb4200b3, yaw); }
	void CELL_CAM_SET_SELFIE_MODE_HEAD_ROLL_OFFSET(float roll) { Call<void>(0xd08212fb3fd3e465, roll); }
	void CELL_CAM_SET_SELFIE_MODE_HEAD_ROLL_OFFSET_f(float roll) { FastCall<void>(0xd08212fb3fd3e465, roll); }
	void CELL_CAM_SET_SELFIE_MODE_HEAD_PITCH_OFFSET(float pitch) { Call<void>(0x3efb02d1a24b62c2, pitch); }
	void CELL_CAM_SET_SELFIE_MODE_HEAD_PITCH_OFFSET_f(float pitch) { FastCall<void>(0x3efb02d1a24b62c2, pitch); }
	BOOL CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK(Entity entity) { return Call<BOOL>(0xf0491ed1a9796876, entity); }
	BOOL CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK_f(Entity entity) { return FastCall<BOOL>(0xf0491ed1a9796876, entity); }
	void GET_MOBILE_PHONE_RENDER_ID(int* renderId) { Call<void>(0xa56b7bc94c50a43f, renderId); }
	void GET_MOBILE_PHONE_RENDER_ID_f(int* renderId) { FastCall<void>(0xa56b7bc94c50a43f, renderId); }
}
namespace MONEY
{
	void NETWORK_INITIALIZE_CASH(int wallet, int bank) { Call<void>(0x661de43baac50e51, wallet, bank); }
	void NETWORK_INITIALIZE_CASH_f(int wallet, int bank) { FastCall<void>(0x661de43baac50e51, wallet, bank); }
	void NETWORK_DELETE_CHARACTER(int characterSlot, BOOL p1, BOOL p2) { Call<void>(0x222ba05ee18dff86, characterSlot, p1, p2); }
	void NETWORK_DELETE_CHARACTER_f(int characterSlot, BOOL p1, BOOL p2) { FastCall<void>(0x222ba05ee18dff86, characterSlot, p1, p2); }
	void NETWORK_MANUAL_DELETE_CHARACTER(int characterSlot) { Call<void>(0x3b9bb4100073519d, characterSlot); }
	void NETWORK_MANUAL_DELETE_CHARACTER_f(int characterSlot) { FastCall<void>(0x3b9bb4100073519d, characterSlot); }
	BOOL NETWORK_GET_PLAYER_IS_HIGH_EARNER() { return Call<BOOL>(0xff12dec386686611); }
	BOOL NETWORK_GET_PLAYER_IS_HIGH_EARNER_f() { return FastCall<BOOL>(0xff12dec386686611); }
	void NETWORK_CLEAR_CHARACTER_WALLET(int characterSlot) { Call<void>(0x6d3c71533425db12, characterSlot); }
	void NETWORK_CLEAR_CHARACTER_WALLET_f(int characterSlot) { FastCall<void>(0x6d3c71533425db12, characterSlot); }
	void NETWORK_GIVE_PLAYER_JOBSHARE_CASH(int amount, Any* gamerHandle) { Call<void>(0x3d49552b15ff3baf, amount, gamerHandle); }
	void NETWORK_GIVE_PLAYER_JOBSHARE_CASH_f(int amount, Any* gamerHandle) { FastCall<void>(0x3d49552b15ff3baf, amount, gamerHandle); }
	void NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH(int value, Any* gamerHandle) { Call<void>(0x5680bad7d59b22bf, value, gamerHandle); }
	void NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH_f(int value, Any* gamerHandle) { FastCall<void>(0x5680bad7d59b22bf, value, gamerHandle); }
	BOOL NETWORK_CAN_SHARE_JOB_CASH() { return Call<BOOL>(0xfb8f25761b5555); }
	BOOL NETWORK_CAN_SHARE_JOB_CASH_f() { return FastCall<BOOL>(0xfb8f25761b5555); }
	void NETWORK_REFUND_CASH(int index, char* context, char* reason, BOOL p3) { Call<void>(0xddb3d798bdab62e9, index, context, reason, p3); }
	void NETWORK_REFUND_CASH_f(int index, char* context, char* reason, BOOL p3) { FastCall<void>(0xddb3d798bdab62e9, index, context, reason, p3); }
	void NETWORK_DEDUCT_CASH(int amount, char* p1, char* p2, BOOL p3, BOOL p4, BOOL p5) { Call<void>(0xdd8b11c54609bc7e, amount, p1, p2, p3, p4, p5); }
	void NETWORK_DEDUCT_CASH_f(int amount, char* p1, char* p2, BOOL p3, BOOL p4, BOOL p5) { FastCall<void>(0xdd8b11c54609bc7e, amount, p1, p2, p3, p4, p5); }
	BOOL NETWORK_MONEY_CAN_BET(int amount, BOOL p1, BOOL p2) { return Call<BOOL>(0xd1125808f231252, amount, p1, p2); }
	BOOL NETWORK_MONEY_CAN_BET_f(int amount, BOOL p1, BOOL p2) { return FastCall<BOOL>(0xd1125808f231252, amount, p1, p2); }
	BOOL NETWORK_CAN_BET(int amount) { return Call<BOOL>(0xb26da6739c587a31, amount); }
	BOOL NETWORK_CAN_BET_f(int amount) { return FastCall<BOOL>(0xb26da6739c587a31, amount); }
	BOOL NETWORK_CASINO_CAN_BET(Hash hash) { return Call<BOOL>(0xc13b2ed4dd632769, hash); }
	BOOL NETWORK_CASINO_CAN_BET_f(Hash hash) { return FastCall<BOOL>(0xc13b2ed4dd632769, hash); }
	BOOL NETWORK_CASINO_CAN_BET_PVC() { return Call<BOOL>(0x3fabd4939f6bb127); }
	BOOL NETWORK_CASINO_CAN_BET_PVC_f() { return FastCall<BOOL>(0x3fabd4939f6bb127); }
	BOOL NETWORK_CASINO_CAN_BET_AMOUNT(Any p0) { return Call<BOOL>(0x7d16c704db2ba1ee, p0); }
	BOOL NETWORK_CASINO_CAN_BET_AMOUNT_f(Any p0) { return FastCall<BOOL>(0x7d16c704db2ba1ee, p0); }
	BOOL NETWORK_CASINO_CAN_BUY_CHIPS_PVC() { return Call<BOOL>(0xc354ecc659a4cea4); }
	BOOL NETWORK_CASINO_CAN_BUY_CHIPS_PVC_f() { return FastCall<BOOL>(0xc354ecc659a4cea4); }
	BOOL NETWORK_CASINO_BUY_CHIPS(int p0, int p1) { return Call<BOOL>(0x5f2acccee07de4b5, p0, p1); }
	BOOL NETWORK_CASINO_BUY_CHIPS_f(int p0, int p1) { return FastCall<BOOL>(0x5f2acccee07de4b5, p0, p1); }
	BOOL NETWORK_CASINO_SELL_CHIPS(int p0, int p1) { return Call<BOOL>(0x863059181fd344f3, p0, p1); }
	BOOL NETWORK_CASINO_SELL_CHIPS_f(int p0, int p1) { return FastCall<BOOL>(0x863059181fd344f3, p0, p1); }
	void NETWORK_DEFER_CASH_TRANSACTIONS_UNTIL_SHOP_SAVE() { Call<void>(0x185743ec960cbd29); }
	void NETWORK_DEFER_CASH_TRANSACTIONS_UNTIL_SHOP_SAVE_f() { FastCall<void>(0x185743ec960cbd29); }
	BOOL CAN_PAY_AMOUNT_TO_BOSS(int p0, int p1, int amount, int* p3) { return Call<BOOL>(0x8d5ff46669cda750, p0, p1, amount, p3); }
	BOOL CAN_PAY_AMOUNT_TO_BOSS_f(int p0, int p1, int amount, int* p3) { return FastCall<BOOL>(0x8d5ff46669cda750, p0, p1, amount, p3); }
	void NETWORK_EARN_FROM_PICKUP(int amount) { Call<void>(0x64b3a52fb5e928db, amount); }
	void NETWORK_EARN_FROM_PICKUP_f(int amount) { FastCall<void>(0x64b3a52fb5e928db, amount); }
	void NETWORK_EARN_FROM_CASHING_OUT(int amount) { Call<void>(0x740f1c5aabe0639f, amount); }
	void NETWORK_EARN_FROM_CASHING_OUT_f(int amount) { FastCall<void>(0x740f1c5aabe0639f, amount); }
	void NETWORK_EARN_FROM_GANGATTACK_PICKUP(int amount) { Call<void>(0xc312b33740e89f61, amount); }
	void NETWORK_EARN_FROM_GANGATTACK_PICKUP_f(int amount) { FastCall<void>(0xc312b33740e89f61, amount); }
	void NETWORK_EARN_ASSASSINATE_TARGET_KILLED(int amount) { Call<void>(0x4ef582e86c546fa3, amount); }
	void NETWORK_EARN_ASSASSINATE_TARGET_KILLED_f(int amount) { FastCall<void>(0x4ef582e86c546fa3, amount); }
	void NETWORK_EARN_FROM_ROB_ARMORED_CARS(int amount) { Call<void>(0xe288298bad92d4b9, amount); }
	void NETWORK_EARN_FROM_ROB_ARMORED_CARS_f(int amount) { FastCall<void>(0xe288298bad92d4b9, amount); }
	void NETWORK_EARN_FROM_CRATE_DROP(int amount) { Call<void>(0xeaf8477799cc24ea, amount); }
	void NETWORK_EARN_FROM_CRATE_DROP_f(int amount) { FastCall<void>(0xeaf8477799cc24ea, amount); }
	void NETWORK_EARN_FROM_BETTING(int amount, char* p1) { Call<void>(0x31c100c41cc4cc60, amount, p1); }
	void NETWORK_EARN_FROM_BETTING_f(int amount, char* p1) { FastCall<void>(0x31c100c41cc4cc60, amount, p1); }
	void NETWORK_EARN_FROM_JOB(int amount, char* p1) { Call<void>(0xb0bb2a791f6c299e, amount, p1); }
	void NETWORK_EARN_FROM_JOB_f(int amount, char* p1) { FastCall<void>(0xb0bb2a791f6c299e, amount, p1); }
	void NETWORK_EARN_FROM_JOBX2(int amount, char* p1) { Call<void>(0x6e9a70aef50844f8, amount, p1); }
	void NETWORK_EARN_FROM_JOBX2_f(int amount, char* p1) { FastCall<void>(0x6e9a70aef50844f8, amount, p1); }
	void NETWORK_EARN_FROM_PREMIUM_JOB(int amount, char* p1) { Call<void>(0x7436853b6c4c2e96, amount, p1); }
	void NETWORK_EARN_FROM_PREMIUM_JOB_f(int amount, char* p1) { FastCall<void>(0x7436853b6c4c2e96, amount, p1); }
	void NETWORK_EARN_FROM_BEND_JOB(int amount, char* heistHash) { Call<void>(0x65f17bf70c02636, amount, heistHash); }
	void NETWORK_EARN_FROM_BEND_JOB_f(int amount, char* heistHash) { FastCall<void>(0x65f17bf70c02636, amount, heistHash); }
	void NETWORK_EARN_FROM_CHALLENGE_WIN(Any p0, Any* p1, BOOL p2) { Call<void>(0xaefd4abc22f46e81, p0, p1, p2); }
	void NETWORK_EARN_FROM_CHALLENGE_WIN_f(Any p0, Any* p1, BOOL p2) { FastCall<void>(0xaefd4abc22f46e81, p0, p1, p2); }
	void NETWORK_EARN_FROM_BOUNTY(int amount, Any* gamerHandle, Any* p2, Any p3) { Call<void>(0x64b3a52f9e62170a, amount, gamerHandle, p2, p3); }
	void NETWORK_EARN_FROM_BOUNTY_f(int amount, Any* gamerHandle, Any* p2, Any p3) { FastCall<void>(0x64b3a52f9e62170a, amount, gamerHandle, p2, p3); }
	void NETWORK_EARN_FROM_IMPORT_EXPORT(int amount, Hash modelHash) { Call<void>(0xf282a8c78772e64f, amount, modelHash); }
	void NETWORK_EARN_FROM_IMPORT_EXPORT_f(int amount, Hash modelHash) { FastCall<void>(0xf282a8c78772e64f, amount, modelHash); }
	void NETWORK_EARN_FROM_HOLDUPS(int amount) { Call<void>(0x31c100c56ac2d17a, amount); }
	void NETWORK_EARN_FROM_HOLDUPS_f(int amount) { FastCall<void>(0x31c100c56ac2d17a, amount); }
	void NETWORK_EARN_FROM_PROPERTY(int amount, Hash propertyName) { Call<void>(0x65f181bd113dc74, amount, propertyName); }
	void NETWORK_EARN_FROM_PROPERTY_f(int amount, Hash propertyName) { FastCall<void>(0x65f181bd113dc74, amount, propertyName); }
	void NETWORK_EARN_FROM_AI_TARGET_KILL(Any p0, Any p1) { Call<void>(0xa08ba929d5481f14, p0, p1); }
	void NETWORK_EARN_FROM_AI_TARGET_KILL_f(Any p0, Any p1) { FastCall<void>(0xa08ba929d5481f14, p0, p1); }
	void NETWORK_EARN_FROM_NOT_BADSPORT(int amount) { Call<void>(0x11de5293031ed9ba, amount); }
	void NETWORK_EARN_FROM_NOT_BADSPORT_f(int amount) { FastCall<void>(0x11de5293031ed9ba, amount); }
	void NETWORK_EARN_FROM_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { Call<void>(0x31c100c83e133c8d, p0, p1, p2, p3, p4, p5, p6, p7); }
	void NETWORK_EARN_FROM_VEHICLE_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { FastCall<void>(0x31c100c83e133c8d, p0, p1, p2, p3, p4, p5, p6, p7); }
	void NETWORK_EARN_FROM_PERSONAL_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) { Call<void>(0x1f1aa2e709a797ac, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void NETWORK_EARN_FROM_PERSONAL_VEHICLE_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) { FastCall<void>(0x1f1aa2e709a797ac, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void NETWORK_EARN_FROM_DAILY_OBJECTIVES(int amount, char* type, int characterSlot) { Call<void>(0x229b6bc84ef783ff, amount, type, characterSlot); }
	void NETWORK_EARN_FROM_DAILY_OBJECTIVES_f(int amount, char* type, int characterSlot) { FastCall<void>(0x229b6bc84ef783ff, amount, type, characterSlot); }
	void NETWORK_EARN_FROM_AMBIENT_JOB(int p0, char* p1, Any* p2) { Call<void>(0x740a5cdab1fc4a57, p0, p1, p2); }
	void NETWORK_EARN_FROM_AMBIENT_JOB_f(int p0, char* p1, Any* p2) { FastCall<void>(0x740a5cdab1fc4a57, p0, p1, p2); }
	void NETWORK_EARN_FROM_JOB_BONUS(Any p0, Any* p1, Any* p2) { Call<void>(0xc583e6a109e5861e, p0, p1, p2); }
	void NETWORK_EARN_FROM_JOB_BONUS_f(Any p0, Any* p1, Any* p2) { FastCall<void>(0xc583e6a109e5861e, p0, p1, p2); }
	void NETWORK_EARN_FROM_CRIMINAL_MASTERMIND(Any p0, Any p1, Any p2) { Call<void>(0xc658ade7add1ff11, p0, p1, p2); }
	void NETWORK_EARN_FROM_CRIMINAL_MASTERMIND_f(Any p0, Any p1, Any p2) { FastCall<void>(0xc658ade7add1ff11, p0, p1, p2); }
	void NETWORK_EARN_HEIST_AWARD(Any p0, Any p1, Any p2) { Call<void>(0x64b83af640f09df5, p0, p1, p2); }
	void NETWORK_EARN_HEIST_AWARD_f(Any p0, Any p1, Any p2) { FastCall<void>(0x64b83af640f09df5, p0, p1, p2); }
	void NETWORK_EARN_FIRST_TIME_BONUS(Any p0, Any p1, Any p2) { Call<void>(0x5c4f7aa55b7f4332, p0, p1, p2); }
	void NETWORK_EARN_FIRST_TIME_BONUS_f(Any p0, Any p1, Any p2) { FastCall<void>(0x5c4f7aa55b7f4332, p0, p1, p2); }
	void NETWORK_EARN_GOON(Any p0, Any p1, Any p2) { Call<void>(0xcd9dd98bc8dba3dd, p0, p1, p2); }
	void NETWORK_EARN_GOON_f(Any p0, Any p1, Any p2) { FastCall<void>(0xcd9dd98bc8dba3dd, p0, p1, p2); }
	void NETWORK_EARN_BOSS(Any p0, Any p1, Any p2) { Call<void>(0xcd9dd98bc8d95e83, p0, p1, p2); }
	void NETWORK_EARN_BOSS_f(Any p0, Any p1, Any p2) { FastCall<void>(0xcd9dd98bc8d95e83, p0, p1, p2); }
	void NETWORK_EARN_AGENCY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xdd8da5bcf5cfcd9b, p0, p1, p2, p3); }
	void NETWORK_EARN_AGENCY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xdd8da5bcf5cfcd9b, p0, p1, p2, p3); }
	void NETWORK_EARN_FROM_WAREHOUSE(int amount, int id) { Call<void>(0xc583f06005690fe4, amount, id); }
	void NETWORK_EARN_FROM_WAREHOUSE_f(int amount, int id) { FastCall<void>(0xc583f06005690fe4, amount, id); }
	void NETWORK_EARN_FROM_CONTRABAND(int amount, Any p1) { Call<void>(0xeaf8457737f53575, amount, p1); }
	void NETWORK_EARN_FROM_CONTRABAND_f(int amount, Any p1) { FastCall<void>(0xeaf8457737f53575, amount, p1); }
	void NETWORK_EARN_FROM_DESTROYING_CONTRABAND(Any p0, Any p1, Any p2) { Call<void>(0xe730c1900ea3514e, p0, p1, p2); }
	void NETWORK_EARN_FROM_DESTROYING_CONTRABAND_f(Any p0, Any p1, Any p2) { FastCall<void>(0xe730c1900ea3514e, p0, p1, p2); }
	void NETWORK_EARN_FROM_SMUGGLER_WORK(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { Call<void>(0x5fdfd62d37f5beb3, p0, p1, p2, p3, p4, p5); }
	void NETWORK_EARN_FROM_SMUGGLER_WORK_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { FastCall<void>(0x5fdfd62d37f5beb3, p0, p1, p2, p3, p4, p5); }
	void NETWORK_EARN_FROM_HANGAR_TRADE(Any p0, Any p1) { Call<void>(0xf974e2659da8947, p0, p1); }
	void NETWORK_EARN_FROM_HANGAR_TRADE_f(Any p0, Any p1) { FastCall<void>(0xf974e2659da8947, p0, p1); }
	void NETWORK_EARN_PURCHASE_CLUB_HOUSE(Any p0, Any p1) { Call<void>(0x55ae43f2ba3a5a5f, p0, p1); }
	void NETWORK_EARN_PURCHASE_CLUB_HOUSE_f(Any p0, Any p1) { FastCall<void>(0x55ae43f2ba3a5a5f, p0, p1); }
	void NETWORK_EARN_FROM_BUSINESS_PRODUCT(int amount, Any p1, Any p2, Any p3) { Call<void>(0xcc8c9cc6b29aeeef, amount, p1, p2, p3); }
	void NETWORK_EARN_FROM_BUSINESS_PRODUCT_f(int amount, Any p1, Any p2, Any p3) { FastCall<void>(0xcc8c9cc6b29aeeef, amount, p1, p2, p3); }
	void NETWORK_EARN_FROM_VEHICLE_EXPORT(int amount, Any p1, Any p2) { Call<void>(0x38add0c07042ffa6, amount, p1, p2); }
	void NETWORK_EARN_FROM_VEHICLE_EXPORT_f(int amount, Any p1, Any p2) { FastCall<void>(0x38add0c07042ffa6, amount, p1, p2); }
	void NETWORK_EARN_SMUGGLER_AGENCY(int amount, Any p1, Any p2, Any p3) { Call<void>(0xfd0ed22b66e1c9d0, amount, p1, p2, p3); }
	void NETWORK_EARN_SMUGGLER_AGENCY_f(int amount, Any p1, Any p2, Any p3) { FastCall<void>(0xfd0ed22b66e1c9d0, amount, p1, p2, p3); }
	void NETWORK_EARN_BOUNTY_HUNTER_REWARD(Any p0) { Call<void>(0x86168e593c10d350, p0); }
	void NETWORK_EARN_BOUNTY_HUNTER_REWARD_f(Any p0) { FastCall<void>(0x86168e593c10d350, p0); }
	void NETWORK_EARN_FROM_BUSINESS_BATTLE(Any p0) { Call<void>(0xd50ccb401e7e6a98, p0); }
	void NETWORK_EARN_FROM_BUSINESS_BATTLE_f(Any p0) { FastCall<void>(0xd50ccb401e7e6a98, p0); }
	void NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION(Any p0, int p1) { Call<void>(0xcf8405e77614d44f, p0, p1); }
	void NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION_f(Any p0, int p1) { FastCall<void>(0xcf8405e77614d44f, p0, p1); }
	void NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION(Any p0) { Call<void>(0xe1975a4b65907640, p0); }
	void NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION_f(Any p0) { FastCall<void>(0xe1975a4b65907640, p0); }
	void NETWORK_EARN_FROM_BUSINESS_HUB_SELL(Any p0, Any p1, Any p2) { Call<void>(0xc506fbdcebb8d25c, p0, p1, p2); }
	void NETWORK_EARN_FROM_BUSINESS_HUB_SELL_f(Any p0, Any p1, Any p2) { FastCall<void>(0xc506fbdcebb8d25c, p0, p1, p2); }
	void NETWORK_EARN_FROM_FMBB_BOSS_WORK(Any p0) { Call<void>(0x602854621fba850a, p0); }
	void NETWORK_EARN_FROM_FMBB_BOSS_WORK_f(Any p0) { FastCall<void>(0x602854621fba850a, p0); }
	void NETWORK_EARN_FMBB_WAGE_BONUS(Any p0) { Call<void>(0xbaaff81d7cf3194a, p0); }
	void NETWORK_EARN_FMBB_WAGE_BONUS_f(Any p0) { FastCall<void>(0xbaaff81d7cf3194a, p0); }
	BOOL NETWORK_CAN_SPEND_MONEY(Any p0, BOOL p1, BOOL p2, BOOL p3, Any p4, Any p5) { return Call<BOOL>(0x375376c7ceeee81f, p0, p1, p2, p3, p4, p5); }
	BOOL NETWORK_CAN_SPEND_MONEY_f(Any p0, BOOL p1, BOOL p2, BOOL p3, Any p4, Any p5) { return FastCall<BOOL>(0x375376c7ceeee81f, p0, p1, p2, p3, p4, p5); }
	BOOL NETWORK_CAN_SPEND_MONEY2(Any p0, BOOL p1, BOOL p2, BOOL p3, Any* p4, Any p5, Any p6) { return Call<BOOL>(0xb31b62320eee1bf3, p0, p1, p2, p3, p4, p5, p6); }
	BOOL NETWORK_CAN_SPEND_MONEY2_f(Any p0, BOOL p1, BOOL p2, BOOL p3, Any* p4, Any p5, Any p6) { return FastCall<BOOL>(0xb31b62320eee1bf3, p0, p1, p2, p3, p4, p5, p6); }
	void NETWORK_BUY_ITEM(int amount, Hash item, Any p2, Any p3, BOOL p4, char* item_name, Any p6, Any p7, Any p8, BOOL p9) { Call<void>(0x9b4727fdbb9af45d, amount, item, p2, p3, p4, item_name, p6, p7, p8, p9); }
	void NETWORK_BUY_ITEM_f(int amount, Hash item, Any p2, Any p3, BOOL p4, char* item_name, Any p6, Any p7, Any p8, BOOL p9) { FastCall<void>(0x9b4727fdbb9af45d, amount, item, p2, p3, p4, item_name, p6, p7, p8, p9); }
	void NETWORK_SPENT_TAXI(int amount, BOOL p1, BOOL p2, Any p3, Any p4) { Call<void>(0xe61eb3e406bf3940, amount, p1, p2, p3, p4); }
	void NETWORK_SPENT_TAXI_f(int amount, BOOL p1, BOOL p2, Any p3, Any p4) { FastCall<void>(0xe61eb3e406bf3940, amount, p1, p2, p3, p4); }
	void NETWORK_PAY_EMPLOYEE_WAGE(Any p0, BOOL p1, BOOL p2) { Call<void>(0x629ec924574388b1, p0, p1, p2); }
	void NETWORK_PAY_EMPLOYEE_WAGE_f(Any p0, BOOL p1, BOOL p2) { FastCall<void>(0x629ec924574388b1, p0, p1, p2); }
	void NETWORK_PAY_MATCH_ENTRY_FEE(int amount, char* matchId, BOOL p2, BOOL p3) { Call<void>(0xc1dc298c431a0277, amount, matchId, p2, p3); }
	void NETWORK_PAY_MATCH_ENTRY_FEE_f(int amount, char* matchId, BOOL p2, BOOL p3) { FastCall<void>(0xc1dc298c431a0277, amount, matchId, p2, p3); }
	void NETWORK_SPENT_BETTING(int amount, int p1, char* matchId, BOOL p3, BOOL p4) { Call<void>(0x4ee814a97558347d, amount, p1, matchId, p3, p4); }
	void NETWORK_SPENT_BETTING_f(int amount, int p1, char* matchId, BOOL p3, BOOL p4) { FastCall<void>(0x4ee814a97558347d, amount, p1, matchId, p3, p4); }
	void NETWORK_SPENT_WAGER(Any p0, Any p1, int amount) { Call<void>(0xddb7c89cd151f548, p0, p1, amount); }
	void NETWORK_SPENT_WAGER_f(Any p0, Any p1, int amount) { FastCall<void>(0xddb7c89cd151f548, p0, p1, amount); }
	void NETWORK_SPENT_IN_STRIPCLUB(Any p0, BOOL p1, Any p2, BOOL p3) { Call<void>(0x6c2c9a761f5ce36, p0, p1, p2, p3); }
	void NETWORK_SPENT_IN_STRIPCLUB_f(Any p0, BOOL p1, Any p2, BOOL p3) { FastCall<void>(0x6c2c9a761f5ce36, p0, p1, p2, p3); }
	void NETWORK_BUY_HEALTHCARE(int cost, BOOL p1, BOOL p2) { Call<void>(0x4b5a84bbe2edbd37, cost, p1, p2); }
	void NETWORK_BUY_HEALTHCARE_f(int cost, BOOL p1, BOOL p2) { FastCall<void>(0x4b5a84bbe2edbd37, cost, p1, p2); }
	void NETWORK_BUY_AIRSTRIKE(int cost, BOOL p1, BOOL p2, Any p3) { Call<void>(0x97136a5217b40652, cost, p1, p2, p3); }
	void NETWORK_BUY_AIRSTRIKE_f(int cost, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x97136a5217b40652, cost, p1, p2, p3); }
	void NETWORK_BUY_BACKUP_GANG(int p0, int p1, BOOL p2, BOOL p3, int npcProvider) { Call<void>(0x1fe43b683109b3e6, p0, p1, p2, p3, npcProvider); }
	void NETWORK_BUY_BACKUP_GANG_f(int p0, int p1, BOOL p2, BOOL p3, int npcProvider) { FastCall<void>(0x1fe43b683109b3e6, p0, p1, p2, p3, npcProvider); }
	void NETWORK_BUY_HELI_STRIKE(int cost, BOOL p1, BOOL p2, Any p3) { Call<void>(0x1ff61b37fbb82bcd, cost, p1, p2, p3); }
	void NETWORK_BUY_HELI_STRIKE_f(int cost, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x1ff61b37fbb82bcd, cost, p1, p2, p3); }
	void NETWORK_SPENT_AMMO_DROP(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0x35358f8cb13fd3de, p0, p1, p2, p3); }
	void NETWORK_SPENT_AMMO_DROP_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x35358f8cb13fd3de, p0, p1, p2, p3); }
	void NETWORK_BUY_BOUNTY(int amount, Player victim, BOOL p2, BOOL p3, Any p4) { Call<void>(0xe61d1f7d347e4375, amount, victim, p2, p3, p4); }
	void NETWORK_BUY_BOUNTY_f(int amount, Player victim, BOOL p2, BOOL p3, Any p4) { FastCall<void>(0xe61d1f7d347e4375, amount, victim, p2, p3, p4); }
	void NETWORK_BUY_PROPERTY(int cost, Hash propertyName, BOOL p2, BOOL p3) { Call<void>(0xd353355c50d69a1f, cost, propertyName, p2, p3); }
	void NETWORK_BUY_PROPERTY_f(int cost, Hash propertyName, BOOL p2, BOOL p3) { FastCall<void>(0xd353355c50d69a1f, cost, propertyName, p2, p3); }
	void NETWORK_BUY_SMOKES(int p0, BOOL p1, BOOL p2) { Call<void>(0xe61d1f7d5161afae, p0, p1, p2); }
	void NETWORK_BUY_SMOKES_f(int p0, BOOL p1, BOOL p2) { FastCall<void>(0xe61d1f7d5161afae, p0, p1, p2); }
	void NETWORK_SPENT_HELI_PICKUP(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0xbe237ffae0fa09bf, p0, p1, p2, p3); }
	void NETWORK_SPENT_HELI_PICKUP_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0xbe237ffae0fa09bf, p0, p1, p2, p3); }
	void NETWORK_SPENT_BOAT_PICKUP(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0xbe12ef8106386cf9, p0, p1, p2, p3); }
	void NETWORK_SPENT_BOAT_PICKUP_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0xbe12ef8106386cf9, p0, p1, p2, p3); }
	void NETWORK_SPENT_BULL_SHARK(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0x717c80430762533b, p0, p1, p2, p3); }
	void NETWORK_SPENT_BULL_SHARK_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x717c80430762533b, p0, p1, p2, p3); }
	void NETWORK_SPENT_CASH_DROP(int amount, BOOL p1, BOOL p2) { Call<void>(0x353590ce2cae0e99, amount, p1, p2); }
	void NETWORK_SPENT_CASH_DROP_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0x353590ce2cae0e99, amount, p1, p2); }
	void NETWORK_SPENT_HIRE_MUGGER(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0xbe23e4b887c2057e, p0, p1, p2, p3); }
	void NETWORK_SPENT_HIRE_MUGGER_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0xbe23e4b887c2057e, p0, p1, p2, p3); }
	void NETWORK_SPENT_ROBBED_BY_MUGGER(int amount, BOOL p1, BOOL p2, Any p3) { Call<void>(0x5338d862ad1e785c, amount, p1, p2, p3); }
	void NETWORK_SPENT_ROBBED_BY_MUGGER_f(int amount, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x5338d862ad1e785c, amount, p1, p2, p3); }
	void NETWORK_SPENT_HIRE_MERCENARY(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0xd2f57d9a0c7aa9ed, p0, p1, p2, p3); }
	void NETWORK_SPENT_HIRE_MERCENARY_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0xd2f57d9a0c7aa9ed, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_WANTEDLEVEL(Any p0, Any* p1, BOOL p2, BOOL p3, Any p4) { Call<void>(0x8f695d519f4c2d5a, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_BUY_WANTEDLEVEL_f(Any p0, Any* p1, BOOL p2, BOOL p3, Any p4) { FastCall<void>(0x8f695d519f4c2d5a, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_BUY_OFFTHERADAR(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0x8f5283c4bc2c56c9, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_OFFTHERADAR_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x8f5283c4bc2c56c9, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_REVEAL_PLAYERS(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0x867358d632062dbb, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_REVEAL_PLAYERS_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x867358d632062dbb, p0, p1, p2, p3); }
	void NETWORK_SPENT_CARWASH(Any p0, Any p1, Any p2, BOOL p3, BOOL p4) { Call<void>(0x4ee814a9a3501df1, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_CARWASH_f(Any p0, Any p1, Any p2, BOOL p3, BOOL p4) { FastCall<void>(0x4ee814a9a3501df1, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_CINEMA(Any p0, Any p1, BOOL p2, BOOL p3) { Call<void>(0xd9414afd373fb193, p0, p1, p2, p3); }
	void NETWORK_SPENT_CINEMA_f(Any p0, Any p1, BOOL p2, BOOL p3) { FastCall<void>(0xd9414afd373fb193, p0, p1, p2, p3); }
	void NETWORK_SPENT_TELESCOPE(Any p0, BOOL p1, BOOL p2) { Call<void>(0x35359e162caa5ee8, p0, p1, p2); }
	void NETWORK_SPENT_TELESCOPE_f(Any p0, BOOL p1, BOOL p2) { FastCall<void>(0x35359e162caa5ee8, p0, p1, p2); }
	void NETWORK_SPENT_HOLDUPS(Any p0, BOOL p1, BOOL p2) { Call<void>(0x4ee814aac3563997, p0, p1, p2); }
	void NETWORK_SPENT_HOLDUPS_f(Any p0, BOOL p1, BOOL p2) { FastCall<void>(0x4ee814aac3563997, p0, p1, p2); }
	void NETWORK_SPENT_BUY_PASSIVE_MODE(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0x5b4ae25492b62136, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_PASSIVE_MODE_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x5b4ae25492b62136, p0, p1, p2, p3); }
	void NETWORK_SPENT_BANK_INTEREST(int p0, BOOL p1, BOOL p2) { Call<void>(0x804a5152352568eb, p0, p1, p2); }
	void NETWORK_SPENT_BANK_INTEREST_f(int p0, BOOL p1, BOOL p2) { FastCall<void>(0x804a5152352568eb, p0, p1, p2); }
	void NETWORK_SPENT_PROSTITUTES(Any p0, BOOL p1, BOOL p2) { Call<void>(0xbe3c06bc6a404504, p0, p1, p2); }
	void NETWORK_SPENT_PROSTITUTES_f(Any p0, BOOL p1, BOOL p2) { FastCall<void>(0xbe3c06bc6a404504, p0, p1, p2); }
	void NETWORK_SPENT_ARREST_BAIL(Any p0, BOOL p1, BOOL p2) { Call<void>(0xbe105aff9dc7d0ba, p0, p1, p2); }
	void NETWORK_SPENT_ARREST_BAIL_f(Any p0, BOOL p1, BOOL p2) { FastCall<void>(0xbe105aff9dc7d0ba, p0, p1, p2); }
	void NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM(int amount, Hash vehicleModel, Any* gamerHandle, BOOL notBankrupt, BOOL hasTheMoney) { Call<void>(0xca74f3d472098966, amount, vehicleModel, gamerHandle, notBankrupt, hasTheMoney); }
	void NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM_f(int amount, Hash vehicleModel, Any* gamerHandle, BOOL notBankrupt, BOOL hasTheMoney) { FastCall<void>(0xca74f3d472098966, amount, vehicleModel, gamerHandle, notBankrupt, hasTheMoney); }
	void NETWORK_SPENT_CALL_PLAYER(Any p0, Any* p1, BOOL p2, BOOL p3) { Call<void>(0xbe1490a15f29de80, p0, p1, p2, p3); }
	void NETWORK_SPENT_CALL_PLAYER_f(Any p0, Any* p1, BOOL p2, BOOL p3) { FastCall<void>(0xbe1490a15f29de80, p0, p1, p2, p3); }
	void NETWORK_SPENT_BOUNTY(Any p0, BOOL p1, BOOL p2) { Call<void>(0xd9414afd35e2b74d, p0, p1, p2); }
	void NETWORK_SPENT_BOUNTY_f(Any p0, BOOL p1, BOOL p2) { FastCall<void>(0xd9414afd35e2b74d, p0, p1, p2); }
	void NETWORK_SPENT_FROM_ROCKSTAR(int p0, BOOL p1, BOOL p2) { Call<void>(0xb2055a7aae98b74a, p0, p1, p2); }
	void NETWORK_SPENT_FROM_ROCKSTAR_f(int p0, BOOL p1, BOOL p2) { FastCall<void>(0xb2055a7aae98b74a, p0, p1, p2); }
	int NETWORK_SPEND_EARNED_FROM_BANK_AND_WALLETS(int amount) { return Call<int>(0xeffc97647f064ace, amount); }
	int NETWORK_SPEND_EARNED_FROM_BANK_AND_WALLETS_f(int amount) { return FastCall<int>(0xeffc97647f064ace, amount); }
	const char* PROCESS_CASH_GIFT(int* p0, int* p1, char* p2) { return Call<char*>(0xd07dc186d7d3fccc, p0, p1, p2); }
	const char* PROCESS_CASH_GIFT_f(int* p0, int* p1, char* p2) { return FastCall<char*>(0xd07dc186d7d3fccc, p0, p1, p2); }
	void NETWORK_SPENT_MOVE_SUBMARINE(Any p0, Any p1, Any p2) { Call<void>(0xb44361dae5cc1196, p0, p1, p2); }
	void NETWORK_SPENT_MOVE_SUBMARINE_f(Any p0, Any p1, Any p2) { FastCall<void>(0xb44361dae5cc1196, p0, p1, p2); }
	void NETWORK_SPENT_PLAYER_HEALTHCARE(int p0, int p1, BOOL p2, BOOL p3) { Call<void>(0xf8b07c0bceddd7a9, p0, p1, p2, p3); }
	void NETWORK_SPENT_PLAYER_HEALTHCARE_f(int p0, int p1, BOOL p2, BOOL p3) { FastCall<void>(0xf8b07c0bceddd7a9, p0, p1, p2, p3); }
	void NETWORK_SPENT_NO_COPS(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0x4ee814ac01c6d0cb, p0, p1, p2, p3); }
	void NETWORK_SPENT_NO_COPS_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x4ee814ac01c6d0cb, p0, p1, p2, p3); }
	void NETWORK_SPENT_CARGO_SOURCING(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { Call<void>(0xdd386417b016f3fd, p0, p1, p2, p3, p4, p5); }
	void NETWORK_SPENT_CARGO_SOURCING_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { FastCall<void>(0xdd386417b016f3fd, p0, p1, p2, p3, p4, p5); }
	void NETWORK_SPENT_REQUEST_JOB(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0xbe40a29d1c31886b, p0, p1, p2, p3); }
	void NETWORK_SPENT_REQUEST_JOB_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0xbe40a29d1c31886b, p0, p1, p2, p3); }
	void NETWORK_SPENT_REQUEST_HEIST(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0x30a26fc6d5d0839b, p0, p1, p2, p3); }
	void NETWORK_SPENT_REQUEST_HEIST_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x30a26fc6d5d0839b, p0, p1, p2, p3); }
	void NETWORK_BUY_FAIRGROUND_RIDE(int amount, Any p1, BOOL p2, BOOL p3, Any p4) { Call<void>(0x39c4919a6e306782, amount, p1, p2, p3, p4); }
	void NETWORK_BUY_FAIRGROUND_RIDE_f(int amount, Any p1, BOOL p2, BOOL p3, Any p4) { FastCall<void>(0x39c4919a6e306782, amount, p1, p2, p3, p4); }
	BOOL NETWORK_ECONOMY_HAS_FIXED_CRAZY_NUMBERS() { return Call<BOOL>(0xeacec7b6be56ac1a); }
	BOOL NETWORK_ECONOMY_HAS_FIXED_CRAZY_NUMBERS_f() { return FastCall<BOOL>(0xeacec7b6be56ac1a); }
	void NETWORK_SPENT_JOB_SKIP(int amount, char* matchId, BOOL p2, BOOL p3) { Call<void>(0x8e1a80ba679e5b03, amount, matchId, p2, p3); }
	void NETWORK_SPENT_JOB_SKIP_f(int amount, char* matchId, BOOL p2, BOOL p3) { FastCall<void>(0x8e1a80ba679e5b03, amount, matchId, p2, p3); }
	BOOL NETWORK_SPENT_BOSS_GOON(int amount, BOOL p1, BOOL p2) { return Call<BOOL>(0x353590615980b477, amount, p1, p2); }
	BOOL NETWORK_SPENT_BOSS_GOON_f(int amount, BOOL p1, BOOL p2) { return FastCall<BOOL>(0x353590615980b477, amount, p1, p2); }
	void NETWORK_SPEND_GOON(int p0, int p1, int amount) { Call<void>(0xe61eb3e3eb6bf9f9, p0, p1, amount); }
	void NETWORK_SPEND_GOON_f(int p0, int p1, int amount) { FastCall<void>(0xe61eb3e3eb6bf9f9, p0, p1, amount); }
	void NETWORK_SPEND_BOSS(Any p0, Any p1, Any p2) { Call<void>(0xe61eb3e3eb69b49f, p0, p1, p2); }
	void NETWORK_SPEND_BOSS_f(Any p0, Any p1, Any p2) { FastCall<void>(0xe61eb3e3eb69b49f, p0, p1, p2); }
	void NETWORK_SPENT_MOVE_YACHT(int amount, BOOL p1, BOOL p2) { Call<void>(0x717d845da9c11c3b, amount, p1, p2); }
	void NETWORK_SPENT_MOVE_YACHT_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0x717d845da9c11c3b, amount, p1, p2); }
	void NETWORK_SPENT_RENAME_ORGANIZATION(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xa3a96e2220c9d532, p0, p1, p2, p3); }
	void NETWORK_SPENT_RENAME_ORGANIZATION_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xa3a96e2220c9d532, p0, p1, p2, p3); }
	void NETWORK_BUY_CONTRABAND_MISSION(int p0, int p1, Hash p2, BOOL p3, BOOL p4) { Call<void>(0x6f215066da4e888d, p0, p1, p2, p3, p4); }
	void NETWORK_BUY_CONTRABAND_MISSION_f(int p0, int p1, Hash p2, BOOL p3, BOOL p4) { FastCall<void>(0x6f215066da4e888d, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_PA_SERVICE_HELI(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xcd3d6336a3ee5dd0, p0, p1, p2, p3); }
	void NETWORK_SPENT_PA_SERVICE_HELI_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xcd3d6336a3ee5dd0, p0, p1, p2, p3); }
	void NETWORK_SPENT_PA_SERVICE_VEHICLE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xfabc9391bc56f4b6, p0, p1, p2, p3); }
	void NETWORK_SPENT_PA_SERVICE_VEHICLE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xfabc9391bc56f4b6, p0, p1, p2, p3); }
	void NETWORK_SPENT_PA_SERVICE_SNACK(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xda6f039dda7c4c58, p0, p1, p2, p3); }
	void NETWORK_SPENT_PA_SERVICE_SNACK_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xda6f039dda7c4c58, p0, p1, p2, p3); }
	void NETWORK_SPENT_PA_SERVICE_DANCER(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x7371701d5ac34435, p0, p1, p2, p3); }
	void NETWORK_SPENT_PA_SERVICE_DANCER_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x7371701d5ac34435, p0, p1, p2, p3); }
	void NETWORK_SPENT_PA_SERVICE_IMPOUND(Any p0, Any p1, Any p2) { Call<void>(0xfabc938f1ac07172, p0, p1, p2); }
	void NETWORK_SPENT_PA_SERVICE_IMPOUND_f(Any p0, Any p1, Any p2) { FastCall<void>(0xfabc938f1ac07172, p0, p1, p2); }
	void NETWORK_SPENT_PA_HELI_PICKUP(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x1702f650cbe28e75, p0, p1, p2, p3); }
	void NETWORK_SPENT_PA_HELI_PICKUP_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x1702f650cbe28e75, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_OFFICE_PROPERTY(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xe6c327210a9b6edc, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_PURCHASE_OFFICE_PROPERTY_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xe6c327210a9b6edc, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_UPGRADE_OFFICE_PROPERTY(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xd0e5676f27e4b153, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_UPGRADE_OFFICE_PROPERTY_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xd0e5676f27e4b153, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_PURCHASE_WAREHOUSE_PROPERTY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x6afab0a0cd9f928d, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_WAREHOUSE_PROPERTY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x6afab0a0cd9f928d, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_WAREHOUSE_PROPERTY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xd2d3f2e2dded28b6, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_WAREHOUSE_PROPERTY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xd2d3f2e2dded28b6, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_IMPEXP_WAREHOUSE_PROPERTY(int amount, Any* data, BOOL p2, BOOL p3) { Call<void>(0x4bda800d937dc603, amount, data, p2, p3); }
	void NETWORK_SPENT_PURCHASE_IMPEXP_WAREHOUSE_PROPERTY_f(int amount, Any* data, BOOL p2, BOOL p3) { FastCall<void>(0x4bda800d937dc603, amount, data, p2, p3); }
	void NETWORK_SPENT_UPGRADE_IMPEXP_WAREHOUSE_PROPERTY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x4befa2f895eb9fba, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_IMPEXP_WAREHOUSE_PROPERTY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x4befa2f895eb9fba, p0, p1, p2, p3); }
	void NETWORK_SPENT_TRADE_IMPEXP_WAREHOUSE_PROPERTY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x60d00045bccdd882, p0, p1, p2, p3); }
	void NETWORK_SPENT_TRADE_IMPEXP_WAREHOUSE_PROPERTY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x60d00045bccdd882, p0, p1, p2, p3); }
	void NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x70079ef603a5903d, p0, p1, p2, p3); }
	void NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x70079ef603a5903d, p0, p1, p2, p3); }
	void NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xbef514898c3f6fbd, p0, p1, p2, p3); }
	void NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xbef514898c3f6fbd, p0, p1, p2, p3); }
	void NETWORK_SPENT_JUKEBOX(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x4ee814ab3751d944, p0, p1, p2, p3); }
	void NETWORK_SPENT_JUKEBOX_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x4ee814ab3751d944, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_CLUB_HOUSE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xa1c560539bb6e0d3, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_CLUB_HOUSE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xa1c560539bb6e0d3, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_CLUB_HOUSE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x6bae1c4c8d4daffc, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_CLUB_HOUSE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x6bae1c4c8d4daffc, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_BUSINESS_PROPERTY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x104bfd6a0c652d58, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_BUSINESS_PROPERTY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x104bfd6a0c652d58, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_BUSINESS_PROPERTY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xfadf62a5fc67ae0f, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_BUSINESS_PROPERTY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xfadf62a5fc67ae0f, p0, p1, p2, p3); }
	void NETWORK_SPENT_TRADE_BUSINESS_PROPERTY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x7765924f31532ed7, p0, p1, p2, p3); }
	void NETWORK_SPENT_TRADE_BUSINESS_PROPERTY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x7765924f31532ed7, p0, p1, p2, p3); }
	void NETWORK_SPENT_MC_ABILITY(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0x717d7b475784a503, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_MC_ABILITY_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0x717d7b475784a503, p0, p1, p2, p3, p4); }
	void NETWORK_SPENT_PAY_BUSINESS_SUPPLIES(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x473aef38d4088c93, p0, p1, p2, p3); }
	void NETWORK_SPENT_PAY_BUSINESS_SUPPLIES_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x473aef38d4088c93, p0, p1, p2, p3); }
	void NETWORK_SPENT_CHANGE_APPEARANCE(Any p0, Any p1, Any p2) { Call<void>(0x564a2cff2963e471, p0, p1, p2); }
	void NETWORK_SPENT_CHANGE_APPEARANCE_f(Any p0, Any p1, Any p2) { FastCall<void>(0x564a2cff2963e471, p0, p1, p2); }
	void NETWORK_SPENT_VEHICLE_EXPORT_MODS(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { Call<void>(0x7d78dbd800f6e747, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	void NETWORK_SPENT_VEHICLE_EXPORT_MODS_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { FastCall<void>(0x7d78dbd800f6e747, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	void NETWORK_SPENT_PURCHASE_OFFICE_GARAGE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xf8c7feb561bc85ee, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_OFFICE_GARAGE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xf8c7feb561bc85ee, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_OFFICE_GARAGE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x5b528d8f5e91fa25, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_OFFICE_GARAGE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x5b528d8f5e91fa25, p0, p1, p2, p3); }
	void NETWORK_SPENT_IMPORT_EXPORT_REPAIR(Any p0, Any p1, Any p2) { Call<void>(0x9b13c9f740bfb280, p0, p1, p2); }
	void NETWORK_SPENT_IMPORT_EXPORT_REPAIR_f(Any p0, Any p1, Any p2) { FastCall<void>(0x9b13c9f740bfb280, p0, p1, p2); }
	void NETWORK_SPENT_PURCHASE_HANGAR(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xb2c0cd70a7a50cbf, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_HANGAR_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xb2c0cd70a7a50cbf, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_HANGAR(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x50ef152a264bd868, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_HANGAR_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x50ef152a264bd868, p0, p1, p2, p3); }
	void NETWORK_SPENT_HANGAR_UTILITY_CHARGES(int amount, BOOL p1, BOOL p2) { Call<void>(0xf68a7b8e9941dab2, amount, p1, p2); }
	void NETWORK_SPENT_HANGAR_UTILITY_CHARGES_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0xf68a7b8e9941dab2, amount, p1, p2); }
	void NETWORK_SPENT_HANGAR_STAFF_CHARGES(int amount, BOOL p1, BOOL p2) { Call<void>(0x281a83a83db1bda6, amount, p1, p2); }
	void NETWORK_SPENT_HANGAR_STAFF_CHARGES_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0x281a83a83db1bda6, amount, p1, p2); }
	void NETWORK_SPENT_BUY_TRUCK(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x353590891a115f44, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_TRUCK_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x353590891a115f44, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_TRUCK(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x553100aec81ebb5a, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_TRUCK_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x553100aec81ebb5a, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_BUNKER(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x717c809a098a8398, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_BUNKER_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x717c809a098a8398, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPRADE_BUNKER(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x554f722f47b1fbcf, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPRADE_BUNKER_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x554f722f47b1fbcf, p0, p1, p2, p3); }
	void NETWORK_EARN_FROM_SELL_BUNKER(int amount, Hash bunkerHash) { Call<void>(0x743e0e63d5036c8b, amount, bunkerHash); }
	void NETWORK_EARN_FROM_SELL_BUNKER_f(int amount, Hash bunkerHash) { FastCall<void>(0x743e0e63d5036c8b, amount, bunkerHash); }
	void NETWORK_SPENT_BALLISTIC_EQUIPMENT(int amount, BOOL p1, BOOL p2) { Call<void>(0xdf79c4f4dd7f1eb2, amount, p1, p2); }
	void NETWORK_SPENT_BALLISTIC_EQUIPMENT_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0xdf79c4f4dd7f1eb2, amount, p1, p2); }
	void NETWORK_EARN_RDR_BONUS(int amount, Any p1) { Call<void>(0x66aa2da0ced1520a, amount, p1); }
	void NETWORK_EARN_RDR_BONUS_f(int amount, Any p1) { FastCall<void>(0x66aa2da0ced1520a, amount, p1); }
	void NETWORK_EARN_WAGE_PAYMENT(int amount, Any p1) { Call<void>(0x378d4c7755f8fae5, amount, p1); }
	void NETWORK_EARN_WAGE_PAYMENT_f(int amount, Any p1) { FastCall<void>(0x378d4c7755f8fae5, amount, p1); }
	void NETWORK_EARN_WAGE_PAYMENT_BONUS(int amount) { Call<void>(0x9c2dbbc5c9ac0625, amount); }
	void NETWORK_EARN_WAGE_PAYMENT_BONUS_f(int amount) { FastCall<void>(0x9c2dbbc5c9ac0625, amount); }
	void NETWORK_SPENT_BUY_BASE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x8e1a80888d31ef2c, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_BASE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x8e1a80888d31ef2c, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_BASE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xb0194aacc9db856, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_BASE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xb0194aacc9db856, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_TILTROTOR(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x87799325828fa9c2, p0, p1, p2, p3); }
	void NETWORK_SPENT_BUY_TILTROTOR_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x87799325828fa9c2, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_TILTROTOR(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x5e4ffd8073c50ad8, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_TILTROTOR_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x5e4ffd8073c50ad8, p0, p1, p2, p3); }
	void NETWORK_SPENT_EMPLOY_ASSASSINS(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x85e5559e210aaa1f, p0, p1, p2, p3); }
	void NETWORK_SPENT_EMPLOY_ASSASSINS_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x85e5559e210aaa1f, p0, p1, p2, p3); }
	void NETWORK_SPEND_GANGOPS_CANNON(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x486d642d7e69224f, p0, p1, p2, p3); }
	void NETWORK_SPEND_GANGOPS_CANNON_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x486d642d7e69224f, p0, p1, p2, p3); }
	void NETWORK_SPEND_GANGOPS_SKIP_MISSION(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xde2acf4eac2db27e, p0, p1, p2, p3); }
	void NETWORK_SPEND_GANGOPS_SKIP_MISSION_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xde2acf4eac2db27e, p0, p1, p2, p3); }
	void NETWORK_SPEND_CASINO_HEIST_SKIP_MISSION(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x162ebe4a611d7df6, p0, p1, p2, p3); }
	void NETWORK_SPEND_CASINO_HEIST_SKIP_MISSION_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x162ebe4a611d7df6, p0, p1, p2, p3); }
	void NETWORK_EARN_SELL_BASE(int amount, Hash baseNameHash) { Call<void>(0x66aa2e6c6eb80648, amount, baseNameHash); }
	void NETWORK_EARN_SELL_BASE_f(int amount, Hash baseNameHash) { FastCall<void>(0x66aa2e6c6eb80648, amount, baseNameHash); }
	void NETWORK_EARN_TARGET_REFUND(int amount, int p1) { Call<void>(0x99716109a32e2390, amount, p1); }
	void NETWORK_EARN_TARGET_REFUND_f(int amount, int p1) { FastCall<void>(0x99716109a32e2390, amount, p1); }
	void NETWORK_EARN_GANGOPS_WAGES(int amount, int p1) { Call<void>(0xb4b5638fa7b0b35, amount, p1); }
	void NETWORK_EARN_GANGOPS_WAGES_f(int amount, int p1) { FastCall<void>(0xb4b5638fa7b0b35, amount, p1); }
	void NETWORK_EARN_GANGOPS_WAGES_BONUS(int amount, int p1) { Call<void>(0x45120f0570549a75, amount, p1); }
	void NETWORK_EARN_GANGOPS_WAGES_BONUS_f(int amount, int p1) { FastCall<void>(0x45120f0570549a75, amount, p1); }
	void NETWORK_EARN_DAR_CHALLENGE(int amount, Any p1) { Call<void>(0xea8e2e395df36da3, amount, p1); }
	void NETWORK_EARN_DAR_CHALLENGE_f(int amount, Any p1) { FastCall<void>(0xea8e2e395df36da3, amount, p1); }
	void NETWORK_EARN_DOOMSDAY_FINALE_BONUS(int amount, Hash vehicleHash) { Call<void>(0x1048de50a0aa42c6, amount, vehicleHash); }
	void NETWORK_EARN_DOOMSDAY_FINALE_BONUS_f(int amount, Hash vehicleHash) { FastCall<void>(0x1048de50a0aa42c6, amount, vehicleHash); }
	void NETWORK_EARN_GANGOPS_AWARD(int amount, char* p1, Any p2) { Call<void>(0xb4b5638f94ef147, amount, p1, p2); }
	void NETWORK_EARN_GANGOPS_AWARD_f(int amount, char* p1, Any p2) { FastCall<void>(0xb4b5638f94ef147, amount, p1, p2); }
	void NETWORK_EARN_GANGOPS_ELITE(int amount, char* p1, int actIndex) { Call<void>(0xb4b5638f9826d7d, amount, p1, actIndex); }
	void NETWORK_EARN_GANGOPS_ELITE_f(int amount, char* p1, int actIndex) { FastCall<void>(0xb4b5638f9826d7d, amount, p1, actIndex); }
	void NETWORK_SERVICE_EARN_GANGOPS_RIVAL_DELIVERY(int earnedMoney) { Call<void>(0xd745e95becec5db5, earnedMoney); }
	void NETWORK_SERVICE_EARN_GANGOPS_RIVAL_DELIVERY_f(int earnedMoney) { FastCall<void>(0xd745e95becec5db5, earnedMoney); }
	void NETWORK_SPEND_GANGOPS_START_STRAND(int type, int amount, BOOL p2, BOOL p3) { Call<void>(0xde444540c1168875, type, amount, p2, p3); }
	void NETWORK_SPEND_GANGOPS_START_STRAND_f(int type, int amount, BOOL p2, BOOL p3) { FastCall<void>(0xde444540c1168875, type, amount, p2, p3); }
	void NETWORK_SPEND_GANGOPS_TRIP_SKIP(int amount, BOOL p1, BOOL p2) { Call<void>(0x71fcd7c546de4ac7, amount, p1, p2); }
	void NETWORK_SPEND_GANGOPS_TRIP_SKIP_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0x71fcd7c546de4ac7, amount, p1, p2); }
	void NETWORK_EARN_GANGOPS_PREP_PARTICIPATION(int amount) { Call<void>(0x833bcbd28ab30fc5, amount); }
	void NETWORK_EARN_GANGOPS_PREP_PARTICIPATION_f(int amount) { FastCall<void>(0x833bcbd28ab30fc5, amount); }
	void NETWORK_EARN_GANGOPS_SETUP(int amount, char* p1) { Call<void>(0xb4b5638fa44b167, amount, p1); }
	void NETWORK_EARN_GANGOPS_SETUP_f(int amount, char* p1) { FastCall<void>(0xb4b5638fa44b167, amount, p1); }
	void NETWORK_EARN_GANGOPS_FINALE(int amount, char* p1) { Call<void>(0x5e1f70e63857d3e5, amount, p1); }
	void NETWORK_EARN_GANGOPS_FINALE_f(int amount, char* p1) { FastCall<void>(0x5e1f70e63857d3e5, amount, p1); }
	void NETWORK_SPEND_GANGOPS_REPAIR_COST(Any p0, Any p1, Any p2) { Call<void>(0xe61ef517e2392b2d, p0, p1, p2); }
	void NETWORK_SPEND_GANGOPS_REPAIR_COST_f(Any p0, Any p1, Any p2) { FastCall<void>(0xe61ef517e2392b2d, p0, p1, p2); }
	void NETWORK_EARN_NIGHTCLUB(Any p0, Any p1) { Call<void>(0x66aa2aa418f99f58, p0, p1); }
	void NETWORK_EARN_NIGHTCLUB_f(Any p0, Any p1) { FastCall<void>(0x66aa2aa418f99f58, p0, p1); }
	void NETWORK_EARN_NIGHTCLUB_DANCING(Any p0) { Call<void>(0xb23f8464957de5a9, p0); }
	void NETWORK_EARN_NIGHTCLUB_DANCING_f(Any p0) { FastCall<void>(0xb23f8464957de5a9, p0); }
	void NETWORK_EARN_BB_EVENT_BONUS(int amount) { Call<void>(0xd0b866bb42969011, amount); }
	void NETWORK_EARN_BB_EVENT_BONUS_f(int amount) { FastCall<void>(0xd0b866bb42969011, amount); }
	void NETWORK_SPENT_PURCHASE_HACKER_TRUCK(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x47903fcef2c37bea, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_HACKER_TRUCK_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x47903fcef2c37bea, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_HACKER_TRUCK(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x3a39e151d9e324d3, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_HACKER_TRUCK_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x3a39e151d9e324d3, p0, p1, p2, p3); }
	void NETWORK_EARN_HACKER_TRUCK(Any p0, int amount, Any p2, Any p3) { Call<void>(0x3242e7289ae07564, p0, amount, p2, p3); }
	void NETWORK_EARN_HACKER_TRUCK_f(Any p0, int amount, Any p2, Any p3) { FastCall<void>(0x3242e7289ae07564, p0, amount, p2, p3); }
	void NETWORK_SPENT_PURCHASE_NIGHTCLUB_AND_WAREHOUSE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x42ce17e3d4784b2e, p0, p1, p2, p3); }
	void NETWORK_SPENT_PURCHASE_NIGHTCLUB_AND_WAREHOUSE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x42ce17e3d4784b2e, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_NIGHTCLUB_AND_WAREHOUSE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xeb29c0d1292f26a5, p0, p1, p2, p3); }
	void NETWORK_SPENT_UPGRADE_NIGHTCLUB_AND_WAREHOUSE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xeb29c0d1292f26a5, p0, p1, p2, p3); }
	void NETWORK_EARN_NIGHTCLUB_AND_WAREHOUSE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { Call<void>(0x2a0fb51eb75e8174, p0, p1, p2, p3, p4, p5, p6); }
	void NETWORK_EARN_NIGHTCLUB_AND_WAREHOUSE_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { FastCall<void>(0x2a0fb51eb75e8174, p0, p1, p2, p3, p4, p5, p6); }
	void NETWORK_SPEND_NIGHTCLUB_AND_WAREHOUSE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x8e7af4899e85ddd8, p0, p1, p2, p3); }
	void NETWORK_SPEND_NIGHTCLUB_AND_WAREHOUSE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x8e7af4899e85ddd8, p0, p1, p2, p3); }
	void NETWORK_SPENT_RDR_HATCHET_BONUS(int amount, BOOL p1, BOOL p2) { Call<void>(0x8899c158d9dbe30e, amount, p1, p2); }
	void NETWORK_SPENT_RDR_HATCHET_BONUS_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0x8899c158d9dbe30e, amount, p1, p2); }
	void NETWORK_SPENT_NIGHTCLUB_ENTRY_FEE(Player player, int amount, Any p1, BOOL p2, BOOL p3) { Call<void>(0x6c871b1141b2a846, player, amount, p1, p2, p3); }
	void NETWORK_SPENT_NIGHTCLUB_ENTRY_FEE_f(Player player, int amount, Any p1, BOOL p2, BOOL p3) { FastCall<void>(0x6c871b1141b2a846, player, amount, p1, p2, p3); }
	void NETWORK_SPEND_NIGHTCLUB_BAR_DRINK(int amount, Any p1, BOOL p2, BOOL p3) { Call<void>(0xc18b0a49201b7b69, amount, p1, p2, p3); }
	void NETWORK_SPEND_NIGHTCLUB_BAR_DRINK_f(int amount, Any p1, BOOL p2, BOOL p3) { FastCall<void>(0xc18b0a49201b7b69, amount, p1, p2, p3); }
	void NETWORK_SPEND_BOUNTY_HUNTER_MISSION(int amount, BOOL p1, BOOL p2) { Call<void>(0x34bbb671588a6cf, amount, p1, p2); }
	void NETWORK_SPEND_BOUNTY_HUNTER_MISSION_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0x34bbb671588a6cf, amount, p1, p2); }
	void NETWORK_SPENT_REHIRE_DJ(int amount, Any p1, BOOL p2, BOOL p3) { Call<void>(0x35359c88374f023c, amount, p1, p2, p3); }
	void NETWORK_SPENT_REHIRE_DJ_f(int amount, Any p1, BOOL p2, BOOL p3) { FastCall<void>(0x35359c88374f023c, amount, p1, p2, p3); }
	void NETWORK_SPENT_ARENA_JOIN_SPECTATOR(int amount, Any p1, BOOL p2, BOOL p3) { Call<void>(0x8e92b2914b7b774, amount, p1, p2, p3); }
	void NETWORK_SPENT_ARENA_JOIN_SPECTATOR_f(int amount, Any p1, BOOL p2, BOOL p3) { FastCall<void>(0x8e92b2914b7b774, amount, p1, p2, p3); }
	void NETWORK_EARN_ARENA_SKILL_LEVEL_PROGRESSION(int amount, Any p1) { Call<void>(0x323a38ed0ec6c004, amount, p1); }
	void NETWORK_EARN_ARENA_SKILL_LEVEL_PROGRESSION_f(int amount, Any p1) { FastCall<void>(0x323a38ed0ec6c004, amount, p1); }
	void NETWORK_EARN_ARENA_CAREER_PROGRESSION(int amount, Any p1) { Call<void>(0xe2bb19c734f99bc8, amount, p1); }
	void NETWORK_EARN_ARENA_CAREER_PROGRESSION_f(int amount, Any p1) { FastCall<void>(0xe2bb19c734f99bc8, amount, p1); }
	void NETWORK_SPEND_MAKE_IT_RAIN(int amount, BOOL p1, BOOL p2) { Call<void>(0xda3b47014ffbfc09, amount, p1, p2); }
	void NETWORK_SPEND_MAKE_IT_RAIN_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0xda3b47014ffbfc09, amount, p1, p2); }
	void NETWORK_SPEND_BUY_ARENA(int amount, BOOL p1, BOOL p2, char* p3) { Call<void>(0x3506f95fcaba39dc, amount, p1, p2, p3); }
	void NETWORK_SPEND_BUY_ARENA_f(int amount, BOOL p1, BOOL p2, char* p3) { FastCall<void>(0x3506f95fcaba39dc, amount, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_ARENA(int amount, BOOL p1, BOOL p2, char* p3) { Call<void>(0xc9dfd6b9295c1df2, amount, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_ARENA_f(int amount, BOOL p1, BOOL p2, char* p3) { FastCall<void>(0xc9dfd6b9295c1df2, amount, p1, p2, p3); }
	void NETWORK_SPEND_ARENA_SPECTATOR_BOX(int amount, int type, BOOL p2, BOOL p3) { Call<void>(0x2b990ce26a829771, amount, type, p2, p3); }
	void NETWORK_SPEND_ARENA_SPECTATOR_BOX_f(int amount, int type, BOOL p2, BOOL p3) { FastCall<void>(0x2b990ce26a829771, amount, type, p2, p3); }
	void NETWORK_SPEND_SPIN_THE_WHEEL_PAYMENT(int amount, Any p1, BOOL p2) { Call<void>(0x7b7390525a98d769, amount, p1, p2); }
	void NETWORK_SPEND_SPIN_THE_WHEEL_PAYMENT_f(int amount, Any p1, BOOL p2) { FastCall<void>(0x7b7390525a98d769, amount, p1, p2); }
	void NETWORK_EARN_SPIN_THE_WHEEL_CASH(int amount) { Call<void>(0xd76f6d788454522c, amount); }
	void NETWORK_EARN_SPIN_THE_WHEEL_CASH_f(int amount) { FastCall<void>(0xd76f6d788454522c, amount); }
	void NETWORK_SPEND_ARENA_PREMIUM(int amount, BOOL p1, BOOL p2) { Call<void>(0xefef5f80c03f2bed, amount, p1, p2); }
	void NETWORK_SPEND_ARENA_PREMIUM_f(int amount, BOOL p1, BOOL p2) { FastCall<void>(0xefef5f80c03f2bed, amount, p1, p2); }
	void NETWORK_EARN_ARENA_WAR(int amount, Any p1, Any p2, Any p3) { Call<void>(0x66aa20c7d7dc501a, amount, p1, p2, p3); }
	void NETWORK_EARN_ARENA_WAR_f(int amount, Any p1, Any p2, Any p3) { FastCall<void>(0x66aa20c7d7dc501a, amount, p1, p2, p3); }
	void NETWORK_EARN_ARENA_WAR_ASSASSINATE_TARGET(int amount) { Call<void>(0xc9449f7e7170c388, amount); }
	void NETWORK_EARN_ARENA_WAR_ASSASSINATE_TARGET_f(int amount) { FastCall<void>(0xc9449f7e7170c388, amount); }
	void NETWORK_EARN_ARENA_WAR_EVENT_CARGO(int amount) { Call<void>(0xc2b11bccc4f3e0f2, amount); }
	void NETWORK_EARN_ARENA_WAR_EVENT_CARGO_f(int amount) { FastCall<void>(0xc2b11bccc4f3e0f2, amount); }
	void NETWORK_EARN_RC_TIME_TRIAL(int amount) { Call<void>(0x847052dcfe72577c, amount); }
	void NETWORK_EARN_RC_TIME_TRIAL_f(int amount) { FastCall<void>(0x847052dcfe72577c, amount); }
	void NETWORK_EARN_DAILY_OBJECTIVE_EVENT(int amount) { Call<void>(0xcb65a72001b87d38, amount); }
	void NETWORK_EARN_DAILY_OBJECTIVE_EVENT_f(int amount) { FastCall<void>(0xcb65a72001b87d38, amount); }
	void NETWORK_SPEND_CASINO_MEMBERSHIP(int amount, BOOL p1, BOOL p2, int p3) { Call<void>(0x792c46dd2364ae6e, amount, p1, p2, p3); }
	void NETWORK_SPEND_CASINO_MEMBERSHIP_f(int amount, BOOL p1, BOOL p2, int p3) { FastCall<void>(0x792c46dd2364ae6e, amount, p1, p2, p3); }
	void NETWORK_SPEND_BUY_CASINO(int amount, BOOL p1, BOOL p2, Any* data) { Call<void>(0x6bd832998f0d6fa0, amount, p1, p2, data); }
	void NETWORK_SPEND_BUY_CASINO_f(int amount, BOOL p1, BOOL p2, Any* data) { FastCall<void>(0x6bd832998f0d6fa0, amount, p1, p2, data); }
	void NETWORK_SPEND_UPGRADE_CASINO(int amount, BOOL p1, BOOL p2, Any* data) { Call<void>(0x721b006c04a80e4a, amount, p1, p2, data); }
	void NETWORK_SPEND_UPGRADE_CASINO_f(int amount, BOOL p1, BOOL p2, Any* data) { FastCall<void>(0x721b006c04a80e4a, amount, p1, p2, data); }
	void NETWORK_SPEND_CASINO_GENERIC(int amount, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xfec442f4abbb221f, amount, p1, p2, p3, p4); }
	void NETWORK_SPEND_CASINO_GENERIC_f(int amount, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xfec442f4abbb221f, amount, p1, p2, p3, p4); }
	void NETWORK_EARN_CASINO_TIME_TRIAL_WIN(int amount) { Call<void>(0x93016b07f72c1d35, amount); }
	void NETWORK_EARN_CASINO_TIME_TRIAL_WIN_f(int amount) { FastCall<void>(0x93016b07f72c1d35, amount); }
	void NETWORK_EARN_COLLECTABLES_ACTION_FIGURES(int amount) { Call<void>(0x262fff6276597e0, amount); }
	void NETWORK_EARN_COLLECTABLES_ACTION_FIGURES_f(int amount) { FastCall<void>(0x262fff6276597e0, amount); }
	void NETWORK_EARN_CASINO_COLLECTABLE_COMPLETED_COLLECTION(int amount) { Call<void>(0xefc46db2199bd161, amount); }
	void NETWORK_EARN_CASINO_COLLECTABLE_COMPLETED_COLLECTION_f(int amount) { FastCall<void>(0xefc46db2199bd161, amount); }
	void NETWORK_EARN_SELL_PRIZE_VEHICLE(int amount, Any p1, Any p2) { Call<void>(0xc4f7e2b696d4da28, amount, p1, p2); }
	void NETWORK_EARN_SELL_PRIZE_VEHICLE_f(int amount, Any p1, Any p2) { FastCall<void>(0xc4f7e2b696d4da28, amount, p1, p2); }
	void NETWORK_EARN_CASINO_MISSION_REWARD(int amount) { Call<void>(0x513ddca542018a96, amount); }
	void NETWORK_EARN_CASINO_MISSION_REWARD_f(int amount) { FastCall<void>(0x513ddca542018a96, amount); }
	void NETWORK_EARN_CASINO_STORY_MISSION_REWARD(int amount) { Call<void>(0xe1da6c39bf8bdc40, amount); }
	void NETWORK_EARN_CASINO_STORY_MISSION_REWARD_f(int amount) { FastCall<void>(0xe1da6c39bf8bdc40, amount); }
	void NETWORK_EARN_CASINO_MISSION_PARTICIPATION(int amount) { Call<void>(0x4653ede02bcb8bda, amount); }
	void NETWORK_EARN_CASINO_MISSION_PARTICIPATION_f(int amount) { FastCall<void>(0x4653ede02bcb8bda, amount); }
	void NETWORK_EARN_CASINO_AWARD(int amount, Hash hash) { Call<void>(0x30810e3397a48e89, amount, hash); }
	void NETWORK_EARN_CASINO_AWARD_f(int amount, Hash hash) { FastCall<void>(0x30810e3397a48e89, amount, hash); }
	void NETWORK_SPEND_BUY_ARCADE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x6bd832998c8be8bb, p0, p1, p2, p3); }
	void NETWORK_SPEND_BUY_ARCADE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x6bd832998c8be8bb, p0, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_ARCADE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x721b006c02268765, p0, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_ARCADE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x721b006c02268765, p0, p1, p2, p3); }
	void NETWORK_SPEND_CASINO_HEIST(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10) { Call<void>(0xd6b5594f5f559cb5, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	void NETWORK_SPEND_CASINO_HEIST_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10) { FastCall<void>(0xd6b5594f5f559cb5, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	void NETWORK_SPEND_ARCADE_MGMT(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xf2add3132ff211e, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_ARCADE_MGMT_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xf2add3132ff211e, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_PLAY_ARCADE(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xf55f9b253f95309, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_PLAY_ARCADE_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xf55f9b253f95309, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_ARCADE(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xd9414a96b63cf5c2, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_ARCADE_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xd9414a96b63cf5c2, p0, p1, p2, p3, p4); }
	void NETWORK_EARN_CASINO_HEIST(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { Call<void>(0x30810e3397ff2299, p0, p1, p2, p3, p4, p5, p6); }
	void NETWORK_EARN_CASINO_HEIST_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { FastCall<void>(0x30810e3397ff2299, p0, p1, p2, p3, p4, p5, p6); }
	void NETWORK_EARN_UPGRADE_ARCADE(Any p0, Any p1, Any p2) { Call<void>(0x87cd0d24b6862449, p0, p1, p2); }
	void NETWORK_EARN_UPGRADE_ARCADE_f(Any p0, Any p1, Any p2) { FastCall<void>(0x87cd0d24b6862449, p0, p1, p2); }
	void NETWORK_EARN_ARCADE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { Call<void>(0xdd8da5bcf669b6a6, p0, p1, p2, p3, p4, p5); }
	void NETWORK_EARN_ARCADE_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { FastCall<void>(0xdd8da5bcf669b6a6, p0, p1, p2, p3, p4, p5); }
	void NETWORK_EARN_COLLECTABLES(Any p0, Any p1, Any p2) { Call<void>(0x30a92c3b966d7c85, p0, p1, p2); }
	void NETWORK_EARN_COLLECTABLES_f(Any p0, Any p1, Any p2) { FastCall<void>(0x30a92c3b966d7c85, p0, p1, p2); }
	void NETWORK_EARN_CHALLENGE(int amount, Any p1, Any p2) { Call<void>(0x66aa22141b25deed, amount, p1, p2); }
	void NETWORK_EARN_CHALLENGE_f(int amount, Any p1, Any p2) { FastCall<void>(0x66aa22141b25deed, amount, p1, p2); }
	void NETWORK_EARN_CASINO_HEIST_AWARDS(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0x3c574ae44dee321c, p0, p1, p2, p3, p4); }
	void NETWORK_EARN_CASINO_HEIST_AWARDS_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0x3c574ae44dee321c, p0, p1, p2, p3, p4); }
	void NETWORK_EARN_COLLECTABLE_ITEM(int amount, Any p1) { Call<void>(0x237ade87736d3f24, amount, p1); }
	void NETWORK_EARN_COLLECTABLE_ITEM_f(int amount, Any p1) { FastCall<void>(0x237ade87736d3f24, amount, p1); }
	void NETWORK_EARN_COLLECTABLE_COMPLETED_COLLECTION(int amount, Any p1) { Call<void>(0x4469fd995a167b43, amount, p1); }
	void NETWORK_EARN_COLLECTABLE_COMPLETED_COLLECTION_f(int amount, Any p1) { FastCall<void>(0x4469fd995a167b43, amount, p1); }
	void NETWORK_EARN_YATCH_MISSION(int amount, Any p1) { Call<void>(0xd01e89fa111a5c88, amount, p1); }
	void NETWORK_EARN_YATCH_MISSION_f(int amount, Any p1) { FastCall<void>(0xd01e89fa111a5c88, amount, p1); }
	void NETWORK_EARN_DISPATCH_CALL(int amount, Any p1) { Call<void>(0xed61d4b8fa20a0ad, amount, p1); }
	void NETWORK_EARN_DISPATCH_CALL_f(int amount, Any p1) { FastCall<void>(0xed61d4b8fa20a0ad, amount, p1); }
	void NETWORK_SPEND_BEACH_PARTY(Any p0) { Call<void>(0xf2c8c890680d358, p0); }
	void NETWORK_SPEND_BEACH_PARTY_f(Any p0) { FastCall<void>(0xf2c8c890680d358, p0); }
	void NETWORK_SPEND_SUBMARINE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { Call<void>(0x3507068ac3df19f0, p0, p1, p2, p3, p4, p5); }
	void NETWORK_SPEND_SUBMARINE_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { FastCall<void>(0x3507068ac3df19f0, p0, p1, p2, p3, p4, p5); }
	void NETWORK_SPEND_CASINO_CLUB(int amount1, Any p1, BOOL p2, Any p3, int p4, int p5, int p6, int amount2, Any p8) { Call<void>(0xf2f23e9c942a94e, amount1, p1, p2, p3, p4, p5, p6, amount2, p8); }
	void NETWORK_SPEND_CASINO_CLUB_f(int amount1, Any p1, BOOL p2, Any p3, int p4, int p5, int p6, int amount2, Any p8) { FastCall<void>(0xf2f23e9c942a94e, amount1, p1, p2, p3, p4, p5, p6, amount2, p8); }
	void NETWORK_SPEND_BUY_SUB(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x4ee808404caa6a55, p0, p1, p2, p3); }
	void NETWORK_SPEND_BUY_SUB_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x4ee808404caa6a55, p0, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_SUB(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xf64ed9381825beb, p0, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_SUB_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xf64ed9381825beb, p0, p1, p2, p3); }
	void NETWORK_SPEND_ISLAND_HEIST(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xd906b2136f89f2d5, p0, p1, p2, p3); }
	void NETWORK_SPEND_ISLAND_HEIST_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xd906b2136f89f2d5, p0, p1, p2, p3); }
	void NETWORK_EARN_ISLAND_HEIST(int amount1, Any p1, Any p2, Any p3, int amount2, int p5) { Call<void>(0x32d266f7a83378b9, amount1, p1, p2, p3, amount2, p5); }
	void NETWORK_EARN_ISLAND_HEIST_f(int amount1, Any p1, Any p2, Any p3, int amount2, int p5) { FastCall<void>(0x32d266f7a83378b9, amount1, p1, p2, p3, amount2, p5); }
	void NETWORK_EARN_BEACH_PARTY_LOST_FOUND(Any p0, Any p1, Any p2) { Call<void>(0x6d7079c2d747cab2, p0, p1, p2); }
	void NETWORK_EARN_BEACH_PARTY_LOST_FOUND_f(Any p0, Any p1, Any p2) { FastCall<void>(0x6d7079c2d747cab2, p0, p1, p2); }
	void NETWORK_EARN_FROM_ISLAND_HEIST_DJ_MISSION(Any p0, Any p1) { Call<void>(0x3a779783483ed450, p0, p1); }
	void NETWORK_EARN_FROM_ISLAND_HEIST_DJ_MISSION_f(Any p0, Any p1) { FastCall<void>(0x3a779783483ed450, p0, p1); }
	void NETWORK_SPEND_CAR_CLUB_MEMBERSHIP(int amount1, Any p1, Any p2, int amount2, Any p4) { Call<void>(0x989c9fe47c656502, amount1, p1, p2, amount2, p4); }
	void NETWORK_SPEND_CAR_CLUB_MEMBERSHIP_f(int amount1, Any p1, Any p2, int amount2, Any p4) { FastCall<void>(0x989c9fe47c656502, amount1, p1, p2, amount2, p4); }
	void NETWORK_SPEND_CAR_CLUB_BAR(Any p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0xd6b5520d0234c847, p0, p1, p2, p3); }
	void NETWORK_SPEND_CAR_CLUB_BAR_f(Any p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0xd6b5520d0234c847, p0, p1, p2, p3); }
	void NETWORK_SPEND_AUTOSHOP_MODIFY(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0x4eaec943d53fb8a2, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_AUTOSHOP_MODIFY_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0x4eaec943d53fb8a2, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_CAR_CLUB_TAKEOVER(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x1600b24946851207, p0, p1, p2, p3); }
	void NETWORK_SPEND_CAR_CLUB_TAKEOVER_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x1600b24946851207, p0, p1, p2, p3); }
	void NETWORK_SPEND_BUY_AUTOSHOP(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xd695f26955b5ea10, p0, p1, p2, p3); }
	void NETWORK_SPEND_BUY_AUTOSHOP_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xd695f26955b5ea10, p0, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_AUTOSHOP(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x575c9574cf23863a, p0, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_AUTOSHOP_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x575c9574cf23863a, p0, p1, p2, p3); }
	void NETWORK_EARN_AUTOSHOP_BUSINESS(Any p0, Any p1, Any p2) { Call<void>(0x18f7f1a4a71b2a44, p0, p1, p2); }
	void NETWORK_EARN_AUTOSHOP_BUSINESS_f(Any p0, Any p1, Any p2) { FastCall<void>(0x18f7f1a4a71b2a44, p0, p1, p2); }
	void NETWORK_EARN_AUTOSHOP_INCOME(Any p0, int p1) { Call<void>(0xef3e53a1a5f1e12d, p0, p1); }
	void NETWORK_EARN_AUTOSHOP_INCOME_f(Any p0, int p1) { FastCall<void>(0xef3e53a1a5f1e12d, p0, p1); }
	void NETWORK_EARN_CARCLUB_MEMBERSHIP(Any p0) { Call<void>(0x9c000a2b8a6ee961, p0); }
	void NETWORK_EARN_CARCLUB_MEMBERSHIP_f(Any p0) { FastCall<void>(0x9c000a2b8a6ee961, p0); }
	void NETWORK_EARN_DAILY_VEHICLE(Any p0, Any p1) { Call<void>(0xea7241f75e4c8c70, p0, p1); }
	void NETWORK_EARN_DAILY_VEHICLE_f(Any p0, Any p1) { FastCall<void>(0xea7241f75e4c8c70, p0, p1); }
	void NETWORK_EARN_DAILY_VEHICLE_BONUS(Any p0) { Call<void>(0x5f9d07d828510370, p0); }
	void NETWORK_EARN_DAILY_VEHICLE_BONUS_f(Any p0) { FastCall<void>(0x5f9d07d828510370, p0); }
	void NETWORK_EARN_TUNER_AWARD(Any p0, Any p1, Any p2) { Call<void>(0x64dcb09b4d795142, p0, p1, p2); }
	void NETWORK_EARN_TUNER_AWARD_f(Any p0, Any p1, Any p2) { FastCall<void>(0x64dcb09b4d795142, p0, p1, p2); }
	void NETWORK_EARN_TUNER_ROBBERY(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xa072f7014a1412b4, p0, p1, p2, p3, p4); }
	void NETWORK_EARN_TUNER_ROBBERY_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xa072f7014a1412b4, p0, p1, p2, p3, p4); }
	void NETWORK_EARN_UPGRADE_AUTOSHOP(Any p0, Any p1) { Call<void>(0xc8be56d1ea0f7a1e, p0, p1); }
	void NETWORK_EARN_UPGRADE_AUTOSHOP_f(Any p0, Any p1) { FastCall<void>(0xc8be56d1ea0f7a1e, p0, p1); }
	void NETWORK_SPEND_INTERACTION_MENU_ABILITY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xee727afd2d085b89, p0, p1, p2, p3); }
	void NETWORK_SPEND_INTERACTION_MENU_ABILITY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xee727afd2d085b89, p0, p1, p2, p3); }
	void NETWORK_SPEND_SET_COMMON_FIELDS(Any p0, Any p1, Any p2, BOOL p3) { Call<void>(0x5bc6dec1f150da5e, p0, p1, p2, p3); }
	void NETWORK_SPEND_SET_COMMON_FIELDS_f(Any p0, Any p1, Any p2, BOOL p3) { FastCall<void>(0x5bc6dec1f150da5e, p0, p1, p2, p3); }
	void NETWORK_SPEND_SET_DISCOUNT(BOOL p0) { Call<void>(0xdc6575f57f40afd0, p0); }
	void NETWORK_SPEND_SET_DISCOUNT_f(BOOL p0) { FastCall<void>(0xdc6575f57f40afd0, p0); }
	void NETWORK_SPEND_BUY_AGENCY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x6bd832998bf1ffb0, p0, p1, p2, p3); }
	void NETWORK_SPEND_BUY_AGENCY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x6bd832998bf1ffb0, p0, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_AGENCY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x721b006c018c9e5a, p0, p1, p2, p3); }
	void NETWORK_SPEND_UPGRADE_AGENCY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x721b006c018c9e5a, p0, p1, p2, p3); }
	void NETWORK_SPEND_AGENCY(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xd9414a96b5a30cb7, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_AGENCY_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xd9414a96b5a30cb7, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_HIDDEN(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xd9414a96c1b08e5c, p0, p1, p2, p3); }
	void NETWORK_SPEND_HIDDEN_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xd9414a96c1b08e5c, p0, p1, p2, p3); }
	void NETWORK_SPEND_SOURCE_BIKE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xf5f0d7eec0ff413, p0, p1, p2, p3); }
	void NETWORK_SPEND_SOURCE_BIKE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xf5f0d7eec0ff413, p0, p1, p2, p3); }
	void NETWORK_SPEND_COMP_SUV(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x8e18ffce5dd69136, p0, p1, p2, p3); }
	void NETWORK_SPEND_COMP_SUV_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x8e18ffce5dd69136, p0, p1, p2, p3); }
	void NETWORK_SPEND_SUV_FST_TRVL(int p0, BOOL p1, BOOL p2, Any p3) { Call<void>(0xdc943d459a210ea9, p0, p1, p2, p3); }
	void NETWORK_SPEND_SUV_FST_TRVL_f(int p0, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0xdc943d459a210ea9, p0, p1, p2, p3); }
	void NETWORK_SPEND_SUPPLY(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xd9414a96d52499a1, p0, p1, p2, p3); }
	void NETWORK_SPEND_SUPPLY_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xd9414a96d52499a1, p0, p1, p2, p3); }
	void NETWORK_SPEND_BIKE_SHOP(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x3506f90fdcde22a2, p0, p1, p2, p3); }
	void NETWORK_SPEND_BIKE_SHOP_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x3506f90fdcde22a2, p0, p1, p2, p3); }
	void NETWORK_SPEND_VEHICLE_REQUESTED(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xe26232d8fd97dde9, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_VEHICLE_REQUESTED_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xe26232d8fd97dde9, p0, p1, p2, p3, p4); }
	void NETWORK_SPEND_GUNRUNNING(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x6bd8aa8c4d8adc31, p0, p1, p2, p3); }
	void NETWORK_SPEND_GUNRUNNING_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x6bd8aa8c4d8adc31, p0, p1, p2, p3); }
	void NETWORK_EARN_AGENCY_SAFE(Any p0, Any p1) { Call<void>(0x64a405ae32e8ebb1, p0, p1); }
	void NETWORK_EARN_AGENCY_SAFE_f(Any p0, Any p1) { FastCall<void>(0x64a405ae32e8ebb1, p0, p1); }
	void NETWORK_EARN_AWARD_CONTRACT(Any p0, Any p1) { Call<void>(0x58f92b0ee0ddac6a, p0, p1); }
	void NETWORK_EARN_AWARD_CONTRACT_f(Any p0, Any p1) { FastCall<void>(0x58f92b0ee0ddac6a, p0, p1); }
	void NETWORK_EARN_AGENCY_CONTRACT(Any p0, Any p1) { Call<void>(0xc2b04bb3ed5e8336, p0, p1); }
	void NETWORK_EARN_AGENCY_CONTRACT_f(Any p0, Any p1) { FastCall<void>(0xc2b04bb3ed5e8336, p0, p1); }
	void NETWORK_EARN_AWARD_PHONE(Any p0, Any p1) { Call<void>(0x64a5836d043e18f6, p0, p1); }
	void NETWORK_EARN_AWARD_PHONE_f(Any p0, Any p1) { FastCall<void>(0x64a5836d043e18f6, p0, p1); }
	void NETWORK_EARN_AGENCY_PHONE(Any p0, Any p1, Any p2) { Call<void>(0x2fdcb0182a0d95aa, p0, p1, p2); }
	void NETWORK_EARN_AGENCY_PHONE_f(Any p0, Any p1, Any p2) { FastCall<void>(0x2fdcb0182a0d95aa, p0, p1, p2); }
	void NETWORK_EARN_AWARD_FIXER_MISSION(Any p0, Any p1) { Call<void>(0xf336642da504cd37, p0, p1); }
	void NETWORK_EARN_AWARD_FIXER_MISSION_f(Any p0, Any p1) { FastCall<void>(0xf336642da504cd37, p0, p1); }
	void NETWORK_EARN_FIXER_PREP(Any p0, Any p1) { Call<void>(0x6e9a69eba952b380, p0, p1); }
	void NETWORK_EARN_FIXER_PREP_f(Any p0, Any p1) { FastCall<void>(0x6e9a69eba952b380, p0, p1); }
	void NETWORK_EARN_FIXER_FINALE(Any p0, Any p1) { Call<void>(0x31a79da68de87242, p0, p1); }
	void NETWORK_EARN_FIXER_FINALE_f(Any p0, Any p1) { FastCall<void>(0x31a79da68de87242, p0, p1); }
	void NETWORK_EARN_FIXER_AGENCY_SHORT_TRIP(Any p0, Any p1) { Call<void>(0x1ae8433335c8582f, p0, p1); }
	void NETWORK_EARN_FIXER_AGENCY_SHORT_TRIP_f(Any p0, Any p1) { FastCall<void>(0x1ae8433335c8582f, p0, p1); }
	void NETWORK_EARN_AWARD_SHORT_TRIP(Any p0, Any p1) { Call<void>(0xff5c1e315a092780, p0, p1); }
	void NETWORK_EARN_AWARD_SHORT_TRIP_f(Any p0, Any p1) { FastCall<void>(0xff5c1e315a092780, p0, p1); }
	void NETWORK_EARN_FIXER_RIVAL_DELIVERY(Any p0, Any p1) { Call<void>(0xb03c20cf1b9c00bc, p0, p1); }
	void NETWORK_EARN_FIXER_RIVAL_DELIVERY_f(Any p0, Any p1) { FastCall<void>(0xb03c20cf1b9c00bc, p0, p1); }
	void NETWORK_EARN_UPGRADE_AGENCY(Any p0, Any p1) { Call<void>(0x87cd0d24b5ec3b3e, p0, p1); }
	void NETWORK_EARN_UPGRADE_AGENCY_f(Any p0, Any p1) { FastCall<void>(0x87cd0d24b5ec3b3e, p0, p1); }
	void NETWORK_SPEND_APARTMENT_UTILITIES(int amount, BOOL p1, BOOL p2, Any* data) { Call<void>(0x4d7db05f4404ae8b, amount, p1, p2, data); }
	void NETWORK_SPEND_APARTMENT_UTILITIES_f(int amount, BOOL p1, BOOL p2, Any* data) { FastCall<void>(0x4d7db05f4404ae8b, amount, p1, p2, data); }
	void NETWORK_SPEND_BUSINESS_PROPERTY_FEES(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x1a226e1d4655704a, p0, p1, p2, p3); }
	void NETWORK_SPEND_BUSINESS_PROPERTY_FEES_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x1a226e1d4655704a, p0, p1, p2, p3); }
	void NETWORK_EARN_SIGHTSEEING_REWARD(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xa81b31719c2ce0f8, p0, p1, p2, p3); }
	void NETWORK_EARN_SIGHTSEEING_REWARD_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xa81b31719c2ce0f8, p0, p1, p2, p3); }
	void NETWORK_EARN_BIKER_SHOP(Any p0, Any p1) { Call<void>(0x6e9a096891bee07a, p0, p1); }
	void NETWORK_EARN_BIKER_SHOP_f(Any p0, Any p1) { FastCall<void>(0x6e9a096891bee07a, p0, p1); }
	void NETWORK_EARN_BIKER(Any p0) { Call<void>(0xe61d57ed524f983b, p0); }
	void NETWORK_EARN_BIKER_f(Any p0) { FastCall<void>(0xe61d57ed524f983b, p0); }
	void NETWORK_YOHAN_SOURCE_GOODS(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xcfc7c0f5c8345083, p0, p1, p2, p3); }
	void NETWORK_YOHAN_SOURCE_GOODS_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xcfc7c0f5c8345083, p0, p1, p2, p3); }
	void _NETWORK_SPEND_BUY_MFGARAGE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x8ec795d148e6ea8a, p0, p1, p2, p3); }
	void _NETWORK_SPEND_BUY_MFGARAGE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x8ec795d148e6ea8a, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_MFGARAGE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x89af475d3fa19f34, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_MFGARAGE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x89af475d3fa19f34, p0, p1, p2, p3); }
	void _NETWORK_SPEND_BUY_SUPPLIES(int p0, BOOL p1, BOOL p2, int p3) { Call<void>(0x8ec795fae1d7d257, p0, p1, p2, p3); }
	void _NETWORK_SPEND_BUY_SUPPLIES_f(int p0, BOOL p1, BOOL p2, int p3) { FastCall<void>(0x8ec795fae1d7d257, p0, p1, p2, p3); }
	void _NETWORK_SPEND_BUY_ACID_LAB(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x8ec79583cf402775, p0, p1, p2, p3); }
	void _NETWORK_SPEND_BUY_ACID_LAB_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x8ec79583cf402775, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_ACID_LAB_EQUIPMENT(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x49644617344a714e, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_ACID_LAB_EQUIPMENT_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x49644617344a714e, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_ACID_LAB_ARMOR(int p0, BOOL p1, BOOL p2, int p3) { Call<void>(0x674481bacb1dd4ff, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_ACID_LAB_ARMOR_f(int p0, BOOL p1, BOOL p2, int p3) { FastCall<void>(0x674481bacb1dd4ff, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_ACID_LAB_SCOOP(int p0, BOOL p1, BOOL p2, int p3) { Call<void>(0x674481bacc14b200, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_ACID_LAB_SCOOP_f(int p0, BOOL p1, BOOL p2, int p3) { FastCall<void>(0x674481bacc14b200, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_ACID_LAB_MINES(int p0, BOOL p1, BOOL p2, int p3) { Call<void>(0x674481bacbc2da40, p0, p1, p2, p3); }
	void _NETWORK_SPEND_UPGRADE_ACID_LAB_MINES_f(int p0, BOOL p1, BOOL p2, int p3) { FastCall<void>(0x674481bacbc2da40, p0, p1, p2, p3); }
	void _NETWORK_SPEND_RENAME_ACID_LAB(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x46a9f1bdef8be65b, p0, p1, p2, p3); }
	void _NETWORK_SPEND_RENAME_ACID_LAB_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x46a9f1bdef8be65b, p0, p1, p2, p3); }
	void _NETWORK_SPEND_RENAME_ACID_PRODUCT(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x18bdfae2d19df2bd, p0, p1, p2, p3); }
	void _NETWORK_SPEND_RENAME_ACID_PRODUCT_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x18bdfae2d19df2bd, p0, p1, p2, p3); }
	void _NETWORK_EARN_AWARD_JUGGALO_MISSION(Any p0, Any p1) { Call<void>(0xcb55d4b19b50cbad, p0, p1); }
	void _NETWORK_EARN_AWARD_JUGGALO_MISSION_f(Any p0, Any p1) { FastCall<void>(0xcb55d4b19b50cbad, p0, p1); }
	void _NETWORK_EARN_AWARD_ACID_LAB(Any p0, Any p1) { Call<void>(0xa6fbeba9ea7ea684, p0, p1); }
	void _NETWORK_EARN_AWARD_ACID_LAB_f(Any p0, Any p1) { FastCall<void>(0xa6fbeba9ea7ea684, p0, p1); }
	void _NETWORK_EARN_AWARD_DAILY_STASH(Any p0, Any p1) { Call<void>(0x1e4dfec161a5bc56, p0, p1); }
	void _NETWORK_EARN_AWARD_DAILY_STASH_f(Any p0, Any p1) { FastCall<void>(0x1e4dfec161a5bc56, p0, p1); }
	void _NETWORK_EARN_AWARD_DEAD_DROP(Any p0, Any p1) { Call<void>(0x38818bf24ab09571, p0, p1); }
	void _NETWORK_EARN_AWARD_DEAD_DROP_f(Any p0, Any p1) { FastCall<void>(0x38818bf24ab09571, p0, p1); }
	void _NETWORK_EARN_AWARD_RANDOM_EVENT(Any p0, Any p1) { Call<void>(0xb0620f6eaec8cb17, p0, p1); }
	void _NETWORK_EARN_AWARD_RANDOM_EVENT_f(Any p0, Any p1) { FastCall<void>(0xb0620f6eaec8cb17, p0, p1); }
	void _NETWORK_EARN_AWARD_TAXI(Any p0, Any p1) { Call<void>(0xcf9b9361c6c94a37, p0, p1); }
	void _NETWORK_EARN_AWARD_TAXI_f(Any p0, Any p1) { FastCall<void>(0xcf9b9361c6c94a37, p0, p1); }
	void _NETWORK_EARN_STREET_DEALER(Any p0, Any p1) { Call<void>(0x4d67998f8b76771e, p0, p1); }
	void _NETWORK_EARN_STREET_DEALER_f(Any p0, Any p1) { FastCall<void>(0x4d67998f8b76771e, p0, p1); }
	void _NETWORK_EARN_SELL_ACID(Any p0, Any p1) { Call<void>(0x720d5456f71f7753, p0, p1); }
	void _NETWORK_EARN_SELL_ACID_f(Any p0, Any p1) { FastCall<void>(0x720d5456f71f7753, p0, p1); }
	void _NETWORK_EARN_SETUP_PARTICIPATION_ACID_LAB(Any p0, Any p1) { Call<void>(0x76701af9aa0bc402, p0, p1); }
	void _NETWORK_EARN_SETUP_PARTICIPATION_ACID_LAB_f(Any p0, Any p1) { FastCall<void>(0x76701af9aa0bc402, p0, p1); }
	void _NETWORK_EARN_SOURCE_PARTICIPATION_ACID_LAB(Any p0, Any p1) { Call<void>(0x4a0e4d5c24a98836, p0, p1); }
	void _NETWORK_EARN_SOURCE_PARTICIPATION_ACID_LAB_f(Any p0, Any p1) { FastCall<void>(0x4a0e4d5c24a98836, p0, p1); }
	void _NETWORK_EARN_SELL_PARTICIPATION_ACID_LAB(Any p0, Any p1) { Call<void>(0xa0f127a73579ad5f, p0, p1); }
	void _NETWORK_EARN_SELL_PARTICIPATION_ACID_LAB_f(Any p0, Any p1) { FastCall<void>(0xa0f127a73579ad5f, p0, p1); }
	void _NETWORK_EARN_JUGGALO_STORY_MISSION(Any p0, Any p1) { Call<void>(0x2c77268fbc59acc5, p0, p1); }
	void _NETWORK_EARN_JUGGALO_STORY_MISSION_f(Any p0, Any p1) { FastCall<void>(0x2c77268fbc59acc5, p0, p1); }
	void _NETWORK_EARN_JUGGALO_STORY_MISSION_PARTICIPATION(Any p0, Any p1) { Call<void>(0x7100b29f7ee2e727, p0, p1); }
	void _NETWORK_EARN_JUGGALO_STORY_MISSION_PARTICIPATION_f(Any p0, Any p1) { FastCall<void>(0x7100b29f7ee2e727, p0, p1); }
	void _NETWORK_EARN_FOOLIGAN_JOB(Any p0, Any p1) { Call<void>(0x58b19af18d7a7f26, p0, p1); }
	void _NETWORK_EARN_FOOLIGAN_JOB_f(Any p0, Any p1) { FastCall<void>(0x58b19af18d7a7f26, p0, p1); }
	void _NETWORK_EARN_FOOLIGAN_JOB_PARTICIPATION(Any p0, Any p1) { Call<void>(0x6a2d8c83e14f7bc8, p0, p1); }
	void _NETWORK_EARN_FOOLIGAN_JOB_PARTICIPATION_f(Any p0, Any p1) { FastCall<void>(0x6a2d8c83e14f7bc8, p0, p1); }
	void _NETWORK_EARN_TAXI_JOB(Any p0, Any p1) { Call<void>(0xa095134245362f13, p0, p1); }
	void _NETWORK_EARN_TAXI_JOB_f(Any p0, Any p1) { FastCall<void>(0xa095134245362f13, p0, p1); }
	void _NETWORK_EARN_DAILY_STASH_HOUSE_COMPLETED(Any p0, Any p1) { Call<void>(0x7ff8951b3f310f85, p0, p1); }
	void _NETWORK_EARN_DAILY_STASH_HOUSE_COMPLETED_f(Any p0, Any p1) { FastCall<void>(0x7ff8951b3f310f85, p0, p1); }
	void _NETWORK_EARN_DAILY_STASH_HOUSE_PARTICIPATION(Any p0, Any p1) { Call<void>(0x825f9f8cc43f717b, p0, p1); }
	void _NETWORK_EARN_DAILY_STASH_HOUSE_PARTICIPATION_f(Any p0, Any p1) { FastCall<void>(0x825f9f8cc43f717b, p0, p1); }
	void _NETWORK_EARN_AVENGER(int amount, int p1) { Call<void>(0xcb5fa5c48a85bedf, amount, p1); }
	void _NETWORK_EARN_AVENGER_f(int amount, int p1) { FastCall<void>(0xcb5fa5c48a85bedf, amount, p1); }
	void _NETWORK_EARN_SMUGGLER_OPS(Any p0, Any p1, Any p2) { Call<void>(0x5d41d3c7dbe19d28, p0, p1, p2); }
	void _NETWORK_EARN_SMUGGLER_OPS_f(Any p0, Any p1, Any p2) { FastCall<void>(0x5d41d3c7dbe19d28, p0, p1, p2); }
	void _NETWORK_EARN_BONUS_OBJECTIVE(int amount, Any p1, Any p2) { Call<void>(0x39a7282486572fe2, amount, p1, p2); }
	void _NETWORK_EARN_BONUS_OBJECTIVE_f(int amount, Any p1, Any p2) { FastCall<void>(0x39a7282486572fe2, amount, p1, p2); }
	void _NETWORK_EARN_PROGRESS_HUB(Any p0, Any p1) { Call<void>(0x5c4104620fdea95a, p0, p1); }
	void _NETWORK_EARN_PROGRESS_HUB_f(Any p0, Any p1) { FastCall<void>(0x5c4104620fdea95a, p0, p1); }
	void _NETWORK_SPENT_AIR_FREIGHT(int hangarCargoSourcingPrice, BOOL fromBank, BOOL fromBankAndWallet, int cost, int warehouseId, int warehouseSlot) { Call<void>(0xe508db0f8f316c2d, hangarCargoSourcingPrice, fromBank, fromBankAndWallet, cost, warehouseId, warehouseSlot); }
	void _NETWORK_SPENT_AIR_FREIGHT_f(int hangarCargoSourcingPrice, BOOL fromBank, BOOL fromBankAndWallet, int cost, int warehouseId, int warehouseSlot) { FastCall<void>(0xe508db0f8f316c2d, hangarCargoSourcingPrice, fromBank, fromBankAndWallet, cost, warehouseId, warehouseSlot); }
	void _NETWORK_SPENT_SKIP_CARGO_SOURCE_SETUP(int amount, BOOL fromBank, BOOL fromBankAndWallet, int cost) { Call<void>(0x332d888a8fab485b, amount, fromBank, fromBankAndWallet, cost); }
	void _NETWORK_SPENT_SKIP_CARGO_SOURCE_SETUP_f(int amount, BOOL fromBank, BOOL fromBankAndWallet, int cost) { FastCall<void>(0x332d888a8fab485b, amount, fromBank, fromBankAndWallet, cost); }
	void _NETWORK_SPENT_STEALTH_MODULE(int amount, BOOL fromBank, BOOL fromBankAndWallet, Hash p3) { Call<void>(0x485fb6f9830a82c9, amount, fromBank, fromBankAndWallet, p3); }
	void _NETWORK_SPENT_STEALTH_MODULE_f(int amount, BOOL fromBank, BOOL fromBankAndWallet, Hash p3) { FastCall<void>(0x485fb6f9830a82c9, amount, fromBank, fromBankAndWallet, p3); }
	void _NETWORK_SPENT_MISSILE_JAMMER(int amount, BOOL fromBank, BOOL fromBankAndWallet, Hash p3) { Call<void>(0xe41a8a851f7ef1de, amount, fromBank, fromBankAndWallet, p3); }
	void _NETWORK_SPENT_MISSILE_JAMMER_f(int amount, BOOL fromBank, BOOL fromBankAndWallet, Hash p3) { FastCall<void>(0xe41a8a851f7ef1de, amount, fromBank, fromBankAndWallet, p3); }
	void _NETWORK_SPENT_GENERIC(int price, BOOL p1, BOOL p2, Hash stat, Hash spent, char* p5, char* p6, Any* data) { Call<void>(0x3ec1fd1d691c6056, price, p1, p2, stat, spent, p5, p6, data); }
	void _NETWORK_SPENT_GENERIC_f(int price, BOOL p1, BOOL p2, Hash stat, Hash spent, char* p5, char* p6, Any* data) { FastCall<void>(0x3ec1fd1d691c6056, price, p1, p2, stat, spent, p5, p6, data); }
	void _NETWORK_EARN_GENERIC(int amount, Hash earn, char* p2, char* p3, Any* data) { Call<void>(0xcb5fa5c5ab63a5c0, amount, earn, p2, p3, data); }
	void _NETWORK_EARN_GENERIC_f(int amount, Hash earn, char* p2, char* p3, Any* data) { FastCall<void>(0xcb5fa5c5ab63a5c0, amount, earn, p2, p3, data); }
	void _NETWORK_CLEAR_TRANSACTION_TELEMETRY_NONCE() { Call<void>(0x139421a1ac9985a6); }
	void _NETWORK_CLEAR_TRANSACTION_TELEMETRY_NONCE_f() { FastCall<void>(0x139421a1ac9985a6); }
	int NETWORK_GET_VC_BANK_BALANCE() { return Call<int>(0xcbf3d4ede9eaa151); }
	int NETWORK_GET_VC_BANK_BALANCE_f() { return FastCall<int>(0xcbf3d4ede9eaa151); }
	int NETWORK_GET_VC_WALLET_BALANCE(int characterSlot) { return Call<int>(0x69b5df09df1cd80e, characterSlot); }
	int NETWORK_GET_VC_WALLET_BALANCE_f(int characterSlot) { return FastCall<int>(0x69b5df09df1cd80e, characterSlot); }
	int NETWORK_GET_VC_BALANCE() { return Call<int>(0x3901cb156c45de24); }
	int NETWORK_GET_VC_BALANCE_f() { return FastCall<int>(0x3901cb156c45de24); }
	int NETWORK_GET_EVC_BALANCE() { return Call<int>(0xe707cae10a758d75); }
	int NETWORK_GET_EVC_BALANCE_f() { return FastCall<int>(0xe707cae10a758d75); }
	int NETWORK_GET_PVC_BALANCE() { return Call<int>(0xe727d2cd70493bc0); }
	int NETWORK_GET_PVC_BALANCE_f() { return FastCall<int>(0xe727d2cd70493bc0); }
	const char* NETWORK_GET_STRING_WALLET_BALANCE(int characterSlot) { return Call<char*>(0xa9524f80cab0c72a, characterSlot); }
	const char* NETWORK_GET_STRING_WALLET_BALANCE_f(int characterSlot) { return FastCall<char*>(0xa9524f80cab0c72a, characterSlot); }
	char* NETWORK_GET_STRING_BANK_BALANCE() { Call<char*>(0x816e003390a7a76d); }
	char* NETWORK_GET_STRING_BANK_BALANCE_f() { FastCall<char*>(0x816e003390a7a76d); }
	const char* NETWORK_GET_STRING_BANK_WALLET_BALANCE(int character) { return Call<char*>(0xc3855c30a70cbaa5, character); }
	const char* NETWORK_GET_STRING_BANK_WALLET_BALANCE_f(int character) { return FastCall<char*>(0xc3855c30a70cbaa5, character); }
	BOOL NETWORK_GET_CAN_SPEND_FROM_WALLET(int amount, int characterSlot) { return Call<BOOL>(0x8b2e22a726508ea4, amount, characterSlot); }
	BOOL NETWORK_GET_CAN_SPEND_FROM_WALLET_f(int amount, int characterSlot) { return FastCall<BOOL>(0x8b2e22a726508ea4, amount, characterSlot); }
	BOOL NETWORK_GET_CAN_SPEND_FROM_BANK(int amount) { return Call<BOOL>(0xd71ef2fba529f3a7, amount); }
	BOOL NETWORK_GET_CAN_SPEND_FROM_BANK_f(int amount) { return FastCall<BOOL>(0xd71ef2fba529f3a7, amount); }
	BOOL NETWORK_GET_CAN_SPEND_FROM_BANK_AND_WALLET(int amount, int characterSlot) { return Call<BOOL>(0xfbd83d78a1de1f19, amount, characterSlot); }
	BOOL NETWORK_GET_CAN_SPEND_FROM_BANK_AND_WALLET_f(int amount, int characterSlot) { return FastCall<BOOL>(0xfbd83d78a1de1f19, amount, characterSlot); }
	int NETWORK_GET_PVC_TRANSFER_BALANCE() { return Call<int>(0xbd5b21013826d1e4); }
	int NETWORK_GET_PVC_TRANSFER_BALANCE_f() { return FastCall<int>(0xbd5b21013826d1e4); }
	BOOL NETWORK_GET_CAN_TRANSFER_CASH(int amount) { return Call<BOOL>(0x17892ff94cde447e, amount); }
	BOOL NETWORK_GET_CAN_TRANSFER_CASH_f(int amount) { return FastCall<BOOL>(0x17892ff94cde447e, amount); }
	BOOL NETWORK_CAN_RECEIVE_PLAYER_CASH(Any p0, Any p1, Any p2, Any p3) { return Call<BOOL>(0xd7eb1d72e3eb0c15, p0, p1, p2, p3); }
	BOOL NETWORK_CAN_RECEIVE_PLAYER_CASH_f(Any p0, Any p1, Any p2, Any p3) { return FastCall<BOOL>(0xd7eb1d72e3eb0c15, p0, p1, p2, p3); }
	int NETWORK_GET_REMAINING_TRANSFER_BALANCE() { return Call<int>(0x60edbcfeb4ae74ab); }
	int NETWORK_GET_REMAINING_TRANSFER_BALANCE_f() { return FastCall<int>(0x60edbcfeb4ae74ab); }
	int WITHDRAW_VC(int amount) { return Call<int>(0x104745dbd452002, amount); }
	int WITHDRAW_VC_f(int amount) { return FastCall<int>(0x104745dbd452002, amount); }
	BOOL DEPOSIT_VC(int amount) { return Call<BOOL>(0x69ac4352cd40e, amount); }
	BOOL DEPOSIT_VC_f(int amount) { return FastCall<BOOL>(0x69ac4352cd40e, amount); }
	BOOL HAS_VC_WITHDRAWAL_COMPLETED(Any p0) { return Call<BOOL>(0x50bc24c48f7706ae, p0); }
	BOOL HAS_VC_WITHDRAWAL_COMPLETED_f(Any p0) { return FastCall<BOOL>(0x50bc24c48f7706ae, p0); }
	BOOL WAS_VC_WITHDRAWAL_SUCCESSFUL(Any p0) { return Call<BOOL>(0x167990a070311508, p0); }
	BOOL WAS_VC_WITHDRAWAL_SUCCESSFUL_f(Any p0) { return FastCall<BOOL>(0x167990a070311508, p0); }
}
namespace NETSHOPPING
{
	BOOL NET_GAMESERVER_USE_SERVER_TRANSACTIONS() { return Call<BOOL>(0x3551ad56d13c7b71); }
	BOOL NET_GAMESERVER_USE_SERVER_TRANSACTIONS_f() { return FastCall<BOOL>(0x3551ad56d13c7b71); }
	BOOL NET_GAMESERVER_CATALOG_ITEM_IS_VALID(char* name) { return Call<BOOL>(0x5582403dd6c855e5, name); }
	BOOL NET_GAMESERVER_CATALOG_ITEM_IS_VALID_f(char* name) { return FastCall<BOOL>(0x5582403dd6c855e5, name); }
	BOOL NET_GAMESERVER_CATALOG_ITEM_KEY_IS_VALID(Hash hash) { return Call<BOOL>(0x4e54e8ce2cbd9ce5, hash); }
	BOOL NET_GAMESERVER_CATALOG_ITEM_KEY_IS_VALID_f(Hash hash) { return FastCall<BOOL>(0x4e54e8ce2cbd9ce5, hash); }
	int NET_GAMESERVER_GET_PRICE(Hash itemHash, Hash categoryHash, BOOL p2) { return Call<int>(0xf16826634c0de258, itemHash, categoryHash, p2); }
	int NET_GAMESERVER_GET_PRICE_f(Hash itemHash, Hash categoryHash, BOOL p2) { return FastCall<int>(0xf16826634c0de258, itemHash, categoryHash, p2); }
	BOOL NET_GAMESERVER_CATALOG_IS_VALID() { return Call<BOOL>(0x59bce51f7dcdf95); }
	BOOL NET_GAMESERVER_CATALOG_IS_VALID_f() { return FastCall<BOOL>(0x59bce51f7dcdf95); }
	BOOL NET_GAMESERVER_IS_CATALOG_CURRENT() { return Call<BOOL>(0x6647b6afd5469186); }
	BOOL NET_GAMESERVER_IS_CATALOG_CURRENT_f() { return FastCall<BOOL>(0x6647b6afd5469186); }
	Hash NET_GAMESERVER_GET_CATALOG_CLOUD_CRC() { return Call<Hash>(0x6d65c8ebb391e673); }
	Hash NET_GAMESERVER_GET_CATALOG_CLOUD_CRC_f() { return FastCall<Hash>(0x6d65c8ebb391e673); }
	BOOL NET_GAMESERVER_REFRESH_SERVER_CATALOG() { return Call<BOOL>(0x303e90afaabe5489); }
	BOOL NET_GAMESERVER_REFRESH_SERVER_CATALOG_f() { return FastCall<BOOL>(0x303e90afaabe5489); }
	BOOL NET_GAMESERVER_RETRIEVE_CATALOG_REFRESH_STATUS(int* state) { return Call<BOOL>(0xd41a53242467cfd7, state); }
	BOOL NET_GAMESERVER_RETRIEVE_CATALOG_REFRESH_STATUS_f(int* state) { return FastCall<BOOL>(0xd41a53242467cfd7, state); }
	BOOL NET_GAMESERVER_INIT_SESSION() { return Call<BOOL>(0xc7d8eb6b36393bcf); }
	BOOL NET_GAMESERVER_INIT_SESSION_f() { return FastCall<BOOL>(0xc7d8eb6b36393bcf); }
	BOOL NET_GAMESERVER_RETRIEVE_INIT_SESSION_STATUS(int* p0) { return Call<BOOL>(0x387dfba4784e61ef, p0); }
	BOOL NET_GAMESERVER_RETRIEVE_INIT_SESSION_STATUS_f(int* p0) { return FastCall<BOOL>(0x387dfba4784e61ef, p0); }
	BOOL NET_GAMESERVER_START_SESSION(int charSlot) { return Call<BOOL>(0xa29a029fccd316f1, charSlot); }
	BOOL NET_GAMESERVER_START_SESSION_f(int charSlot) { return FastCall<BOOL>(0xa29a029fccd316f1, charSlot); }
	BOOL NET_GAMESERVER_START_SESSION_PENDING() { return Call<BOOL>(0xe9dd7e9c4e755229); }
	BOOL NET_GAMESERVER_START_SESSION_PENDING_f() { return FastCall<BOOL>(0xe9dd7e9c4e755229); }
	BOOL NET_GAMESERVER_RETRIEVE_START_SESSION_STATUS(int* p0) { return Call<BOOL>(0x10a78c8cbd86a713, p0); }
	BOOL NET_GAMESERVER_RETRIEVE_START_SESSION_STATUS_f(int* p0) { return FastCall<BOOL>(0x10a78c8cbd86a713, p0); }
	BOOL NET_GAMESERVER_RETRIEVE_SESSION_ERROR_CODE(int* p0) { return Call<BOOL>(0x8930f3615d9e11a8, p0); }
	BOOL NET_GAMESERVER_RETRIEVE_SESSION_ERROR_CODE_f(int* p0) { return FastCall<BOOL>(0x8930f3615d9e11a8, p0); }
	BOOL NET_GAMESERVER_IS_SESSION_VALID(int charSlot) { return Call<BOOL>(0x47b7a7ca46829806, charSlot); }
	BOOL NET_GAMESERVER_IS_SESSION_VALID_f(int charSlot) { return FastCall<BOOL>(0x47b7a7ca46829806, charSlot); }
	BOOL NET_GAMESERVER_CLEAR_SESSION(int p0) { return Call<BOOL>(0xf0ec7502993eeddc, p0); }
	BOOL NET_GAMESERVER_CLEAR_SESSION_f(int p0) { return FastCall<BOOL>(0xf0ec7502993eeddc, p0); }
	BOOL NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA(int charSlot) { return Call<BOOL>(0x82a83a3457f99246, charSlot); }
	BOOL NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA_f(int charSlot) { return FastCall<BOOL>(0x82a83a3457f99246, charSlot); }
	BOOL NET_GAMESERVER_IS_SESSION_REFRESH_PENDING() { return Call<BOOL>(0x81dad393ac56439d); }
	BOOL NET_GAMESERVER_IS_SESSION_REFRESH_PENDING_f() { return FastCall<BOOL>(0x81dad393ac56439d); }
	BOOL NET_GAMESERVER_START_SESSION_RESTART(BOOL inventory, BOOL playerbalance) { return Call<BOOL>(0xe9dd7e9cb88f66a1, inventory, playerbalance); }
	BOOL NET_GAMESERVER_START_SESSION_RESTART_f(BOOL inventory, BOOL playerbalance) { return FastCall<BOOL>(0xe9dd7e9cb88f66a1, inventory, playerbalance); }
	BOOL NET_GAMESERVER_TRANSACTION_IN_PROGRESS() { return Call<BOOL>(0x2eb0938c806eed7e); }
	BOOL NET_GAMESERVER_TRANSACTION_IN_PROGRESS_f() { return FastCall<BOOL>(0x2eb0938c806eed7e); }
	BOOL NET_GAMESERVER_GET_SESSION_STATE_AND_STATUS(int* p0, BOOL* p1) { return Call<BOOL>(0xd2a75a2e470d2122, p0, p1); }
	BOOL NET_GAMESERVER_GET_SESSION_STATE_AND_STATUS_f(int* p0, BOOL* p1) { return FastCall<BOOL>(0xd2a75a2e470d2122, p0, p1); }
	BOOL NET_GAMESERVER_BASKET_START(int* transactionId, Hash categoryHash, Hash actionHash, int flags) { return Call<BOOL>(0xc53c174f999d2a11, transactionId, categoryHash, actionHash, flags); }
	BOOL NET_GAMESERVER_BASKET_START_f(int* transactionId, Hash categoryHash, Hash actionHash, int flags) { return FastCall<BOOL>(0xc53c174f999d2a11, transactionId, categoryHash, actionHash, flags); }
	BOOL NET_GAMESERVER_BASKET_END() { return Call<BOOL>(0x3b9c2aa582b0924a); }
	BOOL NET_GAMESERVER_BASKET_END_f() { return FastCall<BOOL>(0x3b9c2aa582b0924a); }
	BOOL NET_GAMESERVER_BASKET_IS_ACTIVE() { return Call<BOOL>(0xfba44bfb68a820a); }
	BOOL NET_GAMESERVER_BASKET_IS_ACTIVE_f() { return FastCall<BOOL>(0xfba44bfb68a820a); }
	BOOL NET_GAMESERVER_BASKET_ADD_ITEM(Any* itemData, int quantity) { return Call<BOOL>(0x6bdcb7aea1fb73e2, itemData, quantity); }
	BOOL NET_GAMESERVER_BASKET_ADD_ITEM_f(Any* itemData, int quantity) { return FastCall<BOOL>(0x6bdcb7aea1fb73e2, itemData, quantity); }
	BOOL NET_GAMESERVER_BASKET_IS_FULL() { return Call<BOOL>(0x669381cd95e91a93); }
	BOOL NET_GAMESERVER_BASKET_IS_FULL_f() { return FastCall<BOOL>(0x669381cd95e91a93); }
	BOOL NET_GAMESERVER_BASKET_APPLY_SERVER_DATA(Any p0, Any* p1) { return Call<BOOL>(0x74d57f2a0aa49304, p0, p1); }
	BOOL NET_GAMESERVER_BASKET_APPLY_SERVER_DATA_f(Any p0, Any* p1) { return FastCall<BOOL>(0x74d57f2a0aa49304, p0, p1); }
	BOOL NET_GAMESERVER_CHECKOUT_START(int transactionId) { return Call<BOOL>(0xeded0509d1d791, transactionId); }
	BOOL NET_GAMESERVER_CHECKOUT_START_f(int transactionId) { return FastCall<BOOL>(0xeded0509d1d791, transactionId); }
	BOOL NET_GAMESERVER_BEGIN_SERVICE(int* transactionId, Hash categoryHash, Hash itemHash, Hash actionTypeHash, int value, int flags) { return Call<BOOL>(0xe38ccbebefd6d857, transactionId, categoryHash, itemHash, actionTypeHash, value, flags); }
	BOOL NET_GAMESERVER_BEGIN_SERVICE_f(int* transactionId, Hash categoryHash, Hash itemHash, Hash actionTypeHash, int value, int flags) { return FastCall<BOOL>(0xe38ccbebefd6d857, transactionId, categoryHash, itemHash, actionTypeHash, value, flags); }
	BOOL NET_GAMESERVER_END_SERVICE(int transactionId) { return Call<BOOL>(0x37f313de31ae9089, transactionId); }
	BOOL NET_GAMESERVER_END_SERVICE_f(int transactionId) { return FastCall<BOOL>(0x37f313de31ae9089, transactionId); }
	BOOL NET_GAMESERVER_DELETE_CHARACTER(int slot, BOOL transfer, Hash reason) { return Call<BOOL>(0xcde9829ad0979afd, slot, transfer, reason); }
	BOOL NET_GAMESERVER_DELETE_CHARACTER_f(int slot, BOOL transfer, Hash reason) { return FastCall<BOOL>(0xcde9829ad0979afd, slot, transfer, reason); }
	int NET_GAMESERVER_DELETE_CHARACTER_GET_STATUS() { return Call<int>(0xbb73f3de7476af9d); }
	int NET_GAMESERVER_DELETE_CHARACTER_GET_STATUS_f() { return FastCall<int>(0xbb73f3de7476af9d); }
	BOOL NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED() { return Call<BOOL>(0x91875fe54e4ca2b0); }
	BOOL NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED_f() { return FastCall<BOOL>(0x91875fe54e4ca2b0); }
	BOOL NET_GAMESERVER_TRANSFER_BANK_TO_WALLET(int charSlot, int amount) { return Call<BOOL>(0xcec14b082f757c46, charSlot, amount); }
	BOOL NET_GAMESERVER_TRANSFER_BANK_TO_WALLET_f(int charSlot, int amount) { return FastCall<BOOL>(0xcec14b082f757c46, charSlot, amount); }
	BOOL NET_GAMESERVER_TRANSFER_WALLET_TO_BANK(int charSlot, int amount) { return Call<BOOL>(0x9a24caa698dc7b86, charSlot, amount); }
	BOOL NET_GAMESERVER_TRANSFER_WALLET_TO_BANK_f(int charSlot, int amount) { return FastCall<BOOL>(0x9a24caa698dc7b86, charSlot, amount); }
	int NET_GAMESERVER_TRANSFER_BANK_TO_WALLET_GET_STATUS() { return Call<int>(0xd692ff0b6d7a56b4); }
	int NET_GAMESERVER_TRANSFER_BANK_TO_WALLET_GET_STATUS_f() { return FastCall<int>(0xd692ff0b6d7a56b4); }
	int NET_GAMESERVER_TRANSFER_WALLET_TO_BANK_GET_STATUS() { return Call<int>(0x55957df528774f74); }
	int NET_GAMESERVER_TRANSFER_WALLET_TO_BANK_GET_STATUS_f() { return FastCall<int>(0x55957df528774f74); }
	BOOL NET_GAMESERVER_TRANSFER_CASH_SET_TELEMETRY_NONCE_SEED() { return Call<BOOL>(0x56454b5ce311b2e4); }
	BOOL NET_GAMESERVER_TRANSFER_CASH_SET_TELEMETRY_NONCE_SEED_f() { return FastCall<BOOL>(0x56454b5ce311b2e4); }
	BOOL NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED(int p0) { return Call<BOOL>(0xf244f31392e006ac, p0); }
	BOOL NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED_f(int p0) { return FastCall<BOOL>(0xf244f31392e006ac, p0); }
}
namespace NETWORK
{
	char* GET_ONLINE_VERSION() { Call<char*>(0xab8d051ecfbbef5); }
	char* GET_ONLINE_VERSION_f() { FastCall<char*>(0xab8d051ecfbbef5); }
	BOOL NETWORK_IS_SIGNED_IN() { return Call<BOOL>(0xd5c5cb61040f46e4); }
	BOOL NETWORK_IS_SIGNED_IN_f() { return FastCall<BOOL>(0xd5c5cb61040f46e4); }
	BOOL NETWORK_IS_SIGNED_ONLINE() { return Call<BOOL>(0x9d3f6c1655e9f092); }
	BOOL NETWORK_IS_SIGNED_ONLINE_f() { return FastCall<BOOL>(0x9d3f6c1655e9f092); }
	BOOL NETWORK_IS_NP_AVAILABLE() { return Call<BOOL>(0xf2e1b00edad84930); }
	BOOL NETWORK_IS_NP_AVAILABLE_f() { return FastCall<BOOL>(0xf2e1b00edad84930); }
	BOOL NETWORK_IS_NP_PENDING() { return Call<BOOL>(0xe2f32e8bedb2b9be); }
	BOOL NETWORK_IS_NP_PENDING_f() { return FastCall<BOOL>(0xe2f32e8bedb2b9be); }
	int NETWORK_GET_NP_UNAVAILABLE_REASON() { return Call<int>(0x8bdaca35d793a396); }
	int NETWORK_GET_NP_UNAVAILABLE_REASON_f() { return FastCall<int>(0x8bdaca35d793a396); }
	BOOL NETWORK_IS_CONNETED_TO_NP_PRESENCE() { return Call<BOOL>(0x8fb2ed76f6cb4ff5); }
	BOOL NETWORK_IS_CONNETED_TO_NP_PRESENCE_f() { return FastCall<BOOL>(0x8fb2ed76f6cb4ff5); }
	BOOL NETWORK_IS_LOGGED_IN_TO_PSN() { return Call<BOOL>(0x9dc07b56d3c0e788); }
	BOOL NETWORK_IS_LOGGED_IN_TO_PSN_f() { return FastCall<BOOL>(0x9dc07b56d3c0e788); }
	BOOL NETWORK_HAS_VALID_ROS_CREDENTIALS() { return Call<BOOL>(0xf2f9d0b72b14307a); }
	BOOL NETWORK_HAS_VALID_ROS_CREDENTIALS_f() { return FastCall<BOOL>(0xf2f9d0b72b14307a); }
	BOOL NETWORK_IS_REFRESHING_ROS_CREDENTIALS() { return Call<BOOL>(0x8a039cce0a14a67f); }
	BOOL NETWORK_IS_REFRESHING_ROS_CREDENTIALS_f() { return FastCall<BOOL>(0x8a039cce0a14a67f); }
	BOOL NETWORK_IS_CLOUD_AVAILABLE() { return Call<BOOL>(0x124360b62658c9bb); }
	BOOL NETWORK_IS_CLOUD_AVAILABLE_f() { return FastCall<BOOL>(0x124360b62658c9bb); }
	BOOL NETWORK_HAS_SOCIAL_CLUB_ACCOUNT() { return Call<BOOL>(0xe2d96f4cafb71ea0); }
	BOOL NETWORK_HAS_SOCIAL_CLUB_ACCOUNT_f() { return FastCall<BOOL>(0xe2d96f4cafb71ea0); }
	BOOL NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT() { return Call<BOOL>(0xc66ff4f0090698bd); }
	BOOL NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT_f() { return FastCall<BOOL>(0xc66ff4f0090698bd); }
	BOOL NETWORK_IS_HOST() { return Call<BOOL>(0xb26da674f95a666c); }
	BOOL NETWORK_IS_HOST_f() { return FastCall<BOOL>(0xb26da674f95a666c); }
	Player NETWORK_GET_HOST_PLAYER_INDEX() { return Call<Player>(0x5ce0a1ef47aa86d1); }
	Player NETWORK_GET_HOST_PLAYER_INDEX_f() { return FastCall<Player>(0x5ce0a1ef47aa86d1); }
	BOOL NETWORK_WAS_GAME_SUSPENDED() { return Call<BOOL>(0xb484f4c1271703b5); }
	BOOL NETWORK_WAS_GAME_SUSPENDED_f() { return FastCall<BOOL>(0xb484f4c1271703b5); }
	BOOL NETWORK_HAVE_ONLINE_PRIVILEGES() { return Call<BOOL>(0x53cac6fec4c6f788); }
	BOOL NETWORK_HAVE_ONLINE_PRIVILEGES_f() { return FastCall<BOOL>(0x53cac6fec4c6f788); }
	BOOL NETWORK_HAS_AGE_RESTRICTIONS() { return Call<BOOL>(0x76ccd65ddba6d63d); }
	BOOL NETWORK_HAS_AGE_RESTRICTIONS_f() { return FastCall<BOOL>(0x76ccd65ddba6d63d); }
	BOOL NETWORK_HAVE_USER_CONTENT_PRIVILEGES(int p0) { return Call<BOOL>(0xd213a00408686f36, p0); }
	BOOL NETWORK_HAVE_USER_CONTENT_PRIVILEGES_f(int p0) { return FastCall<BOOL>(0xd213a00408686f36, p0); }
	BOOL NETWORK_HAVE_COMMUNICATION_PRIVILEGES(int p0, Player player) { return Call<BOOL>(0x29958ba2d543491, p0, player); }
	BOOL NETWORK_HAVE_COMMUNICATION_PRIVILEGES_f(int p0, Player player) { return FastCall<BOOL>(0x29958ba2d543491, p0, player); }
	BOOL _NETWORK_HAVE_PLATFORM_COMMUNICATION_PRIVILEGES() { return Call<BOOL>(0x6b7bcd44b59f9eb0); }
	BOOL _NETWORK_HAVE_PLATFORM_COMMUNICATION_PRIVILEGES_f() { return FastCall<BOOL>(0x6b7bcd44b59f9eb0); }
	BOOL NETWORK_CHECK_ONLINE_PRIVILEGES(Any p0, BOOL p1) { return Call<BOOL>(0xb93263425f866286, p0, p1); }
	BOOL NETWORK_CHECK_ONLINE_PRIVILEGES_f(Any p0, BOOL p1) { return FastCall<BOOL>(0xb93263425f866286, p0, p1); }
	BOOL NETWORK_CHECK_USER_CONTENT_PRIVILEGES(int p0, int p1, BOOL p2) { return Call<BOOL>(0x9291cb8e28df23b4, p0, p1, p2); }
	BOOL NETWORK_CHECK_USER_CONTENT_PRIVILEGES_f(int p0, int p1, BOOL p2) { return FastCall<BOOL>(0x9291cb8e28df23b4, p0, p1, p2); }
	BOOL NETWORK_CHECK_COMMUNICATION_PRIVILEGES(int p0, int p1, BOOL p2) { return Call<BOOL>(0x51e09e741bb40fd3, p0, p1, p2); }
	BOOL NETWORK_CHECK_COMMUNICATION_PRIVILEGES_f(int p0, int p1, BOOL p2) { return FastCall<BOOL>(0x51e09e741bb40fd3, p0, p1, p2); }
	BOOL NETWORK_CHECK_TEXT_COMMUNICATION_PRIVILEGES(Any p0, Any p1, Any p2) { return Call<BOOL>(0x3322ade67f5b7815, p0, p1, p2); }
	BOOL NETWORK_CHECK_TEXT_COMMUNICATION_PRIVILEGES_f(Any p0, Any p1, Any p2) { return FastCall<BOOL>(0x3322ade67f5b7815, p0, p1, p2); }
	BOOL NETWORK_IS_USING_ONLINE_PROMOTION() { return Call<BOOL>(0x16c153eff9807d6); }
	BOOL NETWORK_IS_USING_ONLINE_PROMOTION_f() { return FastCall<BOOL>(0x16c153eff9807d6); }
	BOOL NETWORK_SHOULD_SHOW_PROMOTION_ALERT_SCREEN() { return Call<BOOL>(0x8ee66177179031d2); }
	BOOL NETWORK_SHOULD_SHOW_PROMOTION_ALERT_SCREEN_f() { return FastCall<BOOL>(0x8ee66177179031d2); }
	BOOL NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV() { return Call<BOOL>(0xa82ddb6efc09cb21); }
	BOOL NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV_f() { return FastCall<BOOL>(0xa82ddb6efc09cb21); }
	int NETWORK_GET_AGE_GROUP() { return Call<int>(0xc80840a9f10104c5); }
	int NETWORK_GET_AGE_GROUP_f() { return FastCall<int>(0xc80840a9f10104c5); }
	BOOL NETWORK_CHECK_PRIVILEGES(Any p0, Any p1, Any p2) { return Call<BOOL>(0xd196fa81ed2c2daa, p0, p1, p2); }
	BOOL NETWORK_CHECK_PRIVILEGES_f(Any p0, Any p1, Any p2) { return FastCall<BOOL>(0xd196fa81ed2c2daa, p0, p1, p2); }
	BOOL NETWORK_IS_PRIVILEGE_CHECK_IN_PROGRESS() { return Call<BOOL>(0x17d40fb645253bbe); }
	BOOL NETWORK_IS_PRIVILEGE_CHECK_IN_PROGRESS_f() { return FastCall<BOOL>(0x17d40fb645253bbe); }
	void NETWORK_SET_PRIVILEGE_CHECK_RESULT_NOT_NEEDED() { Call<void>(0x152ffe409a5596b0); }
	void NETWORK_SET_PRIVILEGE_CHECK_RESULT_NOT_NEEDED_f() { FastCall<void>(0x152ffe409a5596b0); }
	BOOL NETWORK_RESOLVE_PRIVILEGE_USER_CONTENT() { return Call<BOOL>(0xdc6960cbd41fdaf7); }
	BOOL NETWORK_RESOLVE_PRIVILEGE_USER_CONTENT_f() { return FastCall<BOOL>(0xdc6960cbd41fdaf7); }
	BOOL NETWORK_HAVE_PLATFORM_SUBSCRIPTION() { return Call<BOOL>(0x6cd2599531605aa3); }
	BOOL NETWORK_HAVE_PLATFORM_SUBSCRIPTION_f() { return FastCall<BOOL>(0x6cd2599531605aa3); }
	BOOL NETWORK_IS_PLATFORM_SUBSCRIPTION_CHECK_PENDING() { return Call<BOOL>(0x2ed040b594993b86); }
	BOOL NETWORK_IS_PLATFORM_SUBSCRIPTION_CHECK_PENDING_f() { return FastCall<BOOL>(0x2ed040b594993b86); }
	void NETWORK_SHOW_ACCOUNT_UPGRADE_UI() { Call<void>(0x5b16859c2b0ece7a); }
	void NETWORK_SHOW_ACCOUNT_UPGRADE_UI_f() { FastCall<void>(0x5b16859c2b0ece7a); }
	BOOL NETWORK_IS_SHOWING_SYSTEM_UI_OR_RECENTLY_REQUESTED_UPSELL() { return Call<BOOL>(0x39585dc3920c1ab2); }
	BOOL NETWORK_IS_SHOWING_SYSTEM_UI_OR_RECENTLY_REQUESTED_UPSELL_f() { return FastCall<BOOL>(0x39585dc3920c1ab2); }
	BOOL NETWORK_NEED_TO_START_NEW_GAME_BUT_BLOCKED() { return Call<BOOL>(0x6db744de64fbd409); }
	BOOL NETWORK_NEED_TO_START_NEW_GAME_BUT_BLOCKED_f() { return FastCall<BOOL>(0x6db744de64fbd409); }
	BOOL NETWORK_CAN_BAIL() { return Call<BOOL>(0x9b4727ffeeb6bbe2); }
	BOOL NETWORK_CAN_BAIL_f() { return FastCall<BOOL>(0x9b4727ffeeb6bbe2); }
	void NETWORK_BAIL(int p0, int p1, int p2) { Call<void>(0x1c5211988ab06933, p0, p1, p2); }
	void NETWORK_BAIL_f(int p0, int p1, int p2) { FastCall<void>(0x1c5211988ab06933, p0, p1, p2); }
	void NETWORK_ON_RETURN_TO_SINGLE_PLAYER() { Call<void>(0xe3d990332191ed94); }
	void NETWORK_ON_RETURN_TO_SINGLE_PLAYER_f() { FastCall<void>(0xe3d990332191ed94); }
	BOOL NETWORK_TRANSITION_START(int p0, Any p1, Any p2, Any p3) { return Call<BOOL>(0x44c905bd1d450ee9, p0, p1, p2, p3); }
	BOOL NETWORK_TRANSITION_START_f(int p0, Any p1, Any p2, Any p3) { return FastCall<BOOL>(0x44c905bd1d450ee9, p0, p1, p2, p3); }
	BOOL NETWORK_TRANSITION_ADD_STAGE(Hash hash, int p1, int p2, int state, int p4) { return Call<BOOL>(0x9276d578ef99cc7, hash, p1, p2, state, p4); }
	BOOL NETWORK_TRANSITION_ADD_STAGE_f(Hash hash, int p1, int p2, int state, int p4) { return FastCall<BOOL>(0x9276d578ef99cc7, hash, p1, p2, state, p4); }
	BOOL NETWORK_TRANSITION_FINISH(Any p0, Any p1, Any p2) { return Call<BOOL>(0x5457b1e6749892cc, p0, p1, p2); }
	BOOL NETWORK_TRANSITION_FINISH_f(Any p0, Any p1, Any p2) { return FastCall<BOOL>(0x5457b1e6749892cc, p0, p1, p2); }
	BOOL NETWORK_CAN_ACCESS_MULTIPLAYER(int* loadingState) { return Call<BOOL>(0x2b8f1193bd06551f, loadingState); }
	BOOL NETWORK_CAN_ACCESS_MULTIPLAYER_f(int* loadingState) { return FastCall<BOOL>(0x2b8f1193bd06551f, loadingState); }
	BOOL NETWORK_IS_MULTIPLAYER_DISABLED() { return Call<BOOL>(0xf3cc77380a0698a5); }
	BOOL NETWORK_IS_MULTIPLAYER_DISABLED_f() { return FastCall<BOOL>(0xf3cc77380a0698a5); }
	BOOL NETWORK_CAN_ENTER_MULTIPLAYER() { return Call<BOOL>(0xfeee752899cf7f3); }
	BOOL NETWORK_CAN_ENTER_MULTIPLAYER_f() { return FastCall<BOOL>(0xfeee752899cf7f3); }
	BOOL NETWORK_SESSION_DO_FREEROAM_QUICKMATCH(Any p0, Any p1, Any p2) { return Call<BOOL>(0x584cb892f5d20968, p0, p1, p2); }
	BOOL NETWORK_SESSION_DO_FREEROAM_QUICKMATCH_f(Any p0, Any p1, Any p2) { return FastCall<BOOL>(0x584cb892f5d20968, p0, p1, p2); }
	BOOL NETWORK_SESSION_DO_FRIEND_MATCHMAKING(int p0, int p1, int p2) { return Call<BOOL>(0xaab9d75f813225a9, p0, p1, p2); }
	BOOL NETWORK_SESSION_DO_FRIEND_MATCHMAKING_f(int p0, int p1, int p2) { return FastCall<BOOL>(0xaab9d75f813225a9, p0, p1, p2); }
	BOOL NETWORK_SESSION_DO_CREW_MATCHMAKING(int crewId, int p1, int p2, int maxPlayers) { return Call<BOOL>(0x1d52260184b0b26c, crewId, p1, p2, maxPlayers); }
	BOOL NETWORK_SESSION_DO_CREW_MATCHMAKING_f(int crewId, int p1, int p2, int maxPlayers) { return FastCall<BOOL>(0x1d52260184b0b26c, crewId, p1, p2, maxPlayers); }
	BOOL NETWORK_SESSION_DO_ACTIVITY_QUICKMATCH(Any p0, Any p1, Any p2, Any p3, Any p4) { return Call<BOOL>(0x4fe2347cd97585ae, p0, p1, p2, p3, p4); }
	BOOL NETWORK_SESSION_DO_ACTIVITY_QUICKMATCH_f(Any p0, Any p1, Any p2, Any p3, Any p4) { return FastCall<BOOL>(0x4fe2347cd97585ae, p0, p1, p2, p3, p4); }
	BOOL NETWORK_SESSION_HOST(int p0, int maxPlayers, BOOL p2) { return Call<BOOL>(0xd922974f61ae7c62, p0, maxPlayers, p2); }
	BOOL NETWORK_SESSION_HOST_f(int p0, int maxPlayers, BOOL p2) { return FastCall<BOOL>(0xd922974f61ae7c62, p0, maxPlayers, p2); }
	BOOL NETWORK_SESSION_HOST_CLOSED(int p0, int maxPlayers) { return Call<BOOL>(0x4e4c6bb6ec9a03e9, p0, maxPlayers); }
	BOOL NETWORK_SESSION_HOST_CLOSED_f(int p0, int maxPlayers) { return FastCall<BOOL>(0x4e4c6bb6ec9a03e9, p0, maxPlayers); }
	BOOL NETWORK_SESSION_HOST_FRIENDS_ONLY(int p0, int maxPlayers) { return Call<BOOL>(0x6dc2098a623eb8f3, p0, maxPlayers); }
	BOOL NETWORK_SESSION_HOST_FRIENDS_ONLY_f(int p0, int maxPlayers) { return FastCall<BOOL>(0x6dc2098a623eb8f3, p0, maxPlayers); }
	BOOL NETWORK_SESSION_IS_CLOSED_FRIENDS() { return Call<BOOL>(0x7087f6ef7d8f80dd); }
	BOOL NETWORK_SESSION_IS_CLOSED_FRIENDS_f() { return FastCall<BOOL>(0x7087f6ef7d8f80dd); }
	BOOL NETWORK_SESSION_IS_CLOSED_CREW() { return Call<BOOL>(0x31c8c0132bbcfef9); }
	BOOL NETWORK_SESSION_IS_CLOSED_CREW_f() { return FastCall<BOOL>(0x31c8c0132bbcfef9); }
	BOOL NETWORK_SESSION_IS_SOLO() { return Call<BOOL>(0x40661eb88c8005da); }
	BOOL NETWORK_SESSION_IS_SOLO_f() { return FastCall<BOOL>(0x40661eb88c8005da); }
	BOOL NETWORK_SESSION_IS_PRIVATE() { return Call<BOOL>(0x2bd106258c6eb288); }
	BOOL NETWORK_SESSION_IS_PRIVATE_f() { return FastCall<BOOL>(0x2bd106258c6eb288); }
	BOOL _NETWORK_SESSION_LEAVE_INCLUDING_REASON(int leaveFlags, int leaveReason) { return Call<BOOL>(0x2da5d6c1d52fc67f, leaveFlags, leaveReason); }
	BOOL _NETWORK_SESSION_LEAVE_INCLUDING_REASON_f(int leaveFlags, int leaveReason) { return FastCall<BOOL>(0x2da5d6c1d52fc67f, leaveFlags, leaveReason); }
	BOOL NETWORK_SESSION_END(BOOL p0, BOOL p1) { return Call<BOOL>(0xddb6cb1313aabec1, p0, p1); }
	BOOL NETWORK_SESSION_END_f(BOOL p0, BOOL p1) { return FastCall<BOOL>(0xddb6cb1313aabec1, p0, p1); }
	BOOL NETWORK_SESSION_LEAVE(Any p0) { return Call<BOOL>(0x4b30529cd4549f1d, p0); }
	BOOL NETWORK_SESSION_LEAVE_f(Any p0) { return FastCall<BOOL>(0x4b30529cd4549f1d, p0); }
	void NETWORK_SESSION_KICK_PLAYER(Player player) { Call<void>(0x4e548b241c86ab00, player); }
	void NETWORK_SESSION_KICK_PLAYER_f(Player player) { FastCall<void>(0x4e548b241c86ab00, player); }
	BOOL NETWORK_SESSION_GET_KICK_VOTE(Player player) { return Call<BOOL>(0xde6f3463fe75b200, player); }
	BOOL NETWORK_SESSION_GET_KICK_VOTE_f(Player player) { return FastCall<BOOL>(0xde6f3463fe75b200, player); }
	BOOL NETWORK_SESSION_RESERVE_SLOTS_TRANSITION(Any p0, Any p1, Any p2) { return Call<BOOL>(0x5a046e6b4c38a4bc, p0, p1, p2); }
	BOOL NETWORK_SESSION_RESERVE_SLOTS_TRANSITION_f(Any p0, Any p1, Any p2) { return FastCall<BOOL>(0x5a046e6b4c38a4bc, p0, p1, p2); }
	BOOL NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION() { return Call<BOOL>(0x93162db1c8be40cb); }
	BOOL NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION_f() { return FastCall<BOOL>(0x93162db1c8be40cb); }
	BOOL NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION() { return Call<BOOL>(0xa1efa59cea248ae0); }
	BOOL NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION_f() { return FastCall<BOOL>(0xa1efa59cea248ae0); }
	void NETWORK_SESSION_SET_MATCHMAKING_GROUP(int matchmakingGroup) { Call<void>(0xd84abc43ecfd439, matchmakingGroup); }
	void NETWORK_SESSION_SET_MATCHMAKING_GROUP_f(int matchmakingGroup) { FastCall<void>(0xd84abc43ecfd439, matchmakingGroup); }
	void NETWORK_SESSION_SET_MATCHMAKING_GROUP_MAX(int playerType, int playerCount) { Call<void>(0x20049ee5ee15683e, playerType, playerCount); }
	void NETWORK_SESSION_SET_MATCHMAKING_GROUP_MAX_f(int playerType, int playerCount) { FastCall<void>(0x20049ee5ee15683e, playerType, playerCount); }
	int NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE(int p0) { return Call<int>(0xadd3736bbe64c93e, p0); }
	int NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE_f(int p0) { return FastCall<int>(0xadd3736bbe64c93e, p0); }
	void NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP(int groupId) { Call<void>(0x36ba7cedb9185c2f, groupId); }
	void NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP_f(int groupId) { FastCall<void>(0x36ba7cedb9185c2f, groupId); }
	void NETWORK_SESSION_SET_UNIQUE_CREW_LIMIT(Any p0) { Call<void>(0xf44f0e9b43f96e34, p0); }
	void NETWORK_SESSION_SET_UNIQUE_CREW_LIMIT_f(Any p0) { FastCall<void>(0xf44f0e9b43f96e34, p0); }
	int NETWORK_SESSION_GET_UNIQUE_CREW_LIMIT() { return Call<int>(0x74120402accdec28); }
	int NETWORK_SESSION_GET_UNIQUE_CREW_LIMIT_f() { return FastCall<int>(0x74120402accdec28); }
	void NETWORK_SESSION_SET_UNIQUE_CREW_LIMIT_TRANSITION(Any p0) { Call<void>(0x70e15424928f1840, p0); }
	void NETWORK_SESSION_SET_UNIQUE_CREW_LIMIT_TRANSITION_f(Any p0) { FastCall<void>(0x70e15424928f1840, p0); }
	void NETWORK_SESSION_SET_UNIQUE_CREW_ONLY_CREWS_TRANSITION(BOOL p0) { Call<void>(0xaf7fda6666f2d56e, p0); }
	void NETWORK_SESSION_SET_UNIQUE_CREW_ONLY_CREWS_TRANSITION_f(BOOL p0) { FastCall<void>(0xaf7fda6666f2d56e, p0); }
	void NETWORK_SESSION_SET_CREW_LIMIT_MAX_MEMBERS_TRANSITION(Any p0) { Call<void>(0x7fb1503372c7ba41, p0); }
	void NETWORK_SESSION_SET_CREW_LIMIT_MAX_MEMBERS_TRANSITION_f(Any p0) { FastCall<void>(0x7fb1503372c7ba41, p0); }
	void NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID(BOOL p0) { Call<void>(0x3172b207975ade1f, p0); }
	void NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID_f(BOOL p0) { FastCall<void>(0x3172b207975ade1f, p0); }
	void NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE(int p0) { Call<void>(0xfbaed06d3f98bba1, p0); }
	void NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE_f(int p0) { FastCall<void>(0xfbaed06d3f98bba1, p0); }
	void NETWORK_SESSION_SET_NUM_BOSSES(int num) { Call<void>(0xd1ce45ad35a28a2b, num); }
	void NETWORK_SESSION_SET_NUM_BOSSES_f(int num) { FastCall<void>(0xd1ce45ad35a28a2b, num); }
	void NETWORK_SESSION_SET_SCRIPT_VALIDATE_JOIN() { Call<void>(0x4f796338e0737fd6); }
	void NETWORK_SESSION_SET_SCRIPT_VALIDATE_JOIN_f() { FastCall<void>(0x4f796338e0737fd6); }
	void NETWORK_SESSION_VALIDATE_JOIN(BOOL p0) { Call<void>(0x80e3d99860062539, p0); }
	void NETWORK_SESSION_VALIDATE_JOIN_f(BOOL p0) { FastCall<void>(0x80e3d99860062539, p0); }
	void NETWORK_ADD_FOLLOWERS(int* p0, int p1) { Call<void>(0x85e95df07aa40546, p0, p1); }
	void NETWORK_ADD_FOLLOWERS_f(int* p0, int p1) { FastCall<void>(0x85e95df07aa40546, p0, p1); }
	void NETWORK_CLEAR_FOLLOWERS() { Call<void>(0x59d6e34b787df832); }
	void NETWORK_CLEAR_FOLLOWERS_f() { FastCall<void>(0x59d6e34b787df832); }
	void NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK(int* hours, int* minutes, int* seconds) { Call<void>(0x5e54a32556dc3887, hours, minutes, seconds); }
	void NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK_f(int* hours, int* minutes, int* seconds) { FastCall<void>(0x5e54a32556dc3887, hours, minutes, seconds); }
	void NETWORK_SESSION_SET_GAMEMODE(Any p0) { Call<void>(0x7f05024757d07cac, p0); }
	void NETWORK_SESSION_SET_GAMEMODE_f(Any p0) { FastCall<void>(0x7f05024757d07cac, p0); }
	int NETWORK_SESSION_GET_HOST_AIM_PREFERENCE() { return Call<int>(0x60f59cd8f0aba029); }
	int NETWORK_SESSION_GET_HOST_AIM_PREFERENCE_f() { return FastCall<int>(0x60f59cd8f0aba029); }
	BOOL NETWORK_FIND_GAMERS_IN_CREW(int crewId) { return Call<BOOL>(0xfd420255e202c544, crewId); }
	BOOL NETWORK_FIND_GAMERS_IN_CREW_f(int crewId) { return FastCall<BOOL>(0xfd420255e202c544, crewId); }
	BOOL NETWORK_FIND_MATCHED_GAMERS(int attribute, float fallbackLimit, float lowerLimit, float upperLimit) { return Call<BOOL>(0xf0de63821c202ce3, attribute, fallbackLimit, lowerLimit, upperLimit); }
	BOOL NETWORK_FIND_MATCHED_GAMERS_f(int attribute, float fallbackLimit, float lowerLimit, float upperLimit) { return FastCall<BOOL>(0xf0de63821c202ce3, attribute, fallbackLimit, lowerLimit, upperLimit); }
	BOOL NETWORK_IS_FINDING_GAMERS() { return Call<BOOL>(0xd7d618de748bcb0d); }
	BOOL NETWORK_IS_FINDING_GAMERS_f() { return FastCall<BOOL>(0xd7d618de748bcb0d); }
	BOOL NETWORK_DID_FIND_GAMERS_SUCCEED() { return Call<BOOL>(0x1d95090038d02fcb); }
	BOOL NETWORK_DID_FIND_GAMERS_SUCCEED_f() { return FastCall<BOOL>(0x1d95090038d02fcb); }
	int NETWORK_GET_NUM_FOUND_GAMERS() { return Call<int>(0x4b1d27c5236c40e3); }
	int NETWORK_GET_NUM_FOUND_GAMERS_f() { return FastCall<int>(0x4b1d27c5236c40e3); }
	BOOL NETWORK_GET_FOUND_GAMER(Any* p0, Any p1) { return Call<BOOL>(0xe70a198a14eb5bc9, p0, p1); }
	BOOL NETWORK_GET_FOUND_GAMER_f(Any* p0, Any p1) { return FastCall<BOOL>(0xe70a198a14eb5bc9, p0, p1); }
	void NETWORK_CLEAR_FOUND_GAMERS() { Call<void>(0xb5bd654ebd50fbd3); }
	void NETWORK_CLEAR_FOUND_GAMERS_f() { FastCall<void>(0xb5bd654ebd50fbd3); }
	BOOL NETWORK_QUEUE_GAMER_FOR_STATUS(Any* p0) { return Call<BOOL>(0x1a10845dd66eb226, p0); }
	BOOL NETWORK_QUEUE_GAMER_FOR_STATUS_f(Any* p0) { return FastCall<BOOL>(0x1a10845dd66eb226, p0); }
	BOOL NETWORK_GET_GAMER_STATUS_FROM_QUEUE() { return Call<BOOL>(0xd04378cf884be5f0); }
	BOOL NETWORK_GET_GAMER_STATUS_FROM_QUEUE_f() { return FastCall<BOOL>(0xd04378cf884be5f0); }
	BOOL NETWORK_IS_GETTING_GAMER_STATUS() { return Call<BOOL>(0x8b277f5145259470); }
	BOOL NETWORK_IS_GETTING_GAMER_STATUS_f() { return FastCall<BOOL>(0x8b277f5145259470); }
	BOOL NETWORK_DID_GET_GAMER_STATUS_SUCCEED() { return Call<BOOL>(0x3f455f3e777b742e); }
	BOOL NETWORK_DID_GET_GAMER_STATUS_SUCCEED_f() { return FastCall<BOOL>(0x3f455f3e777b742e); }
	BOOL NETWORK_GET_GAMER_STATUS_RESULT(Any* p0, Any p1) { return Call<BOOL>(0xdd25b6a1ed63fff1, p0, p1); }
	BOOL NETWORK_GET_GAMER_STATUS_RESULT_f(Any* p0, Any p1) { return FastCall<BOOL>(0xdd25b6a1ed63fff1, p0, p1); }
	void NETWORK_CLEAR_GET_GAMER_STATUS() { Call<void>(0x4162441cdd8a3dfd); }
	void NETWORK_CLEAR_GET_GAMER_STATUS_f() { FastCall<void>(0x4162441cdd8a3dfd); }
	void NETWORK_SESSION_JOIN_INVITE() { Call<void>(0x4e5236b3e6cc53c4); }
	void NETWORK_SESSION_JOIN_INVITE_f() { FastCall<void>(0x4e5236b3e6cc53c4); }
	void NETWORK_SESSION_CANCEL_INVITE() { Call<void>(0xb138a5d3731c82f4); }
	void NETWORK_SESSION_CANCEL_INVITE_f() { FastCall<void>(0xb138a5d3731c82f4); }
	void NETWORK_SESSION_FORCE_CANCEL_INVITE() { Call<void>(0x9e1c23350db12c00); }
	void NETWORK_SESSION_FORCE_CANCEL_INVITE_f() { FastCall<void>(0x9e1c23350db12c00); }
	BOOL NETWORK_HAS_PENDING_INVITE() { return Call<BOOL>(0x97d4cc949d94f507); }
	BOOL NETWORK_HAS_PENDING_INVITE_f() { return FastCall<BOOL>(0x97d4cc949d94f507); }
	BOOL NETWORK_HAS_CONFIRMED_INVITE() { return Call<BOOL>(0xadc3334edbb070bf); }
	BOOL NETWORK_HAS_CONFIRMED_INVITE_f() { return FastCall<BOOL>(0xadc3334edbb070bf); }
	BOOL NETWORK_REQUEST_INVITE_CONFIRMED_EVENT() { return Call<BOOL>(0x85e9915da25b8865); }
	BOOL NETWORK_REQUEST_INVITE_CONFIRMED_EVENT_f() { return FastCall<BOOL>(0x85e9915da25b8865); }
	BOOL NETWORK_SESSION_WAS_INVITED() { return Call<BOOL>(0x4e76c908482fa6eb); }
	BOOL NETWORK_SESSION_WAS_INVITED_f() { return FastCall<BOOL>(0x4e76c908482fa6eb); }
	void NETWORK_SESSION_GET_INVITER(Any* gamerHandle) { Call<void>(0x4e4892d55f4eae66, gamerHandle); }
	void NETWORK_SESSION_GET_INVITER_f(Any* gamerHandle) { FastCall<void>(0x4e4892d55f4eae66, gamerHandle); }
	BOOL NETWORK_SESSION_IS_AWAITING_INVITE_RESPONSE() { return Call<BOOL>(0xaa0d0cfabe72febf); }
	BOOL NETWORK_SESSION_IS_AWAITING_INVITE_RESPONSE_f() { return FastCall<BOOL>(0xaa0d0cfabe72febf); }
	BOOL NETWORK_SESSION_IS_DISPLAYING_INVITE_CONFIRMATION() { return Call<BOOL>(0x7c4ac60a4becb007); }
	BOOL NETWORK_SESSION_IS_DISPLAYING_INVITE_CONFIRMATION_f() { return FastCall<BOOL>(0x7c4ac60a4becb007); }
	void NETWORK_SUPPRESS_INVITE(BOOL toggle) { Call<void>(0x4c6e62abf97ce3a2, toggle); }
	void NETWORK_SUPPRESS_INVITE_f(BOOL toggle) { FastCall<void>(0x4c6e62abf97ce3a2, toggle); }
	void NETWORK_BLOCK_INVITES(BOOL toggle) { Call<void>(0x93c746f61cfbfc27, toggle); }
	void NETWORK_BLOCK_INVITES_f(BOOL toggle) { FastCall<void>(0x93c746f61cfbfc27, toggle); }
	void NETWORK_BLOCK_JOIN_QUEUE_INVITES(BOOL toggle) { Call<void>(0x85d7c28747d214ea, toggle); }
	void NETWORK_BLOCK_JOIN_QUEUE_INVITES_f(BOOL toggle) { FastCall<void>(0x85d7c28747d214ea, toggle); }
	void NETWORK_SET_CAN_RECEIVE_RS_INVITES(BOOL p0) { Call<void>(0xa294e0ca977dfc5, p0); }
	void NETWORK_SET_CAN_RECEIVE_RS_INVITES_f(BOOL p0) { FastCall<void>(0xa294e0ca977dfc5, p0); }
	void NETWORK_STORE_INVITE_THROUGH_RESTART() { Call<void>(0x2132f105b7cd56ee); }
	void NETWORK_STORE_INVITE_THROUGH_RESTART_f() { FastCall<void>(0x2132f105b7cd56ee); }
	void NETWORK_ALLOW_INVITE_PROCESS_IN_PLAYER_SWITCH(BOOL p0) { Call<void>(0xc410fc0896484297, p0); }
	void NETWORK_ALLOW_INVITE_PROCESS_IN_PLAYER_SWITCH_f(BOOL p0) { FastCall<void>(0xc410fc0896484297, p0); }
	void NETWORK_SET_SCRIPT_READY_FOR_EVENTS(BOOL toggle) { Call<void>(0xbcdaf9e9968a82f1, toggle); }
	void NETWORK_SET_SCRIPT_READY_FOR_EVENTS_f(BOOL toggle) { FastCall<void>(0xbcdaf9e9968a82f1, toggle); }
	BOOL NETWORK_IS_OFFLINE_INVITE_PENDING() { return Call<BOOL>(0xd05f08355bc8cc01); }
	BOOL NETWORK_IS_OFFLINE_INVITE_PENDING_f() { return FastCall<BOOL>(0xd05f08355bc8cc01); }
	void NETWORK_CLEAR_OFFLINE_INVITE_PENDING() { Call<void>(0x85a3da627eec0320); }
	void NETWORK_CLEAR_OFFLINE_INVITE_PENDING_f() { FastCall<void>(0x85a3da627eec0320); }
	char* _NETWORK_INVITE_GET_JOIN_FAIL_REASON() { Call<char*>(0xfef0547323f4b0df); }
	char* _NETWORK_INVITE_GET_JOIN_FAIL_REASON_f() { FastCall<char*>(0xfef0547323f4b0df); }
	void _NETWORK_INVITE_CLEAR_JOIN_FAIL_REASON() { Call<void>(0xe7c52fd8f83f8948); }
	void _NETWORK_INVITE_CLEAR_JOIN_FAIL_REASON_f() { FastCall<void>(0xe7c52fd8f83f8948); }
	void NETWORK_SESSION_HOST_SINGLE_PLAYER(int p0) { Call<void>(0xd57be65e2e65ad9b, p0); }
	void NETWORK_SESSION_HOST_SINGLE_PLAYER_f(int p0) { FastCall<void>(0xd57be65e2e65ad9b, p0); }
	void NETWORK_SESSION_LEAVE_SINGLE_PLAYER() { Call<void>(0xec7b14d8cdeeed16); }
	void NETWORK_SESSION_LEAVE_SINGLE_PLAYER_f() { FastCall<void>(0xec7b14d8cdeeed16); }
	BOOL NETWORK_IS_GAME_IN_PROGRESS() { return Call<BOOL>(0xc2bdd61d3caa0dfe); }
	BOOL NETWORK_IS_GAME_IN_PROGRESS_f() { return FastCall<BOOL>(0xc2bdd61d3caa0dfe); }
	BOOL NETWORK_IS_SESSION_ACTIVE() { return Call<BOOL>(0xe33eec3c73f0a4b3); }
	BOOL NETWORK_IS_SESSION_ACTIVE_f() { return FastCall<BOOL>(0xe33eec3c73f0a4b3); }
	BOOL NETWORK_IS_IN_SESSION() { return Call<BOOL>(0xe2f2b4c39eba9f20); }
	BOOL NETWORK_IS_IN_SESSION_f() { return FastCall<BOOL>(0xe2f2b4c39eba9f20); }
	BOOL _NETWORK_IS_AMERICAS_VERSION() { return Call<BOOL>(0x150f4dc3ec97dda3); }
	BOOL _NETWORK_IS_AMERICAS_VERSION_f() { return FastCall<BOOL>(0x150f4dc3ec97dda3); }
	BOOL NETWORK_IS_SESSION_STARTED() { return Call<BOOL>(0x849e9b55de4ed054); }
	BOOL NETWORK_IS_SESSION_STARTED_f() { return FastCall<BOOL>(0x849e9b55de4ed054); }
	BOOL NETWORK_IS_SESSION_BUSY() { return Call<BOOL>(0xf483ed993c9802e6); }
	BOOL NETWORK_IS_SESSION_BUSY_f() { return FastCall<BOOL>(0xf483ed993c9802e6); }
	BOOL NETWORK_CAN_SESSION_END() { return Call<BOOL>(0x375279416031d932); }
	BOOL NETWORK_CAN_SESSION_END_f() { return FastCall<BOOL>(0x375279416031d932); }
	int NETWORK_GET_GAME_MODE() { return Call<int>(0xc808452c77785796); }
	int NETWORK_GET_GAME_MODE_f() { return FastCall<int>(0xc808452c77785796); }
	void NETWORK_SESSION_MARK_VISIBLE(BOOL toggle) { Call<void>(0x7cdb803f6617399a, toggle); }
	void NETWORK_SESSION_MARK_VISIBLE_f(BOOL toggle) { FastCall<void>(0x7cdb803f6617399a, toggle); }
	BOOL NETWORK_SESSION_IS_VISIBLE() { return Call<BOOL>(0x2bd10626baff7d77); }
	BOOL NETWORK_SESSION_IS_VISIBLE_f() { return FastCall<BOOL>(0x2bd10626baff7d77); }
	void NETWORK_SESSION_BLOCK_JOIN_REQUESTS(BOOL toggle) { Call<void>(0x8b23bf11674f9ced, toggle); }
	void NETWORK_SESSION_BLOCK_JOIN_REQUESTS_f(BOOL toggle) { FastCall<void>(0x8b23bf11674f9ced, toggle); }
	void NETWORK_SESSION_CHANGE_SLOTS(int slots, BOOL p1) { Call<void>(0x79679a8c947a7980, slots, p1); }
	void NETWORK_SESSION_CHANGE_SLOTS_f(int slots, BOOL p1) { FastCall<void>(0x79679a8c947a7980, slots, p1); }
	int NETWORK_SESSION_GET_PRIVATE_SLOTS() { return Call<int>(0x2b1cd61345875a76); }
	int NETWORK_SESSION_GET_PRIVATE_SLOTS_f() { return FastCall<int>(0x2b1cd61345875a76); }
	BOOL NETWORK_SESSION_VOICE_HOST() { return Call<BOOL>(0x2bd23b16f10db3ef); }
	BOOL NETWORK_SESSION_VOICE_HOST_f() { return FastCall<BOOL>(0x2bd23b16f10db3ef); }
	BOOL NETWORK_SESSION_VOICE_LEAVE() { return Call<BOOL>(0x4e7527c730dc5930); }
	BOOL NETWORK_SESSION_VOICE_LEAVE_f() { return FastCall<BOOL>(0x4e7527c730dc5930); }
	void NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER(Any* gamerHandle) { Call<void>(0xeb6ac586f09cc109, gamerHandle); }
	void NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER_f(Any* gamerHandle) { FastCall<void>(0xeb6ac586f09cc109, gamerHandle); }
	void NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST(BOOL p0, int p1) { Call<void>(0xdd63f73b926020bc, p0, p1); }
	void NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST_f(BOOL p0, int p1) { FastCall<void>(0xdd63f73b926020bc, p0, p1); }
	void NETWORK_SESSION_VOICE_SET_TIMEOUT(int timeout) { Call<void>(0x1ee11b08664d4a1d, timeout); }
	void NETWORK_SESSION_VOICE_SET_TIMEOUT_f(int timeout) { FastCall<void>(0x1ee11b08664d4a1d, timeout); }
	BOOL NETWORK_SESSION_IS_IN_VOICE_SESSION() { return Call<BOOL>(0x2586197a7f105b2a); }
	BOOL NETWORK_SESSION_IS_IN_VOICE_SESSION_f() { return FastCall<BOOL>(0x2586197a7f105b2a); }
	BOOL NETWORK_SESSION_IS_VOICE_SESSION_ACTIVE() { return Call<BOOL>(0xf3a7575bc24912b7); }
	BOOL NETWORK_SESSION_IS_VOICE_SESSION_ACTIVE_f() { return FastCall<BOOL>(0xf3a7575bc24912b7); }
	BOOL NETWORK_SESSION_IS_VOICE_SESSION_BUSY() { return Call<BOOL>(0x11093b3ab37c21ea); }
	BOOL NETWORK_SESSION_IS_VOICE_SESSION_BUSY_f() { return FastCall<BOOL>(0x11093b3ab37c21ea); }
	BOOL NETWORK_SEND_TEXT_MESSAGE(char* message, Any* gamerHandle) { return Call<BOOL>(0xab07b38498a2ba3b, message, gamerHandle); }
	BOOL NETWORK_SEND_TEXT_MESSAGE_f(char* message, Any* gamerHandle) { return FastCall<BOOL>(0xab07b38498a2ba3b, message, gamerHandle); }
	void NETWORK_SET_ACTIVITY_SPECTATOR(BOOL toggle) { Call<void>(0xf5ef3b43221200d, toggle); }
	void NETWORK_SET_ACTIVITY_SPECTATOR_f(BOOL toggle) { FastCall<void>(0xf5ef3b43221200d, toggle); }
	BOOL NETWORK_IS_ACTIVITY_SPECTATOR() { return Call<BOOL>(0x58e78dc3dc8c9d63); }
	BOOL NETWORK_IS_ACTIVITY_SPECTATOR_f() { return FastCall<BOOL>(0x58e78dc3dc8c9d63); }
	void NETWORK_SET_ACTIVITY_PLAYER_MAX(Any p0) { Call<void>(0xdc7f377eb7b50b68, p0); }
	void NETWORK_SET_ACTIVITY_PLAYER_MAX_f(Any p0) { FastCall<void>(0xdc7f377eb7b50b68, p0); }
	void NETWORK_SET_ACTIVITY_SPECTATOR_MAX(int maxSpectators) { Call<void>(0x9a98bc1dfd74aa12, maxSpectators); }
	void NETWORK_SET_ACTIVITY_SPECTATOR_MAX_f(int maxSpectators) { FastCall<void>(0x9a98bc1dfd74aa12, maxSpectators); }
	int NETWORK_GET_ACTIVITY_PLAYER_NUM(BOOL p0) { return Call<int>(0x775a70af3d61e27e, p0); }
	int NETWORK_GET_ACTIVITY_PLAYER_NUM_f(BOOL p0) { return FastCall<int>(0x775a70af3d61e27e, p0); }
	BOOL NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE(Any* gamerHandle) { return Call<BOOL>(0x89b34618f30e3b81, gamerHandle); }
	BOOL NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE_f(Any* gamerHandle) { return FastCall<BOOL>(0x89b34618f30e3b81, gamerHandle); }
	BOOL NETWORK_HOST_TRANSITION(int p0, int p1, int p2, int p3, Any p4, BOOL p5, BOOL p6, int p7, Any p8, int p9) { return Call<BOOL>(0x1dd6a310477c881b, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	BOOL NETWORK_HOST_TRANSITION_f(int p0, int p1, int p2, int p3, Any p4, BOOL p5, BOOL p6, int p7, Any p8, int p9) { return FastCall<BOOL>(0x1dd6a310477c881b, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	BOOL NETWORK_DO_TRANSITION_QUICKMATCH(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { return Call<BOOL>(0x7353abbbee81097f, p0, p1, p2, p3, p4, p5); }
	BOOL NETWORK_DO_TRANSITION_QUICKMATCH_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { return FastCall<BOOL>(0x7353abbbee81097f, p0, p1, p2, p3, p4, p5); }
	BOOL NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { return Call<BOOL>(0x81d688c45e51b9c, p0, p1, p2, p3, p4, p5); }
	BOOL NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { return FastCall<BOOL>(0x81d688c45e51b9c, p0, p1, p2, p3, p4, p5); }
	BOOL NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP(Any p0, Any p1, Any p2, Any p3, Any* p4, Any p5, Any p6, Any p7) { return Call<BOOL>(0xe9635d6fe0f69466, p0, p1, p2, p3, p4, p5, p6, p7); }
	BOOL NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP_f(Any p0, Any p1, Any p2, Any p3, Any* p4, Any p5, Any p6, Any p7) { return FastCall<BOOL>(0xe9635d6fe0f69466, p0, p1, p2, p3, p4, p5, p6, p7); }
	BOOL NETWORK_JOIN_GROUP_ACTIVITY() { return Call<BOOL>(0x34e9f17fcec410f3); }
	BOOL NETWORK_JOIN_GROUP_ACTIVITY_f() { return FastCall<BOOL>(0x34e9f17fcec410f3); }
	void NETWORK_CLEAR_GROUP_ACTIVITY() { Call<void>(0xad98c43fb8a1ead2); }
	void NETWORK_CLEAR_GROUP_ACTIVITY_f() { FastCall<void>(0xad98c43fb8a1ead2); }
	void NETWORK_RETAIN_ACTIVITY_GROUP() { Call<void>(0x20ab383a42f5c438); }
	void NETWORK_RETAIN_ACTIVITY_GROUP_f() { FastCall<void>(0x20ab383a42f5c438); }
	BOOL NETWORK_IS_TRANSITION_CLOSED_FRIENDS() { return Call<BOOL>(0x4488580316572f88); }
	BOOL NETWORK_IS_TRANSITION_CLOSED_FRIENDS_f() { return FastCall<BOOL>(0x4488580316572f88); }
	BOOL NETWORK_IS_TRANSITION_CLOSED_CREW() { return Call<BOOL>(0xffba3184580cc82e); }
	BOOL NETWORK_IS_TRANSITION_CLOSED_CREW_f() { return FastCall<BOOL>(0xffba3184580cc82e); }
	BOOL NETWORK_IS_TRANSITION_SOLO() { return Call<BOOL>(0xfc1df0678c06fe45); }
	BOOL NETWORK_IS_TRANSITION_SOLO_f() { return FastCall<BOOL>(0xfc1df0678c06fe45); }
	BOOL NETWORK_IS_TRANSITION_PRIVATE() { return Call<BOOL>(0x200b21df88155e3d); }
	BOOL NETWORK_IS_TRANSITION_PRIVATE_f() { return FastCall<BOOL>(0x200b21df88155e3d); }
	int NETWORK_GET_NUM_TRANSITION_NON_ASYNC_GAMERS() { return Call<int>(0x56982dd3f85caedf); }
	int NETWORK_GET_NUM_TRANSITION_NON_ASYNC_GAMERS_f() { return FastCall<int>(0x56982dd3f85caedf); }
	void NETWORK_MARK_AS_PREFERRED_ACTIVITY(BOOL p0) { Call<void>(0xd3f5b0abed3ce339, p0); }
	void NETWORK_MARK_AS_PREFERRED_ACTIVITY_f(BOOL p0) { FastCall<void>(0xd3f5b0abed3ce339, p0); }
	void NETWORK_MARK_AS_WAITING_ASYNC(BOOL p0) { Call<void>(0x4650f4cf3364543e, p0); }
	void NETWORK_MARK_AS_WAITING_ASYNC_f(BOOL p0) { FastCall<void>(0x4650f4cf3364543e, p0); }
	void NETWORK_SET_IN_PROGRESS_FINISH_TIME(Any p0) { Call<void>(0xa224700a51ba0713, p0); }
	void NETWORK_SET_IN_PROGRESS_FINISH_TIME_f(Any p0) { FastCall<void>(0xa224700a51ba0713, p0); }
	void NETWORK_SET_TRANSITION_CREATOR_HANDLE(Any* p0) { Call<void>(0x4610dc0cba6f01b7, p0); }
	void NETWORK_SET_TRANSITION_CREATOR_HANDLE_f(Any* p0) { FastCall<void>(0x4610dc0cba6f01b7, p0); }
	void NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE() { Call<void>(0xf62b2b93693d7822); }
	void NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE_f() { FastCall<void>(0xf62b2b93693d7822); }
	BOOL NETWORK_INVITE_GAMERS_TO_TRANSITION(Any* p0, Any p1) { return Call<BOOL>(0xe1d0ef2f1bcad8d2, p0, p1); }
	BOOL NETWORK_INVITE_GAMERS_TO_TRANSITION_f(Any* p0, Any p1) { return FastCall<BOOL>(0xe1d0ef2f1bcad8d2, p0, p1); }
	void NETWORK_SET_GAMER_INVITED_TO_TRANSITION(Any* gamerHandle) { Call<void>(0x5f84d3bda26fb9a8, gamerHandle); }
	void NETWORK_SET_GAMER_INVITED_TO_TRANSITION_f(Any* gamerHandle) { FastCall<void>(0x5f84d3bda26fb9a8, gamerHandle); }
	BOOL NETWORK_LEAVE_TRANSITION() { return Call<BOOL>(0xb6f01487c7aabe0e); }
	BOOL NETWORK_LEAVE_TRANSITION_f() { return FastCall<BOOL>(0xb6f01487c7aabe0e); }
	BOOL NETWORK_LAUNCH_TRANSITION() { return Call<BOOL>(0xe8c5ea4af81d8170); }
	BOOL NETWORK_LAUNCH_TRANSITION_f() { return FastCall<BOOL>(0xe8c5ea4af81d8170); }
	void NETWORK_SET_DO_NOT_LAUNCH_FROM_JOIN_AS_MIGRATED_HOST(BOOL toggle) { Call<void>(0x4cb3ed7d2dfebb1b, toggle); }
	void NETWORK_SET_DO_NOT_LAUNCH_FROM_JOIN_AS_MIGRATED_HOST_f(BOOL toggle) { FastCall<void>(0x4cb3ed7d2dfebb1b, toggle); }
	void NETWORK_CANCEL_TRANSITION_MATCHMAKING() { Call<void>(0x51f42a98dbdca21a); }
	void NETWORK_CANCEL_TRANSITION_MATCHMAKING_f() { FastCall<void>(0x51f42a98dbdca21a); }
	void NETWORK_BAIL_TRANSITION(int p0, int p1, int p2) { Call<void>(0xf166ef36438b97e1, p0, p1, p2); }
	void NETWORK_BAIL_TRANSITION_f(int p0, int p1, int p2) { FastCall<void>(0xf166ef36438b97e1, p0, p1, p2); }
	BOOL NETWORK_DO_TRANSITION_TO_GAME(BOOL p0, int maxPlayers) { return Call<BOOL>(0x4c54238a7a3acf0f, p0, maxPlayers); }
	BOOL NETWORK_DO_TRANSITION_TO_GAME_f(BOOL p0, int maxPlayers) { return FastCall<BOOL>(0x4c54238a7a3acf0f, p0, maxPlayers); }
	BOOL NETWORK_DO_TRANSITION_TO_NEW_GAME(BOOL p0, int maxPlayers, BOOL p2) { return Call<BOOL>(0xf72a0927f06ff3ee, p0, maxPlayers, p2); }
	BOOL NETWORK_DO_TRANSITION_TO_NEW_GAME_f(BOOL p0, int maxPlayers, BOOL p2) { return FastCall<BOOL>(0xf72a0927f06ff3ee, p0, maxPlayers, p2); }
	BOOL NETWORK_DO_TRANSITION_TO_FREEMODE(Any* p0, Any p1, BOOL p2, int players, BOOL p4) { return Call<BOOL>(0xf72a08f740f4deac, p0, p1, p2, players, p4); }
	BOOL NETWORK_DO_TRANSITION_TO_FREEMODE_f(Any* p0, Any p1, BOOL p2, int players, BOOL p4) { return FastCall<BOOL>(0xf72a08f740f4deac, p0, p1, p2, players, p4); }
	BOOL NETWORK_DO_TRANSITION_TO_NEW_FREEMODE(Any* p0, Any p1, int players, BOOL p3, BOOL p4, BOOL p5) { return Call<BOOL>(0xd33059d69c3e7c0b, p0, p1, players, p3, p4, p5); }
	BOOL NETWORK_DO_TRANSITION_TO_NEW_FREEMODE_f(Any* p0, Any p1, int players, BOOL p3, BOOL p4, BOOL p5) { return FastCall<BOOL>(0xd33059d69c3e7c0b, p0, p1, players, p3, p4, p5); }
	BOOL NETWORK_IS_TRANSITION_TO_GAME() { return Call<BOOL>(0x200b21e057bef410); }
	BOOL NETWORK_IS_TRANSITION_TO_GAME_f() { return FastCall<BOOL>(0x200b21e057bef410); }
	int NETWORK_GET_TRANSITION_MEMBERS(Any* data, int dataCount) { return Call<int>(0x4f1e3f54dab2c509, data, dataCount); }
	int NETWORK_GET_TRANSITION_MEMBERS_f(Any* data, int dataCount) { return FastCall<int>(0x4f1e3f54dab2c509, data, dataCount); }
	void NETWORK_APPLY_TRANSITION_PARAMETER(int p0, int p1) { Call<void>(0x681adfd058857641, p0, p1); }
	void NETWORK_APPLY_TRANSITION_PARAMETER_f(int p0, int p1) { FastCall<void>(0x681adfd058857641, p0, p1); }
	void NETWORK_APPLY_TRANSITION_PARAMETER_STRING(int p0, char* string, BOOL p2) { Call<void>(0xeabd0b2f568e7fcf, p0, string, p2); }
	void NETWORK_APPLY_TRANSITION_PARAMETER_STRING_f(int p0, char* string, BOOL p2) { FastCall<void>(0xeabd0b2f568e7fcf, p0, string, p2); }
	BOOL NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION(Any* gamerHandle, char* p1, int p2, int p3, BOOL p4) { return Call<BOOL>(0xeec3927b0aaedc4b, gamerHandle, p1, p2, p3, p4); }
	BOOL NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION_f(Any* gamerHandle, char* p1, int p2, int p3, BOOL p4) { return FastCall<BOOL>(0xeec3927b0aaedc4b, gamerHandle, p1, p2, p3, p4); }
	BOOL NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED(Any* p0) { return Call<BOOL>(0xec8d2b1d6a965b23, p0); }
	BOOL NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED_f(Any* p0) { return FastCall<BOOL>(0xec8d2b1d6a965b23, p0); }
	BOOL NETWORK_IS_TRANSITION_HOST() { return Call<BOOL>(0xfc1df0678c01ff0e); }
	BOOL NETWORK_IS_TRANSITION_HOST_f() { return FastCall<BOOL>(0xfc1df0678c01ff0e); }
	BOOL NETWORK_IS_TRANSITION_HOST_FROM_HANDLE(Any* gamerHandle) { return Call<BOOL>(0x3240cef11ff74ac, gamerHandle); }
	BOOL NETWORK_IS_TRANSITION_HOST_FROM_HANDLE_f(Any* gamerHandle) { return FastCall<BOOL>(0x3240cef11ff74ac, gamerHandle); }
	BOOL NETWORK_GET_TRANSITION_HOST(Any* gamerHandle) { return Call<BOOL>(0x51f6ef689dcdf798, gamerHandle); }
	BOOL NETWORK_GET_TRANSITION_HOST_f(Any* gamerHandle) { return FastCall<BOOL>(0x51f6ef689dcdf798, gamerHandle); }
	BOOL NETWORK_IS_IN_TRANSITION() { return Call<BOOL>(0x31f9da31ad8a106b); }
	BOOL NETWORK_IS_IN_TRANSITION_f() { return FastCall<BOOL>(0x31f9da31ad8a106b); }
	BOOL NETWORK_IS_TRANSITION_STARTED() { return Call<BOOL>(0x200b21e029bf793b); }
	BOOL NETWORK_IS_TRANSITION_STARTED_f() { return FastCall<BOOL>(0x200b21e029bf793b); }
	BOOL NETWORK_IS_TRANSITION_BUSY() { return Call<BOOL>(0xfc1df0678bff5b5f); }
	BOOL NETWORK_IS_TRANSITION_BUSY_f() { return FastCall<BOOL>(0xfc1df0678bff5b5f); }
	BOOL NETWORK_IS_TRANSITION_MATCHMAKING() { return Call<BOOL>(0xffd64af5bd8254ea); }
	BOOL NETWORK_IS_TRANSITION_MATCHMAKING_f() { return FastCall<BOOL>(0xffd64af5bd8254ea); }
	BOOL NETWORK_IS_TRANSITION_LEAVE_POSTPONED() { return Call<BOOL>(0xbee0fdbcbf0db5a0); }
	BOOL NETWORK_IS_TRANSITION_LEAVE_POSTPONED_f() { return FastCall<BOOL>(0xbee0fdbcbf0db5a0); }
	void NETWORK_TRANSITION_SET_IN_PROGRESS(Any p0) { Call<void>(0xd4ad04aed9efd71, p0); }
	void NETWORK_TRANSITION_SET_IN_PROGRESS_f(Any p0) { FastCall<void>(0xd4ad04aed9efd71, p0); }
	void NETWORK_TRANSITION_SET_CONTENT_CREATOR(Any p0) { Call<void>(0x35902ee8ceb7ee90, p0); }
	void NETWORK_TRANSITION_SET_CONTENT_CREATOR_f(Any p0) { FastCall<void>(0x35902ee8ceb7ee90, p0); }
	void NETWORK_TRANSITION_SET_ACTIVITY_ISLAND(Any p0) { Call<void>(0x7fb58b3430222daf, p0); }
	void NETWORK_TRANSITION_SET_ACTIVITY_ISLAND_f(Any p0) { FastCall<void>(0x7fb58b3430222daf, p0); }
	void NETWORK_OPEN_TRANSITION_MATCHMAKING() { Call<void>(0x4dcab27e09c1740a); }
	void NETWORK_OPEN_TRANSITION_MATCHMAKING_f() { FastCall<void>(0x4dcab27e09c1740a); }
	void NETWORK_CLOSE_TRANSITION_MATCHMAKING() { Call<void>(0x368f550c7273f3fe); }
	void NETWORK_CLOSE_TRANSITION_MATCHMAKING_f() { FastCall<void>(0x368f550c7273f3fe); }
	BOOL NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING() { return Call<BOOL>(0xfd68884b1d9d15bb); }
	BOOL NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING_f() { return FastCall<BOOL>(0xfd68884b1d9d15bb); }
	void NETWORK_SET_TRANSITION_VISIBILITY_LOCK(BOOL p0, BOOL p1) { Call<void>(0xd35ffdbfa2962dbc, p0, p1); }
	void NETWORK_SET_TRANSITION_VISIBILITY_LOCK_f(BOOL p0, BOOL p1) { FastCall<void>(0xd35ffdbfa2962dbc, p0, p1); }
	BOOL NETWORK_IS_TRANSITION_VISIBILITY_LOCKED() { return Call<BOOL>(0xde89992ce6890131); }
	BOOL NETWORK_IS_TRANSITION_VISIBILITY_LOCKED_f() { return FastCall<BOOL>(0xde89992ce6890131); }
	void NETWORK_SET_TRANSITION_ACTIVITY_ID(Any p0) { Call<void>(0x3f2b2dc2965949cf, p0); }
	void NETWORK_SET_TRANSITION_ACTIVITY_ID_f(Any p0) { FastCall<void>(0x3f2b2dc2965949cf, p0); }
	void NETWORK_CHANGE_TRANSITION_SLOTS(Any p0, BOOL p1) { Call<void>(0x7a04a1cb7caed829, p0, p1); }
	void NETWORK_CHANGE_TRANSITION_SLOTS_f(Any p0, BOOL p1) { FastCall<void>(0x7a04a1cb7caed829, p0, p1); }
	void NETWORK_TRANSITION_BLOCK_JOIN_REQUESTS(BOOL p0) { Call<void>(0x5aa3d382861c94e, p0); }
	void NETWORK_TRANSITION_BLOCK_JOIN_REQUESTS_f(BOOL p0) { FastCall<void>(0x5aa3d382861c94e, p0); }
	BOOL NETWORK_HAS_PLAYER_STARTED_TRANSITION(Player player) { return Call<BOOL>(0x67aa15c00272e21b, player); }
	BOOL NETWORK_HAS_PLAYER_STARTED_TRANSITION_f(Player player) { return FastCall<BOOL>(0x67aa15c00272e21b, player); }
	BOOL NETWORK_ARE_TRANSITION_DETAILS_VALID(Any p0) { return Call<BOOL>(0x2936783f017cca51, p0); }
	BOOL NETWORK_ARE_TRANSITION_DETAILS_VALID_f(Any p0) { return FastCall<BOOL>(0x2936783f017cca51, p0); }
	BOOL NETWORK_JOIN_TRANSITION(Player player) { return Call<BOOL>(0xbfd3c3c57beb3b59, player); }
	BOOL NETWORK_JOIN_TRANSITION_f(Player player) { return FastCall<BOOL>(0xbfd3c3c57beb3b59, player); }
	BOOL NETWORK_HAS_INVITED_GAMER_TO_TRANSITION(Any* p0) { return Call<BOOL>(0xe27f0a6d423177e0, p0); }
	BOOL NETWORK_HAS_INVITED_GAMER_TO_TRANSITION_f(Any* p0) { return FastCall<BOOL>(0xe27f0a6d423177e0, p0); }
	BOOL NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED(Any* p0) { return Call<BOOL>(0x5a26230a58545f37, p0); }
	BOOL NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED_f(Any* p0) { return FastCall<BOOL>(0x5a26230a58545f37, p0); }
	BOOL NETWORK_IS_ACTIVITY_SESSION() { return Call<BOOL>(0xed2dcb22c3a28c0a); }
	BOOL NETWORK_IS_ACTIVITY_SESSION_f() { return FastCall<BOOL>(0xed2dcb22c3a28c0a); }
	void NETWORK_DISABLE_REALTIME_MULTIPLAYER() { Call<void>(0x550195df73dcaa0e); }
	void NETWORK_DISABLE_REALTIME_MULTIPLAYER_f() { FastCall<void>(0x550195df73dcaa0e); }
	void NETWORK_SET_PRESENCE_SESSION_INVITES_BLOCKED(BOOL toggle) { Call<void>(0x6aab266bcdef0dd8, toggle); }
	void NETWORK_SET_PRESENCE_SESSION_INVITES_BLOCKED_f(BOOL toggle) { FastCall<void>(0x6aab266bcdef0dd8, toggle); }
	BOOL NETWORK_SEND_INVITE_VIA_PRESENCE(Any* gamerHandle, char* p1, int dataCount, int p3) { return Call<BOOL>(0x4ae83ab87633757c, gamerHandle, p1, dataCount, p3); }
	BOOL NETWORK_SEND_INVITE_VIA_PRESENCE_f(Any* gamerHandle, char* p1, int dataCount, int p3) { return FastCall<BOOL>(0x4ae83ab87633757c, gamerHandle, p1, dataCount, p3); }
	BOOL NETWORK_SEND_TRANSITION_INVITE_VIA_PRESENCE(Any* gamerHandle, char* p1, int dataCount, int p3) { return Call<BOOL>(0x482167921b851f9e, gamerHandle, p1, dataCount, p3); }
	BOOL NETWORK_SEND_TRANSITION_INVITE_VIA_PRESENCE_f(Any* gamerHandle, char* p1, int dataCount, int p3) { return FastCall<BOOL>(0x482167921b851f9e, gamerHandle, p1, dataCount, p3); }
	BOOL NETWORK_SEND_IMPORTANT_TRANSITION_INVITE_VIA_PRESENCE(Any* gamerHandle, char* p1, int dataCount, int p3) { return Call<BOOL>(0x5ee7fa2c596c0ffb, gamerHandle, p1, dataCount, p3); }
	BOOL NETWORK_SEND_IMPORTANT_TRANSITION_INVITE_VIA_PRESENCE_f(Any* gamerHandle, char* p1, int dataCount, int p3) { return FastCall<BOOL>(0x5ee7fa2c596c0ffb, gamerHandle, p1, dataCount, p3); }
	int NETWORK_GET_PRESENCE_INVITE_INDEX_BY_ID(int p0) { return Call<int>(0x83ffd3255114c20a, p0); }
	int NETWORK_GET_PRESENCE_INVITE_INDEX_BY_ID_f(int p0) { return FastCall<int>(0x83ffd3255114c20a, p0); }
	int NETWORK_GET_NUM_PRESENCE_INVITES() { return Call<int>(0x5376c0bf4717b159); }
	int NETWORK_GET_NUM_PRESENCE_INVITES_f() { return FastCall<int>(0x5376c0bf4717b159); }
	BOOL NETWORK_ACCEPT_PRESENCE_INVITE(int p0) { return Call<BOOL>(0x218d743ef000ae7, p0); }
	BOOL NETWORK_ACCEPT_PRESENCE_INVITE_f(int p0) { return FastCall<BOOL>(0x218d743ef000ae7, p0); }
	BOOL NETWORK_REMOVE_PRESENCE_INVITE(int p0) { return Call<BOOL>(0x43243926ed84d663, p0); }
	BOOL NETWORK_REMOVE_PRESENCE_INVITE_f(int p0) { return FastCall<BOOL>(0x43243926ed84d663, p0); }
	int NETWORK_GET_PRESENCE_INVITE_ID(int p0) { return Call<int>(0x3c636bd2e4a7e0c7, p0); }
	int NETWORK_GET_PRESENCE_INVITE_ID_f(int p0) { return FastCall<int>(0x3c636bd2e4a7e0c7, p0); }
	const char* NETWORK_GET_PRESENCE_INVITE_INVITER(int p0) { return Call<char*>(0x7e756d492c7523d, p0); }
	const char* NETWORK_GET_PRESENCE_INVITE_INVITER_f(int p0) { return FastCall<char*>(0x7e756d492c7523d, p0); }
	BOOL NETWORK_GET_PRESENCE_INVITE_HANDLE(Any p0, Any* p1) { return Call<BOOL>(0x4251c8fe96f183d4, p0, p1); }
	BOOL NETWORK_GET_PRESENCE_INVITE_HANDLE_f(Any p0, Any* p1) { return FastCall<BOOL>(0x4251c8fe96f183d4, p0, p1); }
	int NETWORK_GET_PRESENCE_INVITE_SESSION_ID(Any p0) { return Call<int>(0xc23274cfe4d3af30, p0); }
	int NETWORK_GET_PRESENCE_INVITE_SESSION_ID_f(Any p0) { return FastCall<int>(0xc23274cfe4d3af30, p0); }
	const char* NETWORK_GET_PRESENCE_INVITE_CONTENT_ID(int p0) { return Call<char*>(0xc230fbb2918a8e6d, p0); }
	const char* NETWORK_GET_PRESENCE_INVITE_CONTENT_ID_f(int p0) { return FastCall<char*>(0xc230fbb2918a8e6d, p0); }
	int NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH(int p0) { return Call<int>(0x8943fe62b27b69c7, p0); }
	int NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH_f(int p0) { return FastCall<int>(0x8943fe62b27b69c7, p0); }
	int NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT(int p0) { return Call<int>(0x9f3bcdf1dc646a98, p0); }
	int NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT_f(int p0) { return FastCall<int>(0x9f3bcdf1dc646a98, p0); }
	BOOL NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN(int p0) { return Call<BOOL>(0xc231462f4c690206, p0); }
	BOOL NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN_f(int p0) { return FastCall<BOOL>(0xc231462f4c690206, p0); }
	BOOL NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT(Any p0) { return Call<BOOL>(0x856af8067e96f8f2, p0); }
	BOOL NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT_f(Any p0) { return FastCall<BOOL>(0x856af8067e96f8f2, p0); }
	BOOL NETWORK_HAS_FOLLOW_INVITE() { return Call<BOOL>(0xbc2052f4f6a6ca61); }
	BOOL NETWORK_HAS_FOLLOW_INVITE_f() { return FastCall<BOOL>(0xbc2052f4f6a6ca61); }
	BOOL NETWORK_ACTION_FOLLOW_INVITE() { return Call<BOOL>(0xb5a0dd6d2d6e9f); }
	BOOL NETWORK_ACTION_FOLLOW_INVITE_f() { return FastCall<BOOL>(0xb5a0dd6d2d6e9f); }
	BOOL NETWORK_CLEAR_FOLLOW_INVITE() { return Call<BOOL>(0x1d4e7c3eb6ab514); }
	BOOL NETWORK_CLEAR_FOLLOW_INVITE_f() { return FastCall<BOOL>(0x1d4e7c3eb6ab514); }
	void NETWORK_REMOVE_AND_CANCEL_ALL_INVITES() { Call<void>(0x9075ad958fbffa99); }
	void NETWORK_REMOVE_AND_CANCEL_ALL_INVITES_f() { FastCall<void>(0x9075ad958fbffa99); }
	void NETWORK_REMOVE_TRANSITION_INVITE(Any* p0) { Call<void>(0xa03a6067db16c349, p0); }
	void NETWORK_REMOVE_TRANSITION_INVITE_f(Any* p0) { FastCall<void>(0xa03a6067db16c349, p0); }
	void NETWORK_REMOVE_ALL_TRANSITION_INVITE() { Call<void>(0x85c68aeaa05bb10b); }
	void NETWORK_REMOVE_ALL_TRANSITION_INVITE_f() { FastCall<void>(0x85c68aeaa05bb10b); }
	void NETWORK_REMOVE_AND_CANCEL_ALL_TRANSITION_INVITES() { Call<void>(0x244299528d9339f1); }
	void NETWORK_REMOVE_AND_CANCEL_ALL_TRANSITION_INVITES_f() { FastCall<void>(0x244299528d9339f1); }
	BOOL NETWORK_INVITE_GAMERS(Any* p0, Any p1, Any* p2, Any p3) { return Call<BOOL>(0xe1152b5fa6282f38, p0, p1, p2, p3); }
	BOOL NETWORK_INVITE_GAMERS_f(Any* p0, Any p1, Any* p2, Any p3) { return FastCall<BOOL>(0xe1152b5fa6282f38, p0, p1, p2, p3); }
	BOOL NETWORK_HAS_INVITED_GAMER(Any* p0) { return Call<BOOL>(0xdcaded35d6e81ec6, p0); }
	BOOL NETWORK_HAS_INVITED_GAMER_f(Any* p0) { return FastCall<BOOL>(0xdcaded35d6e81ec6, p0); }
	BOOL NETWORK_HAS_MADE_INVITE_DECISION(Any* gamerHandle) { return Call<BOOL>(0xf8701f23037cbede, gamerHandle); }
	BOOL NETWORK_HAS_MADE_INVITE_DECISION_f(Any* gamerHandle) { return FastCall<BOOL>(0xf8701f23037cbede, gamerHandle); }
	int NETWORK_GET_INVITE_REPLY_STATUS(Any p0) { return Call<int>(0x68724271801f16c3, p0); }
	int NETWORK_GET_INVITE_REPLY_STATUS_f(Any p0) { return FastCall<int>(0x68724271801f16c3, p0); }
	BOOL NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0) { return Call<BOOL>(0xa93540eaef065ae7, p0); }
	BOOL NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU_f(Any* p0) { return FastCall<BOOL>(0xa93540eaef065ae7, p0); }
	BOOL NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0) { return Call<BOOL>(0xd6f9a875152d975b, p0); }
	BOOL NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU_f(Any* p0) { return FastCall<BOOL>(0xd6f9a875152d975b, p0); }
	void NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU(Any* p0) { Call<void>(0x5ef0f241a7ee64f6, p0); }
	void NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU_f(Any* p0) { FastCall<void>(0x5ef0f241a7ee64f6, p0); }
	BOOL NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE(int p0, Any* gamerHandle) { return Call<BOOL>(0x80124f868c42b25b, p0, gamerHandle); }
	BOOL NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE_f(int p0, Any* gamerHandle) { return FastCall<BOOL>(0x80124f868c42b25b, p0, gamerHandle); }
	BOOL NETWORK_CHECK_DATA_MANAGER_FOR_HANDLE(Any p0, Any* gamerHandle) { return Call<BOOL>(0x5a6f3fd1454bfc5d, p0, gamerHandle); }
	BOOL NETWORK_CHECK_DATA_MANAGER_FOR_HANDLE_f(Any p0, Any* gamerHandle) { return FastCall<BOOL>(0x5a6f3fd1454bfc5d, p0, gamerHandle); }
	void NETWORK_SET_INVITE_FAILED_MESSAGE_FOR_INVITE_MENU(Any* p0, Any* p1) { Call<void>(0xac664700190d48ad, p0, p1); }
	void NETWORK_SET_INVITE_FAILED_MESSAGE_FOR_INVITE_MENU_f(Any* p0, Any* p1) { FastCall<void>(0xac664700190d48ad, p0, p1); }
	BOOL FILLOUT_PM_PLAYER_LIST(Any* gamerHandle, Any p1, Any p2) { return Call<BOOL>(0x336bc49dd170b7ee, gamerHandle, p1, p2); }
	BOOL FILLOUT_PM_PLAYER_LIST_f(Any* gamerHandle, Any p1, Any p2) { return FastCall<BOOL>(0x336bc49dd170b7ee, gamerHandle, p1, p2); }
	BOOL FILLOUT_PM_PLAYER_LIST_WITH_NAMES(Any* p0, Any* p1, Any p2, Any p3) { return Call<BOOL>(0xaad4c324376fbb60, p0, p1, p2, p3); }
	BOOL FILLOUT_PM_PLAYER_LIST_WITH_NAMES_f(Any* p0, Any* p1, Any p2, Any p3) { return FastCall<BOOL>(0xaad4c324376fbb60, p0, p1, p2, p3); }
	BOOL REFRESH_PLAYER_LIST_STATS(int p0) { return Call<BOOL>(0x7e5a4e2def08b938, p0); }
	BOOL REFRESH_PLAYER_LIST_STATS_f(int p0) { return FastCall<BOOL>(0x7e5a4e2def08b938, p0); }
	BOOL NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE(Any* p0) { return Call<BOOL>(0xcd72b5582c6a8fbb, p0); }
	BOOL NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE_f(Any* p0) { return FastCall<BOOL>(0xcd72b5582c6a8fbb, p0); }
	BOOL NETWORK_IS_IN_PLATFORM_PARTY() { return Call<BOOL>(0x340ed234ff7b810); }
	BOOL NETWORK_IS_IN_PLATFORM_PARTY_f() { return FastCall<BOOL>(0x340ed234ff7b810); }
	int NETWORK_GET_PLATFORM_PARTY_MEMBER_COUNT() { return Call<int>(0xcb47283d03e17775); }
	int NETWORK_GET_PLATFORM_PARTY_MEMBER_COUNT_f() { return FastCall<int>(0xcb47283d03e17775); }
	int NETWORK_GET_PLATFORM_PARTY_MEMBERS(Any* data, int dataSize) { return Call<int>(0x665d5f5f98d065ae, data, dataSize); }
	int NETWORK_GET_PLATFORM_PARTY_MEMBERS_f(Any* data, int dataSize) { return FastCall<int>(0x665d5f5f98d065ae, data, dataSize); }
	BOOL NETWORK_IS_IN_PLATFORM_PARTY_CHAT() { return Call<BOOL>(0xad8d464d2ec31627); }
	BOOL NETWORK_IS_IN_PLATFORM_PARTY_CHAT_f() { return FastCall<BOOL>(0xad8d464d2ec31627); }
	BOOL NETWORK_IS_CHATTING_IN_PLATFORM_PARTY(Any* gamerHandle) { return Call<BOOL>(0x20ef63f3c03b2e5f, gamerHandle); }
	BOOL NETWORK_IS_CHATTING_IN_PLATFORM_PARTY_f(Any* gamerHandle) { return FastCall<BOOL>(0x20ef63f3c03b2e5f, gamerHandle); }
	BOOL NETWORK_CAN_QUEUE_FOR_PREVIOUS_SESSION_JOIN() { return Call<BOOL>(0xb5c1aebbd9c03677); }
	BOOL NETWORK_CAN_QUEUE_FOR_PREVIOUS_SESSION_JOIN_f() { return FastCall<BOOL>(0xb5c1aebbd9c03677); }
	BOOL NETWORK_IS_QUEUING_FOR_SESSION_JOIN() { return Call<BOOL>(0x502ea8e226fae69e); }
	BOOL NETWORK_IS_QUEUING_FOR_SESSION_JOIN_f() { return FastCall<BOOL>(0x502ea8e226fae69e); }
	void NETWORK_CLEAR_QUEUED_JOIN_REQUEST() { Call<void>(0xd9346010bde7eba3); }
	void NETWORK_CLEAR_QUEUED_JOIN_REQUEST_f() { FastCall<void>(0xd9346010bde7eba3); }
	void NETWORK_SEND_QUEUED_JOIN_REQUEST() { Call<void>(0xc777e868563e8980); }
	void NETWORK_SEND_QUEUED_JOIN_REQUEST_f() { FastCall<void>(0xc777e868563e8980); }
	void NETWORK_REMOVE_ALL_QUEUED_JOIN_REQUESTS() { Call<void>(0x8348bafa5987d295); }
	void NETWORK_REMOVE_ALL_QUEUED_JOIN_REQUESTS_f() { FastCall<void>(0x8348bafa5987d295); }
	void NETWORK_SEED_RANDOM_NUMBER_GENERATOR(int seed) { Call<void>(0xc2a04ad0cf0445fc, seed); }
	void NETWORK_SEED_RANDOM_NUMBER_GENERATOR_f(int seed) { FastCall<void>(0xc2a04ad0cf0445fc, seed); }
	int NETWORK_GET_RANDOM_INT() { return Call<int>(0x390168ec0e6f394d); }
	int NETWORK_GET_RANDOM_INT_f() { return FastCall<int>(0x390168ec0e6f394d); }
	int NETWORK_GET_RANDOM_INT_RANGED(int rangeStart, int rangeEnd) { return Call<int>(0x6e25bfcd397f05f9, rangeStart, rangeEnd); }
	int NETWORK_GET_RANDOM_INT_RANGED_f(int rangeStart, int rangeEnd) { return FastCall<int>(0x6e25bfcd397f05f9, rangeStart, rangeEnd); }
	float _NETWORK_GET_RANDOM_FLOAT_RANGED(float rangeStart, float rangeEnd) { return ToFloat(Call<_float>(0x92a352ab02aade2d, rangeStart, rangeEnd)); }
	float _NETWORK_GET_RANDOM_FLOAT_RANGED_f(float rangeStart, float rangeEnd) { return ToFloat(FastCall<_float>(0x92a352ab02aade2d, rangeStart, rangeEnd)); }
	BOOL NETWORK_PLAYER_IS_CHEATER() { return Call<BOOL>(0x3b9a4bbcadf882b8); }
	BOOL NETWORK_PLAYER_IS_CHEATER_f() { return FastCall<BOOL>(0x3b9a4bbcadf882b8); }
	int NETWORK_PLAYER_GET_CHEATER_REASON() { return Call<int>(0x9626c9146c11ce19); }
	int NETWORK_PLAYER_GET_CHEATER_REASON_f() { return FastCall<int>(0x9626c9146c11ce19); }
	BOOL NETWORK_PLAYER_IS_BADSPORT() { return Call<BOOL>(0x37af2bd136322b77); }
	BOOL NETWORK_PLAYER_IS_BADSPORT_f() { return FastCall<BOOL>(0x37af2bd136322b77); }
	BOOL REMOTE_CHEATER_PLAYER_DETECTED(Player player, int a, int b) { return Call<BOOL>(0xe0da4605e4717f88, player, a, b); }
	BOOL REMOTE_CHEATER_PLAYER_DETECTED_f(Player player, int a, int b) { return FastCall<BOOL>(0xe0da4605e4717f88, player, a, b); }
	BOOL BAD_SPORT_PLAYER_LEFT_DETECTED(Any* gamerHandle, int event, int amountReceived) { return Call<BOOL>(0x7e7856c9260ff381, gamerHandle, event, amountReceived); }
	BOOL BAD_SPORT_PLAYER_LEFT_DETECTED_f(Any* gamerHandle, int event, int amountReceived) { return FastCall<BOOL>(0x7e7856c9260ff381, gamerHandle, event, amountReceived); }
	void NETWORK_ADD_INVALID_OBJECT_MODEL(Hash modelHash, Any p1) { Call<void>(0x3d9b746e9f345580, modelHash, p1); }
	void NETWORK_ADD_INVALID_OBJECT_MODEL_f(Hash modelHash, Any p1) { FastCall<void>(0x3d9b746e9f345580, modelHash, p1); }
	void NETWORK_REMOVE_INVALID_OBJECT_MODEL(Hash modelHash) { Call<void>(0x986b5fae9ff5bd9b, modelHash); }
	void NETWORK_REMOVE_INVALID_OBJECT_MODEL_f(Hash modelHash) { FastCall<void>(0x986b5fae9ff5bd9b, modelHash); }
	void NETWORK_CLEAR_INVALID_OBJECT_MODELS() { Call<void>(0x83688611049f4bbf); }
	void NETWORK_CLEAR_INVALID_OBJECT_MODELS_f() { FastCall<void>(0x83688611049f4bbf); }
	void NETWORK_APPLY_PED_SCAR_DATA(Ped ped, int p1) { Call<void>(0x93faa58a8f2c3876, ped, p1); }
	void NETWORK_APPLY_PED_SCAR_DATA_f(Ped ped, int p1) { FastCall<void>(0x93faa58a8f2c3876, ped, p1); }
	void NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(int maxNumMissionParticipants, BOOL p1, int instanceId) { Call<void>(0x2ee5d5f6369502b0, maxNumMissionParticipants, p1, instanceId); }
	void NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT_f(int maxNumMissionParticipants, BOOL p1, int instanceId) { FastCall<void>(0x2ee5d5f6369502b0, maxNumMissionParticipants, p1, instanceId); }
	BOOL NETWORK_TRY_TO_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(Any p0, BOOL p1, Any p2) { return Call<BOOL>(0xcb4bd0f0511af12, p0, p1, p2); }
	BOOL NETWORK_TRY_TO_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT_f(Any p0, BOOL p1, Any p2) { return FastCall<BOOL>(0xcb4bd0f0511af12, p0, p1, p2); }
	BOOL NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT() { return Call<BOOL>(0xcb79c7dc507832a4); }
	BOOL NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT_f() { return FastCall<BOOL>(0xcb79c7dc507832a4); }
	int NETWORK_GET_MAX_NUM_PARTICIPANTS() { return Call<int>(0x1f4d7086d9a177ee); }
	int NETWORK_GET_MAX_NUM_PARTICIPANTS_f() { return FastCall<int>(0x1f4d7086d9a177ee); }
	int NETWORK_GET_NUM_PARTICIPANTS() { return Call<int>(0x4e7ad0df2b085b53); }
	int NETWORK_GET_NUM_PARTICIPANTS_f() { return FastCall<int>(0x4e7ad0df2b085b53); }
	int NETWORK_GET_SCRIPT_STATUS() { return Call<int>(0xd6bfe5fe54efc8ac); }
	int NETWORK_GET_SCRIPT_STATUS_f() { return FastCall<int>(0xd6bfe5fe54efc8ac); }
	void NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(int* vars, int numVars, char* debugName) { Call<void>(0x61752cecca7fce4d, vars, numVars, debugName); }
	void NETWORK_REGISTER_HOST_BROADCAST_VARIABLES_f(int* vars, int numVars, char* debugName) { FastCall<void>(0x61752cecca7fce4d, vars, numVars, debugName); }
	void NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(int* vars, int numVars, char* debugName) { Call<void>(0x2914d27291613a46, vars, numVars, debugName); }
	void NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES_f(int* vars, int numVars, char* debugName) { FastCall<void>(0x2914d27291613a46, vars, numVars, debugName); }
	void NETWORK_REGISTER_HIGH_FREQUENCY_HOST_BROADCAST_VARIABLES(Any p0, Any p1, Any p2) { Call<void>(0x209960db2777f3f7, p0, p1, p2); }
	void NETWORK_REGISTER_HIGH_FREQUENCY_HOST_BROADCAST_VARIABLES_f(Any p0, Any p1, Any p2) { FastCall<void>(0x209960db2777f3f7, p0, p1, p2); }
	void NETWORK_REGISTER_HIGH_FREQUENCY_PLAYER_BROADCAST_VARIABLES(Any p0, Any p1, Any p2) { Call<void>(0xaffbc43d90e69d70, p0, p1, p2); }
	void NETWORK_REGISTER_HIGH_FREQUENCY_PLAYER_BROADCAST_VARIABLES_f(Any p0, Any p1, Any p2) { FastCall<void>(0xaffbc43d90e69d70, p0, p1, p2); }
	void NETWORK_FINISH_BROADCASTING_DATA() { Call<void>(0x756f834b94d0da0d); }
	void NETWORK_FINISH_BROADCASTING_DATA_f() { FastCall<void>(0x756f834b94d0da0d); }
	BOOL NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA() { return Call<BOOL>(0x84c5284f96efa457); }
	BOOL NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA_f() { return FastCall<BOOL>(0x84c5284f96efa457); }
	Player NETWORK_GET_PLAYER_INDEX(Player player) { return Call<Player>(0xfdb533be418c0e4e, player); }
	Player NETWORK_GET_PLAYER_INDEX_f(Player player) { return FastCall<Player>(0xfdb533be418c0e4e, player); }
	int NETWORK_GET_PARTICIPANT_INDEX(int index) { return Call<int>(0x19f0dc6ef5c8204c, index); }
	int NETWORK_GET_PARTICIPANT_INDEX_f(int index) { return FastCall<int>(0x19f0dc6ef5c8204c, index); }
	Player NETWORK_GET_PLAYER_INDEX_FROM_PED(Ped ped) { return Call<Player>(0xbedea6681872e9ab, ped); }
	Player NETWORK_GET_PLAYER_INDEX_FROM_PED_f(Ped ped) { return FastCall<Player>(0xbedea6681872e9ab, ped); }
	int NETWORK_GET_NUM_CONNECTED_PLAYERS() { return Call<int>(0xb17b2612cee7da69); }
	int NETWORK_GET_NUM_CONNECTED_PLAYERS_f() { return FastCall<int>(0xb17b2612cee7da69); }
	BOOL NETWORK_IS_PLAYER_CONNECTED(Player player) { return Call<BOOL>(0x8f15daab4b2199cf, player); }
	BOOL NETWORK_IS_PLAYER_CONNECTED_f(Player player) { return FastCall<BOOL>(0x8f15daab4b2199cf, player); }
	int NETWORK_GET_TOTAL_NUM_PLAYERS() { return Call<int>(0xb19b5ce7b440ece4); }
	int NETWORK_GET_TOTAL_NUM_PLAYERS_f() { return FastCall<int>(0xb19b5ce7b440ece4); }
	BOOL NETWORK_IS_PARTICIPANT_ACTIVE(int p0) { return Call<BOOL>(0xf51793f9adb1b376, p0); }
	BOOL NETWORK_IS_PARTICIPANT_ACTIVE_f(int p0) { return FastCall<BOOL>(0xf51793f9adb1b376, p0); }
	BOOL NETWORK_IS_PLAYER_ACTIVE(Player player) { return Call<BOOL>(0x7d72c5813916b5e0, player); }
	BOOL NETWORK_IS_PLAYER_ACTIVE_f(Player player) { return FastCall<BOOL>(0x7d72c5813916b5e0, player); }
	BOOL NETWORK_IS_PLAYER_A_PARTICIPANT(Player player) { return Call<BOOL>(0xf5d2f46fcec03bfb, player); }
	BOOL NETWORK_IS_PLAYER_A_PARTICIPANT_f(Player player) { return FastCall<BOOL>(0xf5d2f46fcec03bfb, player); }
	BOOL NETWORK_IS_HOST_OF_THIS_SCRIPT() { return Call<BOOL>(0x6a027e130614ad57); }
	BOOL NETWORK_IS_HOST_OF_THIS_SCRIPT_f() { return FastCall<BOOL>(0x6a027e130614ad57); }
	Player NETWORK_GET_HOST_OF_THIS_SCRIPT() { return Call<Player>(0x1d530f5de8bd50e1); }
	Player NETWORK_GET_HOST_OF_THIS_SCRIPT_f() { return FastCall<Player>(0x1d530f5de8bd50e1); }
	Player NETWORK_GET_HOST_OF_SCRIPT(char* scriptName, int instance_id, int position_hash) { return Call<Player>(0xf56a917aef566056, scriptName, instance_id, position_hash); }
	Player NETWORK_GET_HOST_OF_SCRIPT_f(char* scriptName, int instance_id, int position_hash) { return FastCall<Player>(0xf56a917aef566056, scriptName, instance_id, position_hash); }
	void NETWORK_SET_MISSION_FINISHED() { Call<void>(0x1e9920aa9632c5d3); }
	void NETWORK_SET_MISSION_FINISHED_f() { FastCall<void>(0x1e9920aa9632c5d3); }
	BOOL NETWORK_IS_SCRIPT_ACTIVE(char* scriptName, int instance_id, BOOL p2, int position_hash) { return Call<BOOL>(0x9b4167758cace4b6, scriptName, instance_id, p2, position_hash); }
	BOOL NETWORK_IS_SCRIPT_ACTIVE_f(char* scriptName, int instance_id, BOOL p2, int position_hash) { return FastCall<BOOL>(0x9b4167758cace4b6, scriptName, instance_id, p2, position_hash); }
	BOOL NETWORK_IS_SCRIPT_ACTIVE_BY_HASH(Hash scriptHash, int p1, BOOL p2, int p3) { return Call<BOOL>(0x356398cd49567d6d, scriptHash, p1, p2, p3); }
	BOOL NETWORK_IS_SCRIPT_ACTIVE_BY_HASH_f(Hash scriptHash, int p1, BOOL p2, int p3) { return FastCall<BOOL>(0x356398cd49567d6d, scriptHash, p1, p2, p3); }
	BOOL NETWORK_IS_THREAD_A_NETWORK_SCRIPT(int threadId) { return Call<BOOL>(0xa192ee94df8c722b, threadId); }
	BOOL NETWORK_IS_THREAD_A_NETWORK_SCRIPT_f(int threadId) { return FastCall<BOOL>(0xa192ee94df8c722b, threadId); }
	int NETWORK_GET_NUM_SCRIPT_PARTICIPANTS(char* scriptName, int instance_id, int position_hash) { return Call<int>(0x8395a25ae57b6b81, scriptName, instance_id, position_hash); }
	int NETWORK_GET_NUM_SCRIPT_PARTICIPANTS_f(char* scriptName, int instance_id, int position_hash) { return FastCall<int>(0x8395a25ae57b6b81, scriptName, instance_id, position_hash); }
	int NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT() { return Call<int>(0x5e841e0717b2c498); }
	int NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT_f() { return FastCall<int>(0x5e841e0717b2c498); }
	Hash NETWORK_GET_POSITION_HASH_OF_THIS_SCRIPT() { return Call<Hash>(0xed052024b368ed9); }
	Hash NETWORK_GET_POSITION_HASH_OF_THIS_SCRIPT_f() { return FastCall<Hash>(0xed052024b368ed9); }
	BOOL NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT(Player player, char* script, int instance_id) { return Call<BOOL>(0xd94ca074521167e7, player, script, instance_id); }
	BOOL NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT_f(Player player, char* script, int instance_id) { return FastCall<BOOL>(0xd94ca074521167e7, player, script, instance_id); }
	void NETWORK_PREVENT_SCRIPT_HOST_MIGRATION() { Call<void>(0xa305107341116613); }
	void NETWORK_PREVENT_SCRIPT_HOST_MIGRATION_f() { FastCall<void>(0xa305107341116613); }
	void NETWORK_REQUEST_TO_BE_HOST_OF_THIS_SCRIPT() { Call<void>(0x33240b34405a1b22); }
	void NETWORK_REQUEST_TO_BE_HOST_OF_THIS_SCRIPT_f() { FastCall<void>(0x33240b34405a1b22); }
	Player PARTICIPANT_ID() { return Call<Player>(0xc955e90487e5adc7); }
	Player PARTICIPANT_ID_f() { return FastCall<Player>(0xc955e90487e5adc7); }
	int PARTICIPANT_ID_TO_INT() { return Call<int>(0xf4edaed4dd243183); }
	int PARTICIPANT_ID_TO_INT_f() { return FastCall<int>(0xf4edaed4dd243183); }
	Player NETWORK_GET_KILLER_OF_PLAYER(Player player, Hash* weaponHash) { return Call<Player>(0x95fae8bd68a9830f, player, weaponHash); }
	Player NETWORK_GET_KILLER_OF_PLAYER_f(Player player, Hash* weaponHash) { return FastCall<Player>(0x95fae8bd68a9830f, player, weaponHash); }
	Player NETWORK_GET_DESTROYER_OF_NETWORK_ID(int netId, Hash* weaponHash) { return Call<Player>(0x26774ae5ce250b62, netId, weaponHash); }
	Player NETWORK_GET_DESTROYER_OF_NETWORK_ID_f(int netId, Hash* weaponHash) { return FastCall<Player>(0x26774ae5ce250b62, netId, weaponHash); }
	Player NETWORK_GET_DESTROYER_OF_ENTITY(Entity entity, Hash* weaponHash) { return Call<Player>(0xf3c7507c449e6959, entity, weaponHash); }
	Player NETWORK_GET_DESTROYER_OF_ENTITY_f(Entity entity, Hash* weaponHash) { return FastCall<Player>(0xf3c7507c449e6959, entity, weaponHash); }
	BOOL NETWORK_GET_ASSISTED_KILL_OF_ENTITY(Player player, Entity entity, int* p2) { return Call<BOOL>(0xfa6a14352cb11f47, player, entity, p2); }
	BOOL NETWORK_GET_ASSISTED_KILL_OF_ENTITY_f(Player player, Entity entity, int* p2) { return FastCall<BOOL>(0xfa6a14352cb11f47, player, entity, p2); }
	BOOL NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY(Player player, Entity entity, int* p2) { return Call<BOOL>(0x331e05724c71d6d8, player, entity, p2); }
	BOOL NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY_f(Player player, Entity entity, int* p2) { return FastCall<BOOL>(0x331e05724c71d6d8, player, entity, p2); }
	Entity NETWORK_GET_ENTITY_KILLER_OF_PLAYER(Player player, Hash* weaponHash) { return Call<Entity>(0x2b26e5710e25bb7, player, weaponHash); }
	Entity NETWORK_GET_ENTITY_KILLER_OF_PLAYER_f(Player player, Hash* weaponHash) { return FastCall<Entity>(0x2b26e5710e25bb7, player, weaponHash); }
	void NETWORK_SET_CURRENT_PUBLIC_CONTENT_ID(char* missionId) { Call<void>(0xa3911f91c5ae48c3, missionId); }
	void NETWORK_SET_CURRENT_PUBLIC_CONTENT_ID_f(char* missionId) { FastCall<void>(0xa3911f91c5ae48c3, missionId); }
	void NETWORK_SET_CURRENT_CHAT_OPTION(int newChatOption) { Call<void>(0x691dd77ccbd09ea8, newChatOption); }
	void NETWORK_SET_CURRENT_CHAT_OPTION_f(int newChatOption) { FastCall<void>(0x691dd77ccbd09ea8, newChatOption); }
	void NETWORK_SET_CURRENT_SPAWN_LOCATION_OPTION(Hash mpSettingSpawn) { Call<void>(0xdb3929251dab4bc7, mpSettingSpawn); }
	void NETWORK_SET_CURRENT_SPAWN_LOCATION_OPTION_f(Hash mpSettingSpawn) { FastCall<void>(0xdb3929251dab4bc7, mpSettingSpawn); }
	void NETWORK_SET_VEHICLE_DRIVEN_IN_TEST_DRIVE(BOOL toggle) { Call<void>(0xb8c254808a93b03d, toggle); }
	void NETWORK_SET_VEHICLE_DRIVEN_IN_TEST_DRIVE_f(BOOL toggle) { FastCall<void>(0xb8c254808a93b03d, toggle); }
	void NETWORK_SET_VEHICLE_DRIVEN_LOCATION(Hash location) { Call<void>(0xc9e06f07ed9eb68f, location); }
	void NETWORK_SET_VEHICLE_DRIVEN_LOCATION_f(Hash location) { FastCall<void>(0xc9e06f07ed9eb68f, location); }
	void NETWORK_RESURRECT_LOCAL_PLAYER(float x, float y, float z, float heading, BOOL p4, BOOL changetime, BOOL p6, int p7, int p8) { Call<void>(0x6e9725498e1394a4, x, y, z, heading, p4, changetime, p6, p7, p8); }
	void NETWORK_RESURRECT_LOCAL_PLAYER_f(float x, float y, float z, float heading, BOOL p4, BOOL changetime, BOOL p6, int p7, int p8) { FastCall<void>(0x6e9725498e1394a4, x, y, z, heading, p4, changetime, p6, p7, p8); }
	void NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME(int time) { Call<void>(0xb22ee73099bf73f1, time); }
	void NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME_f(int time) { FastCall<void>(0xb22ee73099bf73f1, time); }
	BOOL NETWORK_IS_LOCAL_PLAYER_INVINCIBLE() { return Call<BOOL>(0x53cd8ddb05502105); }
	BOOL NETWORK_IS_LOCAL_PLAYER_INVINCIBLE_f() { return FastCall<BOOL>(0x53cd8ddb05502105); }
	void NETWORK_DISABLE_INVINCIBLE_FLASHING(Player player, BOOL toggle) { Call<void>(0x4b1fa2589c9e7b6a, player, toggle); }
	void NETWORK_DISABLE_INVINCIBLE_FLASHING_f(Player player, BOOL toggle) { FastCall<void>(0x4b1fa2589c9e7b6a, player, toggle); }
	void NETWORK_PATCH_POST_CUTSCENE_HS4F_TUN_ENT(Ped ped) { Call<void>(0x1723f0e7300838d5, ped); }
	void NETWORK_PATCH_POST_CUTSCENE_HS4F_TUN_ENT_f(Ped ped) { FastCall<void>(0x1723f0e7300838d5, ped); }
	void NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT(BOOL toggle) { Call<void>(0x5df39a68a5e749ab, toggle); }
	void NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT_f(BOOL toggle) { FastCall<void>(0x5df39a68a5e749ab, toggle); }
	BOOL NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD(Entity entity) { return Call<BOOL>(0x53df7843966182c2, entity); }
	BOOL NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD_f(Entity entity) { return FastCall<BOOL>(0x53df7843966182c2, entity); }
	int NETWORK_GET_NETWORK_ID_FROM_ENTITY(Entity entity) { return Call<int>(0xf22d4e59db3ebb3f, entity); }
	int NETWORK_GET_NETWORK_ID_FROM_ENTITY_f(Entity entity) { return FastCall<int>(0xf22d4e59db3ebb3f, entity); }
	Entity NETWORK_GET_ENTITY_FROM_NETWORK_ID(int netId) { return Call<Entity>(0x908bbaa0cbf6c3f, netId); }
	Entity NETWORK_GET_ENTITY_FROM_NETWORK_ID_f(int netId) { return FastCall<Entity>(0x908bbaa0cbf6c3f, netId); }
	BOOL NETWORK_GET_ENTITY_IS_NETWORKED(Entity entity) { return Call<BOOL>(0xccaec27948a77f7a, entity); }
	BOOL NETWORK_GET_ENTITY_IS_NETWORKED_f(Entity entity) { return FastCall<BOOL>(0xccaec27948a77f7a, entity); }
	BOOL NETWORK_GET_ENTITY_IS_LOCAL(Entity entity) { return Call<BOOL>(0x51da35eb87bbf218, entity); }
	BOOL NETWORK_GET_ENTITY_IS_LOCAL_f(Entity entity) { return FastCall<BOOL>(0x51da35eb87bbf218, entity); }
	void NETWORK_REGISTER_ENTITY_AS_NETWORKED(Entity entity) { Call<void>(0x8158fc86f3d14f31, entity); }
	void NETWORK_REGISTER_ENTITY_AS_NETWORKED_f(Entity entity) { FastCall<void>(0x8158fc86f3d14f31, entity); }
	void NETWORK_UNREGISTER_NETWORKED_ENTITY(Entity entity) { Call<void>(0x74afbd112790b827, entity); }
	void NETWORK_UNREGISTER_NETWORKED_ENTITY_f(Entity entity) { FastCall<void>(0x74afbd112790b827, entity); }
	BOOL NETWORK_DOES_NETWORK_ID_EXIST(int netId) { return Call<BOOL>(0xb9b057a51ed60b59, netId); }
	BOOL NETWORK_DOES_NETWORK_ID_EXIST_f(int netId) { return FastCall<BOOL>(0xb9b057a51ed60b59, netId); }
	BOOL NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(int netId) { return Call<BOOL>(0xecac0e162516b56, netId); }
	BOOL NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID_f(int netId) { return FastCall<BOOL>(0xecac0e162516b56, netId); }
	BOOL NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(int netId) { return Call<BOOL>(0xe6628b680177c491, netId); }
	BOOL NETWORK_REQUEST_CONTROL_OF_NETWORK_ID_f(int netId) { return FastCall<BOOL>(0xe6628b680177c491, netId); }
	BOOL NETWORK_HAS_CONTROL_OF_NETWORK_ID(int netId) { return Call<BOOL>(0xc1dbde187c6711dc, netId); }
	BOOL NETWORK_HAS_CONTROL_OF_NETWORK_ID_f(int netId) { return FastCall<BOOL>(0xc1dbde187c6711dc, netId); }
	BOOL NETWORK_IS_NETWORK_ID_REMOTELY_CONTROLLED(int netId) { return Call<BOOL>(0x125b328c22d916eb, netId); }
	BOOL NETWORK_IS_NETWORK_ID_REMOTELY_CONTROLLED_f(int netId) { return FastCall<BOOL>(0x125b328c22d916eb, netId); }
	BOOL NETWORK_REQUEST_CONTROL_OF_ENTITY(Entity entity) { return Call<BOOL>(0x69b10d6cf0e31208, entity); }
	BOOL NETWORK_REQUEST_CONTROL_OF_ENTITY_f(Entity entity) { return FastCall<BOOL>(0x69b10d6cf0e31208, entity); }
	BOOL NETWORK_REQUEST_CONTROL_OF_DOOR(int doorID) { return Call<BOOL>(0xfa3fd9eb99f49b13, doorID); }
	BOOL NETWORK_REQUEST_CONTROL_OF_DOOR_f(int doorID) { return FastCall<BOOL>(0xfa3fd9eb99f49b13, doorID); }
	BOOL NETWORK_HAS_CONTROL_OF_ENTITY(Entity entity) { return Call<BOOL>(0xf404bd9a308abcd3, entity); }
	BOOL NETWORK_HAS_CONTROL_OF_ENTITY_f(Entity entity) { return FastCall<BOOL>(0xf404bd9a308abcd3, entity); }
	BOOL NETWORK_HAS_CONTROL_OF_PICKUP(Pickup pickup) { return Call<BOOL>(0xf404bd9a4301e36c, pickup); }
	BOOL NETWORK_HAS_CONTROL_OF_PICKUP_f(Pickup pickup) { return FastCall<BOOL>(0xf404bd9a4301e36c, pickup); }
	BOOL NETWORK_HAS_CONTROL_OF_DOOR(Hash doorHash) { return Call<BOOL>(0x33eef4be188e7c9e, doorHash); }
	BOOL NETWORK_HAS_CONTROL_OF_DOOR_f(Hash doorHash) { return FastCall<BOOL>(0x33eef4be188e7c9e, doorHash); }
	BOOL NETWORK_IS_DOOR_NETWORKED(Hash doorHash) { return Call<BOOL>(0x743823c678d3cba0, doorHash); }
	BOOL NETWORK_IS_DOOR_NETWORKED_f(Hash doorHash) { return FastCall<BOOL>(0x743823c678d3cba0, doorHash); }
	int VEH_TO_NET(Vehicle vehicle) { return Call<int>(0x84b6b73bf393f, vehicle); }
	int VEH_TO_NET_f(Vehicle vehicle) { return FastCall<int>(0x84b6b73bf393f, vehicle); }
	int PED_TO_NET(Ped ped) { return Call<int>(0x7bb0a1a81df09, ped); }
	int PED_TO_NET_f(Ped ped) { return FastCall<int>(0x7bb0a1a81df09, ped); }
	int OBJ_TO_NET(Object object) { return Call<int>(0x7a0d0d8b22e21, object); }
	int OBJ_TO_NET_f(Object object) { return FastCall<int>(0x7a0d0d8b22e21, object); }
	Vehicle NET_TO_VEH(int netHandle) { return Call<Vehicle>(0x78b58b001e8b7, netHandle); }
	Vehicle NET_TO_VEH_f(int netHandle) { return FastCall<Vehicle>(0x78b58b001e8b7, netHandle); }
	Ped NET_TO_PED(int netHandle) { return Call<Ped>(0x78b58b001d22d, netHandle); }
	Ped NET_TO_PED_f(int netHandle) { return FastCall<Ped>(0x78b58b001d22d, netHandle); }
	Object NET_TO_OBJ(int netHandle) { return Call<Object>(0x78b58b001ce15, netHandle); }
	Object NET_TO_OBJ_f(int netHandle) { return FastCall<Object>(0x78b58b001ce15, netHandle); }
	Entity NET_TO_ENT(int netHandle) { return Call<Entity>(0x78b58b001aa09, netHandle); }
	Entity NET_TO_ENT_f(int netHandle) { return FastCall<Entity>(0x78b58b001aa09, netHandle); }
	void NETWORK_GET_LOCAL_HANDLE(Any* gamerHandle, int gamerHandleSize) { Call<void>(0xfc54fa3f42c51616, gamerHandle, gamerHandleSize); }
	void NETWORK_GET_LOCAL_HANDLE_f(Any* gamerHandle, int gamerHandleSize) { FastCall<void>(0xfc54fa3f42c51616, gamerHandle, gamerHandleSize); }
	void NETWORK_HANDLE_FROM_USER_ID(char* userId, Any* gamerHandle, int gamerHandleSize) { Call<void>(0x13e6b43c62550780, userId, gamerHandle, gamerHandleSize); }
	void NETWORK_HANDLE_FROM_USER_ID_f(char* userId, Any* gamerHandle, int gamerHandleSize) { FastCall<void>(0x13e6b43c62550780, userId, gamerHandle, gamerHandleSize); }
	void NETWORK_HANDLE_FROM_MEMBER_ID(char* memberId, Any* gamerHandle, int gamerHandleSize) { Call<void>(0xb50a90205b37ae11, memberId, gamerHandle, gamerHandleSize); }
	void NETWORK_HANDLE_FROM_MEMBER_ID_f(char* memberId, Any* gamerHandle, int gamerHandleSize) { FastCall<void>(0xb50a90205b37ae11, memberId, gamerHandle, gamerHandleSize); }
	void NETWORK_HANDLE_FROM_PLAYER(Player player, Any* gamerHandle, int gamerHandleSize) { Call<void>(0x21ac9a7586a28750, player, gamerHandle, gamerHandleSize); }
	void NETWORK_HANDLE_FROM_PLAYER_f(Player player, Any* gamerHandle, int gamerHandleSize) { FastCall<void>(0x21ac9a7586a28750, player, gamerHandle, gamerHandleSize); }
	Hash NETWORK_HASH_FROM_PLAYER_HANDLE(Player player) { return Call<Hash>(0x350e9a2100ce7911, player); }
	Hash NETWORK_HASH_FROM_PLAYER_HANDLE_f(Player player) { return FastCall<Hash>(0x350e9a2100ce7911, player); }
	Hash NETWORK_HASH_FROM_GAMER_HANDLE(Any* gamerHandle) { return Call<Hash>(0xccde607d4be3537c, gamerHandle); }
	Hash NETWORK_HASH_FROM_GAMER_HANDLE_f(Any* gamerHandle) { return FastCall<Hash>(0xccde607d4be3537c, gamerHandle); }
	void NETWORK_HANDLE_FROM_FRIEND(int friendIndex, Any* gamerHandle, int gamerHandleSize) { Call<void>(0x21ac9a7575e9f70d, friendIndex, gamerHandle, gamerHandleSize); }
	void NETWORK_HANDLE_FROM_FRIEND_f(int friendIndex, Any* gamerHandle, int gamerHandleSize) { FastCall<void>(0x21ac9a7575e9f70d, friendIndex, gamerHandle, gamerHandleSize); }
	BOOL NETWORK_GAMERTAG_FROM_HANDLE_START(Any* gamerHandle) { return Call<BOOL>(0x1e7177448261968c, gamerHandle); }
	BOOL NETWORK_GAMERTAG_FROM_HANDLE_START_f(Any* gamerHandle) { return FastCall<BOOL>(0x1e7177448261968c, gamerHandle); }
	BOOL NETWORK_GAMERTAG_FROM_HANDLE_PENDING() { return Call<BOOL>(0x47f0b82cb8bb7541); }
	BOOL NETWORK_GAMERTAG_FROM_HANDLE_PENDING_f() { return FastCall<BOOL>(0x47f0b82cb8bb7541); }
	BOOL NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED() { return Call<BOOL>(0xea362996abd678b); }
	BOOL NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED_f() { return FastCall<BOOL>(0xea362996abd678b); }
	const char* NETWORK_GET_GAMERTAG_FROM_HANDLE(Any* gamerHandle) { return Call<char*>(0x1097fc9cdec9e6f2, gamerHandle); }
	const char* NETWORK_GET_GAMERTAG_FROM_HANDLE_f(Any* gamerHandle) { return FastCall<char*>(0x1097fc9cdec9e6f2, gamerHandle); }
	int NETWORK_DISPLAYNAMES_FROM_HANDLES_START(Any* p0, Any p1) { return Call<int>(0x5fe5ede00a14bd41, p0, p1); }
	int NETWORK_DISPLAYNAMES_FROM_HANDLES_START_f(Any* p0, Any p1) { return FastCall<int>(0x5fe5ede00a14bd41, p0, p1); }
	int NETWORK_GET_DISPLAYNAMES_FROM_HANDLES(Any p0, Any p1, Any p2) { return Call<int>(0x731e1e7a7cdef935, p0, p1, p2); }
	int NETWORK_GET_DISPLAYNAMES_FROM_HANDLES_f(Any p0, Any p1, Any p2) { return FastCall<int>(0x731e1e7a7cdef935, p0, p1, p2); }
	BOOL NETWORK_ARE_HANDLES_THE_SAME(Any* gamerHandle1, Any* gamerHandle2) { return Call<BOOL>(0x9b6acb7b170f2264, gamerHandle1, gamerHandle2); }
	BOOL NETWORK_ARE_HANDLES_THE_SAME_f(Any* gamerHandle1, Any* gamerHandle2) { return FastCall<BOOL>(0x9b6acb7b170f2264, gamerHandle1, gamerHandle2); }
	BOOL NETWORK_IS_HANDLE_VALID(Any* gamerHandle, int gamerHandleSize) { return Call<BOOL>(0xf096ce61621993c9, gamerHandle, gamerHandleSize); }
	BOOL NETWORK_IS_HANDLE_VALID_f(Any* gamerHandle, int gamerHandleSize) { return FastCall<BOOL>(0xf096ce61621993c9, gamerHandle, gamerHandleSize); }
	Player NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(Any* gamerHandle) { return Call<Player>(0x1b364adef212e2b8, gamerHandle); }
	Player NETWORK_GET_PLAYER_FROM_GAMER_HANDLE_f(Any* gamerHandle) { return FastCall<Player>(0x1b364adef212e2b8, gamerHandle); }
	const char* NETWORK_MEMBER_ID_FROM_GAMER_HANDLE(Any* gamerHandle) { return Call<char*>(0x16301d96a48952cc, gamerHandle); }
	const char* NETWORK_MEMBER_ID_FROM_GAMER_HANDLE_f(Any* gamerHandle) { return FastCall<char*>(0x16301d96a48952cc, gamerHandle); }
	BOOL NETWORK_IS_GAMER_IN_MY_SESSION(Any* gamerHandle) { return Call<BOOL>(0xbabed74befa9419a, gamerHandle); }
	BOOL NETWORK_IS_GAMER_IN_MY_SESSION_f(Any* gamerHandle) { return FastCall<BOOL>(0xbabed74befa9419a, gamerHandle); }
	void NETWORK_SHOW_PROFILE_UI(Any* gamerHandle) { Call<void>(0xeeba74378ee935b, gamerHandle); }
	void NETWORK_SHOW_PROFILE_UI_f(Any* gamerHandle) { FastCall<void>(0xeeba74378ee935b, gamerHandle); }
	const char* NETWORK_PLAYER_GET_NAME(Player player) { return Call<char*>(0xa79eeda2e7c3d961, player); }
	const char* NETWORK_PLAYER_GET_NAME_f(Player player) { return FastCall<char*>(0xa79eeda2e7c3d961, player); }
	const char* NETWORK_PLAYER_GET_USERID(Player player, int* userID) { return Call<char*>(0x3b9a1088131f2f7c, player, userID); }
	const char* NETWORK_PLAYER_GET_USERID_f(Player player, int* userID) { return FastCall<char*>(0x3b9a1088131f2f7c, player, userID); }
	BOOL NETWORK_PLAYER_IS_ROCKSTAR_DEV(Player player) { return Call<BOOL>(0x3772cb215e111fd5, player); }
	BOOL NETWORK_PLAYER_IS_ROCKSTAR_DEV_f(Player player) { return FastCall<BOOL>(0x3772cb215e111fd5, player); }
	BOOL NETWORK_PLAYER_INDEX_IS_CHEATER(Player player) { return Call<BOOL>(0x437db52d27670ea5, player); }
	BOOL NETWORK_PLAYER_INDEX_IS_CHEATER_f(Player player) { return FastCall<BOOL>(0x437db52d27670ea5, player); }
	int NETWORK_ENTITY_GET_OBJECT_ID(Entity entity) { return Call<int>(0xb6da6b7dacaee687, entity); }
	int NETWORK_ENTITY_GET_OBJECT_ID_f(Entity entity) { return FastCall<int>(0xb6da6b7dacaee687, entity); }
	Entity NETWORK_GET_ENTITY_FROM_OBJECT_ID(Any p0) { return Call<Entity>(0x52df408d5e391c68, p0); }
	Entity NETWORK_GET_ENTITY_FROM_OBJECT_ID_f(Any p0) { return FastCall<Entity>(0x52df408d5e391c68, p0); }
	BOOL NETWORK_IS_INACTIVE_PROFILE(Any* p0) { return Call<BOOL>(0x53b6b7a40d2be079, p0); }
	BOOL NETWORK_IS_INACTIVE_PROFILE_f(Any* p0) { return FastCall<BOOL>(0x53b6b7a40d2be079, p0); }
	const char* _NETWORK_LOAD_GAMER_DISPLAY_NAME(Any* gamerHandle) { return Call<char*>(0x2a2dbdd9717107d0, gamerHandle); }
	const char* _NETWORK_LOAD_GAMER_DISPLAY_NAME_f(Any* gamerHandle) { return FastCall<char*>(0x2a2dbdd9717107d0, gamerHandle); }
	int NETWORK_GET_MAX_FRIENDS() { return Call<int>(0xe71d2dc5c1a4d1c0); }
	int NETWORK_GET_MAX_FRIENDS_f() { return FastCall<int>(0xe71d2dc5c1a4d1c0); }
	int NETWORK_GET_FRIEND_COUNT() { return Call<int>(0xfa40acc040ea2488); }
	int NETWORK_GET_FRIEND_COUNT_f() { return FastCall<int>(0xfa40acc040ea2488); }
	const char* NETWORK_GET_FRIEND_NAME(int friendIndex) { return Call<char*>(0xe70a58273beb4fd2, friendIndex); }
	const char* NETWORK_GET_FRIEND_NAME_f(int friendIndex) { return FastCall<char*>(0xe70a58273beb4fd2, friendIndex); }
	const char* NETWORK_GET_FRIEND_DISPLAY_NAME(int friendIndex) { return Call<char*>(0xd0e441ce34bac24f, friendIndex); }
	const char* NETWORK_GET_FRIEND_DISPLAY_NAME_f(int friendIndex) { return FastCall<char*>(0xd0e441ce34bac24f, friendIndex); }
	BOOL NETWORK_IS_FRIEND_ONLINE(char* name) { return Call<BOOL>(0x12566cbf481dbed0, name); }
	BOOL NETWORK_IS_FRIEND_ONLINE_f(char* name) { return FastCall<BOOL>(0x12566cbf481dbed0, name); }
	BOOL NETWORK_IS_FRIEND_HANDLE_ONLINE(Any* gamerHandle) { return Call<BOOL>(0xbdb9e5b8d2695d2d, gamerHandle); }
	BOOL NETWORK_IS_FRIEND_HANDLE_ONLINE_f(Any* gamerHandle) { return FastCall<BOOL>(0xbdb9e5b8d2695d2d, gamerHandle); }
	BOOL NETWORK_IS_FRIEND_IN_SAME_TITLE(char* friendName) { return Call<BOOL>(0xcd709d2ef4c6c95c, friendName); }
	BOOL NETWORK_IS_FRIEND_IN_SAME_TITLE_f(char* friendName) { return FastCall<BOOL>(0xcd709d2ef4c6c95c, friendName); }
	BOOL NETWORK_IS_FRIEND_IN_MULTIPLAYER(char* friendName) { return Call<BOOL>(0xe09370842be5949d, friendName); }
	BOOL NETWORK_IS_FRIEND_IN_MULTIPLAYER_f(char* friendName) { return FastCall<BOOL>(0xe09370842be5949d, friendName); }
	BOOL NETWORK_IS_FRIEND(Any* gamerHandle) { return Call<BOOL>(0xcd9ddd1c09165662, gamerHandle); }
	BOOL NETWORK_IS_FRIEND_f(Any* gamerHandle) { return FastCall<BOOL>(0xcd9ddd1c09165662, gamerHandle); }
	BOOL NETWORK_IS_PENDING_FRIEND(Any p0) { return Call<BOOL>(0xe8ba3e3b8c62762a, p0); }
	BOOL NETWORK_IS_PENDING_FRIEND_f(Any p0) { return FastCall<BOOL>(0xe8ba3e3b8c62762a, p0); }
	BOOL NETWORK_IS_ADDING_FRIEND() { return Call<BOOL>(0xd6b0c5e04504b4b8); }
	BOOL NETWORK_IS_ADDING_FRIEND_f() { return FastCall<BOOL>(0xd6b0c5e04504b4b8); }
	BOOL NETWORK_ADD_FRIEND(Any* gamerHandle, char* message) { return Call<BOOL>(0xe61cf9bae928d6ed, gamerHandle, message); }
	BOOL NETWORK_ADD_FRIEND_f(Any* gamerHandle, char* message) { return FastCall<BOOL>(0xe61cf9bae928d6ed, gamerHandle, message); }
	BOOL NETWORK_IS_FRIEND_INDEX_ONLINE(int friendIndex) { return Call<BOOL>(0x1f642737b14bad3d, friendIndex); }
	BOOL NETWORK_IS_FRIEND_INDEX_ONLINE_f(int friendIndex) { return FastCall<BOOL>(0x1f642737b14bad3d, friendIndex); }
	void NETWORK_SET_PLAYER_IS_PASSIVE(BOOL toggle) { Call<void>(0x17785c29d385a6e2, toggle); }
	void NETWORK_SET_PLAYER_IS_PASSIVE_f(BOOL toggle) { FastCall<void>(0x17785c29d385a6e2, toggle); }
	BOOL NETWORK_GET_PLAYER_OWNS_WAYPOINT(Player player) { return Call<BOOL>(0x42c71167500203ef, player); }
	BOOL NETWORK_GET_PLAYER_OWNS_WAYPOINT_f(Player player) { return FastCall<BOOL>(0x42c71167500203ef, player); }
	BOOL NETWORK_CAN_SET_WAYPOINT() { return Call<BOOL>(0xb2fcd09c6937919e); }
	BOOL NETWORK_CAN_SET_WAYPOINT_f() { return FastCall<BOOL>(0xb2fcd09c6937919e); }
	void NETWORK_IGNORE_REMOTE_WAYPOINTS() { Call<void>(0x1f4777461371ff55); }
	void NETWORK_IGNORE_REMOTE_WAYPOINTS_f() { FastCall<void>(0x1f4777461371ff55); }
	BOOL _NETWORK_DOES_COMMUNICATION_GROUP_EXIST(int communicationType) { return Call<BOOL>(0xb1262f97e135fd18, communicationType); }
	BOOL _NETWORK_DOES_COMMUNICATION_GROUP_EXIST_f(int communicationType) { return FastCall<BOOL>(0xb1262f97e135fd18, communicationType); }
	int _NETWORK_GET_COMMUNICATION_GROUP_FLAGS(int communicationType) { return Call<int>(0x290b42ebf4a81645, communicationType); }
	int _NETWORK_GET_COMMUNICATION_GROUP_FLAGS_f(int communicationType) { return FastCall<int>(0x290b42ebf4a81645, communicationType); }
	void _NETWORK_SET_COMMUNICATION_GROUP_FLAGS(int communicationType, int communicationGroupFlag) { Call<void>(0x14745b15e466cc51, communicationType, communicationGroupFlag); }
	void _NETWORK_SET_COMMUNICATION_GROUP_FLAGS_f(int communicationType, int communicationGroupFlag) { FastCall<void>(0x14745b15e466cc51, communicationType, communicationGroupFlag); }
	BOOL _NETWORK_HAS_PLAYER_PASSED_CHECK_TYPE(int checkType, Any* gamerHandle) { return Call<BOOL>(0xd0a71c3b7123f117, checkType, gamerHandle); }
	BOOL _NETWORK_HAS_PLAYER_PASSED_CHECK_TYPE_f(int checkType, Any* gamerHandle) { return FastCall<BOOL>(0xd0a71c3b7123f117, checkType, gamerHandle); }
	BOOL NETWORK_IS_PLAYER_ON_BLOCKLIST(Any* gamerHandle) { return Call<BOOL>(0x46ba4555d8e2785, gamerHandle); }
	BOOL NETWORK_IS_PLAYER_ON_BLOCKLIST_f(Any* gamerHandle) { return FastCall<BOOL>(0x46ba4555d8e2785, gamerHandle); }
	BOOL NETWORK_SET_SCRIPT_AUTOMUTED(Any p0) { return Call<BOOL>(0x804637b4e6b06e76, p0); }
	BOOL NETWORK_SET_SCRIPT_AUTOMUTED_f(Any p0) { return FastCall<BOOL>(0x804637b4e6b06e76, p0); }
	BOOL NETWORK_HAS_AUTOMUTE_OVERRIDE() { return Call<BOOL>(0x4998f466f70d7bed); }
	BOOL NETWORK_HAS_AUTOMUTE_OVERRIDE_f() { return FastCall<BOOL>(0x4998f466f70d7bed); }
	BOOL NETWORK_HAS_HEADSET() { return Call<BOOL>(0xdd966343748570ec); }
	BOOL NETWORK_HAS_HEADSET_f() { return FastCall<BOOL>(0xdd966343748570ec); }
	void NETWORK_SET_LOOK_AT_TALKERS(BOOL p0) { Call<void>(0xc3683aa2f8779d00, p0); }
	void NETWORK_SET_LOOK_AT_TALKERS_f(BOOL p0) { FastCall<void>(0xc3683aa2f8779d00, p0); }
	BOOL NETWORK_IS_PUSH_TO_TALK_ACTIVE() { return Call<BOOL>(0xd66c377af8f848b6); }
	BOOL NETWORK_IS_PUSH_TO_TALK_ACTIVE_f() { return FastCall<BOOL>(0xd66c377af8f848b6); }
	BOOL NETWORK_GAMER_HAS_HEADSET(Any* gamerHandle) { return Call<BOOL>(0xf68461e038af228d, gamerHandle); }
	BOOL NETWORK_GAMER_HAS_HEADSET_f(Any* gamerHandle) { return FastCall<BOOL>(0xf68461e038af228d, gamerHandle); }
	BOOL NETWORK_IS_GAMER_TALKING(Any* gamerHandle) { return Call<BOOL>(0x1751da8eef5404b3, gamerHandle); }
	BOOL NETWORK_IS_GAMER_TALKING_f(Any* gamerHandle) { return FastCall<BOOL>(0x1751da8eef5404b3, gamerHandle); }
	BOOL NETWORK_PERMISSIONS_HAS_GAMER_RECORD(Any* gamerHandle) { return Call<BOOL>(0x15f8e7d10ba94f81, gamerHandle); }
	BOOL NETWORK_PERMISSIONS_HAS_GAMER_RECORD_f(Any* gamerHandle) { return FastCall<BOOL>(0x15f8e7d10ba94f81, gamerHandle); }
	BOOL NETWORK_CAN_COMMUNICATE_WITH_GAMER(Any* gamerHandle) { return Call<BOOL>(0xbba573591ea24c53, gamerHandle); }
	BOOL NETWORK_CAN_COMMUNICATE_WITH_GAMER_f(Any* gamerHandle) { return FastCall<BOOL>(0xbba573591ea24c53, gamerHandle); }
	BOOL NETWORK_CAN_TEXT_CHAT_WITH_GAMER(Any* gamerHandle) { return Call<BOOL>(0x6019d35a9758b45c, gamerHandle); }
	BOOL NETWORK_CAN_TEXT_CHAT_WITH_GAMER_f(Any* gamerHandle) { return FastCall<BOOL>(0x6019d35a9758b45c, gamerHandle); }
	BOOL NETWORK_IS_GAMER_MUTED_BY_ME(Any* gamerHandle) { return Call<BOOL>(0xea094f9b24b7929, gamerHandle); }
	BOOL NETWORK_IS_GAMER_MUTED_BY_ME_f(Any* gamerHandle) { return FastCall<BOOL>(0xea094f9b24b7929, gamerHandle); }
	BOOL NETWORK_AM_I_MUTED_BY_GAMER(Any* gamerHandle) { return Call<BOOL>(0x7beecf2513240fe4, gamerHandle); }
	BOOL NETWORK_AM_I_MUTED_BY_GAMER_f(Any* gamerHandle) { return FastCall<BOOL>(0x7beecf2513240fe4, gamerHandle); }
	BOOL NETWORK_IS_GAMER_BLOCKED_BY_ME(Any* gamerHandle) { return Call<BOOL>(0x6d56587eeade95aa, gamerHandle); }
	BOOL NETWORK_IS_GAMER_BLOCKED_BY_ME_f(Any* gamerHandle) { return FastCall<BOOL>(0x6d56587eeade95aa, gamerHandle); }
	BOOL NETWORK_AM_I_BLOCKED_BY_GAMER(Any* gamerHandle) { return Call<BOOL>(0xa1e915a459614e83, gamerHandle); }
	BOOL NETWORK_AM_I_BLOCKED_BY_GAMER_f(Any* gamerHandle) { return FastCall<BOOL>(0xa1e915a459614e83, gamerHandle); }
	BOOL NETWORK_CAN_VIEW_GAMER_USER_CONTENT(Any* gamerHandle) { return Call<BOOL>(0x4d138a688808dcbe, gamerHandle); }
	BOOL NETWORK_CAN_VIEW_GAMER_USER_CONTENT_f(Any* gamerHandle) { return FastCall<BOOL>(0x4d138a688808dcbe, gamerHandle); }
	BOOL NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT(Any* gamerHandle) { return Call<BOOL>(0xfc0e1dcb8687beb4, gamerHandle); }
	BOOL NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT_f(Any* gamerHandle) { return FastCall<BOOL>(0xfc0e1dcb8687beb4, gamerHandle); }
	BOOL _NETWORK_CAN_TEXT_FROM_GAMER_BE_VIEWED(Any* gamerHandle) { return Call<BOOL>(0x2a20005b3b0cac9f, gamerHandle); }
	BOOL _NETWORK_CAN_TEXT_FROM_GAMER_BE_VIEWED_f(Any* gamerHandle) { return FastCall<BOOL>(0x2a20005b3b0cac9f, gamerHandle); }
	BOOL NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER(Any* gamerHandle) { return Call<BOOL>(0x7c5d4b208d37, gamerHandle); }
	BOOL NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER_f(Any* gamerHandle) { return FastCall<BOOL>(0x7c5d4b208d37, gamerHandle); }
	BOOL NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME(Any* gamerHandle) { return Call<BOOL>(0xc098331178957320, gamerHandle); }
	BOOL NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME_f(Any* gamerHandle) { return FastCall<BOOL>(0xc098331178957320, gamerHandle); }
	BOOL NETWORK_CAN_SEND_LOCAL_INVITE(Any* gamerHandle) { return Call<BOOL>(0x2f20baf570de0794, gamerHandle); }
	BOOL NETWORK_CAN_SEND_LOCAL_INVITE_f(Any* gamerHandle) { return FastCall<BOOL>(0x2f20baf570de0794, gamerHandle); }
	BOOL NETWORK_CAN_RECEIVE_LOCAL_INVITE(Any* gamerHandle) { return Call<BOOL>(0x2418576a9d797cb9, gamerHandle); }
	BOOL NETWORK_CAN_RECEIVE_LOCAL_INVITE_f(Any* gamerHandle) { return FastCall<BOOL>(0x2418576a9d797cb9, gamerHandle); }
	BOOL NETWORK_IS_PLAYER_TALKING(Player player) { return Call<BOOL>(0x30e5eaa9d2fcb7fc, player); }
	BOOL NETWORK_IS_PLAYER_TALKING_f(Player player) { return FastCall<BOOL>(0x30e5eaa9d2fcb7fc, player); }
	BOOL NETWORK_PLAYER_HAS_HEADSET(Player player) { return Call<BOOL>(0x37aa88f3b86dcf10, player); }
	BOOL NETWORK_PLAYER_HAS_HEADSET_f(Player player) { return FastCall<BOOL>(0x37aa88f3b86dcf10, player); }
	BOOL NETWORK_IS_PLAYER_MUTED_BY_ME(Player player) { return Call<BOOL>(0x2127903460675ff2, player); }
	BOOL NETWORK_IS_PLAYER_MUTED_BY_ME_f(Player player) { return FastCall<BOOL>(0x2127903460675ff2, player); }
	BOOL NETWORK_AM_I_MUTED_BY_PLAYER(Player player) { return Call<BOOL>(0x1eb157d614f621d, player); }
	BOOL NETWORK_AM_I_MUTED_BY_PLAYER_f(Player player) { return FastCall<BOOL>(0x1eb157d614f621d, player); }
	BOOL NETWORK_IS_PLAYER_BLOCKED_BY_ME(Player player) { return Call<BOOL>(0xfa0b6fc6819bee33, player); }
	BOOL NETWORK_IS_PLAYER_BLOCKED_BY_ME_f(Player player) { return FastCall<BOOL>(0xfa0b6fc6819bee33, player); }
	BOOL NETWORK_AM_I_BLOCKED_BY_PLAYER(Player player) { return Call<BOOL>(0x9b399ee6e2b9f75e, player); }
	BOOL NETWORK_AM_I_BLOCKED_BY_PLAYER_f(Player player) { return FastCall<BOOL>(0x9b399ee6e2b9f75e, player); }
	float NETWORK_GET_PLAYER_LOUDNESS(Player player) { return ToFloat(Call<_float>(0x41b0696152ef358d, player)); }
	float NETWORK_GET_PLAYER_LOUDNESS_f(Player player) { return ToFloat(FastCall<_float>(0x41b0696152ef358d, player)); }
	void NETWORK_SET_TALKER_PROXIMITY(float value) { Call<void>(0x9d93f71fa6f291e7, value); }
	void NETWORK_SET_TALKER_PROXIMITY_f(float value) { FastCall<void>(0x9d93f71fa6f291e7, value); }
	float NETWORK_GET_TALKER_PROXIMITY() { return ToFloat(Call<_float>(0xc2bb495ccb5c8573)); }
	float NETWORK_GET_TALKER_PROXIMITY_f() { return ToFloat(FastCall<_float>(0xc2bb495ccb5c8573)); }
	void NETWORK_SET_VOICE_ACTIVE(BOOL toggle) { Call<void>(0xa6fb4c3621d24dc1, toggle); }
	void NETWORK_SET_VOICE_ACTIVE_f(BOOL toggle) { FastCall<void>(0xa6fb4c3621d24dc1, toggle); }
	void NETWORK_REMAIN_IN_GAME_CHAT(BOOL p0) { Call<void>(0xe7e306750f8ba42d, p0); }
	void NETWORK_REMAIN_IN_GAME_CHAT_f(BOOL p0) { FastCall<void>(0xe7e306750f8ba42d, p0); }
	void NETWORK_OVERRIDE_TRANSITION_CHAT(BOOL p0) { Call<void>(0xad3c90aef546baa0, p0); }
	void NETWORK_OVERRIDE_TRANSITION_CHAT_f(BOOL p0) { FastCall<void>(0xad3c90aef546baa0, p0); }
	void NETWORK_SET_TEAM_ONLY_CHAT(BOOL toggle) { Call<void>(0xbf9df28e2c697817, toggle); }
	void NETWORK_SET_TEAM_ONLY_CHAT_f(BOOL toggle) { FastCall<void>(0xbf9df28e2c697817, toggle); }
	void NETWORK_SET_SCRIPT_CONTROLLING_TEAMS(Any p0) { Call<void>(0x6ab8708dfbf11084, p0); }
	void NETWORK_SET_SCRIPT_CONTROLLING_TEAMS_f(Any p0) { FastCall<void>(0x6ab8708dfbf11084, p0); }
	BOOL NETWORK_SET_SAME_TEAM_AS_LOCAL_PLAYER(Any p0, Any p1) { return Call<BOOL>(0x676a38934436156b, p0, p1); }
	BOOL NETWORK_SET_SAME_TEAM_AS_LOCAL_PLAYER_f(Any p0, Any p1) { return FastCall<BOOL>(0x676a38934436156b, p0, p1); }
	void NETWORK_OVERRIDE_TEAM_RESTRICTIONS(int team, BOOL toggle) { Call<void>(0xcea00b11a6d60fe7, team, toggle); }
	void NETWORK_OVERRIDE_TEAM_RESTRICTIONS_f(int team, BOOL toggle) { FastCall<void>(0xcea00b11a6d60fe7, team, toggle); }
	void NETWORK_SET_OVERRIDE_SPECTATOR_MODE(BOOL toggle) { Call<void>(0xaea09a5042d17038, toggle); }
	void NETWORK_SET_OVERRIDE_SPECTATOR_MODE_f(BOOL toggle) { FastCall<void>(0xaea09a5042d17038, toggle); }
	void NETWORK_SET_OVERRIDE_TUTORIAL_SESSION_CHAT(BOOL toggle) { Call<void>(0x3a1402c4653b51fd, toggle); }
	void NETWORK_SET_OVERRIDE_TUTORIAL_SESSION_CHAT_f(BOOL toggle) { FastCall<void>(0x3a1402c4653b51fd, toggle); }
	void NETWORK_SET_PROXIMITY_AFFECTS_TEAM(BOOL toggle) { Call<void>(0x1f6f29ee00541f6c, toggle); }
	void NETWORK_SET_PROXIMITY_AFFECTS_TEAM_f(BOOL toggle) { FastCall<void>(0x1f6f29ee00541f6c, toggle); }
	void NETWORK_SET_NO_SPECTATOR_CHAT(BOOL toggle) { Call<void>(0x692ee1342a6ca8d8, toggle); }
	void NETWORK_SET_NO_SPECTATOR_CHAT_f(BOOL toggle) { FastCall<void>(0x692ee1342a6ca8d8, toggle); }
	void NETWORK_SET_IGNORE_SPECTATOR_CHAT_LIMITS_SAME_TEAM(BOOL toggle) { Call<void>(0xb9e6222a64bc68c7, toggle); }
	void NETWORK_SET_IGNORE_SPECTATOR_CHAT_LIMITS_SAME_TEAM_f(BOOL toggle) { FastCall<void>(0xb9e6222a64bc68c7, toggle); }
	void NETWORK_OVERRIDE_CHAT_RESTRICTIONS(Player player, BOOL toggle) { Call<void>(0x91063eaa1d546ecc, player, toggle); }
	void NETWORK_OVERRIDE_CHAT_RESTRICTIONS_f(Player player, BOOL toggle) { FastCall<void>(0x91063eaa1d546ecc, player, toggle); }
	void NETWORK_OVERRIDE_SEND_RESTRICTIONS(Player player, BOOL toggle) { Call<void>(0xa6562014f584809c, player, toggle); }
	void NETWORK_OVERRIDE_SEND_RESTRICTIONS_f(Player player, BOOL toggle) { FastCall<void>(0xa6562014f584809c, player, toggle); }
	void NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL(BOOL toggle) { Call<void>(0x4f6d79dda806ff5e, toggle); }
	void NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL_f(BOOL toggle) { FastCall<void>(0x4f6d79dda806ff5e, toggle); }
	void NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(Player player, BOOL toggle) { Call<void>(0xe77454ed30bcbe45, player, toggle); }
	void NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_f(Player player, BOOL toggle) { FastCall<void>(0xe77454ed30bcbe45, player, toggle); }
	void NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL(BOOL toggle) { Call<void>(0xba38c538ec264087, toggle); }
	void NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL_f(BOOL toggle) { FastCall<void>(0xba38c538ec264087, toggle); }
	void NETWORK_SET_VOICE_CHANNEL(int channel) { Call<void>(0x386e3a8e89c28588, channel); }
	void NETWORK_SET_VOICE_CHANNEL_f(int channel) { FastCall<void>(0x386e3a8e89c28588, channel); }
	void NETWORK_CLEAR_VOICE_CHANNEL() { Call<void>(0xb0b0bd7b27170473); }
	void NETWORK_CLEAR_VOICE_CHANNEL_f() { FastCall<void>(0xb0b0bd7b27170473); }
	void NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE(float x, float y, float z) { Call<void>(0x32d4080e1ab54c1b, x, y, z); }
	void NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE_f(float x, float y, float z) { FastCall<void>(0x32d4080e1ab54c1b, x, y, z); }
	void NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE() { Call<void>(0x115616d59a66c21c); }
	void NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE_f() { FastCall<void>(0x115616d59a66c21c); }
	void NETWORK_ENABLE_VOICE_BANDWIDTH_RESTRICTION(Player player) { Call<void>(0xb893aa366290a6, player); }
	void NETWORK_ENABLE_VOICE_BANDWIDTH_RESTRICTION_f(Player player) { FastCall<void>(0xb893aa366290a6, player); }
	void NETWORK_DISABLE_VOICE_BANDWIDTH_RESTRICTION(Player player) { Call<void>(0xa46d939e08a306e9, player); }
	void NETWORK_DISABLE_VOICE_BANDWIDTH_RESTRICTION_f(Player player) { FastCall<void>(0xa46d939e08a306e9, player); }
	void NETWORK_GET_MUTE_COUNT_FOR_PLAYER(Player p0, float* p1, float* p2) { Call<void>(0x5f4eb927aab77ab3, p0, p1, p2); }
	void NETWORK_GET_MUTE_COUNT_FOR_PLAYER_f(Player p0, float* p1, float* p2) { FastCall<void>(0x5f4eb927aab77ab3, p0, p1, p2); }
	void NETWORK_SET_SPECTATOR_TO_NON_SPECTATOR_TEXT_CHAT(BOOL toggle) { Call<void>(0x94f12e0d2a873c2, toggle); }
	void NETWORK_SET_SPECTATOR_TO_NON_SPECTATOR_TEXT_CHAT_f(BOOL toggle) { FastCall<void>(0x94f12e0d2a873c2, toggle); }
	BOOL NETWORK_TEXT_CHAT_IS_TYPING() { return Call<BOOL>(0x8b51e79fe3593a6); }
	BOOL NETWORK_TEXT_CHAT_IS_TYPING_f() { return FastCall<BOOL>(0x8b51e79fe3593a6); }
	void SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME() { Call<void>(0xf137e37301c6ec74); }
	void SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME_f() { FastCall<void>(0xf137e37301c6ec74); }
	BOOL SHUTDOWN_AND_LOAD_MOST_RECENT_SAVE() { return Call<BOOL>(0xd9f4c33ebb26272d); }
	BOOL SHUTDOWN_AND_LOAD_MOST_RECENT_SAVE_f() { return FastCall<BOOL>(0xd9f4c33ebb26272d); }
	void NETWORK_SET_FRIENDLY_FIRE_OPTION(BOOL toggle) { Call<void>(0x51e226e4a6fac1f8, toggle); }
	void NETWORK_SET_FRIENDLY_FIRE_OPTION_f(BOOL toggle) { FastCall<void>(0x51e226e4a6fac1f8, toggle); }
	void NETWORK_SET_RICH_PRESENCE(int p0, int p1, Any p2, Any p3) { Call<void>(0xa865424f7b9b3d0, p0, p1, p2, p3); }
	void NETWORK_SET_RICH_PRESENCE_f(int p0, int p1, Any p2, Any p3) { FastCall<void>(0xa865424f7b9b3d0, p0, p1, p2, p3); }
	void NETWORK_SET_RICH_PRESENCE_STRING(int p0, char* textLabel) { Call<void>(0xe3fd4f4ba353b360, p0, textLabel); }
	void NETWORK_SET_RICH_PRESENCE_STRING_f(int p0, char* textLabel) { FastCall<void>(0xe3fd4f4ba353b360, p0, textLabel); }
	int NETWORK_GET_TIMEOUT_TIME() { return Call<int>(0xff169c331baf2385); }
	int NETWORK_GET_TIMEOUT_TIME_f() { return FastCall<int>(0xff169c331baf2385); }
	void NETWORK_LEAVE_PED_BEHIND_BEFORE_WARP(Player player, float x, float y, float z, BOOL p4, BOOL p5) { Call<void>(0x75332bdf899a904c, player, x, y, z, p4, p5); }
	void NETWORK_LEAVE_PED_BEHIND_BEFORE_WARP_f(Player player, float x, float y, float z, BOOL p4, BOOL p5) { FastCall<void>(0x75332bdf899a904c, player, x, y, z, p4, p5); }
	void NETWORK_LEAVE_PED_BEHIND_BEFORE_CUTSCENE(Player player, BOOL p1) { Call<void>(0xdf3b6f9261a234e, player, p1); }
	void NETWORK_LEAVE_PED_BEHIND_BEFORE_CUTSCENE_f(Player player, BOOL p1) { FastCall<void>(0xdf3b6f9261a234e, player, p1); }
	void REMOVE_ALL_STICKY_BOMBS_FROM_ENTITY(Entity entity, Ped ped) { Call<void>(0xc04150b587638ecd, entity, ped); }
	void REMOVE_ALL_STICKY_BOMBS_FROM_ENTITY_f(Entity entity, Ped ped) { FastCall<void>(0xc04150b587638ecd, entity, ped); }
	void NETWORK_KEEP_ENTITY_COLLISION_DISABLED_AFTER_ANIM_SCENE(Any p0, Any p1) { Call<void>(0xa0048661f465ea04, p0, p1); }
	void NETWORK_KEEP_ENTITY_COLLISION_DISABLED_AFTER_ANIM_SCENE_f(Any p0, Any p1) { FastCall<void>(0xa0048661f465ea04, p0, p1); }
	BOOL NETWORK_IS_ANY_PLAYER_NEAR(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { return Call<BOOL>(0x1789960ac95afd8f, p0, p1, p2, p3, p4, p5, p6); }
	BOOL NETWORK_IS_ANY_PLAYER_NEAR_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { return FastCall<BOOL>(0x1789960ac95afd8f, p0, p1, p2, p3, p4, p5, p6); }
	BOOL NETWORK_CLAN_SERVICE_IS_VALID() { return Call<BOOL>(0x724a5abb7c88fa49); }
	BOOL NETWORK_CLAN_SERVICE_IS_VALID_f() { return FastCall<BOOL>(0x724a5abb7c88fa49); }
	BOOL NETWORK_CLAN_PLAYER_IS_ACTIVE(Any* gamerHandle) { return Call<BOOL>(0x2460bc6a1a37cf35, gamerHandle); }
	BOOL NETWORK_CLAN_PLAYER_IS_ACTIVE_f(Any* gamerHandle) { return FastCall<BOOL>(0x2460bc6a1a37cf35, gamerHandle); }
	BOOL NETWORK_CLAN_PLAYER_GET_DESC(Any* clanDesc, int bufferSize, Any* gamerHandle) { return Call<BOOL>(0x95d1926743a2ab40, clanDesc, bufferSize, gamerHandle); }
	BOOL NETWORK_CLAN_PLAYER_GET_DESC_f(Any* clanDesc, int bufferSize, Any* gamerHandle) { return FastCall<BOOL>(0x95d1926743a2ab40, clanDesc, bufferSize, gamerHandle); }
	BOOL NETWORK_CLAN_IS_ROCKSTAR_CLAN(Any* clanDesc, int bufferSize) { return Call<BOOL>(0x6c84c34af2881361, clanDesc, bufferSize); }
	BOOL NETWORK_CLAN_IS_ROCKSTAR_CLAN_f(Any* clanDesc, int bufferSize) { return FastCall<BOOL>(0x6c84c34af2881361, clanDesc, bufferSize); }
	void NETWORK_CLAN_GET_UI_FORMATTED_TAG(Any* clanDesc, int bufferSize, char* formattedTag) { Call<void>(0x547359b52f7c4c2d, clanDesc, bufferSize, formattedTag); }
	void NETWORK_CLAN_GET_UI_FORMATTED_TAG_f(Any* clanDesc, int bufferSize, char* formattedTag) { FastCall<void>(0x547359b52f7c4c2d, clanDesc, bufferSize, formattedTag); }
	int NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT() { return Call<int>(0xf4efcc342b61d18); }
	int NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT_f() { return FastCall<int>(0xf4efcc342b61d18); }
	BOOL NETWORK_CLAN_GET_MEMBERSHIP_DESC(Any* memberDesc, int p1) { return Call<BOOL>(0xf5a8e43bb9b207f9, memberDesc, p1); }
	BOOL NETWORK_CLAN_GET_MEMBERSHIP_DESC_f(Any* memberDesc, int p1) { return FastCall<BOOL>(0xf5a8e43bb9b207f9, memberDesc, p1); }
	BOOL NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(Any* gamerHandle) { return Call<BOOL>(0x9044af480f728595, gamerHandle); }
	BOOL NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_f(Any* gamerHandle) { return FastCall<BOOL>(0x9044af480f728595, gamerHandle); }
	BOOL NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING(Any* p0) { return Call<BOOL>(0x82ea914fe59ddccd, p0); }
	BOOL NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING_f(Any* p0) { return FastCall<BOOL>(0x82ea914fe59ddccd, p0); }
	BOOL NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING() { return Call<BOOL>(0xc6e1ba2f3d4c18da); }
	BOOL NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING_f() { return FastCall<BOOL>(0xc6e1ba2f3d4c18da); }
	BOOL NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(int* p0) { return Call<BOOL>(0x3c8277615f4eeb6, p0); }
	BOOL NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE_f(int* p0) { return FastCall<BOOL>(0x3c8277615f4eeb6, p0); }
	int NETWORK_CLAN_GET_MEMBERSHIP_COUNT(int* p0) { return Call<int>(0xbf73a33b7c857487, p0); }
	int NETWORK_CLAN_GET_MEMBERSHIP_COUNT_f(int* p0) { return FastCall<int>(0xbf73a33b7c857487, p0); }
	BOOL NETWORK_CLAN_GET_MEMBERSHIP_VALID(int* p0, Any p1) { return Call<BOOL>(0xbf73a33b7d8ab374, p0, p1); }
	BOOL NETWORK_CLAN_GET_MEMBERSHIP_VALID_f(int* p0, Any p1) { return FastCall<BOOL>(0xbf73a33b7d8ab374, p0, p1); }
	BOOL NETWORK_CLAN_GET_MEMBERSHIP(int* p0, Any* clanMembership, int p2) { return Call<BOOL>(0x9b86b703db93b5d7, p0, clanMembership, p2); }
	BOOL NETWORK_CLAN_GET_MEMBERSHIP_f(int* p0, Any* clanMembership, int p2) { return FastCall<BOOL>(0x9b86b703db93b5d7, p0, clanMembership, p2); }
	BOOL NETWORK_CLAN_JOIN(int clanDesc) { return Call<BOOL>(0xcd9dd84193b72082, clanDesc); }
	BOOL NETWORK_CLAN_JOIN_f(int clanDesc) { return FastCall<BOOL>(0xcd9dd84193b72082, clanDesc); }
	BOOL NETWORK_CLAN_CREWINFO_GET_STRING_VALUE(char* animDict, char* animName) { return Call<BOOL>(0xd612dc57e52f9664, animDict, animName); }
	BOOL NETWORK_CLAN_CREWINFO_GET_STRING_VALUE_f(char* animDict, char* animName) { return FastCall<BOOL>(0xd612dc57e52f9664, animDict, animName); }
	BOOL NETWORK_CLAN_CREWINFO_GET_CREWRANKTITLE(int p0, char* p1) { return Call<BOOL>(0x3c8a2b9be25c6eaa, p0, p1); }
	BOOL NETWORK_CLAN_CREWINFO_GET_CREWRANKTITLE_f(int p0, char* p1) { return FastCall<BOOL>(0x3c8a2b9be25c6eaa, p0, p1); }
	BOOL NETWORK_CLAN_HAS_CREWINFO_METADATA_BEEN_RECEIVED() { return Call<BOOL>(0x1178531c4b6ab417); }
	BOOL NETWORK_CLAN_HAS_CREWINFO_METADATA_BEEN_RECEIVED_f() { return FastCall<BOOL>(0x1178531c4b6ab417); }
	BOOL NETWORK_CLAN_GET_EMBLEM_TXD_NAME(Any* netHandle, char* txdName) { return Call<BOOL>(0xd22d3ae11870174e, netHandle, txdName); }
	BOOL NETWORK_CLAN_GET_EMBLEM_TXD_NAME_f(Any* netHandle, char* txdName) { return FastCall<BOOL>(0xd22d3ae11870174e, netHandle, txdName); }
	BOOL NETWORK_CLAN_REQUEST_EMBLEM(Any p0) { return Call<BOOL>(0x29d42376f678cc42, p0); }
	BOOL NETWORK_CLAN_REQUEST_EMBLEM_f(Any p0) { return FastCall<BOOL>(0x29d42376f678cc42, p0); }
	BOOL NETWORK_CLAN_IS_EMBLEM_READY(Any p0, Any* p1) { return Call<BOOL>(0xdddc7b5ea02566bb, p0, p1); }
	BOOL NETWORK_CLAN_IS_EMBLEM_READY_f(Any p0, Any* p1) { return FastCall<BOOL>(0xdddc7b5ea02566bb, p0, p1); }
	void NETWORK_CLAN_RELEASE_EMBLEM(Any p0) { Call<void>(0x27e1d35d9a5dffca, p0); }
	void NETWORK_CLAN_RELEASE_EMBLEM_f(Any p0) { FastCall<void>(0x27e1d35d9a5dffca, p0); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR() { return Call<BOOL>(0x297e30d6b5e48dca); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR_f() { return FastCall<BOOL>(0x297e30d6b5e48dca); }
	void NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL() { Call<void>(0x647ea000616467d); }
	void NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL_f() { FastCall<void>(0x647ea000616467d); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_START(Any* p0, Any p1) { return Call<BOOL>(0x297e30d6b6c99bdf, p0, p1); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_START_f(Any* p0, Any p1) { return FastCall<BOOL>(0x297e30d6b6c99bdf, p0, p1); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_PENDING() { return Call<BOOL>(0xc2b55603733771d4); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_PENDING_f() { return FastCall<BOOL>(0xc2b55603733771d4); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS() { return Call<BOOL>(0xc2b556042c9c2840); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS_f() { return FastCall<BOOL>(0xc2b556042c9c2840); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_NEW(Any* p0, Any* p1) { return Call<BOOL>(0xec10618c9c4b405d, p0, p1); }
	BOOL NETWORK_GET_PRIMARY_CLAN_DATA_NEW_f(Any* p0, Any* p1) { return FastCall<BOOL>(0xec10618c9c4b405d, p0, p1); }
	void SET_NETWORK_ID_CAN_MIGRATE(int netId, BOOL toggle) { Call<void>(0x81b994b168b951c6, netId, toggle); }
	void SET_NETWORK_ID_CAN_MIGRATE_f(int netId, BOOL toggle) { FastCall<void>(0x81b994b168b951c6, netId, toggle); }
	void SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(int netId, BOOL toggle) { Call<void>(0xa76be23e61911a7d, netId, toggle); }
	void SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES_f(int netId, BOOL toggle) { FastCall<void>(0xa76be23e61911a7d, netId, toggle); }
	void SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(int netId, Player player, BOOL toggle) { Call<void>(0xaba2fff6a244e340, netId, player, toggle); }
	void SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER_f(int netId, Player player, BOOL toggle) { FastCall<void>(0xaba2fff6a244e340, netId, player, toggle); }
	void SET_NETWORK_ID_CAN_BE_REASSIGNED(int netId, BOOL toggle) { Call<void>(0xdcac72c1a58e5278, netId, toggle); }
	void SET_NETWORK_ID_CAN_BE_REASSIGNED_f(int netId, BOOL toggle) { FastCall<void>(0xdcac72c1a58e5278, netId, toggle); }
	void NETWORK_SET_ENTITY_CAN_BLEND(Entity entity, BOOL toggle) { Call<void>(0xc445302a2057b574, entity, toggle); }
	void NETWORK_SET_ENTITY_CAN_BLEND_f(Entity entity, BOOL toggle) { FastCall<void>(0xc445302a2057b574, entity, toggle); }
	void NETWORK_SET_OBJECT_CAN_BLEND_WHEN_FIXED(Object object, BOOL toggle) { Call<void>(0x43b85c5c65e143de, object, toggle); }
	void NETWORK_SET_OBJECT_CAN_BLEND_WHEN_FIXED_f(Object object, BOOL toggle) { FastCall<void>(0x43b85c5c65e143de, object, toggle); }
	void NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(Entity entity, BOOL toggle) { Call<void>(0x178b09a78521c194, entity, toggle); }
	void NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS_f(Entity entity, BOOL toggle) { FastCall<void>(0x178b09a78521c194, entity, toggle); }
	void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE(int netId, BOOL p1, BOOL p2) { Call<void>(0xd922ba752db6bcc1, netId, p1, p2); }
	void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_f(int netId, BOOL p1, BOOL p2) { FastCall<void>(0xd922ba752db6bcc1, netId, p1, p2); }
	void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_HACK(int netId, BOOL p1, BOOL p2) { Call<void>(0xb976889311d283df, netId, p1, p2); }
	void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_HACK_f(int netId, BOOL p1, BOOL p2) { FastCall<void>(0xb976889311d283df, netId, p1, p2); }
	void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_REMAIN_HACK(Any p0, Any p1, Any p2) { Call<void>(0x8e3539b6531cde96, p0, p1, p2); }
	void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_REMAIN_HACK_f(Any p0, Any p1, Any p2) { FastCall<void>(0x8e3539b6531cde96, p0, p1, p2); }
	void SET_NETWORK_CUTSCENE_ENTITIES(BOOL toggle) { Call<void>(0xea1d8b907aa1b728, toggle); }
	void SET_NETWORK_CUTSCENE_ENTITIES_f(BOOL toggle) { FastCall<void>(0xea1d8b907aa1b728, toggle); }
	BOOL ARE_CUTSCENE_ENTITIES_NETWORKED() { return Call<BOOL>(0xb946bcb070b1d379); }
	BOOL ARE_CUTSCENE_ENTITIES_NETWORKED_f() { return FastCall<BOOL>(0xb946bcb070b1d379); }
	void SET_NETWORK_ID_PASS_CONTROL_IN_TUTORIAL(int netId, BOOL state) { Call<void>(0xd54efdfd02cc927e, netId, state); }
	void SET_NETWORK_ID_PASS_CONTROL_IN_TUTORIAL_f(int netId, BOOL state) { FastCall<void>(0xd54efdfd02cc927e, netId, state); }
	BOOL IS_NETWORK_ID_OWNED_BY_PARTICIPANT(int netId) { return Call<BOOL>(0x43fd8f4c361ae83, netId); }
	BOOL IS_NETWORK_ID_OWNED_BY_PARTICIPANT_f(int netId) { return FastCall<BOOL>(0x43fd8f4c361ae83, netId); }
	void SET_REMOTE_PLAYER_VISIBLE_IN_CUTSCENE(Player player, BOOL locallyVisible) { Call<void>(0x3cf5626773f25975, player, locallyVisible); }
	void SET_REMOTE_PLAYER_VISIBLE_IN_CUTSCENE_f(Player player, BOOL locallyVisible) { FastCall<void>(0x3cf5626773f25975, player, locallyVisible); }
	void SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(BOOL p0, BOOL p1) { Call<void>(0xc004eced8cb6406a, p0, p1); }
	void SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE_f(BOOL p0, BOOL p1) { FastCall<void>(0xc004eced8cb6406a, p0, p1); }
	void SET_LOCAL_PLAYER_INVISIBLE_LOCALLY(BOOL bIncludePlayersVehicle) { Call<void>(0x47e5a5d965b23399, bIncludePlayersVehicle); }
	void SET_LOCAL_PLAYER_INVISIBLE_LOCALLY_f(BOOL bIncludePlayersVehicle) { FastCall<void>(0x47e5a5d965b23399, bIncludePlayersVehicle); }
	void SET_LOCAL_PLAYER_VISIBLE_LOCALLY(BOOL bIncludePlayersVehicle) { Call<void>(0x1ffee8b151fcbc1e, bIncludePlayersVehicle); }
	void SET_LOCAL_PLAYER_VISIBLE_LOCALLY_f(BOOL bIncludePlayersVehicle) { FastCall<void>(0x1ffee8b151fcbc1e, bIncludePlayersVehicle); }
	void SET_PLAYER_INVISIBLE_LOCALLY(Player player, BOOL bIncludePlayersVehicle) { Call<void>(0x661d7ffa453d86e5, player, bIncludePlayersVehicle); }
	void SET_PLAYER_INVISIBLE_LOCALLY_f(Player player, BOOL bIncludePlayersVehicle) { FastCall<void>(0x661d7ffa453d86e5, player, bIncludePlayersVehicle); }
	void SET_PLAYER_VISIBLE_LOCALLY(Player player, BOOL bIncludePlayersVehicle) { Call<void>(0x248e48d1da9c726a, player, bIncludePlayersVehicle); }
	void SET_PLAYER_VISIBLE_LOCALLY_f(Player player, BOOL bIncludePlayersVehicle) { FastCall<void>(0x248e48d1da9c726a, player, bIncludePlayersVehicle); }
	void FADE_OUT_LOCAL_PLAYER(BOOL p0) { Call<void>(0xa30057beb3cf1729, p0); }
	void FADE_OUT_LOCAL_PLAYER_f(BOOL p0) { FastCall<void>(0xa30057beb3cf1729, p0); }
	void NETWORK_FADE_OUT_ENTITY(Entity entity, BOOL normal, BOOL slow) { Call<void>(0xdb1b2e83e54f9386, entity, normal, slow); }
	void NETWORK_FADE_OUT_ENTITY_f(Entity entity, BOOL normal, BOOL slow) { FastCall<void>(0xdb1b2e83e54f9386, entity, normal, slow); }
	void NETWORK_FADE_IN_ENTITY(Entity entity, BOOL state, Any p2) { Call<void>(0xb47cba9d654ff08b, entity, state, p2); }
	void NETWORK_FADE_IN_ENTITY_f(Entity entity, BOOL state, Any p2) { FastCall<void>(0xb47cba9d654ff08b, entity, state, p2); }
	BOOL NETWORK_IS_PLAYER_FADING(Player player) { return Call<BOOL>(0x7d72c581417b7b13, player); }
	BOOL NETWORK_IS_PLAYER_FADING_f(Player player) { return FastCall<BOOL>(0x7d72c581417b7b13, player); }
	BOOL NETWORK_IS_ENTITY_FADING(Entity entity) { return Call<BOOL>(0x61f6f6860ca6bd1, entity); }
	BOOL NETWORK_IS_ENTITY_FADING_f(Entity entity) { return FastCall<BOOL>(0x61f6f6860ca6bd1, entity); }
	BOOL IS_PLAYER_IN_CUTSCENE(Player player) { return Call<BOOL>(0x46ef112645b7ae3b, player); }
	BOOL IS_PLAYER_IN_CUTSCENE_f(Player player) { return FastCall<BOOL>(0x46ef112645b7ae3b, player); }
	void SET_ENTITY_VISIBLE_IN_CUTSCENE(Any p0, BOOL p1, BOOL p2) { Call<void>(0x30020c3af5cca4b8, p0, p1, p2); }
	void SET_ENTITY_VISIBLE_IN_CUTSCENE_f(Any p0, BOOL p1, BOOL p2) { FastCall<void>(0x30020c3af5cca4b8, p0, p1, p2); }
	void SET_ENTITY_LOCALLY_INVISIBLE(Entity entity) { Call<void>(0xc7c3d21009acc627, entity); }
	void SET_ENTITY_LOCALLY_INVISIBLE_f(Entity entity) { FastCall<void>(0xc7c3d21009acc627, entity); }
	void SET_ENTITY_LOCALLY_VISIBLE(Entity entity) { Call<void>(0x4ca95c664c6e516c, entity); }
	void SET_ENTITY_LOCALLY_VISIBLE_f(Entity entity) { FastCall<void>(0x4ca95c664c6e516c, entity); }
	BOOL IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID(int netID) { return Call<BOOL>(0x41737f3a0907b6d5, netID); }
	BOOL IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID_f(int netID) { return FastCall<BOOL>(0x41737f3a0907b6d5, netID); }
	void ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID(int netID, BOOL toggle) { Call<void>(0xf44695f57ec52d61, netID, toggle); }
	void ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID_f(int netID, BOOL toggle) { FastCall<void>(0xf44695f57ec52d61, netID, toggle); }
	BOOL IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER(Player player) { return Call<BOOL>(0xb837be847c4f7d4a, player); }
	BOOL IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER_f(Player player) { return FastCall<BOOL>(0xb837be847c4f7d4a, player); }
	void ACTIVATE_DAMAGE_TRACKER_ON_PLAYER(Player player, BOOL toggle) { Call<void>(0x83240b939f0619d6, player, toggle); }
	void ACTIVATE_DAMAGE_TRACKER_ON_PLAYER_f(Player player, BOOL toggle) { FastCall<void>(0x83240b939f0619d6, player, toggle); }
	BOOL IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE(float p0, float p1, float p2, float p3) { return Call<BOOL>(0xb9818c6f57505ff1, p0, p1, p2, p3); }
	BOOL IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE_f(float p0, float p1, float p2, float p3) { return FastCall<BOOL>(0xb9818c6f57505ff1, p0, p1, p2, p3); }
	BOOL IS_SPHERE_VISIBLE_TO_PLAYER(Any p0, float p1, float p2, float p3, float p4) { return Call<BOOL>(0x2572cf5719e5a2fb, p0, p1, p2, p3, p4); }
	BOOL IS_SPHERE_VISIBLE_TO_PLAYER_f(Any p0, float p1, float p2, float p3, float p4) { return FastCall<BOOL>(0x2572cf5719e5a2fb, p0, p1, p2, p3, p4); }
	void RESERVE_NETWORK_MISSION_OBJECTS(int amount) { Call<void>(0xd6a5ce5466f1c24d, amount); }
	void RESERVE_NETWORK_MISSION_OBJECTS_f(int amount) { FastCall<void>(0xd6a5ce5466f1c24d, amount); }
	void RESERVE_NETWORK_MISSION_PEDS(int amount) { Call<void>(0xa6cd1ba8eb5b1e8b, amount); }
	void RESERVE_NETWORK_MISSION_PEDS_f(int amount) { FastCall<void>(0xa6cd1ba8eb5b1e8b, amount); }
	void RESERVE_NETWORK_MISSION_VEHICLES(int amount) { Call<void>(0xfe13fc65e9f0008e, amount); }
	void RESERVE_NETWORK_MISSION_VEHICLES_f(int amount) { FastCall<void>(0xfe13fc65e9f0008e, amount); }
	void RESERVE_LOCAL_NETWORK_MISSION_OBJECTS(int amount) { Call<void>(0x1d712ad54c540399, amount); }
	void RESERVE_LOCAL_NETWORK_MISSION_OBJECTS_f(int amount) { FastCall<void>(0x1d712ad54c540399, amount); }
	void RESERVE_LOCAL_NETWORK_MISSION_PEDS(int amount) { Call<void>(0xd11738fdd54540bf, amount); }
	void RESERVE_LOCAL_NETWORK_MISSION_PEDS_f(int amount) { FastCall<void>(0xd11738fdd54540bf, amount); }
	void RESERVE_LOCAL_NETWORK_MISSION_VEHICLES(int amount) { Call<void>(0x90b43001b0d5e8c2, amount); }
	void RESERVE_LOCAL_NETWORK_MISSION_VEHICLES_f(int amount) { FastCall<void>(0x90b43001b0d5e8c2, amount); }
	BOOL CAN_REGISTER_MISSION_OBJECTS(int amount) { return Call<BOOL>(0x868acc3888b8bd34, amount); }
	BOOL CAN_REGISTER_MISSION_OBJECTS_f(int amount) { return FastCall<BOOL>(0x868acc3888b8bd34, amount); }
	BOOL CAN_REGISTER_MISSION_PEDS(int amount) { return Call<BOOL>(0x7dcab144725d6504, amount); }
	BOOL CAN_REGISTER_MISSION_PEDS_f(int amount) { return FastCall<BOOL>(0x7dcab144725d6504, amount); }
	BOOL CAN_REGISTER_MISSION_VEHICLES(int amount) { return Call<BOOL>(0x4acebb0601086287, amount); }
	BOOL CAN_REGISTER_MISSION_VEHICLES_f(int amount) { return FastCall<BOOL>(0x4acebb0601086287, amount); }
	BOOL CAN_REGISTER_MISSION_PICKUPS(int amount) { return Call<BOOL>(0x868acc38c9313d97, amount); }
	BOOL CAN_REGISTER_MISSION_PICKUPS_f(int amount) { return FastCall<BOOL>(0x868acc38c9313d97, amount); }
	BOOL CAN_REGISTER_MISSION_DOORS(Any p0) { return Call<BOOL>(0x3b8b7749d8aad6a5, p0); }
	BOOL CAN_REGISTER_MISSION_DOORS_f(Any p0) { return FastCall<BOOL>(0x3b8b7749d8aad6a5, p0); }
	BOOL CAN_REGISTER_MISSION_ENTITIES(int ped_amt, int vehicle_amt, int object_amt, int pickup_amt) { return Call<BOOL>(0x4aceba9b0bae5381, ped_amt, vehicle_amt, object_amt, pickup_amt); }
	BOOL CAN_REGISTER_MISSION_ENTITIES_f(int ped_amt, int vehicle_amt, int object_amt, int pickup_amt) { return FastCall<BOOL>(0x4aceba9b0bae5381, ped_amt, vehicle_amt, object_amt, pickup_amt); }
	int GET_NUM_RESERVED_MISSION_OBJECTS(BOOL p0, Any p1) { return Call<int>(0xf9f116b4b5e7892c, p0, p1); }
	int GET_NUM_RESERVED_MISSION_OBJECTS_f(BOOL p0, Any p1) { return FastCall<int>(0xf9f116b4b5e7892c, p0, p1); }
	int GET_NUM_RESERVED_MISSION_PEDS(BOOL p0, Any p1) { return Call<int>(0xdffb45f30c2adc0c, p0, p1); }
	int GET_NUM_RESERVED_MISSION_PEDS_f(BOOL p0, Any p1) { return FastCall<int>(0xdffb45f30c2adc0c, p0, p1); }
	int GET_NUM_RESERVED_MISSION_VEHICLES(BOOL p0, Any p1) { return Call<int>(0x4431c00f79b3158f, p0, p1); }
	int GET_NUM_RESERVED_MISSION_VEHICLES_f(BOOL p0, Any p1) { return FastCall<int>(0x4431c00f79b3158f, p0, p1); }
	int GET_NUM_CREATED_MISSION_OBJECTS(BOOL p0) { return Call<int>(0x936b0a192df10e48, p0); }
	int GET_NUM_CREATED_MISSION_OBJECTS_f(BOOL p0) { return FastCall<int>(0x936b0a192df10e48, p0); }
	int GET_NUM_CREATED_MISSION_PEDS(BOOL p0) { return Call<int>(0xa3bd6169b048cc70, p0); }
	int GET_NUM_CREATED_MISSION_PEDS_f(BOOL p0) { return FastCall<int>(0xa3bd6169b048cc70, p0); }
	int GET_NUM_CREATED_MISSION_VEHICLES(BOOL p0) { return Call<int>(0xd9f6393a02da33f3, p0); }
	int GET_NUM_CREATED_MISSION_VEHICLES_f(BOOL p0) { return FastCall<int>(0xd9f6393a02da33f3, p0); }
	void GET_RESERVED_MISSION_ENTITIES_IN_AREA(float x, float y, float z, Any p3, Any* out1, Any* out2, Any* out3) { Call<void>(0x654c4351b02851ca, x, y, z, p3, out1, out2, out3); }
	void GET_RESERVED_MISSION_ENTITIES_IN_AREA_f(float x, float y, float z, Any p3, Any* out1, Any* out2, Any* out3) { FastCall<void>(0x654c4351b02851ca, x, y, z, p3, out1, out2, out3); }
	int GET_MAX_NUM_NETWORK_OBJECTS() { return Call<int>(0x443fa6d90b25ab66); }
	int GET_MAX_NUM_NETWORK_OBJECTS_f() { return FastCall<int>(0x443fa6d90b25ab66); }
	int GET_MAX_NUM_NETWORK_PEDS() { return Call<int>(0x1e351746a6e87412); }
	int GET_MAX_NUM_NETWORK_PEDS_f() { return FastCall<int>(0x1e351746a6e87412); }
	int GET_MAX_NUM_NETWORK_VEHICLES() { return Call<int>(0x43b53475cc393a95); }
	int GET_MAX_NUM_NETWORK_VEHICLES_f() { return FastCall<int>(0x43b53475cc393a95); }
	int GET_MAX_NUM_NETWORK_PICKUPS() { return Call<int>(0x443fa6d94b9e2bc9); }
	int GET_MAX_NUM_NETWORK_PICKUPS_f() { return FastCall<int>(0x443fa6d94b9e2bc9); }
	void NETWORK_SET_OBJECT_SCOPE_DISTANCE(Object object, float range) { Call<void>(0x5550832dba8bdf72, object, range); }
	void NETWORK_SET_OBJECT_SCOPE_DISTANCE_f(Object object, float range) { FastCall<void>(0x5550832dba8bdf72, object, range); }
	void NETWORK_ALLOW_CLONING_WHILE_IN_TUTORIAL(Any p0, Any p1) { Call<void>(0x8df02ed5aa1a42fe, p0, p1); }
	void NETWORK_ALLOW_CLONING_WHILE_IN_TUTORIAL_f(Any p0, Any p1) { FastCall<void>(0x8df02ed5aa1a42fe, p0, p1); }
	void NETWORK_SET_TASK_CUTSCENE_INSCOPE_MULTIPLER(Any p0) { Call<void>(0x37d010cf67872c09, p0); }
	void NETWORK_SET_TASK_CUTSCENE_INSCOPE_MULTIPLER_f(Any p0) { FastCall<void>(0x37d010cf67872c09, p0); }
	void _NETWORK_HIDE_ENTITY_IN_TUTORIAL_SESSION(int netHandle, BOOL hide) { Call<void>(0x731059f1fc8dbdc0, netHandle, hide); }
	void _NETWORK_HIDE_ENTITY_IN_TUTORIAL_SESSION_f(int netHandle, BOOL hide) { FastCall<void>(0x731059f1fc8dbdc0, netHandle, hide); }
	int GET_NETWORK_TIME() { return Call<int>(0x90bdcac9f1b674c7); }
	int GET_NETWORK_TIME_f() { return FastCall<int>(0x90bdcac9f1b674c7); }
	int GET_NETWORK_TIME_ACCURATE() { return Call<int>(0x19407e677c5ed76c); }
	int GET_NETWORK_TIME_ACCURATE_f() { return FastCall<int>(0x19407e677c5ed76c); }
	BOOL HAS_NETWORK_TIME_STARTED() { return Call<BOOL>(0x4475c2e1b230a025); }
	BOOL HAS_NETWORK_TIME_STARTED_f() { return FastCall<BOOL>(0x4475c2e1b230a025); }
	int GET_TIME_OFFSET(int timeA, int timeB) { return Call<int>(0x785a02d633090abc, timeA, timeB); }
	int GET_TIME_OFFSET_f(int timeA, int timeB) { return FastCall<int>(0x785a02d633090abc, timeA, timeB); }
	BOOL IS_TIME_LESS_THAN(int timeA, int timeB) { return Call<BOOL>(0x45b83255724a114a, timeA, timeB); }
	BOOL IS_TIME_LESS_THAN_f(int timeA, int timeB) { return FastCall<BOOL>(0x45b83255724a114a, timeA, timeB); }
	BOOL IS_TIME_MORE_THAN(int timeA, int timeB) { return Call<BOOL>(0x45b8335bc8902d0e, timeA, timeB); }
	BOOL IS_TIME_MORE_THAN_f(int timeA, int timeB) { return FastCall<BOOL>(0x45b8335bc8902d0e, timeA, timeB); }
	BOOL IS_TIME_EQUAL_TO(int timeA, int timeB) { return Call<BOOL>(0x3c0e3301b1f7fe63, timeA, timeB); }
	BOOL IS_TIME_EQUAL_TO_f(int timeA, int timeB) { return FastCall<BOOL>(0x3c0e3301b1f7fe63, timeA, timeB); }
	int GET_TIME_DIFFERENCE(int timeA, int timeB) { return Call<int>(0xe35270d1abc616e6, timeA, timeB); }
	int GET_TIME_DIFFERENCE_f(int timeA, int timeB) { return FastCall<int>(0xe35270d1abc616e6, timeA, timeB); }
	const char* GET_TIME_AS_STRING(int time) { return Call<char*>(0x72b012195f38bdf5, time); }
	const char* GET_TIME_AS_STRING_f(int time) { return FastCall<char*>(0x72b012195f38bdf5, time); }
	char* GET_CLOUD_TIME_AS_STRING() { Call<char*>(0x3a736908d7a9369f); }
	char* GET_CLOUD_TIME_AS_STRING_f() { FastCall<char*>(0x3a736908d7a9369f); }
	int GET_CLOUD_TIME_AS_INT() { return Call<int>(0xf88d39798f47f401); }
	int GET_CLOUD_TIME_AS_INT_f() { return FastCall<int>(0xf88d39798f47f401); }
	void CONVERT_POSIX_TIME(int posixTime, Any* timeStructure) { Call<void>(0x19be8472c5ef8955, posixTime, timeStructure); }
	void CONVERT_POSIX_TIME_f(int posixTime, Any* timeStructure) { FastCall<void>(0x19be8472c5ef8955, posixTime, timeStructure); }
	void NETWORK_SET_IN_SPECTATOR_MODE(BOOL toggle, Ped playerPed) { Call<void>(0xec9b16f6b58e1b3f, toggle, playerPed); }
	void NETWORK_SET_IN_SPECTATOR_MODE_f(BOOL toggle, Ped playerPed) { FastCall<void>(0xec9b16f6b58e1b3f, toggle, playerPed); }
	void NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED(BOOL toggle, Ped playerPed, BOOL p2) { Call<void>(0xecf944b44eb5aa39, toggle, playerPed, p2); }
	void NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED_f(BOOL toggle, Ped playerPed, BOOL p2) { FastCall<void>(0xecf944b44eb5aa39, toggle, playerPed, p2); }
	void NETWORK_SET_IN_FREE_CAM_MODE(BOOL toggle) { Call<void>(0x69b81cac495686fa, toggle); }
	void NETWORK_SET_IN_FREE_CAM_MODE_f(BOOL toggle) { FastCall<void>(0x69b81cac495686fa, toggle); }
	void NETWORK_SET_ANTAGONISTIC_TO_PLAYER(BOOL toggle, Player player) { Call<void>(0xde36c26c390a22cc, toggle, player); }
	void NETWORK_SET_ANTAGONISTIC_TO_PLAYER_f(BOOL toggle, Player player) { FastCall<void>(0xde36c26c390a22cc, toggle, player); }
	BOOL NETWORK_IS_IN_SPECTATOR_MODE() { return Call<BOOL>(0x28c8c95a4fb29b29); }
	BOOL NETWORK_IS_IN_SPECTATOR_MODE_f() { return FastCall<BOOL>(0x28c8c95a4fb29b29); }
	void NETWORK_SET_IN_MP_CUTSCENE(BOOL p0, BOOL p1) { Call<void>(0x9d17a98b118181fa, p0, p1); }
	void NETWORK_SET_IN_MP_CUTSCENE_f(BOOL p0, BOOL p1) { FastCall<void>(0x9d17a98b118181fa, p0, p1); }
	BOOL NETWORK_IS_IN_MP_CUTSCENE() { return Call<BOOL>(0xd2cf0c96ebd1a50); }
	BOOL NETWORK_IS_IN_MP_CUTSCENE_f() { return FastCall<BOOL>(0xd2cf0c96ebd1a50); }
	BOOL NETWORK_IS_PLAYER_IN_MP_CUTSCENE(Player player) { return Call<BOOL>(0xa7090b0e81da8f66, player); }
	BOOL NETWORK_IS_PLAYER_IN_MP_CUTSCENE_f(Player player) { return FastCall<BOOL>(0xa7090b0e81da8f66, player); }
	void NETWORK_HIDE_PROJECTILE_IN_CUTSCENE() { Call<void>(0x82ab13cee8ff20fa); }
	void NETWORK_HIDE_PROJECTILE_IN_CUTSCENE_f() { FastCall<void>(0x82ab13cee8ff20fa); }
	void SET_NETWORK_VEHICLE_RESPOT_TIMER(int netId, int time, Any p2, Any p3) { Call<void>(0xdbdd64002560d6dc, netId, time, p2, p3); }
	void SET_NETWORK_VEHICLE_RESPOT_TIMER_f(int netId, int time, Any p2, Any p3) { FastCall<void>(0xdbdd64002560d6dc, netId, time, p2, p3); }
	BOOL IS_NETWORK_VEHICLE_RUNNING_RESPOT_TIMER(int networkID) { return Call<BOOL>(0xfa31355fdc315094, networkID); }
	BOOL IS_NETWORK_VEHICLE_RUNNING_RESPOT_TIMER_f(int networkID) { return FastCall<BOOL>(0xfa31355fdc315094, networkID); }
	void SET_NETWORK_VEHICLE_AS_GHOST(Vehicle vehicle, BOOL toggle) { Call<void>(0x87da44eb0f488f63, vehicle, toggle); }
	void SET_NETWORK_VEHICLE_AS_GHOST_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x87da44eb0f488f63, vehicle, toggle); }
	void SET_NETWORK_VEHICLE_MAX_POSITION_DELTA_MULTIPLIER(Vehicle vehicle, float multiplier) { Call<void>(0x7a44589e08105542, vehicle, multiplier); }
	void SET_NETWORK_VEHICLE_MAX_POSITION_DELTA_MULTIPLIER_f(Vehicle vehicle, float multiplier) { FastCall<void>(0x7a44589e08105542, vehicle, multiplier); }
	void SET_NETWORK_ENABLE_HIGH_SPEED_EDGE_FALL_DETECTION(Vehicle vehicle, BOOL toggle) { Call<void>(0xa1650e847ab07c7c, vehicle, toggle); }
	void SET_NETWORK_ENABLE_HIGH_SPEED_EDGE_FALL_DETECTION_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xa1650e847ab07c7c, vehicle, toggle); }
	void SET_LOCAL_PLAYER_AS_GHOST(BOOL toggle, BOOL p1) { Call<void>(0xde1c829a7e8a8f, toggle, p1); }
	void SET_LOCAL_PLAYER_AS_GHOST_f(BOOL toggle, BOOL p1) { FastCall<void>(0xde1c829a7e8a8f, toggle, p1); }
	BOOL IS_ENTITY_A_GHOST(Entity entity) { return Call<BOOL>(0xa3f62d48586b784a, entity); }
	BOOL IS_ENTITY_A_GHOST_f(Entity entity) { return FastCall<BOOL>(0xa3f62d48586b784a, entity); }
	void SET_NON_PARTICIPANTS_OF_THIS_SCRIPT_AS_GHOSTS(BOOL p0) { Call<void>(0x7976c16559f6ad06, p0); }
	void SET_NON_PARTICIPANTS_OF_THIS_SCRIPT_AS_GHOSTS_f(BOOL p0) { FastCall<void>(0x7976c16559f6ad06, p0); }
	void SET_REMOTE_PLAYER_AS_GHOST(Player player, BOOL p1) { Call<void>(0xd81dfbb5f777aa64, player, p1); }
	void SET_REMOTE_PLAYER_AS_GHOST_f(Player player, BOOL p1) { FastCall<void>(0xd81dfbb5f777aa64, player, p1); }
	void SET_GHOST_ALPHA(int alpha) { Call<void>(0xe0b0f155916a0af1, alpha); }
	void SET_GHOST_ALPHA_f(int alpha) { FastCall<void>(0xe0b0f155916a0af1, alpha); }
	void RESET_GHOST_ALPHA() { Call<void>(0xeb81ea433423f45e); }
	void RESET_GHOST_ALPHA_f() { FastCall<void>(0xeb81ea433423f45e); }
	void SET_ENTITY_GHOSTED_FOR_GHOST_PLAYERS(Entity entity, BOOL toggle) { Call<void>(0x63aaf9ed0c03fafc, entity, toggle); }
	void SET_ENTITY_GHOSTED_FOR_GHOST_PLAYERS_f(Entity entity, BOOL toggle) { FastCall<void>(0x63aaf9ed0c03fafc, entity, toggle); }
	void SET_INVERT_GHOSTING(BOOL p0) { Call<void>(0x9ba98c8894f3bf3f, p0); }
	void SET_INVERT_GHOSTING_f(BOOL p0) { FastCall<void>(0x9ba98c8894f3bf3f, p0); }
	BOOL IS_ENTITY_IN_GHOST_COLLISION(Entity entity) { return Call<BOOL>(0x690e3a0284c4c12f, entity); }
	BOOL IS_ENTITY_IN_GHOST_COLLISION_f(Entity entity) { return FastCall<BOOL>(0x690e3a0284c4c12f, entity); }
	void _SET_FREEMODE_REPORT_DATA(Any* gamerHandle, Any* reportData) { Call<void>(0xd29541faac786ce1, gamerHandle, reportData); }
	void _SET_FREEMODE_REPORT_DATA_f(Any* gamerHandle, Any* reportData) { FastCall<void>(0xd29541faac786ce1, gamerHandle, reportData); }
	BOOL IS_OBJECT_REASSIGNMENT_IN_PROGRESS() { return Call<BOOL>(0xc2c0cd0d914d5173); }
	BOOL IS_OBJECT_REASSIGNMENT_IN_PROGRESS_f() { return FastCall<BOOL>(0xc2c0cd0d914d5173); }
	void USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(BOOL toggle) { Call<void>(0x67d18ef83a3aa510, toggle); }
	void USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR_f(BOOL toggle) { FastCall<void>(0x67d18ef83a3aa510, toggle); }
	int NETWORK_CREATE_SYNCHRONISED_SCENE(float x, float y, float z, float xRot, float yRot, float zRot, int rotationOrder, BOOL useOcclusionPortal, BOOL looped, float p9, float animTime, float p11) { return Call<int>(0xf1d64145fa2829ac, x, y, z, xRot, yRot, zRot, rotationOrder, useOcclusionPortal, looped, p9, animTime, p11); }
	int NETWORK_CREATE_SYNCHRONISED_SCENE_f(float x, float y, float z, float xRot, float yRot, float zRot, int rotationOrder, BOOL useOcclusionPortal, BOOL looped, float p9, float animTime, float p11) { return FastCall<int>(0xf1d64145fa2829ac, x, y, z, xRot, yRot, zRot, rotationOrder, useOcclusionPortal, looped, p9, animTime, p11); }
	void NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(Ped ped, int netScene, char* animDict, char* animnName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, Any p9) { Call<void>(0x94935e4df3e89cbf, ped, netScene, animDict, animnName, speed, speedMultiplier, duration, flag, playbackRate, p9); }
	void NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE_f(Ped ped, int netScene, char* animDict, char* animnName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, Any p9) { FastCall<void>(0x94935e4df3e89cbf, ped, netScene, animDict, animnName, speed, speedMultiplier, duration, flag, playbackRate, p9); }
	void NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE_WITH_IK(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { Call<void>(0x3e17ada4e6bcdbbb, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	void NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE_WITH_IK_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { FastCall<void>(0x3e17ada4e6bcdbbb, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	void NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(Entity entity, int netScene, char* animDict, char* animName, float speed, float speedMulitiplier, int flag) { Call<void>(0x32e64a8c8722a471, entity, netScene, animDict, animName, speed, speedMulitiplier, flag); }
	void NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE_f(Entity entity, int netScene, char* animDict, char* animName, float speed, float speedMulitiplier, int flag) { FastCall<void>(0x32e64a8c8722a471, entity, netScene, animDict, animName, speed, speedMulitiplier, flag); }
	void NETWORK_ADD_MAP_ENTITY_TO_SYNCHRONISED_SCENE(int netScene, Hash modelHash, float x, float y, float z, float p5, char* p6, float p7, float p8, int flags) { Call<void>(0x2e5fdaab2f660114, netScene, modelHash, x, y, z, p5, p6, p7, p8, flags); }
	void NETWORK_ADD_MAP_ENTITY_TO_SYNCHRONISED_SCENE_f(int netScene, Hash modelHash, float x, float y, float z, float p5, char* p6, float p7, float p8, int flags) { FastCall<void>(0x2e5fdaab2f660114, netScene, modelHash, x, y, z, p5, p6, p7, p8, flags); }
	void NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA(int netScene, char* animDict, char* animName) { Call<void>(0x67fb383eda439ddb, netScene, animDict, animName); }
	void NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA_f(int netScene, char* animDict, char* animName) { FastCall<void>(0x67fb383eda439ddb, netScene, animDict, animName); }
	void NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY(int netScene, Entity entity, int bone) { Call<void>(0x7ddb98a93506daab, netScene, entity, bone); }
	void NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY_f(int netScene, Entity entity, int bone) { FastCall<void>(0x7ddb98a93506daab, netScene, entity, bone); }
	void NETWORK_START_SYNCHRONISED_SCENE(int netScene) { Call<void>(0x3decf883583a00a8, netScene); }
	void NETWORK_START_SYNCHRONISED_SCENE_f(int netScene) { FastCall<void>(0x3decf883583a00a8, netScene); }
	void NETWORK_STOP_SYNCHRONISED_SCENE(int netScene) { Call<void>(0xd637a16060e3dca6, netScene); }
	void NETWORK_STOP_SYNCHRONISED_SCENE_f(int netScene) { FastCall<void>(0xd637a16060e3dca6, netScene); }
	int NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(int netId) { return Call<int>(0xaf960b72be1b2d20, netId); }
	int NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID_f(int netId) { return FastCall<int>(0xaf960b72be1b2d20, netId); }
	void NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA(int netScene) { Call<void>(0xa787e161959db126, netScene); }
	void NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA_f(int netScene) { FastCall<void>(0xa787e161959db126, netScene); }
	void NETWORK_ALLOW_REMOTE_SYNCED_SCENE_LOCAL_PLAYER_REQUESTS(Any p0) { Call<void>(0x33c9e2b89a17d968, p0); }
	void NETWORK_ALLOW_REMOTE_SYNCED_SCENE_LOCAL_PLAYER_REQUESTS_f(Any p0) { FastCall<void>(0x33c9e2b89a17d968, p0); }
	BOOL NETWORK_FIND_LARGEST_BUNCH_OF_PLAYERS(int p0, Any p1) { return Call<BOOL>(0x9ea45a29bbf4d41, p0, p1); }
	BOOL NETWORK_FIND_LARGEST_BUNCH_OF_PLAYERS_f(int p0, Any p1) { return FastCall<BOOL>(0x9ea45a29bbf4d41, p0, p1); }
	BOOL NETWORK_START_RESPAWN_SEARCH_FOR_PLAYER(Player player, float x, float y, float z, float radius, float p5, float p6, float p7, int flags) { return Call<BOOL>(0x355a08161e65e6c9, player, x, y, z, radius, p5, p6, p7, flags); }
	BOOL NETWORK_START_RESPAWN_SEARCH_FOR_PLAYER_f(Player player, float x, float y, float z, float radius, float p5, float p6, float p7, int flags) { return FastCall<BOOL>(0x355a08161e65e6c9, player, x, y, z, radius, p5, p6, p7, flags); }
	BOOL NETWORK_START_RESPAWN_SEARCH_IN_ANGLED_AREA_FOR_PLAYER(Player player, float x1, float y1, float z1, float x2, float y2, float z2, float width, float p8, float p9, float p10, int flags) { return Call<BOOL>(0x2503a2bc0e306263, player, x1, y1, z1, x2, y2, z2, width, p8, p9, p10, flags); }
	BOOL NETWORK_START_RESPAWN_SEARCH_IN_ANGLED_AREA_FOR_PLAYER_f(Player player, float x1, float y1, float z1, float x2, float y2, float z2, float width, float p8, float p9, float p10, int flags) { return FastCall<BOOL>(0x2503a2bc0e306263, player, x1, y1, z1, x2, y2, z2, width, p8, p9, p10, flags); }
	int NETWORK_QUERY_RESPAWN_RESULTS(Any* p0) { return Call<int>(0xa37d6c0582606e97, p0); }
	int NETWORK_QUERY_RESPAWN_RESULTS_f(Any* p0) { return FastCall<int>(0xa37d6c0582606e97, p0); }
	void NETWORK_CANCEL_RESPAWN_SEARCH() { Call<void>(0x2105533c4b5a15b3); }
	void NETWORK_CANCEL_RESPAWN_SEARCH_f() { FastCall<void>(0x2105533c4b5a15b3); }
	void NETWORK_GET_RESPAWN_RESULT(int randomInt, Vector3* coordinates, float* heading) { Call<void>(0xc4aa3b495c48c92e, randomInt, coordinates, heading); }
	void NETWORK_GET_RESPAWN_RESULT_f(int randomInt, Vector3* coordinates, float* heading) { FastCall<void>(0xc4aa3b495c48c92e, randomInt, coordinates, heading); }
	int NETWORK_GET_RESPAWN_RESULT_FLAGS(int p0) { return Call<int>(0x558aa827f2470816, p0); }
	int NETWORK_GET_RESPAWN_RESULT_FLAGS_f(int p0) { return FastCall<int>(0x558aa827f2470816, p0); }
	void NETWORK_START_SOLO_TUTORIAL_SESSION() { Call<void>(0x9e83891a30023307); }
	void NETWORK_START_SOLO_TUTORIAL_SESSION_f() { FastCall<void>(0x9e83891a30023307); }
	void NETWORK_ALLOW_GANG_TO_JOIN_TUTORIAL_SESSION(int teamId, int instanceId) { Call<void>(0x6ad3b1e62364d0ab, teamId, instanceId); }
	void NETWORK_ALLOW_GANG_TO_JOIN_TUTORIAL_SESSION_f(int teamId, int instanceId) { FastCall<void>(0x6ad3b1e62364d0ab, teamId, instanceId); }
	void NETWORK_END_TUTORIAL_SESSION() { Call<void>(0x5f8629ec90bf2a); }
	void NETWORK_END_TUTORIAL_SESSION_f() { FastCall<void>(0x5f8629ec90bf2a); }
	BOOL NETWORK_IS_IN_TUTORIAL_SESSION() { return Call<BOOL>(0xb0abc9b8b235212b); }
	BOOL NETWORK_IS_IN_TUTORIAL_SESSION_f() { return FastCall<BOOL>(0xb0abc9b8b235212b); }
	BOOL NETWORK_WAITING_POP_CLEAR_TUTORIAL_SESSION() { return Call<BOOL>(0x19409260b927b158); }
	BOOL NETWORK_WAITING_POP_CLEAR_TUTORIAL_SESSION_f() { return FastCall<BOOL>(0x19409260b927b158); }
	BOOL NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING() { return Call<BOOL>(0xc8694c8eb820ff8e); }
	BOOL NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING_f() { return FastCall<BOOL>(0xc8694c8eb820ff8e); }
	int NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE(Player player) { return Call<int>(0x17f494cac3c0329b, player); }
	int NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE_f(Player player) { return FastCall<int>(0x17f494cac3c0329b, player); }
	BOOL NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(Player player, int index) { return Call<BOOL>(0x5443b2b7191397fd, player, index); }
	BOOL NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION_f(Player player, int index) { return FastCall<BOOL>(0x5443b2b7191397fd, player, index); }
	void NETWORK_BLOCK_PROXY_MIGRATION_BETWEEN_TUTORIAL_SESSIONS(Any p0) { Call<void>(0x2d86c380926b7382, p0); }
	void NETWORK_BLOCK_PROXY_MIGRATION_BETWEEN_TUTORIAL_SESSIONS_f(Any p0) { FastCall<void>(0x2d86c380926b7382, p0); }
	void NETWORK_CONCEAL_PLAYER(Player player, BOOL toggle, BOOL p2) { Call<void>(0x586e3dd6bf4d6702, player, toggle, p2); }
	void NETWORK_CONCEAL_PLAYER_f(Player player, BOOL toggle, BOOL p2) { FastCall<void>(0x586e3dd6bf4d6702, player, toggle, p2); }
	BOOL NETWORK_IS_PLAYER_CONCEALED(Player player) { return Call<BOOL>(0x8f15daab385b4434, player); }
	BOOL NETWORK_IS_PLAYER_CONCEALED_f(Player player) { return FastCall<BOOL>(0x8f15daab385b4434, player); }
	void NETWORK_CONCEAL_ENTITY(Entity entity, BOOL toggle) { Call<void>(0x586e3dd6acacb004, entity, toggle); }
	void NETWORK_CONCEAL_ENTITY_f(Entity entity, BOOL toggle) { FastCall<void>(0x586e3dd6acacb004, entity, toggle); }
	BOOL NETWORK_IS_ENTITY_CONCEALED(Entity entity) { return Call<BOOL>(0x8425a19f9bbcb2b6, entity); }
	BOOL NETWORK_IS_ENTITY_CONCEALED_f(Entity entity) { return FastCall<BOOL>(0x8425a19f9bbcb2b6, entity); }
	void NETWORK_OVERRIDE_CLOCK_TIME(int hours, int minutes, int seconds) { Call<void>(0x9a5dc48c5a7b7720, hours, minutes, seconds); }
	void NETWORK_OVERRIDE_CLOCK_TIME_f(int hours, int minutes, int seconds) { FastCall<void>(0x9a5dc48c5a7b7720, hours, minutes, seconds); }
	void NETWORK_OVERRIDE_CLOCK_RATE(int ms) { Call<void>(0x9a5dc48c5a7a7133, ms); }
	void NETWORK_OVERRIDE_CLOCK_RATE_f(int ms) { FastCall<void>(0x9a5dc48c5a7a7133, ms); }
	void NETWORK_CLEAR_CLOCK_TIME_OVERRIDE() { Call<void>(0x3f2c5799b93ba26a); }
	void NETWORK_CLEAR_CLOCK_TIME_OVERRIDE_f() { FastCall<void>(0x3f2c5799b93ba26a); }
	BOOL NETWORK_IS_CLOCK_TIME_OVERRIDDEN() { return Call<BOOL>(0xc4c5346178c2cbd1); }
	BOOL NETWORK_IS_CLOCK_TIME_OVERRIDDEN_f() { return FastCall<BOOL>(0xc4c5346178c2cbd1); }
	int NETWORK_ADD_ENTITY_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { return Call<int>(0xb106a8605059207a, x1, y1, z1, x2, y2, z2); }
	int NETWORK_ADD_ENTITY_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<int>(0xb106a8605059207a, x1, y1, z1, x2, y2, z2); }
	int NETWORK_ADD_ENTITY_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width) { return Call<int>(0xf8ce18aa79f34d8e, x1, y1, z1, x2, y2, z2, width); }
	int NETWORK_ADD_ENTITY_ANGLED_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, float width) { return FastCall<int>(0xf8ce18aa79f34d8e, x1, y1, z1, x2, y2, z2, width); }
	int NETWORK_ADD_CLIENT_ENTITY_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { return Call<int>(0x2646a21423c3e6c4, x1, y1, z1, x2, y2, z2); }
	int NETWORK_ADD_CLIENT_ENTITY_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<int>(0x2646a21423c3e6c4, x1, y1, z1, x2, y2, z2); }
	int NETWORK_ADD_CLIENT_ENTITY_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float radius) { return Call<int>(0xe010f1020b14c004, x1, y1, z1, x2, y2, z2, radius); }
	int NETWORK_ADD_CLIENT_ENTITY_ANGLED_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, float radius) { return FastCall<int>(0xe010f1020b14c004, x1, y1, z1, x2, y2, z2, radius); }
	BOOL NETWORK_REMOVE_ENTITY_AREA(int areaHandle) { return Call<BOOL>(0x3b622d48eecc1dff, areaHandle); }
	BOOL NETWORK_REMOVE_ENTITY_AREA_f(int areaHandle) { return FastCall<BOOL>(0x3b622d48eecc1dff, areaHandle); }
	BOOL NETWORK_ENTITY_AREA_DOES_EXIST(int areaHandle) { return Call<BOOL>(0xbc85d9d735252578, areaHandle); }
	BOOL NETWORK_ENTITY_AREA_DOES_EXIST_f(int areaHandle) { return FastCall<BOOL>(0xbc85d9d735252578, areaHandle); }
	BOOL NETWORK_ENTITY_AREA_HAVE_ALL_REPLIED(int areaHandle) { return Call<BOOL>(0xcab4099d8d8d166b, areaHandle); }
	BOOL NETWORK_ENTITY_AREA_HAVE_ALL_REPLIED_f(int areaHandle) { return FastCall<BOOL>(0xcab4099d8d8d166b, areaHandle); }
	BOOL NETWORK_ENTITY_AREA_IS_OCCUPIED(int areaHandle) { return Call<BOOL>(0xd4446487cbcbf30c, areaHandle); }
	BOOL NETWORK_ENTITY_AREA_IS_OCCUPIED_f(int areaHandle) { return FastCall<BOOL>(0xd4446487cbcbf30c, areaHandle); }
	void NETWORK_USE_HIGH_PRECISION_BLENDING(int netID, BOOL toggle) { Call<void>(0x6e39c1f65d2a14e6, netID, toggle); }
	void NETWORK_USE_HIGH_PRECISION_BLENDING_f(int netID, BOOL toggle) { FastCall<void>(0x6e39c1f65d2a14e6, netID, toggle); }
	void NETWORK_SET_CUSTOM_ARENA_BALL_PARAMS(int netId) { Call<void>(0xcfd32863a8ed1f0e, netId); }
	void NETWORK_SET_CUSTOM_ARENA_BALL_PARAMS_f(int netId) { FastCall<void>(0xcfd32863a8ed1f0e, netId); }
	void NETWORK_ENTITY_USE_HIGH_PRECISION_ROTATION(int netId, BOOL toggle) { Call<void>(0x2e11655711cf8299, netId, toggle); }
	void NETWORK_ENTITY_USE_HIGH_PRECISION_ROTATION_f(int netId, BOOL toggle) { FastCall<void>(0x2e11655711cf8299, netId, toggle); }
	BOOL NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS() { return Call<BOOL>(0xcd4b9dc9f99e1d22); }
	BOOL NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS_f() { return FastCall<BOOL>(0xcd4b9dc9f99e1d22); }
	BOOL NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING() { return Call<BOOL>(0xfbf4a9b173154376); }
	BOOL NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING_f() { return FastCall<BOOL>(0xfbf4a9b173154376); }
	void NETWORK_REQUEST_CLOUD_TUNABLES() { Call<void>(0x2171ebea7eef4477); }
	void NETWORK_REQUEST_CLOUD_TUNABLES_f() { FastCall<void>(0x2171ebea7eef4477); }
	BOOL NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING() { return Call<BOOL>(0x757232bd08f76fc1); }
	BOOL NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING_f() { return FastCall<BOOL>(0x757232bd08f76fc1); }
	int NETWORK_GET_TUNABLE_CLOUD_CRC() { return Call<int>(0x5cd0a43da84deed8); }
	int NETWORK_GET_TUNABLE_CLOUD_CRC_f() { return FastCall<int>(0x5cd0a43da84deed8); }
	void _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS(Any* tunableContextData) { Call<void>(0x248530c11c1736e4, tunableContextData); }
	void _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS_f(Any* tunableContextData) { FastCall<void>(0x248530c11c1736e4, tunableContextData); }
	void _NETWORK_CLEAR_TUNABLES_REGISTRATION_CONTEXTS() { Call<void>(0x63c38a4fded91f99); }
	void _NETWORK_CLEAR_TUNABLES_REGISTRATION_CONTEXTS_f() { FastCall<void>(0x63c38a4fded91f99); }
	BOOL _NETWORK_GET_TUNABLES_REGISTRATION_BOOL(Hash tunableName, BOOL defaultValue) { return Call<BOOL>(0xcdebf04859a60db6, tunableName, defaultValue); }
	BOOL _NETWORK_GET_TUNABLES_REGISTRATION_BOOL_f(Hash tunableName, BOOL defaultValue) { return FastCall<BOOL>(0xcdebf04859a60db6, tunableName, defaultValue); }
	int _NETWORK_GET_TUNABLES_REGISTRATION_INT(Hash tunableName, int defaultValue) { return Call<int>(0x617b394ca80db783, tunableName, defaultValue); }
	int _NETWORK_GET_TUNABLES_REGISTRATION_INT_f(Hash tunableName, int defaultValue) { return FastCall<int>(0x617b394ca80db783, tunableName, defaultValue); }
	float _NETWORK_GET_TUNABLES_REGISTRATION_FLOAT(Hash tunableName, float defaultValue) { return ToFloat(Call<_float>(0xef9218c2db52a8f0, tunableName, defaultValue)); }
	float _NETWORK_GET_TUNABLES_REGISTRATION_FLOAT_f(Hash tunableName, float defaultValue) { return ToFloat(FastCall<_float>(0xef9218c2db52a8f0, tunableName, defaultValue)); }
	BOOL NETWORK_DOES_TUNABLE_EXIST(char* tunableContext, char* tunableName) { return Call<BOOL>(0x6b862af8dc5af7ea, tunableContext, tunableName); }
	BOOL NETWORK_DOES_TUNABLE_EXIST_f(char* tunableContext, char* tunableName) { return FastCall<BOOL>(0x6b862af8dc5af7ea, tunableContext, tunableName); }
	BOOL NETWORK_ACCESS_TUNABLE_INT(char* tunableContext, char* tunableName, int* value) { return Call<BOOL>(0xd870884432190fcd, tunableContext, tunableName, value); }
	BOOL NETWORK_ACCESS_TUNABLE_INT_f(char* tunableContext, char* tunableName, int* value) { return FastCall<BOOL>(0xd870884432190fcd, tunableContext, tunableName, value); }
	BOOL NETWORK_ACCESS_TUNABLE_FLOAT(char* tunableContext, char* tunableName, float* value) { return Call<BOOL>(0x7e6f88000fe916ba, tunableContext, tunableName, value); }
	BOOL NETWORK_ACCESS_TUNABLE_FLOAT_f(char* tunableContext, char* tunableName, float* value) { return FastCall<BOOL>(0x7e6f88000fe916ba, tunableContext, tunableName, value); }
	BOOL NETWORK_ACCESS_TUNABLE_BOOL(char* tunableContext, char* tunableName) { return Call<BOOL>(0x35a080421105beac, tunableContext, tunableName); }
	BOOL NETWORK_ACCESS_TUNABLE_BOOL_f(char* tunableContext, char* tunableName) { return FastCall<BOOL>(0x35a080421105beac, tunableContext, tunableName); }
	BOOL NETWORK_DOES_TUNABLE_EXIST_HASH(Hash tunableContext, Hash tunableName) { return Call<BOOL>(0x2c6df56bdd91dc43, tunableContext, tunableName); }
	BOOL NETWORK_DOES_TUNABLE_EXIST_HASH_f(Hash tunableContext, Hash tunableName) { return FastCall<BOOL>(0x2c6df56bdd91dc43, tunableContext, tunableName); }
	BOOL NETWORK_ACCESS_TUNABLE_MODIFICATION_DETECTION_CLEAR() { return Call<BOOL>(0x62e976453ad18f2); }
	BOOL NETWORK_ACCESS_TUNABLE_MODIFICATION_DETECTION_CLEAR_f() { return FastCall<BOOL>(0x62e976453ad18f2); }
	BOOL NETWORK_ACCESS_TUNABLE_INT_HASH(Hash tunableContext, Hash tunableName, int* value) { return Call<BOOL>(0x75037f4f31663a40, tunableContext, tunableName, value); }
	BOOL NETWORK_ACCESS_TUNABLE_INT_HASH_f(Hash tunableContext, Hash tunableName, int* value) { return FastCall<BOOL>(0x75037f4f31663a40, tunableContext, tunableName, value); }
	BOOL NETWORK_ACCESS_TUNABLE_INT_MODIFICATION_DETECTION_REGISTRATION_HASH(Hash contextHash, Hash nameHash, int* value) { return Call<BOOL>(0xaa7831ac6d68589, contextHash, nameHash, value); }
	BOOL NETWORK_ACCESS_TUNABLE_INT_MODIFICATION_DETECTION_REGISTRATION_HASH_f(Hash contextHash, Hash nameHash, int* value) { return FastCall<BOOL>(0xaa7831ac6d68589, contextHash, nameHash, value); }
	BOOL NETWORK_ACCESS_TUNABLE_FLOAT_HASH(Hash tunableContext, Hash tunableName, float* value) { return Call<BOOL>(0x42209e7147167f73, tunableContext, tunableName, value); }
	BOOL NETWORK_ACCESS_TUNABLE_FLOAT_HASH_f(Hash tunableContext, Hash tunableName, float* value) { return FastCall<BOOL>(0x42209e7147167f73, tunableContext, tunableName, value); }
	BOOL NETWORK_ACCESS_TUNABLE_FLOAT_MODIFICATION_DETECTION_REGISTRATION_HASH(Hash contextHash, Hash nameHash, float* value) { return Call<BOOL>(0xa5aecd8aeaf76d3c, contextHash, nameHash, value); }
	BOOL NETWORK_ACCESS_TUNABLE_FLOAT_MODIFICATION_DETECTION_REGISTRATION_HASH_f(Hash contextHash, Hash nameHash, float* value) { return FastCall<BOOL>(0xa5aecd8aeaf76d3c, contextHash, nameHash, value); }
	BOOL NETWORK_ACCESS_TUNABLE_BOOL_HASH(Hash tunableContext, Hash tunableName) { return Call<BOOL>(0x2b6c652e2dbefec1, tunableContext, tunableName); }
	BOOL NETWORK_ACCESS_TUNABLE_BOOL_HASH_f(Hash tunableContext, Hash tunableName) { return FastCall<BOOL>(0x2b6c652e2dbefec1, tunableContext, tunableName); }
	BOOL NETWORK_ACCESS_TUNABLE_BOOL_MODIFICATION_DETECTION_REGISTRATION_HASH(Hash contextHash, Hash nameHash, BOOL* value) { return Call<BOOL>(0x410c8923dcaedd8a, contextHash, nameHash, value); }
	BOOL NETWORK_ACCESS_TUNABLE_BOOL_MODIFICATION_DETECTION_REGISTRATION_HASH_f(Hash contextHash, Hash nameHash, BOOL* value) { return FastCall<BOOL>(0x410c8923dcaedd8a, contextHash, nameHash, value); }
	BOOL NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH(Hash tunableContext, Hash tunableName, BOOL defaultValue) { return Call<BOOL>(0x30bb405dce925065, tunableContext, tunableName, defaultValue); }
	BOOL NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH_f(Hash tunableContext, Hash tunableName, BOOL defaultValue) { return FastCall<BOOL>(0x30bb405dce925065, tunableContext, tunableName, defaultValue); }
	int NETWORK_GET_CONTENT_MODIFIER_LIST_ID(Hash contentHash) { return Call<int>(0x7a4aceb1dad21b94, contentHash); }
	int NETWORK_GET_CONTENT_MODIFIER_LIST_ID_f(Hash contentHash) { return FastCall<int>(0x7a4aceb1dad21b94, contentHash); }
	int NETWORK_GET_BONE_ID_OF_FATAL_HIT() { return Call<int>(0x91c5a69e7cd758d3); }
	int NETWORK_GET_BONE_ID_OF_FATAL_HIT_f() { return FastCall<int>(0x91c5a69e7cd758d3); }
	void NETWORK_RESET_BODY_TRACKER() { Call<void>(0xa43d1f4457413c5c); }
	void NETWORK_RESET_BODY_TRACKER_f() { FastCall<void>(0xa43d1f4457413c5c); }
	int NETWORK_GET_NUMBER_BODY_TRACKER_HITS() { return Call<int>(0x220f19001c551588); }
	int NETWORK_GET_NUMBER_BODY_TRACKER_HITS_f() { return FastCall<int>(0x220f19001c551588); }
	BOOL NETWORK_HAS_BONE_BEEN_HIT_BY_KILLER(int boneIndex) { return Call<BOOL>(0x5a37ad067ceb4b9, boneIndex); }
	BOOL NETWORK_HAS_BONE_BEEN_HIT_BY_KILLER_f(int boneIndex) { return FastCall<BOOL>(0x5a37ad067ceb4b9, boneIndex); }
	BOOL NETWORK_SET_ATTRIBUTE_DAMAGE_TO_PLAYER(Ped ped, Player player) { return Call<BOOL>(0x48d943d3c4368226, ped, player); }
	BOOL NETWORK_SET_ATTRIBUTE_DAMAGE_TO_PLAYER_f(Ped ped, Player player) { return FastCall<BOOL>(0x48d943d3c4368226, ped, player); }
	void NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_DAMAGE(Entity entity, BOOL toggle) { Call<void>(0xbfcbbfd15d9bda93, entity, toggle); }
	void NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_DAMAGE_f(Entity entity, BOOL toggle) { FastCall<void>(0xbfcbbfd15d9bda93, entity, toggle); }
	void _NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_PED_DAMAGE(Entity entity, BOOL trigger) { Call<void>(0xaed208113fa6fc42, entity, trigger); }
	void _NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_PED_DAMAGE_f(Entity entity, BOOL trigger) { FastCall<void>(0xaed208113fa6fc42, entity, trigger); }
	void NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_WEAPON_HASH(Entity entity, BOOL toggle) { Call<void>(0xba2fe238a39a28ad, entity, toggle); }
	void NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_WEAPON_HASH_f(Entity entity, BOOL toggle) { FastCall<void>(0xba2fe238a39a28ad, entity, toggle); }
	void NETWORK_SET_NO_LONGER_NEEDED(Entity entity, BOOL toggle) { Call<void>(0xf8b10346ea219e7b, entity, toggle); }
	void NETWORK_SET_NO_LONGER_NEEDED_f(Entity entity, BOOL toggle) { FastCall<void>(0xf8b10346ea219e7b, entity, toggle); }
	BOOL NETWORK_EXPLODE_VEHICLE(Vehicle vehicle, BOOL isAudible, BOOL isInvisible, int netId) { return Call<BOOL>(0xc9ab1276c2e2555d, vehicle, isAudible, isInvisible, netId); }
	BOOL NETWORK_EXPLODE_VEHICLE_f(Vehicle vehicle, BOOL isAudible, BOOL isInvisible, int netId) { return FastCall<BOOL>(0xc9ab1276c2e2555d, vehicle, isAudible, isInvisible, netId); }
	void NETWORK_EXPLODE_HELI(Vehicle vehicle, BOOL isAudible, BOOL isInvisible, int netId) { Call<void>(0xd469d922323c1689, vehicle, isAudible, isInvisible, netId); }
	void NETWORK_EXPLODE_HELI_f(Vehicle vehicle, BOOL isAudible, BOOL isInvisible, int netId) { FastCall<void>(0xd469d922323c1689, vehicle, isAudible, isInvisible, netId); }
	void NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME(Entity entity) { Call<void>(0x2ebfb7ceaa0165d1, entity); }
	void NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME_f(Entity entity) { FastCall<void>(0x2ebfb7ceaa0165d1, entity); }
	void NETWORK_OVERRIDE_COORDS_AND_HEADING(Entity entity, float x, float y, float z, float heading) { Call<void>(0x660ecf64d68a915b, entity, x, y, z, heading); }
	void NETWORK_OVERRIDE_COORDS_AND_HEADING_f(Entity entity, float x, float y, float z, float heading) { FastCall<void>(0x660ecf64d68a915b, entity, x, y, z, heading); }
	void NETWORK_ENABLE_EXTRA_VEHICLE_ORIENTATION_BLEND_CHECKS(int netId, BOOL toggle) { Call<void>(0x8f3b21a28930b475, netId, toggle); }
	void NETWORK_ENABLE_EXTRA_VEHICLE_ORIENTATION_BLEND_CHECKS_f(int netId, BOOL toggle) { FastCall<void>(0x8f3b21a28930b475, netId, toggle); }
	void NETWORK_DISABLE_PROXIMITY_MIGRATION(int netID) { Call<void>(0x3c731c202ac55d26, netID); }
	void NETWORK_DISABLE_PROXIMITY_MIGRATION_f(int netID) { FastCall<void>(0x3c731c202ac55d26, netID); }
	void NETWORK_SET_PROPERTY_ID(int id) { Call<void>(0x4fa45b056ea0ff17, id); }
	void NETWORK_SET_PROPERTY_ID_f(int id) { FastCall<void>(0x4fa45b056ea0ff17, id); }
	void NETWORK_CLEAR_PROPERTY_ID() { Call<void>(0x3fc8a758424e3cc2); }
	void NETWORK_CLEAR_PROPERTY_ID_f() { FastCall<void>(0x3fc8a758424e3cc2); }
	void NETWORK_SET_PLAYER_MENTAL_STATE(int p0) { Call<void>(0x1c10b28cbde804ab, p0); }
	void NETWORK_SET_PLAYER_MENTAL_STATE_f(int p0) { FastCall<void>(0x1c10b28cbde804ab, p0); }
	void NETWORK_SET_MINIMUM_RANK_FOR_MISSION(BOOL p0) { Call<void>(0xf5df61a520a47662, p0); }
	void NETWORK_SET_MINIMUM_RANK_FOR_MISSION_f(BOOL p0) { FastCall<void>(0xf5df61a520a47662, p0); }
	void NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA() { Call<void>(0xc1e34206081485b); }
	void NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA_f() { FastCall<void>(0xc1e34206081485b); }
	BOOL NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA(Player player) { return Call<BOOL>(0x184e73ee43e8f820, player); }
	BOOL NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA_f(Player player) { return FastCall<BOOL>(0x184e73ee43e8f820, player); }
	BOOL NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA(Ped ped, Player player) { return Call<BOOL>(0x19a28d59f9e1fa34, ped, player); }
	BOOL NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA_f(Ped ped, Player player) { return FastCall<BOOL>(0x19a28d59f9e1fa34, ped, player); }
	int GET_NUM_COMMERCE_ITEMS() { return Call<int>(0x91acad0a247aaede); }
	int GET_NUM_COMMERCE_ITEMS_f() { return FastCall<int>(0x91acad0a247aaede); }
	BOOL IS_COMMERCE_DATA_VALID() { return Call<BOOL>(0xbfc9cbc04c60c56); }
	BOOL IS_COMMERCE_DATA_VALID_f() { return FastCall<BOOL>(0xbfc9cbc04c60c56); }
	void TRIGGER_COMMERCE_DATA_FETCH(Any p0) { Call<void>(0x517cb5d46d62d882, p0); }
	void TRIGGER_COMMERCE_DATA_FETCH_f(Any p0) { FastCall<void>(0x517cb5d46d62d882, p0); }
	BOOL IS_COMMERCE_DATA_FETCH_IN_PROGRESS() { return Call<BOOL>(0x901d9e5dc05a375c); }
	BOOL IS_COMMERCE_DATA_FETCH_IN_PROGRESS_f() { return FastCall<BOOL>(0x901d9e5dc05a375c); }
	const char* GET_COMMERCE_ITEM_ID(int index) { return Call<char*>(0x1ce8b1336c03964c, index); }
	const char* GET_COMMERCE_ITEM_ID_f(int index) { return FastCall<char*>(0x1ce8b1336c03964c, index); }
	const char* GET_COMMERCE_ITEM_NAME(int index) { return Call<char*>(0x858132087979777c, index); }
	const char* GET_COMMERCE_ITEM_NAME_f(int index) { return FastCall<char*>(0x858132087979777c, index); }
	const char* GET_COMMERCE_PRODUCT_PRICE(int index) { return Call<char*>(0xe9fbb404247afe7e, index); }
	const char* GET_COMMERCE_PRODUCT_PRICE_f(int index) { return FastCall<char*>(0xe9fbb404247afe7e, index); }
	int GET_COMMERCE_ITEM_NUM_CATS(int index) { return Call<int>(0x9e0f9dd7cc43d107, index); }
	int GET_COMMERCE_ITEM_NUM_CATS_f(int index) { return FastCall<int>(0x9e0f9dd7cc43d107, index); }
	const char* GET_COMMERCE_ITEM_CAT(int index, int index2) { return Call<char*>(0x802d753a146f1ca5, index, index2); }
	const char* GET_COMMERCE_ITEM_CAT_f(int index, int index2) { return FastCall<char*>(0x802d753a146f1ca5, index, index2); }
	void OPEN_COMMERCE_STORE(char* p0, char* p1, int p2) { Call<void>(0xaab8bc57f50e20f2, p0, p1, p2); }
	void OPEN_COMMERCE_STORE_f(char* p0, char* p1, int p2) { FastCall<void>(0xaab8bc57f50e20f2, p0, p1, p2); }
	BOOL IS_COMMERCE_STORE_OPEN() { return Call<BOOL>(0xbfe140fa6333857); }
	BOOL IS_COMMERCE_STORE_OPEN_f() { return FastCall<BOOL>(0xbfe140fa6333857); }
	void SET_STORE_ENABLED(BOOL toggle) { Call<void>(0xffa11e949b6be466, toggle); }
	void SET_STORE_ENABLED_f(BOOL toggle) { FastCall<void>(0xffa11e949b6be466, toggle); }
	BOOL REQUEST_COMMERCE_ITEM_IMAGE(int index) { return Call<BOOL>(0xaf18cb2d7b8df23, index); }
	BOOL REQUEST_COMMERCE_ITEM_IMAGE_f(int index) { return FastCall<BOOL>(0xaf18cb2d7b8df23, index); }
	void RELEASE_ALL_COMMERCE_ITEM_IMAGES() { Call<void>(0xc0684f8dc4124716); }
	void RELEASE_ALL_COMMERCE_ITEM_IMAGES_f() { FastCall<void>(0xc0684f8dc4124716); }
	const char* GET_COMMERCE_ITEM_TEXTURENAME(int index) { return Call<char*>(0xbb615bd97d4897f5, index); }
	const char* GET_COMMERCE_ITEM_TEXTURENAME_f(int index) { return FastCall<char*>(0xbb615bd97d4897f5, index); }
	BOOL IS_STORE_AVAILABLE_TO_USER() { return Call<BOOL>(0x79a6100520debb66); }
	BOOL IS_STORE_AVAILABLE_TO_USER_f() { return FastCall<BOOL>(0x79a6100520debb66); }
	void DELAY_MP_STORE_OPEN() { Call<void>(0xc28923e9f0a0948); }
	void DELAY_MP_STORE_OPEN_f() { FastCall<void>(0xc28923e9f0a0948); }
	void RESET_STORE_NETWORK_GAME_TRACKING() { Call<void>(0xfe39d301982173e5); }
	void RESET_STORE_NETWORK_GAME_TRACKING_f() { FastCall<void>(0xfe39d301982173e5); }
	BOOL IS_USER_OLD_ENOUGH_TO_ACCESS_STORE() { return Call<BOOL>(0x91f2f19387ad5bb2); }
	BOOL IS_USER_OLD_ENOUGH_TO_ACCESS_STORE_f() { return FastCall<BOOL>(0x91f2f19387ad5bb2); }
	void SET_LAST_VIEWED_SHOP_ITEM(Hash p0, int p1, Hash p2) { Call<void>(0x67fc52df7dd4c88d, p0, p1, p2); }
	void SET_LAST_VIEWED_SHOP_ITEM_f(Hash p0, int p1, Hash p2) { FastCall<void>(0x67fc52df7dd4c88d, p0, p1, p2); }
	int GET_USER_PREMIUM_ACCESS() { return Call<int>(0x14c31823565ab4d7); }
	int GET_USER_PREMIUM_ACCESS_f() { return FastCall<int>(0x14c31823565ab4d7); }
	int GET_USER_STARTER_ACCESS() { return Call<int>(0x21dbe552e4f1d39f); }
	int GET_USER_STARTER_ACCESS_f() { return FastCall<int>(0x21dbe552e4f1d39f); }
	int CLOUD_DELETE_MEMBER_FILE(char* p0) { return Call<int>(0xccaafababff41dd7, p0); }
	int CLOUD_DELETE_MEMBER_FILE_f(char* p0) { return FastCall<int>(0xccaafababff41dd7, p0); }
	BOOL CLOUD_HAS_REQUEST_COMPLETED(int requestId) { return Call<BOOL>(0xb844c8e74ceacf2c, requestId); }
	BOOL CLOUD_HAS_REQUEST_COMPLETED_f(int requestId) { return FastCall<BOOL>(0xb844c8e74ceacf2c, requestId); }
	BOOL CLOUD_DID_REQUEST_SUCCEED(int requestId) { return Call<BOOL>(0x2bde11100a146748, requestId); }
	BOOL CLOUD_DID_REQUEST_SUCCEED_f(int requestId) { return FastCall<BOOL>(0x2bde11100a146748, requestId); }
	void CLOUD_CHECK_AVAILABILITY() { Call<void>(0x494c4b4fa8e1e9bc); }
	void CLOUD_CHECK_AVAILABILITY_f() { FastCall<void>(0x494c4b4fa8e1e9bc); }
	BOOL CLOUD_IS_CHECKING_AVAILABILITY() { return Call<BOOL>(0x9d88a545fb510135); }
	BOOL CLOUD_IS_CHECKING_AVAILABILITY_f() { return FastCall<BOOL>(0x9d88a545fb510135); }
	BOOL CLOUD_GET_AVAILABILITY_CHECK_RESULT() { return Call<BOOL>(0xe470b413c7806745); }
	BOOL CLOUD_GET_AVAILABILITY_CHECK_RESULT_f() { return FastCall<BOOL>(0xe470b413c7806745); }
	int GET_CONTENT_TO_LOAD_TYPE() { return Call<int>(0xb5f2c5a90eee11be); }
	int GET_CONTENT_TO_LOAD_TYPE_f() { return FastCall<int>(0xb5f2c5a90eee11be); }
	BOOL GET_IS_LAUNCH_FROM_LIVE_AREA() { return Call<BOOL>(0x51b5b90a3a133b4b); }
	BOOL GET_IS_LAUNCH_FROM_LIVE_AREA_f() { return FastCall<BOOL>(0x51b5b90a3a133b4b); }
	BOOL GET_IS_LIVE_AREA_LAUNCH_WITH_CONTENT() { return Call<BOOL>(0xa6da193062eaf3c1); }
	BOOL GET_IS_LIVE_AREA_LAUNCH_WITH_CONTENT_f() { return FastCall<BOOL>(0xa6da193062eaf3c1); }
	void CLEAR_SERVICE_EVENT_ARGUMENTS() { Call<void>(0x2aad59c7325cd7f5); }
	void CLEAR_SERVICE_EVENT_ARGUMENTS_f() { FastCall<void>(0x2aad59c7325cd7f5); }
	BOOL UGC_COPY_CONTENT(Any* p0, Any* p1) { return Call<BOOL>(0xe0b7effe39d61b1d, p0, p1); }
	BOOL UGC_COPY_CONTENT_f(Any* p0, Any* p1) { return FastCall<BOOL>(0xe0b7effe39d61b1d, p0, p1); }
	BOOL UGC_IS_CREATING() { return Call<BOOL>(0xde074ec90b277ae0); }
	BOOL UGC_IS_CREATING_f() { return FastCall<BOOL>(0xde074ec90b277ae0); }
	BOOL UGC_HAS_CREATE_FINISHED() { return Call<BOOL>(0x3c786e12a96cd342); }
	BOOL UGC_HAS_CREATE_FINISHED_f() { return FastCall<BOOL>(0x3c786e12a96cd342); }
	BOOL UGC_DID_CREATE_SUCCEED() { return Call<BOOL>(0xfbb62bc55f5674cd); }
	BOOL UGC_DID_CREATE_SUCCEED_f() { return FastCall<BOOL>(0xfbb62bc55f5674cd); }
	int UGC_GET_CREATE_RESULT() { return Call<int>(0x9c77e7028e1256a9); }
	int UGC_GET_CREATE_RESULT_f() { return FastCall<int>(0x9c77e7028e1256a9); }
	char* UGC_GET_CREATE_CONTENT_ID() { Call<char*>(0x404f06fc2c38974d); }
	char* UGC_GET_CREATE_CONTENT_ID_f() { FastCall<char*>(0x404f06fc2c38974d); }
	void UGC_CLEAR_CREATE_RESULT() { Call<void>(0x5b065866e1e600e0); }
	void UGC_CLEAR_CREATE_RESULT_f() { FastCall<void>(0x5b065866e1e600e0); }
	BOOL UGC_QUERY_MY_CONTENT(Any p0, Any p1, Any* p2, Any p3, Any p4, Any p5) { return Call<BOOL>(0xfc94451fb38a9b4b, p0, p1, p2, p3, p4, p5); }
	BOOL UGC_QUERY_MY_CONTENT_f(Any p0, Any p1, Any* p2, Any p3, Any p4, Any p5) { return FastCall<BOOL>(0xfc94451fb38a9b4b, p0, p1, p2, p3, p4, p5); }
	BOOL UGC_QUERY_BY_CATEGORY(Any p0, Any p1, Any p2, char* p3, Any p4, BOOL p5) { return Call<BOOL>(0x95d456e77cc88201, p0, p1, p2, p3, p4, p5); }
	BOOL UGC_QUERY_BY_CATEGORY_f(Any p0, Any p1, Any p2, char* p3, Any p4, BOOL p5) { return FastCall<BOOL>(0x95d456e77cc88201, p0, p1, p2, p3, p4, p5); }
	BOOL UGC_QUERY_BY_CONTENT_ID(char* contentId, BOOL latestVersion, char* contentTypeName) { return Call<BOOL>(0x721a45b42f2dc304, contentId, latestVersion, contentTypeName); }
	BOOL UGC_QUERY_BY_CONTENT_ID_f(char* contentId, BOOL latestVersion, char* contentTypeName) { return FastCall<BOOL>(0x721a45b42f2dc304, contentId, latestVersion, contentTypeName); }
	BOOL UGC_QUERY_BY_CONTENT_IDS(Any* data, int count, BOOL latestVersion, char* contentTypeName) { return Call<BOOL>(0xd12e70d1b68a9dcf, data, count, latestVersion, contentTypeName); }
	BOOL UGC_QUERY_BY_CONTENT_IDS_f(Any* data, int count, BOOL latestVersion, char* contentTypeName) { return FastCall<BOOL>(0xd12e70d1b68a9dcf, data, count, latestVersion, contentTypeName); }
	BOOL UGC_QUERY_MOST_RECENTLY_CREATED_CONTENT(int offset, int count, char* contentTypeName, int p3) { return Call<BOOL>(0x60111ab6822e9b62, offset, count, contentTypeName, p3); }
	BOOL UGC_QUERY_MOST_RECENTLY_CREATED_CONTENT_f(int offset, int count, char* contentTypeName, int p3) { return FastCall<BOOL>(0x60111ab6822e9b62, offset, count, contentTypeName, p3); }
	BOOL UGC_GET_BOOKMARKED_CONTENT(Any p0, Any p1, char* p2, Any* p3) { return Call<BOOL>(0xe0d5e6220b442e26, p0, p1, p2, p3); }
	BOOL UGC_GET_BOOKMARKED_CONTENT_f(Any p0, Any p1, char* p2, Any* p3) { return FastCall<BOOL>(0xe0d5e6220b442e26, p0, p1, p2, p3); }
	BOOL UGC_GET_MY_CONTENT(Any p0, Any p1, char* p2, Any* p3) { return Call<BOOL>(0x7217a2ceb0166f7d, p0, p1, p2, p3); }
	BOOL UGC_GET_MY_CONTENT_f(Any p0, Any p1, char* p2, Any* p3) { return FastCall<BOOL>(0x7217a2ceb0166f7d, p0, p1, p2, p3); }
	BOOL UGC_GET_FRIEND_CONTENT(Any p0, Any p1, char* p2, Any* p3) { return Call<BOOL>(0xec8ec87ef57a1eef, p0, p1, p2, p3); }
	BOOL UGC_GET_FRIEND_CONTENT_f(Any p0, Any p1, char* p2, Any* p3) { return FastCall<BOOL>(0xec8ec87ef57a1eef, p0, p1, p2, p3); }
	BOOL UGC_GET_CREW_CONTENT(Any p0, Any p1, Any p2, char* p3, Any* p4) { return Call<BOOL>(0x471cb5b19b11c072, p0, p1, p2, p3, p4); }
	BOOL UGC_GET_CREW_CONTENT_f(Any p0, Any p1, Any p2, char* p3, Any* p4) { return FastCall<BOOL>(0x471cb5b19b11c072, p0, p1, p2, p3, p4); }
	BOOL UGC_GET_GET_BY_CATEGORY(Any p0, Any p1, Any p2, char* p3, Any* p4) { return Call<BOOL>(0xfa13f5ebd72f4806, p0, p1, p2, p3, p4); }
	BOOL UGC_GET_GET_BY_CATEGORY_f(Any p0, Any p1, Any p2, char* p3, Any* p4) { return FastCall<BOOL>(0xfa13f5ebd72f4806, p0, p1, p2, p3, p4); }
	BOOL UGC_GET_GET_BY_CONTENT_ID(char* contentId, char* contentTypeName) { return Call<BOOL>(0xc4ee350b8afb1bc9, contentId, contentTypeName); }
	BOOL UGC_GET_GET_BY_CONTENT_ID_f(char* contentId, char* contentTypeName) { return FastCall<BOOL>(0xc4ee350b8afb1bc9, contentId, contentTypeName); }
	BOOL UGC_GET_GET_BY_CONTENT_IDS(Any* data, int dataCount, char* contentTypeName) { return Call<BOOL>(0xd8d86c65d4685daa, data, dataCount, contentTypeName); }
	BOOL UGC_GET_GET_BY_CONTENT_IDS_f(Any* data, int dataCount, char* contentTypeName) { return FastCall<BOOL>(0xd8d86c65d4685daa, data, dataCount, contentTypeName); }
	BOOL UGC_GET_MOST_RECENTLY_CREATED_CONTENT(Any p0, Any p1, Any* p2, Any* p3) { return Call<BOOL>(0xbfd20200aee625f0, p0, p1, p2, p3); }
	BOOL UGC_GET_MOST_RECENTLY_CREATED_CONTENT_f(Any p0, Any p1, Any* p2, Any* p3) { return FastCall<BOOL>(0xbfd20200aee625f0, p0, p1, p2, p3); }
	BOOL UGC_GET_MOST_RECENTLY_PLAYED_CONTENT(Any p0, Any p1, Any* p2, Any* p3) { return Call<BOOL>(0x5bc15b434a79bd1f, p0, p1, p2, p3); }
	BOOL UGC_GET_MOST_RECENTLY_PLAYED_CONTENT_f(Any p0, Any p1, Any* p2, Any* p3) { return FastCall<BOOL>(0x5bc15b434a79bd1f, p0, p1, p2, p3); }
	BOOL UGC_GET_TOP_RATED_CONTENT(Any p0, Any p1, Any* p2, Any* p3) { return Call<BOOL>(0xc02b5f13d2f1da5d, p0, p1, p2, p3); }
	BOOL UGC_GET_TOP_RATED_CONTENT_f(Any p0, Any p1, Any* p2, Any* p3) { return FastCall<BOOL>(0xc02b5f13d2f1da5d, p0, p1, p2, p3); }
	void UGC_CANCEL_QUERY() { Call<void>(0xe08ee9ecd991b431); }
	void UGC_CANCEL_QUERY_f() { FastCall<void>(0xe08ee9ecd991b431); }
	BOOL UGC_IS_GETTING() { return Call<BOOL>(0xa410c07ad768161d); }
	BOOL UGC_IS_GETTING_f() { return FastCall<BOOL>(0xa410c07ad768161d); }
	BOOL UGC_HAS_GET_FINISHED() { return Call<BOOL>(0xe09dc67acb5f0f8e); }
	BOOL UGC_HAS_GET_FINISHED_f() { return FastCall<BOOL>(0xe09dc67acb5f0f8e); }
	BOOL UGC_DID_GET_SUCCEED() { return Call<BOOL>(0x5336df9b2d9d59eb); }
	BOOL UGC_DID_GET_SUCCEED_f() { return FastCall<BOOL>(0x5336df9b2d9d59eb); }
	BOOL UGC_WAS_QUERY_FORCE_CANCELLED() { return Call<BOOL>(0xfb500a1c5925b362); }
	BOOL UGC_WAS_QUERY_FORCE_CANCELLED_f() { return FastCall<BOOL>(0xfb500a1c5925b362); }
	int UGC_GET_QUERY_RESULT() { return Call<int>(0x4c1532483ea7a48b); }
	int UGC_GET_QUERY_RESULT_f() { return FastCall<int>(0x4c1532483ea7a48b); }
	int UGC_GET_CONTENT_NUM() { return Call<int>(0xd0be9b50f36036a9); }
	int UGC_GET_CONTENT_NUM_f() { return FastCall<int>(0xd0be9b50f36036a9); }
	int UGC_GET_CONTENT_TOTAL() { return Call<int>(0x9b850ae19c7f25a7); }
	int UGC_GET_CONTENT_TOTAL_f() { return FastCall<int>(0x9b850ae19c7f25a7); }
	Hash UGC_GET_CONTENT_HASH() { return Call<Hash>(0x4714cecd78a39a2b); }
	Hash UGC_GET_CONTENT_HASH_f() { return FastCall<Hash>(0x4714cecd78a39a2b); }
	void UGC_CLEAR_QUERY_RESULTS() { Call<void>(0xf51f8823ea20975f); }
	void UGC_CLEAR_QUERY_RESULTS_f() { FastCall<void>(0xf51f8823ea20975f); }
	const char* UGC_GET_CONTENT_USER_ID(int p0) { return Call<char*>(0xce6dd8ecb43a9fd2, p0); }
	const char* UGC_GET_CONTENT_USER_ID_f(int p0) { return FastCall<char*>(0xce6dd8ecb43a9fd2, p0); }
	BOOL UGC_GET_CONTENT_CREATOR_GAMER_HANDLE(int p0, Any* p1) { return Call<BOOL>(0x84eb4f191d814917, p0, p1); }
	BOOL UGC_GET_CONTENT_CREATOR_GAMER_HANDLE_f(int p0, Any* p1) { return FastCall<BOOL>(0x84eb4f191d814917, p0, p1); }
	BOOL UGC_GET_CONTENT_CREATED_BY_LOCAL_PLAYER(Any p0) { return Call<BOOL>(0xeaee58c9618a6989, p0); }
	BOOL UGC_GET_CONTENT_CREATED_BY_LOCAL_PLAYER_f(Any p0) { return FastCall<BOOL>(0xeaee58c9618a6989, p0); }
	const char* UGC_GET_CONTENT_USER_NAME(Any p0) { return Call<char*>(0xea5b509090143782, p0); }
	const char* UGC_GET_CONTENT_USER_NAME_f(Any p0) { return FastCall<char*>(0xea5b509090143782, p0); }
	BOOL UGC_GET_CONTENT_IS_USING_SC_NICKNAME(Any p0) { return Call<BOOL>(0x14be61d03e1ea96a, p0); }
	BOOL UGC_GET_CONTENT_IS_USING_SC_NICKNAME_f(Any p0) { return FastCall<BOOL>(0x14be61d03e1ea96a, p0); }
	int UGC_GET_CONTENT_CATEGORY(int p0) { return Call<int>(0xff4d4432e5eab79b, p0); }
	int UGC_GET_CONTENT_CATEGORY_f(int p0) { return FastCall<int>(0xff4d4432e5eab79b, p0); }
	const char* UGC_GET_CONTENT_ID(int p0) { return Call<char*>(0x7216aa2be6d18d78, p0); }
	const char* UGC_GET_CONTENT_ID_f(int p0) { return FastCall<char*>(0x7216aa2be6d18d78, p0); }
	const char* UGC_GET_ROOT_CONTENT_ID(int p0) { return Call<char*>(0x5c42f0356f16ade7, p0); }
	const char* UGC_GET_ROOT_CONTENT_ID_f(int p0) { return FastCall<char*>(0x5c42f0356f16ade7, p0); }
	const char* UGC_GET_CONTENT_NAME(Any p0) { return Call<char*>(0x4714cecd78a653a8, p0); }
	const char* UGC_GET_CONTENT_NAME_f(Any p0) { return FastCall<char*>(0x4714cecd78a653a8, p0); }
	int UGC_GET_CONTENT_DESCRIPTION_HASH(Any p0) { return Call<int>(0xa9b1b7ab1ce4012e, p0); }
	int UGC_GET_CONTENT_DESCRIPTION_HASH_f(Any p0) { return FastCall<int>(0xa9b1b7ab1ce4012e, p0); }
	const char* UGC_GET_CONTENT_PATH(int p0, int p1) { return Call<char*>(0x4714cecd78a73d42, p0, p1); }
	const char* UGC_GET_CONTENT_PATH_f(int p0, int p1) { return FastCall<char*>(0x4714cecd78a73d42, p0, p1); }
	void UGC_GET_CONTENT_UPDATED_DATE(Any p0, Any* p1) { Call<void>(0x585b8512c87c50ef, p0, p1); }
	void UGC_GET_CONTENT_UPDATED_DATE_f(Any p0, Any* p1) { FastCall<void>(0x585b8512c87c50ef, p0, p1); }
	int UGC_GET_CONTENT_FILE_VERSION(Any p0, Any p1) { return Call<int>(0x52fddd94312b7512, p0, p1); }
	int UGC_GET_CONTENT_FILE_VERSION_f(Any p0, Any p1) { return FastCall<int>(0x52fddd94312b7512, p0, p1); }
	BOOL UGC_GET_CONTENT_HAS_LO_RES_PHOTO(int p0) { return Call<BOOL>(0xee993c74194d0919, p0); }
	BOOL UGC_GET_CONTENT_HAS_LO_RES_PHOTO_f(int p0) { return FastCall<BOOL>(0xee993c74194d0919, p0); }
	BOOL UGC_GET_CONTENT_HAS_HI_RES_PHOTO(int p0) { return Call<BOOL>(0xed1eb0447d2a4317, p0); }
	BOOL UGC_GET_CONTENT_HAS_HI_RES_PHOTO_f(int p0) { return FastCall<BOOL>(0xed1eb0447d2a4317, p0); }
	int UGC_GET_CONTENT_LANGUAGE(Any p0) { return Call<int>(0xff4d446c82ba8df5, p0); }
	int UGC_GET_CONTENT_LANGUAGE_f(Any p0) { return FastCall<int>(0xff4d446c82ba8df5, p0); }
	BOOL UGC_GET_CONTENT_IS_PUBLISHED(Any p0) { return Call<BOOL>(0x542b9bd5743e3d16, p0); }
	BOOL UGC_GET_CONTENT_IS_PUBLISHED_f(Any p0) { return FastCall<BOOL>(0x542b9bd5743e3d16, p0); }
	BOOL UGC_GET_CONTENT_IS_VERIFIED(Any p0) { return Call<BOOL>(0xc0a6918d3782fa80, p0); }
	BOOL UGC_GET_CONTENT_IS_VERIFIED_f(Any p0) { return FastCall<BOOL>(0xc0a6918d3782fa80, p0); }
	float UGC_GET_CONTENT_RATING(Any p0, Any p1) { return ToFloat(Call<_float>(0xd51c5151ef36b37a, p0, p1)); }
	float UGC_GET_CONTENT_RATING_f(Any p0, Any p1) { return ToFloat(FastCall<_float>(0xd51c5151ef36b37a, p0, p1)); }
	int UGC_GET_CONTENT_RATING_COUNT(Any p0, Any p1) { return Call<int>(0x57228f8a05ce6bea, p0, p1); }
	int UGC_GET_CONTENT_RATING_COUNT_f(Any p0, Any p1) { return FastCall<int>(0x57228f8a05ce6bea, p0, p1); }
	int UGC_GET_CONTENT_RATING_POSITIVE_COUNT(Any p0, Any p1) { return Call<int>(0x18dc92bd34ec3e8e, p0, p1); }
	int UGC_GET_CONTENT_RATING_POSITIVE_COUNT_f(Any p0, Any p1) { return FastCall<int>(0x18dc92bd34ec3e8e, p0, p1); }
	int UGC_GET_CONTENT_RATING_NEGATIVE_COUNT(Any p0, Any p1) { return Call<int>(0x1818b651c9913ca, p0, p1); }
	int UGC_GET_CONTENT_RATING_NEGATIVE_COUNT_f(Any p0, Any p1) { return FastCall<int>(0x1818b651c9913ca, p0, p1); }
	BOOL UGC_GET_CONTENT_HAS_PLAYER_RECORD(Any p0) { return Call<BOOL>(0xee22cd289d9206d, p0); }
	BOOL UGC_GET_CONTENT_HAS_PLAYER_RECORD_f(Any p0) { return FastCall<BOOL>(0xee22cd289d9206d, p0); }
	BOOL UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED(Any p0) { return Call<BOOL>(0x458191a846c77a71, p0); }
	BOOL UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED_f(Any p0) { return FastCall<BOOL>(0x458191a846c77a71, p0); }
	int UGC_REQUEST_CONTENT_DATA_FROM_INDEX(int p0, int p1) { return Call<int>(0xc7faeec4a6fbd8e, p0, p1); }
	int UGC_REQUEST_CONTENT_DATA_FROM_INDEX_f(int p0, int p1) { return FastCall<int>(0xc7faeec4a6fbd8e, p0, p1); }
	int UGC_REQUEST_CONTENT_DATA_FROM_PARAMS(char* contentTypeName, char* contentId, int p2, int p3, int p4) { return Call<int>(0x83762e9d0ec8fc2a, contentTypeName, contentId, p2, p3, p4); }
	int UGC_REQUEST_CONTENT_DATA_FROM_PARAMS_f(char* contentTypeName, char* contentId, int p2, int p3, int p4) { return FastCall<int>(0x83762e9d0ec8fc2a, contentTypeName, contentId, p2, p3, p4); }
	int UGC_REQUEST_CACHED_DESCRIPTION(int p0) { return Call<int>(0x3b673868a913851d, p0); }
	int UGC_REQUEST_CACHED_DESCRIPTION_f(int p0) { return FastCall<int>(0x3b673868a913851d, p0); }
	BOOL UGC_IS_DESCRIPTION_REQUEST_IN_PROGRESS(Any p0) { return Call<BOOL>(0xa8ddff8e5577494d, p0); }
	BOOL UGC_IS_DESCRIPTION_REQUEST_IN_PROGRESS_f(Any p0) { return FastCall<BOOL>(0xa8ddff8e5577494d, p0); }
	BOOL UGC_HAS_DESCRIPTION_REQUEST_FINISHED(Any p0) { return Call<BOOL>(0xf867fc93aaa6ec78, p0); }
	BOOL UGC_HAS_DESCRIPTION_REQUEST_FINISHED_f(Any p0) { return FastCall<BOOL>(0xf867fc93aaa6ec78, p0); }
	BOOL UGC_DID_DESCRIPTION_REQUEST_SUCCEED(Any p0) { return Call<BOOL>(0xbb0a8766cd11cdc1, p0); }
	BOOL UGC_DID_DESCRIPTION_REQUEST_SUCCEED_f(Any p0) { return FastCall<BOOL>(0xbb0a8766cd11cdc1, p0); }
	const char* UGC_GET_CACHED_DESCRIPTION(Any p0, Any p1) { return Call<char*>(0x5968cf973740cbf6, p0, p1); }
	const char* UGC_GET_CACHED_DESCRIPTION_f(Any p0, Any p1) { return FastCall<char*>(0x5968cf973740cbf6, p0, p1); }
	BOOL UGC_RELEASE_CACHED_DESCRIPTION(Any p0) { return Call<BOOL>(0x9b6ae0aa6d5faca5, p0); }
	BOOL UGC_RELEASE_CACHED_DESCRIPTION_f(Any p0) { return FastCall<BOOL>(0x9b6ae0aa6d5faca5, p0); }
	void UGC_RELEASE_ALL_CACHED_DESCRIPTIONS() { Call<void>(0xa75a9f908118eb90); }
	void UGC_RELEASE_ALL_CACHED_DESCRIPTIONS_f() { FastCall<void>(0xa75a9f908118eb90); }
	BOOL UGC_HAS_PERMISSION_TO_WRITE() { return Call<BOOL>(0xaa6ae8307fc149d8); }
	BOOL UGC_HAS_PERMISSION_TO_WRITE_f() { return FastCall<BOOL>(0xaa6ae8307fc149d8); }
	BOOL UGC_PUBLISH(char* contentId, char* baseContentId, char* contentTypeName) { return Call<BOOL>(0xfe64c6a78a96a1, contentId, baseContentId, contentTypeName); }
	BOOL UGC_PUBLISH_f(char* contentId, char* baseContentId, char* contentTypeName) { return FastCall<BOOL>(0xfe64c6a78a96a1, contentId, baseContentId, contentTypeName); }
	BOOL UGC_SET_BOOKMARKED(char* contentId, BOOL bookmarked, char* contentTypeName) { return Call<BOOL>(0x546d2dff21a50680, contentId, bookmarked, contentTypeName); }
	BOOL UGC_SET_BOOKMARKED_f(char* contentId, BOOL bookmarked, char* contentTypeName) { return FastCall<BOOL>(0x546d2dff21a50680, contentId, bookmarked, contentTypeName); }
	BOOL UGC_SET_DELETED(Any* p0, BOOL p1, char* p2) { return Call<BOOL>(0xde2314c399bf85ae, p0, p1, p2); }
	BOOL UGC_SET_DELETED_f(Any* p0, BOOL p1, char* p2) { return FastCall<BOOL>(0xde2314c399bf85ae, p0, p1, p2); }
	BOOL UGC_IS_MODIFYING() { return Call<BOOL>(0xe2e29206c4d32581); }
	BOOL UGC_IS_MODIFYING_f() { return FastCall<BOOL>(0xe2e29206c4d32581); }
	BOOL UGC_HAS_MODIFY_FINISHED() { return Call<BOOL>(0x92b26ddfc6aad144); }
	BOOL UGC_HAS_MODIFY_FINISHED_f() { return FastCall<BOOL>(0x92b26ddfc6aad144); }
	BOOL UGC_DID_MODIFY_SUCCEED() { return Call<BOOL>(0x17446dd43f3fae8b); }
	BOOL UGC_DID_MODIFY_SUCCEED_f() { return FastCall<BOOL>(0x17446dd43f3fae8b); }
	int UGC_GET_MODIFY_RESULT() { return Call<int>(0x8b64c3cd75bed2b); }
	int UGC_GET_MODIFY_RESULT_f() { return FastCall<int>(0x8b64c3cd75bed2b); }
	void UGC_CLEAR_MODIFY_RESULT() { Call<void>(0xc744bda12b2f9762); }
	void UGC_CLEAR_MODIFY_RESULT_f() { FastCall<void>(0xc744bda12b2f9762); }
	BOOL UGC_GET_CREATORS_BY_USER_ID(Any* p0, Any* p1) { return Call<BOOL>(0x1cfe16f9edc85ac8, p0, p1); }
	BOOL UGC_GET_CREATORS_BY_USER_ID_f(Any* p0, Any* p1) { return FastCall<BOOL>(0x1cfe16f9edc85ac8, p0, p1); }
	BOOL UGC_HAS_QUERY_CREATORS_FINISHED() { return Call<BOOL>(0x9bb5488ef5cf9a00); }
	BOOL UGC_HAS_QUERY_CREATORS_FINISHED_f() { return FastCall<BOOL>(0x9bb5488ef5cf9a00); }
	BOOL UGC_DID_QUERY_CREATORS_SUCCEED() { return Call<BOOL>(0x98cf878a4acb334f); }
	BOOL UGC_DID_QUERY_CREATORS_SUCCEED_f() { return FastCall<BOOL>(0x98cf878a4acb334f); }
	int UGC_GET_CREATOR_NUM() { return Call<int>(0xd0bedc02ff3470dc); }
	int UGC_GET_CREATOR_NUM_f() { return FastCall<int>(0xd0bedc02ff3470dc); }
	BOOL UGC_LOAD_OFFLINE_QUERY(Any p0) { return Call<BOOL>(0x32044db11801f2a1, p0); }
	BOOL UGC_LOAD_OFFLINE_QUERY_f(Any p0) { return FastCall<BOOL>(0x32044db11801f2a1, p0); }
	void UGC_CLEAR_OFFLINE_QUERY() { Call<void>(0xd9fb1d13c733af4c); }
	void UGC_CLEAR_OFFLINE_QUERY_f() { FastCall<void>(0xd9fb1d13c733af4c); }
	void UGC_SET_QUERY_DATA_FROM_OFFLINE(BOOL p0) { Call<void>(0x8234041ba2b1bc81, p0); }
	void UGC_SET_QUERY_DATA_FROM_OFFLINE_f(BOOL p0) { FastCall<void>(0x8234041ba2b1bc81, p0); }
	void UGC_SET_USING_OFFLINE_CONTENT(BOOL p0) { Call<void>(0x17a60505ebe868f7, p0); }
	void UGC_SET_USING_OFFLINE_CONTENT_f(BOOL p0) { FastCall<void>(0x17a60505ebe868f7, p0); }
	BOOL UGC_IS_LANGUAGE_SUPPORTED(Any p0) { return Call<BOOL>(0x3dca3412bd1d6bce, p0); }
	BOOL UGC_IS_LANGUAGE_SUPPORTED_f(Any p0) { return FastCall<BOOL>(0x3dca3412bd1d6bce, p0); }
	BOOL FACEBOOK_POST_COMPLETED_HEIST(char* heistName, int cashEarned, int xpEarned) { return Call<BOOL>(0x9ce5e3d74931c173, heistName, cashEarned, xpEarned); }
	BOOL FACEBOOK_POST_COMPLETED_HEIST_f(char* heistName, int cashEarned, int xpEarned) { return FastCall<BOOL>(0x9ce5e3d74931c173, heistName, cashEarned, xpEarned); }
	BOOL FACEBOOK_POST_CREATE_CHARACTER() { return Call<BOOL>(0xe1ed7a24f388488c); }
	BOOL FACEBOOK_POST_CREATE_CHARACTER_f() { return FastCall<BOOL>(0xe1ed7a24f388488c); }
	BOOL FACEBOOK_POST_COMPLETED_MILESTONE(int milestoneId) { return Call<BOOL>(0x2d162bc2fa80d176, milestoneId); }
	BOOL FACEBOOK_POST_COMPLETED_MILESTONE_f(int milestoneId) { return FastCall<BOOL>(0x2d162bc2fa80d176, milestoneId); }
	BOOL FACEBOOK_HAS_POST_COMPLETED() { return Call<BOOL>(0x539074322149e7ca); }
	BOOL FACEBOOK_HAS_POST_COMPLETED_f() { return FastCall<BOOL>(0x539074322149e7ca); }
	BOOL FACEBOOK_DID_POST_SUCCEED() { return Call<BOOL>(0xbb09bb20ea091bc); }
	BOOL FACEBOOK_DID_POST_SUCCEED_f() { return FastCall<BOOL>(0xbb09bb20ea091bc); }
	BOOL FACEBOOK_CAN_POST_TO_FACEBOOK() { return Call<BOOL>(0xc570e0d7907da773); }
	BOOL FACEBOOK_CAN_POST_TO_FACEBOOK_f() { return FastCall<BOOL>(0xc570e0d7907da773); }
	int TEXTURE_DOWNLOAD_REQUEST(Any* gamerHandle, char* filePath, char* name, BOOL p3) { return Call<int>(0xd4cd793d74428c7c, gamerHandle, filePath, name, p3); }
	int TEXTURE_DOWNLOAD_REQUEST_f(Any* gamerHandle, char* filePath, char* name, BOOL p3) { return FastCall<int>(0xd4cd793d74428c7c, gamerHandle, filePath, name, p3); }
	int TITLE_TEXTURE_DOWNLOAD_REQUEST(char* filePath, char* name, BOOL p2) { return Call<int>(0x29351aeb0ada64a3, filePath, name, p2); }
	int TITLE_TEXTURE_DOWNLOAD_REQUEST_f(char* filePath, char* name, BOOL p2) { return FastCall<int>(0x29351aeb0ada64a3, filePath, name, p2); }
	int UGC_TEXTURE_DOWNLOAD_REQUEST(char* p0, int p1, int p2, int p3, char* p4, BOOL p5) { return Call<int>(0x76db9bfed8f2f90a, p0, p1, p2, p3, p4, p5); }
	int UGC_TEXTURE_DOWNLOAD_REQUEST_f(char* p0, int p1, int p2, int p3, char* p4, BOOL p5) { return FastCall<int>(0x76db9bfed8f2f90a, p0, p1, p2, p3, p4, p5); }
	void TEXTURE_DOWNLOAD_RELEASE(int p0) { Call<void>(0xd4cd793d73f4c1f4, p0); }
	void TEXTURE_DOWNLOAD_RELEASE_f(int p0) { FastCall<void>(0xd4cd793d73f4c1f4, p0); }
	BOOL TEXTURE_DOWNLOAD_HAS_FAILED(int p0) { return Call<BOOL>(0x132ee2f951de2c75, p0); }
	BOOL TEXTURE_DOWNLOAD_HAS_FAILED_f(int p0) { return FastCall<BOOL>(0x132ee2f951de2c75, p0); }
	const char* TEXTURE_DOWNLOAD_GET_NAME(int p0) { return Call<char*>(0xc4e1ae2aa3115d87, p0); }
	const char* TEXTURE_DOWNLOAD_GET_NAME_f(int p0) { return FastCall<char*>(0xc4e1ae2aa3115d87, p0); }
	int GET_STATUS_OF_TEXTURE_DOWNLOAD(int p0) { return Call<int>(0xd2b61b04890b8b90, p0); }
	int GET_STATUS_OF_TEXTURE_DOWNLOAD_f(int p0) { return FastCall<int>(0xd2b61b04890b8b90, p0); }
	BOOL NETWORK_CHECK_ROS_LINK_WENTDOWN_NOT_NET() { return Call<BOOL>(0xfceb52aadf7b8b7c); }
	BOOL NETWORK_CHECK_ROS_LINK_WENTDOWN_NOT_NET_f() { return FastCall<BOOL>(0xfceb52aadf7b8b7c); }
	BOOL NETWORK_SHOULD_SHOW_STRICT_NAT_WARNING() { return Call<BOOL>(0xb8b4879b619b680f); }
	BOOL NETWORK_SHOULD_SHOW_STRICT_NAT_WARNING_f() { return FastCall<BOOL>(0xb8b4879b619b680f); }
	BOOL NETWORK_IS_CABLE_CONNECTED() { return Call<BOOL>(0xf1856421ae081603); }
	BOOL NETWORK_IS_CABLE_CONNECTED_f() { return FastCall<BOOL>(0xf1856421ae081603); }
	BOOL NETWORK_HAVE_SCS_PRIVATE_MSG_PRIV() { return Call<BOOL>(0xe70ed4bd7c05406b); }
	BOOL NETWORK_HAVE_SCS_PRIVATE_MSG_PRIV_f() { return FastCall<BOOL>(0xe70ed4bd7c05406b); }
	BOOL NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV() { return Call<BOOL>(0xa75e080451e01d35); }
	BOOL NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV_f() { return FastCall<BOOL>(0xa75e080451e01d35); }
	BOOL NETWORK_HAVE_ROS_BANNED_PRIV() { return Call<BOOL>(0x3449888575ef46e1); }
	BOOL NETWORK_HAVE_ROS_BANNED_PRIV_f() { return FastCall<BOOL>(0x3449888575ef46e1); }
	BOOL NETWORK_HAVE_ROS_CREATE_TICKET_PRIV() { return Call<BOOL>(0x8d48205d1df0586e); }
	BOOL NETWORK_HAVE_ROS_CREATE_TICKET_PRIV_f() { return FastCall<BOOL>(0x8d48205d1df0586e); }
	BOOL NETWORK_HAVE_ROS_MULTIPLAYER_PRIV() { return Call<BOOL>(0xece7a5f1ae839583); }
	BOOL NETWORK_HAVE_ROS_MULTIPLAYER_PRIV_f() { return FastCall<BOOL>(0xece7a5f1ae839583); }
	BOOL NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV() { return Call<BOOL>(0xf90e653b60b3d500); }
	BOOL NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV_f() { return FastCall<BOOL>(0xf90e653b60b3d500); }
	BOOL NETWORK_HAS_ROS_PRIVILEGE(int index) { return Call<BOOL>(0x3f6294276f78c652, index); }
	BOOL NETWORK_HAS_ROS_PRIVILEGE_f(int index) { return FastCall<BOOL>(0x3f6294276f78c652, index); }
	BOOL NETWORK_HAS_ROS_PRIVILEGE_END_DATE(int privilege, int* banType, Any* timeData) { return Call<BOOL>(0x229bc073212cb7ff, privilege, banType, timeData); }
	BOOL NETWORK_HAS_ROS_PRIVILEGE_END_DATE_f(int privilege, int* banType, Any* timeData) { return FastCall<BOOL>(0x229bc073212cb7ff, privilege, banType, timeData); }
	BOOL NETWORK_HAS_ROS_PRIVILEGE_PLAYED_LAST_GEN() { return Call<BOOL>(0xc07f2ee2ad6f6a06); }
	BOOL NETWORK_HAS_ROS_PRIVILEGE_PLAYED_LAST_GEN_f() { return FastCall<BOOL>(0xc07f2ee2ad6f6a06); }
	BOOL NETWORK_HAS_ROS_PRIVILEGE_SPECIAL_EDITION_CONTENT() { return Call<BOOL>(0xfa432a2ec738b025); }
	BOOL NETWORK_HAS_ROS_PRIVILEGE_SPECIAL_EDITION_CONTENT_f() { return FastCall<BOOL>(0xfa432a2ec738b025); }
	BOOL _NETWORK_HAS_ROS_PRIVILEGE_MP_TEXT_COMMUNICATION() { return Call<BOOL>(0x1510392393a5afd4); }
	BOOL _NETWORK_HAS_ROS_PRIVILEGE_MP_TEXT_COMMUNICATION_f() { return FastCall<BOOL>(0x1510392393a5afd4); }
	BOOL _NETWORK_HAS_ROS_PRIVILEGE_MP_VOICE_COMMUNICATION() { return Call<BOOL>(0x251da08d9d6e0599); }
	BOOL _NETWORK_HAS_ROS_PRIVILEGE_MP_VOICE_COMMUNICATION_f() { return FastCall<BOOL>(0x251da08d9d6e0599); }
	BOOL _NETWORK_HAS_ROS_PRIVILEGE_REPORTING() { return Call<BOOL>(0xba79acdd68ba43a2); }
	BOOL _NETWORK_HAS_ROS_PRIVILEGE_REPORTING_f() { return FastCall<BOOL>(0xba79acdd68ba43a2); }
	int NETWORK_START_COMMUNICATION_PERMISSIONS_CHECK(Any p0) { return Call<int>(0xd17796b88bd48f96, p0); }
	int NETWORK_START_COMMUNICATION_PERMISSIONS_CHECK_f(Any p0) { return FastCall<int>(0xd17796b88bd48f96, p0); }
	int NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK(Any* netHandle) { return Call<int>(0xe58a2810a2f74aa1, netHandle); }
	int NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK_f(Any* netHandle) { return FastCall<int>(0xe58a2810a2f74aa1, netHandle); }
	void NETWORK_SKIP_RADIO_RESET_NEXT_CLOSE() { Call<void>(0xa20e70368ec7728f); }
	void NETWORK_SKIP_RADIO_RESET_NEXT_CLOSE_f() { FastCall<void>(0xa20e70368ec7728f); }
	void NETWORK_SKIP_RADIO_RESET_NEXT_OPEN() { Call<void>(0xdbeff31a88c19eb3); }
	void NETWORK_SKIP_RADIO_RESET_NEXT_OPEN_f() { FastCall<void>(0xdbeff31a88c19eb3); }
	BOOL NETWORK_SKIP_RADIO_WARNING() { return Call<BOOL>(0xdfa9b401b44bf229); }
	BOOL NETWORK_SKIP_RADIO_WARNING_f() { return FastCall<BOOL>(0xdfa9b401b44bf229); }
	void NETWORK_FORCE_LOCAL_PLAYER_SCAR_SYNC() { Call<void>(0x93d40af9771714b4); }
	void NETWORK_FORCE_LOCAL_PLAYER_SCAR_SYNC_f() { FastCall<void>(0x93d40af9771714b4); }
	void NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND(BOOL toggle) { Call<void>(0x117725fa857c79d3, toggle); }
	void NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND_f(BOOL toggle) { FastCall<void>(0x117725fa857c79d3, toggle); }
	void NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION(Entity entity, BOOL toggle) { Call<void>(0xee55abff3f82f5a6, entity, toggle); }
	void NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION_f(Entity entity, BOOL toggle) { FastCall<void>(0xee55abff3f82f5a6, entity, toggle); }
	void NETWORK_SHOW_CHAT_RESTRICTION_MSC(Player player) { Call<void>(0x4ce63e58765a9e74, player); }
	void NETWORK_SHOW_CHAT_RESTRICTION_MSC_f(Player player) { FastCall<void>(0x4ce63e58765a9e74, player); }
	void NETWORK_SHOW_PSN_UGC_RESTRICTION() { Call<void>(0xd4af34f2a5dbb99); }
	void NETWORK_SHOW_PSN_UGC_RESTRICTION_f() { FastCall<void>(0xd4af34f2a5dbb99); }
	BOOL NETWORK_IS_TITLE_UPDATE_REQUIRED() { return Call<BOOL>(0x72065f1c82742a0a); }
	BOOL NETWORK_IS_TITLE_UPDATE_REQUIRED_f() { return FastCall<BOOL>(0x72065f1c82742a0a); }
	void NETWORK_QUIT_MP_TO_DESKTOP() { Call<void>(0x1f78d1bfd122aa35); }
	void NETWORK_QUIT_MP_TO_DESKTOP_f() { FastCall<void>(0x1f78d1bfd122aa35); }
	BOOL NETWORK_IS_CONNECTED_VIA_RELAY(Player player) { return Call<BOOL>(0x139b3b3bb0be23c6, player); }
	BOOL NETWORK_IS_CONNECTED_VIA_RELAY_f(Player player) { return FastCall<BOOL>(0x139b3b3bb0be23c6, player); }
	float NETWORK_GET_AVERAGE_LATENCY(Player player) { return ToFloat(Call<_float>(0x24e68c4f7a00b9e2, player)); }
	float NETWORK_GET_AVERAGE_LATENCY_f(Player player) { return ToFloat(FastCall<_float>(0x24e68c4f7a00b9e2, player)); }
	float NETWORK_GET_AVERAGE_PING(Player player) { return ToFloat(Call<_float>(0xf888a3bd51c8d6ee, player)); }
	float NETWORK_GET_AVERAGE_PING_f(Player player) { return ToFloat(FastCall<_float>(0xf888a3bd51c8d6ee, player)); }
	float NETWORK_GET_AVERAGE_PACKET_LOSS(Player player) { return ToFloat(Call<_float>(0xfb2c1ccbe11e0b7e, player)); }
	float NETWORK_GET_AVERAGE_PACKET_LOSS_f(Player player) { return ToFloat(FastCall<_float>(0xfb2c1ccbe11e0b7e, player)); }
	int NETWORK_GET_NUM_UNACKED_RELIABLES(Player player) { return Call<int>(0x4024afff3258fd06, player); }
	int NETWORK_GET_NUM_UNACKED_RELIABLES_f(Player player) { return FastCall<int>(0x4024afff3258fd06, player); }
	int NETWORK_GET_UNRELIABLE_RESEND_COUNT(Player player) { return Call<int>(0xe104c2a5d22fe40d, player); }
	int NETWORK_GET_UNRELIABLE_RESEND_COUNT_f(Player player) { return FastCall<int>(0xe104c2a5d22fe40d, player); }
	int NETWORK_GET_HIGHEST_RELIABLE_RESEND_COUNT(Player player) { return Call<int>(0x87c8e657e2931b0b, player); }
	int NETWORK_GET_HIGHEST_RELIABLE_RESEND_COUNT_f(Player player) { return FastCall<int>(0x87c8e657e2931b0b, player); }
	void NETWORK_REPORT_CODE_TAMPER() { Call<void>(0xbda910cd28275755); }
	void NETWORK_REPORT_CODE_TAMPER_f() { FastCall<void>(0xbda910cd28275755); }
	Vector3* NETWORK_GET_LAST_ENTITY_POS_RECEIVED_OVER_NETWORK(Entity entity) { Call<Vector3*>(0x761355fe7eb89f69, entity); return GetVector(); }
	Vector3* NETWORK_GET_LAST_PLAYER_POS_RECEIVED_OVER_NETWORK(Player player) { Call<Vector3*>(0x5390aa109b074e7, player); return GetVector(); }
	Vector3* NETWORK_GET_LAST_VEL_RECEIVED_OVER_NETWORK(Entity entity) { Call<Vector3*>(0xaad0a211c57d590, entity); return GetVector(); }
	Vector3* NETWORK_GET_PREDICTED_VELOCITY(Entity entity, float maxSpeedToPredict) { Call<Vector3*>(0x92f7e4e426276f1e, entity, maxSpeedToPredict); return GetVector(); }
	void NETWORK_DUMP_NET_IF_CONFIG() { Call<void>(0x980c653899d87328); }
	void NETWORK_DUMP_NET_IF_CONFIG_f() { FastCall<void>(0x980c653899d87328); }
	void NETWORK_GET_SIGNALLING_INFO(Any* p0) { Call<void>(0xa0e2ca8b6c052ef5, p0); }
	void NETWORK_GET_SIGNALLING_INFO_f(Any* p0) { FastCall<void>(0xa0e2ca8b6c052ef5, p0); }
	void NETWORK_GET_NET_STATISTICS_INFO(Any* p0) { Call<void>(0xa0de8c94e6a329ce, p0); }
	void NETWORK_GET_NET_STATISTICS_INFO_f(Any* p0) { FastCall<void>(0xa0de8c94e6a329ce, p0); }
	int NETWORK_GET_PLAYER_ACCOUNT_ID(Player player) { return Call<int>(0x973a8414e61bc471, player); }
	int NETWORK_GET_PLAYER_ACCOUNT_ID_f(Player player) { return FastCall<int>(0x973a8414e61bc471, player); }
	void NETWORK_UGC_NAV(Any p0, Any p1) { Call<void>(0xb26da6775e2ae284, p0, p1); }
	void NETWORK_UGC_NAV_f(Any p0, Any p1) { FastCall<void>(0xb26da6775e2ae284, p0, p1); }
}
namespace OBJECT
{
	Object CREATE_OBJECT(Hash modelHash, float x, float y, float z, BOOL isNetwork, BOOL bScriptHostObj, BOOL dynamic) { return Call<Object>(0xfa1a2742dda4abe2, modelHash, x, y, z, isNetwork, bScriptHostObj, dynamic); }
	Object CREATE_OBJECT_f(Hash modelHash, float x, float y, float z, BOOL isNetwork, BOOL bScriptHostObj, BOOL dynamic) { return FastCall<Object>(0xfa1a2742dda4abe2, modelHash, x, y, z, isNetwork, bScriptHostObj, dynamic); }
	Object CREATE_OBJECT_NO_OFFSET(Hash modelHash, float x, float y, float z, BOOL isNetwork, BOOL bScriptHostObj, BOOL dynamic, Any p7) { return Call<Object>(0x4847193064c2b4b4, modelHash, x, y, z, isNetwork, bScriptHostObj, dynamic, p7); }
	Object CREATE_OBJECT_NO_OFFSET_f(Hash modelHash, float x, float y, float z, BOOL isNetwork, BOOL bScriptHostObj, BOOL dynamic, Any p7) { return FastCall<Object>(0x4847193064c2b4b4, modelHash, x, y, z, isNetwork, bScriptHostObj, dynamic, p7); }
	void DELETE_OBJECT(Object* object) { Call<void>(0x87c1554b88f453, object); }
	void DELETE_OBJECT_f(Object* object) { FastCall<void>(0x87c1554b88f453, object); }
	BOOL PLACE_OBJECT_ON_GROUND_PROPERLY(Object object) { return Call<BOOL>(0x1abfb8a112cd21dd, object); }
	BOOL PLACE_OBJECT_ON_GROUND_PROPERLY_f(Object object) { return FastCall<BOOL>(0x1abfb8a112cd21dd, object); }
	BOOL PLACE_OBJECT_ON_GROUND_OR_OBJECT_PROPERLY(Object object) { return Call<BOOL>(0x99e7822ebb746c81, object); }
	BOOL PLACE_OBJECT_ON_GROUND_OR_OBJECT_PROPERLY_f(Object object) { return FastCall<BOOL>(0x99e7822ebb746c81, object); }
	BOOL ROTATE_OBJECT(Object object, float p1, float p2, BOOL p3) { return Call<BOOL>(0x9d2e214779a396a3, object, p1, p2, p3); }
	BOOL ROTATE_OBJECT_f(Object object, float p1, float p2, BOOL p3) { return FastCall<BOOL>(0x9d2e214779a396a3, object, p1, p2, p3); }
	BOOL SLIDE_OBJECT(Object object, float toX, float toY, float toZ, float speedX, float speedY, float speedZ, BOOL collision) { return Call<BOOL>(0x1e28b49ce95119ad, object, toX, toY, toZ, speedX, speedY, speedZ, collision); }
	BOOL SLIDE_OBJECT_f(Object object, float toX, float toY, float toZ, float speedX, float speedY, float speedZ, BOOL collision) { return FastCall<BOOL>(0x1e28b49ce95119ad, object, toX, toY, toZ, speedX, speedY, speedZ, collision); }
	void SET_OBJECT_TARGETTABLE(Object object, BOOL targettable, Any p2) { Call<void>(0x86bcbd2677310ada, object, targettable, p2); }
	void SET_OBJECT_TARGETTABLE_f(Object object, BOOL targettable, Any p2) { FastCall<void>(0x86bcbd2677310ada, object, targettable, p2); }
	void _SET_OBJECT_TARGETTABLE_BY_PLAYER(Object object, BOOL setFlag34, BOOL setFlag35) { Call<void>(0x37db00cf872b4503, object, setFlag34, setFlag35); }
	void _SET_OBJECT_TARGETTABLE_BY_PLAYER_f(Object object, BOOL setFlag34, BOOL setFlag35) { FastCall<void>(0x37db00cf872b4503, object, setFlag34, setFlag35); }
	void SET_OBJECT_FORCE_VEHICLES_TO_AVOID(Object object, BOOL toggle) { Call<void>(0xd613ca88025ad732, object, toggle); }
	void SET_OBJECT_FORCE_VEHICLES_TO_AVOID_f(Object object, BOOL toggle) { FastCall<void>(0xd613ca88025ad732, object, toggle); }
	Object GET_CLOSEST_OBJECT_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, BOOL isMission, BOOL p6, BOOL p7) { return Call<Object>(0x59f96fc075d09d91, x, y, z, radius, modelHash, isMission, p6, p7); }
	Object GET_CLOSEST_OBJECT_OF_TYPE_f(float x, float y, float z, float radius, Hash modelHash, BOOL isMission, BOOL p6, BOOL p7) { return FastCall<Object>(0x59f96fc075d09d91, x, y, z, radius, modelHash, isMission, p6, p7); }
	BOOL HAS_OBJECT_BEEN_BROKEN(Object object, Any p1) { return Call<BOOL>(0x381baa467ec13c2d, object, p1); }
	BOOL HAS_OBJECT_BEEN_BROKEN_f(Object object, Any p1) { return FastCall<BOOL>(0x381baa467ec13c2d, object, p1); }
	BOOL HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN(float p0, float p1, float p2, float p3, Hash modelHash, Any p5) { return Call<BOOL>(0xf00a993f18ebd3d6, p0, p1, p2, p3, modelHash, p5); }
	BOOL HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN_f(float p0, float p1, float p2, float p3, Hash modelHash, Any p5) { return FastCall<BOOL>(0xf00a993f18ebd3d6, p0, p1, p2, p3, modelHash, p5); }
	BOOL HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { return Call<BOOL>(0xf71817e758dac3c1, x, y, z, radius, modelHash, p5); }
	BOOL HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED_f(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { return FastCall<BOOL>(0xf71817e758dac3c1, x, y, z, radius, modelHash, p5); }
	BOOL GET_HAS_OBJECT_BEEN_COMPLETELY_DESTROYED(Any p0) { return Call<BOOL>(0x7f4b25fea39e9b41, p0); }
	BOOL GET_HAS_OBJECT_BEEN_COMPLETELY_DESTROYED_f(Any p0) { return FastCall<BOOL>(0x7f4b25fea39e9b41, p0); }
	Vector3* GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(float xPos, float yPos, float zPos, float heading, float xOffset, float yOffset, float zOffset) { Call<Vector3*>(0xf686e8250d96d1a4, xPos, yPos, zPos, heading, xOffset, yOffset, zOffset); return GetVector(); }
	BOOL GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, Vector3* outPosition, Vector3* outRotation, int rotationOrder) { return Call<BOOL>(0x857ec967b221c5cf, x, y, z, radius, modelHash, outPosition, outRotation, rotationOrder); }
	BOOL GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE_f(float x, float y, float z, float radius, Hash modelHash, Vector3* outPosition, Vector3* outRotation, int rotationOrder) { return FastCall<BOOL>(0x857ec967b221c5cf, x, y, z, radius, modelHash, outPosition, outRotation, rotationOrder); }
	void SET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, BOOL locked, float heading, BOOL p6) { Call<void>(0xc8ec92cdf7b179b4, type, x, y, z, locked, heading, p6); }
	void SET_STATE_OF_CLOSEST_DOOR_OF_TYPE_f(Hash type, float x, float y, float z, BOOL locked, float heading, BOOL p6) { FastCall<void>(0xc8ec92cdf7b179b4, type, x, y, z, locked, heading, p6); }
	void GET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, BOOL* locked, float* heading) { Call<void>(0x658084b41194a9a8, type, x, y, z, locked, heading); }
	void GET_STATE_OF_CLOSEST_DOOR_OF_TYPE_f(Hash type, float x, float y, float z, BOOL* locked, float* heading) { FastCall<void>(0x658084b41194a9a8, type, x, y, z, locked, heading); }
	void SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE(Hash modelHash, float x, float y, float z, BOOL locked, float xRotMult, float yRotMult, float zRotMult) { Call<void>(0xb6fecac4f52142fc, modelHash, x, y, z, locked, xRotMult, yRotMult, zRotMult); }
	void SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE_f(Hash modelHash, float x, float y, float z, BOOL locked, float xRotMult, float yRotMult, float zRotMult) { FastCall<void>(0xb6fecac4f52142fc, modelHash, x, y, z, locked, xRotMult, yRotMult, zRotMult); }
	void PLAY_OBJECT_AUTO_START_ANIM(Any p0) { Call<void>(0x81117f6d646cfce9, p0); }
	void PLAY_OBJECT_AUTO_START_ANIM_f(Any p0) { FastCall<void>(0x81117f6d646cfce9, p0); }
	void ADD_DOOR_TO_SYSTEM(Hash doorHash, Hash modelHash, float x, float y, float z, BOOL p5, BOOL scriptDoor, BOOL isLocal, Any p8) { Call<void>(0x4afc103cd4123ca0, doorHash, modelHash, x, y, z, p5, scriptDoor, isLocal, p8); }
	void ADD_DOOR_TO_SYSTEM_f(Hash doorHash, Hash modelHash, float x, float y, float z, BOOL p5, BOOL scriptDoor, BOOL isLocal, Any p8) { FastCall<void>(0x4afc103cd4123ca0, doorHash, modelHash, x, y, z, p5, scriptDoor, isLocal, p8); }
	void REMOVE_DOOR_FROM_SYSTEM(Hash doorHash, Any p1) { Call<void>(0x9ae5582d104b33ae, doorHash, p1); }
	void REMOVE_DOOR_FROM_SYSTEM_f(Hash doorHash, Any p1) { FastCall<void>(0x9ae5582d104b33ae, doorHash, p1); }
	void DOOR_SYSTEM_SET_DOOR_STATE(Hash doorHash, int state, BOOL requestDoor, BOOL forceUpdate) { Call<void>(0xf91a58d00dbf52fc, doorHash, state, requestDoor, forceUpdate); }
	void DOOR_SYSTEM_SET_DOOR_STATE_f(Hash doorHash, int state, BOOL requestDoor, BOOL forceUpdate) { FastCall<void>(0xf91a58d00dbf52fc, doorHash, state, requestDoor, forceUpdate); }
	int DOOR_SYSTEM_GET_DOOR_STATE(Hash doorHash) { return Call<int>(0x16c3bcf57759df88, doorHash); }
	int DOOR_SYSTEM_GET_DOOR_STATE_f(Hash doorHash) { return FastCall<int>(0x16c3bcf57759df88, doorHash); }
	int DOOR_SYSTEM_GET_DOOR_PENDING_STATE(Hash doorHash) { return Call<int>(0x397808abc5d71bc0, doorHash); }
	int DOOR_SYSTEM_GET_DOOR_PENDING_STATE_f(Hash doorHash) { return FastCall<int>(0x397808abc5d71bc0, doorHash); }
	void DOOR_SYSTEM_SET_AUTOMATIC_RATE(Hash doorHash, float rate, BOOL requestDoor, BOOL forceUpdate) { Call<void>(0xa5b7394f2b2bef0, doorHash, rate, requestDoor, forceUpdate); }
	void DOOR_SYSTEM_SET_AUTOMATIC_RATE_f(Hash doorHash, float rate, BOOL requestDoor, BOOL forceUpdate) { FastCall<void>(0xa5b7394f2b2bef0, doorHash, rate, requestDoor, forceUpdate); }
	void DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Hash doorHash, float distance, BOOL requestDoor, BOOL forceUpdate) { Call<void>(0xc19ce54ac4786e05, doorHash, distance, requestDoor, forceUpdate); }
	void DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE_f(Hash doorHash, float distance, BOOL requestDoor, BOOL forceUpdate) { FastCall<void>(0xc19ce54ac4786e05, doorHash, distance, requestDoor, forceUpdate); }
	void DOOR_SYSTEM_SET_OPEN_RATIO(Hash doorHash, float ajar, BOOL requestDoor, BOOL forceUpdate) { Call<void>(0xf91b61d93eb07c12, doorHash, ajar, requestDoor, forceUpdate); }
	void DOOR_SYSTEM_SET_OPEN_RATIO_f(Hash doorHash, float ajar, BOOL requestDoor, BOOL forceUpdate) { FastCall<void>(0xf91b61d93eb07c12, doorHash, ajar, requestDoor, forceUpdate); }
	float DOOR_SYSTEM_GET_AUTOMATIC_DISTANCE(Hash doorHash) { return ToFloat(Call<_float>(0x3a389cd07633ae91, doorHash)); }
	float DOOR_SYSTEM_GET_AUTOMATIC_DISTANCE_f(Hash doorHash) { return ToFloat(FastCall<_float>(0x3a389cd07633ae91, doorHash)); }
	float DOOR_SYSTEM_GET_OPEN_RATIO(Hash doorHash) { return ToFloat(Call<_float>(0x16c4c5fea84b089e, doorHash)); }
	float DOOR_SYSTEM_GET_OPEN_RATIO_f(Hash doorHash) { return ToFloat(FastCall<_float>(0x16c4c5fea84b089e, doorHash)); }
	void DOOR_SYSTEM_SET_SPRING_REMOVED(Hash doorHash, BOOL removed, BOOL requestDoor, BOOL forceUpdate) { Call<void>(0xa66fc4446210586a, doorHash, removed, requestDoor, forceUpdate); }
	void DOOR_SYSTEM_SET_SPRING_REMOVED_f(Hash doorHash, BOOL removed, BOOL requestDoor, BOOL forceUpdate) { FastCall<void>(0xa66fc4446210586a, doorHash, removed, requestDoor, forceUpdate); }
	void DOOR_SYSTEM_SET_HOLD_OPEN(Hash doorHash, BOOL toggle) { Call<void>(0xef42ed30d4b94bee, doorHash, toggle); }
	void DOOR_SYSTEM_SET_HOLD_OPEN_f(Hash doorHash, BOOL toggle) { FastCall<void>(0xef42ed30d4b94bee, doorHash, toggle); }
	void DOOR_SYSTEM_SET_DOOR_OPEN_FOR_RACES(Hash doorHash, BOOL p1) { Call<void>(0x7d01c2a658b592ac, doorHash, p1); }
	void DOOR_SYSTEM_SET_DOOR_OPEN_FOR_RACES_f(Hash doorHash, BOOL p1) { FastCall<void>(0x7d01c2a658b592ac, doorHash, p1); }
	BOOL IS_DOOR_REGISTERED_WITH_SYSTEM(Hash doorHash) { return Call<BOOL>(0x6fa533b65d5c67a7, doorHash); }
	BOOL IS_DOOR_REGISTERED_WITH_SYSTEM_f(Hash doorHash) { return FastCall<BOOL>(0x6fa533b65d5c67a7, doorHash); }
	BOOL IS_DOOR_CLOSED(Hash doorHash) { return Call<BOOL>(0x4e77b075a666cf88, doorHash); }
	BOOL IS_DOOR_CLOSED_f(Hash doorHash) { return FastCall<BOOL>(0x4e77b075a666cf88, doorHash); }
	void OPEN_ALL_BARRIERS_FOR_RACE(BOOL p0) { Call<void>(0x79a25bc6cbb3be77, p0); }
	void OPEN_ALL_BARRIERS_FOR_RACE_f(BOOL p0) { FastCall<void>(0x79a25bc6cbb3be77, p0); }
	void CLOSE_ALL_BARRIERS_FOR_RACE() { Call<void>(0x94557f8c6e864785); }
	void CLOSE_ALL_BARRIERS_FOR_RACE_f() { FastCall<void>(0x94557f8c6e864785); }
	BOOL DOOR_SYSTEM_GET_IS_PHYSICS_LOADED(Any p0) { return Call<BOOL>(0xae7f480656f94cea, p0); }
	BOOL DOOR_SYSTEM_GET_IS_PHYSICS_LOADED_f(Any p0) { return FastCall<BOOL>(0xae7f480656f94cea, p0); }
	BOOL DOOR_SYSTEM_FIND_EXISTING_DOOR(float x, float y, float z, Hash modelHash, Hash* outDoorHash) { return Call<BOOL>(0xefae5ed4fb06489b, x, y, z, modelHash, outDoorHash); }
	BOOL DOOR_SYSTEM_FIND_EXISTING_DOOR_f(float x, float y, float z, Hash modelHash, Hash* outDoorHash) { return FastCall<BOOL>(0xefae5ed4fb06489b, x, y, z, modelHash, outDoorHash); }
	BOOL IS_GARAGE_EMPTY(Hash garageHash, BOOL p1, int p2) { return Call<BOOL>(0x8164a2f5e9e41b0a, garageHash, p1, p2); }
	BOOL IS_GARAGE_EMPTY_f(Hash garageHash, BOOL p1, int p2) { return FastCall<BOOL>(0x8164a2f5e9e41b0a, garageHash, p1, p2); }
	BOOL IS_PLAYER_ENTIRELY_INSIDE_GARAGE(Hash garageHash, Player player, float p2, int p3) { return Call<BOOL>(0xba5fad3c9ce681f2, garageHash, player, p2, p3); }
	BOOL IS_PLAYER_ENTIRELY_INSIDE_GARAGE_f(Hash garageHash, Player player, float p2, int p3) { return FastCall<BOOL>(0xba5fad3c9ce681f2, garageHash, player, p2, p3); }
	BOOL IS_PLAYER_PARTIALLY_INSIDE_GARAGE(Hash garageHash, Player player, int p2) { return Call<BOOL>(0xb15710f0675f4b50, garageHash, player, p2); }
	BOOL IS_PLAYER_PARTIALLY_INSIDE_GARAGE_f(Hash garageHash, Player player, int p2) { return FastCall<BOOL>(0xb15710f0675f4b50, garageHash, player, p2); }
	BOOL ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE(Hash garageHash, BOOL p1, BOOL p2, BOOL p3, Any p4) { return Call<BOOL>(0xb11c7013af71eb5c, garageHash, p1, p2, p3, p4); }
	BOOL ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE_f(Hash garageHash, BOOL p1, BOOL p2, BOOL p3, Any p4) { return FastCall<BOOL>(0xb11c7013af71eb5c, garageHash, p1, p2, p3, p4); }
	BOOL IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE(Hash garageHash, BOOL p1, BOOL p2, BOOL p3, Any p4) { return Call<BOOL>(0x35cb152c5abe9fd, garageHash, p1, p2, p3, p4); }
	BOOL IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE_f(Hash garageHash, BOOL p1, BOOL p2, BOOL p3, Any p4) { return FastCall<BOOL>(0x35cb152c5abe9fd, garageHash, p1, p2, p3, p4); }
	BOOL IS_OBJECT_ENTIRELY_INSIDE_GARAGE(Hash garageHash, Entity entity, float p2, int p3) { return Call<BOOL>(0xe607f76cd9edefd4, garageHash, entity, p2, p3); }
	BOOL IS_OBJECT_ENTIRELY_INSIDE_GARAGE_f(Hash garageHash, Entity entity, float p2, int p3) { return FastCall<BOOL>(0xe607f76cd9edefd4, garageHash, entity, p2, p3); }
	BOOL IS_OBJECT_PARTIALLY_INSIDE_GARAGE(Hash garageHash, Entity entity, int p2) { return Call<BOOL>(0xfab80cc7cb4599ae, garageHash, entity, p2); }
	BOOL IS_OBJECT_PARTIALLY_INSIDE_GARAGE_f(Hash garageHash, Entity entity, int p2) { return FastCall<BOOL>(0xfab80cc7cb4599ae, garageHash, entity, p2); }
	void CLEAR_GARAGE(Hash garageHash, BOOL isNetwork) { Call<void>(0x1884046c1901b179, garageHash, isNetwork); }
	void CLEAR_GARAGE_f(Hash garageHash, BOOL isNetwork) { FastCall<void>(0x1884046c1901b179, garageHash, isNetwork); }
	void CLEAR_OBJECTS_INSIDE_GARAGE(Hash garageHash, BOOL vehicles, BOOL peds, BOOL objects, BOOL isNetwork) { Call<void>(0xdf1e5115c1b12c2d, garageHash, vehicles, peds, objects, isNetwork); }
	void CLEAR_OBJECTS_INSIDE_GARAGE_f(Hash garageHash, BOOL vehicles, BOOL peds, BOOL objects, BOOL isNetwork) { FastCall<void>(0xdf1e5115c1b12c2d, garageHash, vehicles, peds, objects, isNetwork); }
	void DISABLE_TIDYING_UP_IN_GARAGE(int id, BOOL toggle) { Call<void>(0xe5606dd7f385c71b, id, toggle); }
	void DISABLE_TIDYING_UP_IN_GARAGE_f(int id, BOOL toggle) { FastCall<void>(0xe5606dd7f385c71b, id, toggle); }
	void ENABLE_SAVING_IN_GARAGE(Hash garageHash, BOOL toggle) { Call<void>(0xef3ceea70dbd2fb8, garageHash, toggle); }
	void ENABLE_SAVING_IN_GARAGE_f(Hash garageHash, BOOL toggle) { FastCall<void>(0xef3ceea70dbd2fb8, garageHash, toggle); }
	void CLOSE_SAFEHOUSE_GARAGES() { Call<void>(0xa87694b5320cab9); }
	void CLOSE_SAFEHOUSE_GARAGES_f() { FastCall<void>(0xa87694b5320cab9); }
	BOOL DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(float x, float y, float z, float radius, Hash hash, BOOL p5) { return Call<BOOL>(0x9252bcabfa4562b, x, y, z, radius, hash, p5); }
	BOOL DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS_f(float x, float y, float z, float radius, Hash hash, BOOL p5) { return FastCall<BOOL>(0x9252bcabfa4562b, x, y, z, radius, hash, p5); }
	BOOL IS_POINT_IN_ANGLED_AREA(float xPos, float yPos, float zPos, float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL debug, BOOL includeZ) { return Call<BOOL>(0x5cd1bdda26dca4a5, xPos, yPos, zPos, x1, y1, z1, x2, y2, z2, width, debug, includeZ); }
	BOOL IS_POINT_IN_ANGLED_AREA_f(float xPos, float yPos, float zPos, float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL debug, BOOL includeZ) { return FastCall<BOOL>(0x5cd1bdda26dca4a5, xPos, yPos, zPos, x1, y1, z1, x2, y2, z2, width, debug, includeZ); }
	void SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY(Object object, BOOL toggle) { Call<void>(0xb424e9c033ac8302, object, toggle); }
	void SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY_f(Object object, BOOL toggle) { FastCall<void>(0xb424e9c033ac8302, object, toggle); }
	void SET_OBJECT_PHYSICS_PARAMS(Object object, float weight, float p2, float p3, float p4, float p5, float gravity, float p7, float p8, float p9, float p10, float buoyancy) { Call<void>(0x896cf3ba7dd3a361, object, weight, p2, p3, p4, p5, gravity, p7, p8, p9, p10, buoyancy); }
	void SET_OBJECT_PHYSICS_PARAMS_f(Object object, float weight, float p2, float p3, float p4, float p5, float gravity, float p7, float p8, float p9, float p10, float buoyancy) { FastCall<void>(0x896cf3ba7dd3a361, object, weight, p2, p3, p4, p5, gravity, p7, p8, p9, p10, buoyancy); }
	float GET_OBJECT_FRAGMENT_DAMAGE_HEALTH(Any p0, BOOL p1) { return ToFloat(Call<_float>(0xbedad4185ef4b334, p0, p1)); }
	float GET_OBJECT_FRAGMENT_DAMAGE_HEALTH_f(Any p0, BOOL p1) { return ToFloat(FastCall<_float>(0xbedad4185ef4b334, p0, p1)); }
	void SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(Object object, BOOL toggle) { Call<void>(0x29e11e931aed3f27, object, toggle); }
	void SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN_f(Object object, BOOL toggle) { FastCall<void>(0x29e11e931aed3f27, object, toggle); }
	BOOL IS_ANY_OBJECT_NEAR_POINT(float x, float y, float z, float range, BOOL p4) { return Call<BOOL>(0x32a65ab685bfce91, x, y, z, range, p4); }
	BOOL IS_ANY_OBJECT_NEAR_POINT_f(float x, float y, float z, float range, BOOL p4) { return FastCall<BOOL>(0x32a65ab685bfce91, x, y, z, range, p4); }
	BOOL IS_OBJECT_NEAR_POINT(Hash objectHash, float x, float y, float z, float range) { return Call<BOOL>(0x3cf2accd249b4fc4, objectHash, x, y, z, range); }
	BOOL IS_OBJECT_NEAR_POINT_f(Hash objectHash, float x, float y, float z, float range) { return FastCall<BOOL>(0x3cf2accd249b4fc4, objectHash, x, y, z, range); }
	void REMOVE_OBJECT_HIGH_DETAIL_MODEL(Object object) { Call<void>(0xd43a612e93804f73, object); }
	void REMOVE_OBJECT_HIGH_DETAIL_MODEL_f(Object object) { FastCall<void>(0xd43a612e93804f73, object); }
	void BREAK_OBJECT_FRAGMENT_CHILD(Object p0, Any p1, BOOL p2) { Call<void>(0xe9086818a716e7ed, p0, p1, p2); }
	void BREAK_OBJECT_FRAGMENT_CHILD_f(Object p0, Any p1, BOOL p2) { FastCall<void>(0xe9086818a716e7ed, p0, p1, p2); }
	void DAMAGE_OBJECT_FRAGMENT_CHILD(Any p0, Any p1, Any p2) { Call<void>(0xe458329a762bba7d, p0, p1, p2); }
	void DAMAGE_OBJECT_FRAGMENT_CHILD_f(Any p0, Any p1, Any p2) { FastCall<void>(0xe458329a762bba7d, p0, p1, p2); }
	void FIX_OBJECT_FRAGMENT(Object object) { Call<void>(0x8378b77ba5fcff06, object); }
	void FIX_OBJECT_FRAGMENT_f(Object object) { FastCall<void>(0x8378b77ba5fcff06, object); }
	void TRACK_OBJECT_VISIBILITY(Object object) { Call<void>(0x248dc8b1ea96dfe, object); }
	void TRACK_OBJECT_VISIBILITY_f(Object object) { FastCall<void>(0x248dc8b1ea96dfe, object); }
	BOOL IS_OBJECT_VISIBLE(Object object) { return Call<BOOL>(0x59d3a66b7038b707, object); }
	BOOL IS_OBJECT_VISIBLE_f(Object object) { return FastCall<BOOL>(0x59d3a66b7038b707, object); }
	void SET_OBJECT_IS_SPECIAL_GOLFBALL(Object object, BOOL toggle) { Call<void>(0x7b7176575b475d9, object, toggle); }
	void SET_OBJECT_IS_SPECIAL_GOLFBALL_f(Object object, BOOL toggle) { FastCall<void>(0x7b7176575b475d9, object, toggle); }
	void SET_OBJECT_TAKES_DAMAGE_FROM_COLLIDING_WITH_BUILDINGS(Any p0, BOOL p1) { Call<void>(0xd2a342b27c4f2f65, p0, p1); }
	void SET_OBJECT_TAKES_DAMAGE_FROM_COLLIDING_WITH_BUILDINGS_f(Any p0, BOOL p1) { FastCall<void>(0xd2a342b27c4f2f65, p0, p1); }
	void ALLOW_DAMAGE_EVENTS_FOR_NON_NETWORKED_OBJECTS(BOOL value) { Call<void>(0x4deb91c9ff4971ce, value); }
	void ALLOW_DAMAGE_EVENTS_FOR_NON_NETWORKED_OBJECTS_f(BOOL value) { FastCall<void>(0x4deb91c9ff4971ce, value); }
	void SET_CUTSCENES_WEAPON_FLASHLIGHT_ON_THIS_FRAME(Object object, BOOL toggle) { Call<void>(0x861b4719de3c0043, object, toggle); }
	void SET_CUTSCENES_WEAPON_FLASHLIGHT_ON_THIS_FRAME_f(Object object, BOOL toggle) { FastCall<void>(0x861b4719de3c0043, object, toggle); }
	Object GET_RAYFIRE_MAP_OBJECT(float x, float y, float z, float radius, char* name) { return Call<Object>(0xd26488905b05d3aa, x, y, z, radius, name); }
	Object GET_RAYFIRE_MAP_OBJECT_f(float x, float y, float z, float radius, char* name) { return FastCall<Object>(0xd26488905b05d3aa, x, y, z, radius, name); }
	void SET_STATE_OF_RAYFIRE_MAP_OBJECT(Object object, int state) { Call<void>(0x89082221d37879e, object, state); }
	void SET_STATE_OF_RAYFIRE_MAP_OBJECT_f(Object object, int state) { FastCall<void>(0x89082221d37879e, object, state); }
	int GET_STATE_OF_RAYFIRE_MAP_OBJECT(Object object) { return Call<int>(0x530cccb5224e2492, object); }
	int GET_STATE_OF_RAYFIRE_MAP_OBJECT_f(Object object) { return FastCall<int>(0x530cccb5224e2492, object); }
	BOOL DOES_RAYFIRE_MAP_OBJECT_EXIST(Object object) { return Call<BOOL>(0x5994b5164af85c1f, object); }
	BOOL DOES_RAYFIRE_MAP_OBJECT_EXIST_f(Object object) { return FastCall<BOOL>(0x5994b5164af85c1f, object); }
	float GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE(Object object) { return ToFloat(Call<_float>(0xd9d127c12a991162, object)); }
	float GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE_f(Object object) { return ToFloat(FastCall<_float>(0xd9d127c12a991162, object)); }
	Pickup CREATE_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int p4, int value, BOOL p6, Hash modelHash) { return Call<Pickup>(0xfa1a2742dfb9131f, pickupHash, posX, posY, posZ, p4, value, p6, modelHash); }
	Pickup CREATE_PICKUP_f(Hash pickupHash, float posX, float posY, float posZ, int p4, int value, BOOL p6, Hash modelHash) { return FastCall<Pickup>(0xfa1a2742dfb9131f, pickupHash, posX, posY, posZ, p4, value, p6, modelHash); }
	Pickup CREATE_PICKUP_ROTATE(Hash pickupHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, int flag, int amount, Any p9, BOOL p10, Hash modelHash) { return Call<Pickup>(0x3a83cde2a9dca7b, pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, modelHash); }
	Pickup CREATE_PICKUP_ROTATE_f(Hash pickupHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, int flag, int amount, Any p9, BOOL p10, Hash modelHash) { return FastCall<Pickup>(0x3a83cde2a9dca7b, pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, modelHash); }
	void FORCE_PICKUP_ROTATE_FACE_UP() { Call<void>(0x7eeb2b02576b1688); }
	void FORCE_PICKUP_ROTATE_FACE_UP_f() { FastCall<void>(0x7eeb2b02576b1688); }
	void SET_CUSTOM_PICKUP_WEAPON_HASH(Hash pickupHash, Pickup pickup) { Call<void>(0x75587bcdbb7b21df, pickupHash, pickup); }
	void SET_CUSTOM_PICKUP_WEAPON_HASH_f(Hash pickupHash, Pickup pickup) { FastCall<void>(0x75587bcdbb7b21df, pickupHash, pickup); }
	Object CREATE_AMBIENT_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int flags, int value, Hash modelHash, BOOL p7, BOOL p8) { return Call<Object>(0xc1cade4442ac87c6, pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8); }
	Object CREATE_AMBIENT_PICKUP_f(Hash pickupHash, float posX, float posY, float posZ, int flags, int value, Hash modelHash, BOOL p7, BOOL p8) { return FastCall<Object>(0xc1cade4442ac87c6, pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8); }
	Object CREATE_NON_NETWORKED_AMBIENT_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int flags, int value, Hash modelHash, BOOL p7, BOOL p8) { return Call<Object>(0xdcd742b802fe2b2a, pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8); }
	Object CREATE_NON_NETWORKED_AMBIENT_PICKUP_f(Hash pickupHash, float posX, float posY, float posZ, int flags, int value, Hash modelHash, BOOL p7, BOOL p8) { return FastCall<Object>(0xdcd742b802fe2b2a, pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8); }
	void BLOCK_PLAYERS_FOR_AMBIENT_PICKUP(Any p0, Any p1) { Call<void>(0x56bfd92c8782c758, p0, p1); }
	void BLOCK_PLAYERS_FOR_AMBIENT_PICKUP_f(Any p0, Any p1) { FastCall<void>(0x56bfd92c8782c758, p0, p1); }
	Object CREATE_PORTABLE_PICKUP(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Hash modelHash) { return Call<Object>(0x529fb6118707cc9d, pickupHash, x, y, z, placeOnGround, modelHash); }
	Object CREATE_PORTABLE_PICKUP_f(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Hash modelHash) { return FastCall<Object>(0x529fb6118707cc9d, pickupHash, x, y, z, placeOnGround, modelHash); }
	Object CREATE_NON_NETWORKED_PORTABLE_PICKUP(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Hash modelHash) { return Call<Object>(0x991fe015d0ea95b9, pickupHash, x, y, z, placeOnGround, modelHash); }
	Object CREATE_NON_NETWORKED_PORTABLE_PICKUP_f(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Hash modelHash) { return FastCall<Object>(0x991fe015d0ea95b9, pickupHash, x, y, z, placeOnGround, modelHash); }
	void ATTACH_PORTABLE_PICKUP_TO_PED(Object pickupObject, Ped ped) { Call<void>(0x5b0c7b7244d1bfa4, pickupObject, ped); }
	void ATTACH_PORTABLE_PICKUP_TO_PED_f(Object pickupObject, Ped ped) { FastCall<void>(0x5b0c7b7244d1bfa4, pickupObject, ped); }
	void DETACH_PORTABLE_PICKUP_FROM_PED(Object pickupObject) { Call<void>(0x1513ec9d60f32585, pickupObject); }
	void DETACH_PORTABLE_PICKUP_FROM_PED_f(Object pickupObject) { FastCall<void>(0x1513ec9d60f32585, pickupObject); }
	void FORCE_PORTABLE_PICKUP_LAST_ACCESSIBLE_POSITION_SETTING(Object object) { Call<void>(0x93e027e7d17eedcd, object); }
	void FORCE_PORTABLE_PICKUP_LAST_ACCESSIBLE_POSITION_SETTING_f(Object object) { FastCall<void>(0x93e027e7d17eedcd, object); }
	void HIDE_PORTABLE_PICKUP_WHEN_DETACHED(Object pickupObject, BOOL toggle) { Call<void>(0x1797641af440d47b, pickupObject, toggle); }
	void HIDE_PORTABLE_PICKUP_WHEN_DETACHED_f(Object pickupObject, BOOL toggle) { FastCall<void>(0x1797641af440d47b, pickupObject, toggle); }
	void SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER(Hash modelHash, int number) { Call<void>(0x82910e0f020f70b9, modelHash, number); }
	void SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER_f(Hash modelHash, int number) { FastCall<void>(0x82910e0f020f70b9, modelHash, number); }
	void SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS(BOOL toggle) { Call<void>(0xad8c2772fb8084a4, toggle); }
	void SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS_f(BOOL toggle) { FastCall<void>(0xad8c2772fb8084a4, toggle); }
	Vector3* GET_SAFE_PICKUP_COORDS(float x, float y, float z, float p3, float p4) { Call<Vector3*>(0x12e4950602ba6db8, x, y, z, p3, p4); return GetVector(); }
	void ADD_EXTENDED_PICKUP_PROBE_AREA(float x, float y, float z, float radius) { Call<void>(0xdcd60fa26ce4da77, x, y, z, radius); }
	void ADD_EXTENDED_PICKUP_PROBE_AREA_f(float x, float y, float z, float radius) { FastCall<void>(0xdcd60fa26ce4da77, x, y, z, radius); }
	void CLEAR_EXTENDED_PICKUP_PROBE_AREAS() { Call<void>(0xf7c20a0b217b3c68); }
	void CLEAR_EXTENDED_PICKUP_PROBE_AREAS_f() { FastCall<void>(0xf7c20a0b217b3c68); }
	Vector3* GET_PICKUP_COORDS(Pickup pickup) { Call<Vector3*>(0x9e0eb3a9860d21f8, pickup); return GetVector(); }
	void SUPPRESS_PICKUP_SOUND_FOR_PICKUP(Any p0, Any p1) { Call<void>(0x119f7fe8f6ae2bfb, p0, p1); }
	void SUPPRESS_PICKUP_SOUND_FOR_PICKUP_f(Any p0, Any p1) { FastCall<void>(0x119f7fe8f6ae2bfb, p0, p1); }
	void REMOVE_ALL_PICKUPS_OF_TYPE(Hash pickupHash) { Call<void>(0xcfcef4106836c1, pickupHash); }
	void REMOVE_ALL_PICKUPS_OF_TYPE_f(Hash pickupHash) { FastCall<void>(0xcfcef4106836c1, pickupHash); }
	BOOL HAS_PICKUP_BEEN_COLLECTED(Pickup pickup) { return Call<BOOL>(0xd3eafc42dc0ba2f4, pickup); }
	BOOL HAS_PICKUP_BEEN_COLLECTED_f(Pickup pickup) { return FastCall<BOOL>(0xd3eafc42dc0ba2f4, pickup); }
	void REMOVE_PICKUP(Pickup pickup) { Call<void>(0x99946099a113b297, pickup); }
	void REMOVE_PICKUP_f(Pickup pickup) { FastCall<void>(0x99946099a113b297, pickup); }
	void CREATE_MONEY_PICKUPS(float x, float y, float z, int value, int amount, Hash model) { Call<void>(0xe51a4fd77716feb5, x, y, z, value, amount, model); }
	void CREATE_MONEY_PICKUPS_f(float x, float y, float z, int value, int amount, Hash model) { FastCall<void>(0xe51a4fd77716feb5, x, y, z, value, amount, model); }
	BOOL DOES_PICKUP_EXIST(Pickup pickup) { return Call<BOOL>(0x5baf8297e695e35a, pickup); }
	BOOL DOES_PICKUP_EXIST_f(Pickup pickup) { return FastCall<BOOL>(0x5baf8297e695e35a, pickup); }
	BOOL DOES_PICKUP_OBJECT_EXIST(Object pickupObject) { return Call<BOOL>(0x5866d8021d3c47f4, pickupObject); }
	BOOL DOES_PICKUP_OBJECT_EXIST_f(Object pickupObject) { return FastCall<BOOL>(0x5866d8021d3c47f4, pickupObject); }
	Object GET_PICKUP_OBJECT(Pickup pickup) { return Call<Object>(0x9e0eb3a999cda119, pickup); }
	Object GET_PICKUP_OBJECT_f(Pickup pickup) { return FastCall<Object>(0x9e0eb3a999cda119, pickup); }
	BOOL IS_OBJECT_A_PICKUP(Object object) { return Call<BOOL>(0xe0a1268098107c25, object); }
	BOOL IS_OBJECT_A_PICKUP_f(Object object) { return FastCall<BOOL>(0xe0a1268098107c25, object); }
	BOOL IS_OBJECT_A_PORTABLE_PICKUP(Object object) { return Call<BOOL>(0x8d89d13219af2a57, object); }
	BOOL IS_OBJECT_A_PORTABLE_PICKUP_f(Object object) { return FastCall<BOOL>(0x8d89d13219af2a57, object); }
	BOOL DOES_PICKUP_OF_TYPE_EXIST_IN_AREA(Hash pickupHash, float x, float y, float z, float radius) { return Call<BOOL>(0x387eb71842d597a5, pickupHash, x, y, z, radius); }
	BOOL DOES_PICKUP_OF_TYPE_EXIST_IN_AREA_f(Hash pickupHash, float x, float y, float z, float radius) { return FastCall<BOOL>(0x387eb71842d597a5, pickupHash, x, y, z, radius); }
	void SET_PICKUP_REGENERATION_TIME(Pickup pickup, int duration) { Call<void>(0xd7ef8aef27ac495b, pickup, duration); }
	void SET_PICKUP_REGENERATION_TIME_f(Pickup pickup, int duration) { FastCall<void>(0xd7ef8aef27ac495b, pickup, duration); }
	void FORCE_PICKUP_REGENERATE(Any p0) { Call<void>(0xb26f2752b8bb5dd7, p0); }
	void FORCE_PICKUP_REGENERATE_f(Any p0) { FastCall<void>(0xb26f2752b8bb5dd7, p0); }
	void SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(Player player, Hash pickupHash, BOOL toggle) { Call<void>(0xc2e498bc2c307389, player, pickupHash, toggle); }
	void SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE_f(Player player, Hash pickupHash, BOOL toggle) { FastCall<void>(0xc2e498bc2c307389, player, pickupHash, toggle); }
	void SET_LOCAL_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_WITH_MODEL(Hash modelHash, BOOL toggle) { Call<void>(0x3792ae86e159e3bd, modelHash, toggle); }
	void SET_LOCAL_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_WITH_MODEL_f(Hash modelHash, BOOL toggle) { FastCall<void>(0x3792ae86e159e3bd, modelHash, toggle); }
	void ALLOW_ALL_PLAYERS_TO_COLLECT_PICKUPS_OF_TYPE(Hash pickupHash) { Call<void>(0x43d728786abaaee2, pickupHash); }
	void ALLOW_ALL_PLAYERS_TO_COLLECT_PICKUPS_OF_TYPE_f(Hash pickupHash) { FastCall<void>(0x43d728786abaaee2, pickupHash); }
	void SET_TEAM_PICKUP_OBJECT(Object object, Any p1, BOOL p2) { Call<void>(0xa0dcea9ad2fb031d, object, p1, p2); }
	void SET_TEAM_PICKUP_OBJECT_f(Object object, Any p1, BOOL p2) { FastCall<void>(0xa0dcea9ad2fb031d, object, p1, p2); }
	void PREVENT_COLLECTION_OF_PORTABLE_PICKUP(Object object, BOOL p1, BOOL p2) { Call<void>(0x8e9a7c4307a32672, object, p1, p2); }
	void PREVENT_COLLECTION_OF_PORTABLE_PICKUP_f(Object object, BOOL p1, BOOL p2) { FastCall<void>(0x8e9a7c4307a32672, object, p1, p2); }
	void SET_PICKUP_OBJECT_GLOW_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) { Call<void>(0x75806ae0d2fb3be, pickup, toggle); }
	void SET_PICKUP_OBJECT_GLOW_WHEN_UNCOLLECTABLE_f(Pickup pickup, BOOL toggle) { FastCall<void>(0x75806ae0d2fb3be, pickup, toggle); }
	void SET_PICKUP_GLOW_OFFSET(Pickup pickup, float p1) { Call<void>(0x16e094098f02cd5f, pickup, p1); }
	void SET_PICKUP_GLOW_OFFSET_f(Pickup pickup, float p1) { FastCall<void>(0x16e094098f02cd5f, pickup, p1); }
	void SET_PICKUP_OBJECT_GLOW_OFFSET(Pickup pickup, float p1, BOOL p2) { Call<void>(0x82d5cd59d6f4d76b, pickup, p1, p2); }
	void SET_PICKUP_OBJECT_GLOW_OFFSET_f(Pickup pickup, float p1, BOOL p2) { FastCall<void>(0x82d5cd59d6f4d76b, pickup, p1, p2); }
	void SET_OBJECT_GLOW_IN_SAME_TEAM(Pickup pickup) { Call<void>(0x4eebd599cddaddcb, pickup); }
	void SET_OBJECT_GLOW_IN_SAME_TEAM_f(Pickup pickup) { FastCall<void>(0x4eebd599cddaddcb, pickup); }
	void SET_PICKUP_OBJECT_ARROW_MARKER(Pickup pickup, BOOL toggle) { Call<void>(0xd5d7fb0fac96a62a, pickup, toggle); }
	void SET_PICKUP_OBJECT_ARROW_MARKER_f(Pickup pickup, BOOL toggle) { FastCall<void>(0xd5d7fb0fac96a62a, pickup, toggle); }
	void ALLOW_PICKUP_ARROW_MARKER_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) { Call<void>(0xccb0ba2b194de848, pickup, toggle); }
	void ALLOW_PICKUP_ARROW_MARKER_WHEN_UNCOLLECTABLE_f(Pickup pickup, BOOL toggle) { FastCall<void>(0xccb0ba2b194de848, pickup, toggle); }
	int GET_DEFAULT_AMMO_FOR_WEAPON_PICKUP(Hash pickupHash) { return Call<int>(0xf6fe43a044603bbf, pickupHash); }
	int GET_DEFAULT_AMMO_FOR_WEAPON_PICKUP_f(Hash pickupHash) { return FastCall<int>(0xf6fe43a044603bbf, pickupHash); }
	void SET_PICKUP_GENERATION_RANGE_MULTIPLIER(float multiplier) { Call<void>(0x879a79dd2e311444, multiplier); }
	void SET_PICKUP_GENERATION_RANGE_MULTIPLIER_f(float multiplier) { FastCall<void>(0x879a79dd2e311444, multiplier); }
	float GET_PICKUP_GENERATION_RANGE_MULTIPLIER() { return ToFloat(Call<_float>(0x977bf48c9e51bcd0)); }
	float GET_PICKUP_GENERATION_RANGE_MULTIPLIER_f() { return ToFloat(FastCall<_float>(0x977bf48c9e51bcd0)); }
	void SET_ONLY_ALLOW_AMMO_COLLECTION_WHEN_LOW(BOOL p0) { Call<void>(0x6dc20d34f819d40b, p0); }
	void SET_ONLY_ALLOW_AMMO_COLLECTION_WHEN_LOW_f(BOOL p0) { FastCall<void>(0x6dc20d34f819d40b, p0); }
	void SET_PICKUP_UNCOLLECTABLE(Pickup pickup, BOOL toggle) { Call<void>(0x7aa544dfe45e3085, pickup, toggle); }
	void SET_PICKUP_UNCOLLECTABLE_f(Pickup pickup, BOOL toggle) { FastCall<void>(0x7aa544dfe45e3085, pickup, toggle); }
	void SET_PICKUP_TRANSPARENT_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) { Call<void>(0x48f3a6f675adecf9, pickup, toggle); }
	void SET_PICKUP_TRANSPARENT_WHEN_UNCOLLECTABLE_f(Pickup pickup, BOOL toggle) { FastCall<void>(0x48f3a6f675adecf9, pickup, toggle); }
	void SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) { Call<void>(0x5c550ed43f98b1f5, pickup, toggle); }
	void SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE_f(Pickup pickup, BOOL toggle) { FastCall<void>(0x5c550ed43f98b1f5, pickup, toggle); }
	void SET_PICKUP_OBJECT_TRANSPARENT_WHEN_UNCOLLECTABLE(Pickup pickup, BOOL toggle) { Call<void>(0xe8031fe6a271af6d, pickup, toggle); }
	void SET_PICKUP_OBJECT_TRANSPARENT_WHEN_UNCOLLECTABLE_f(Pickup pickup, BOOL toggle) { FastCall<void>(0xe8031fe6a271af6d, pickup, toggle); }
	void SET_PICKUP_OBJECT_ALPHA_WHEN_TRANSPARENT(int p0) { Call<void>(0x203458fa4baad4e8, p0); }
	void SET_PICKUP_OBJECT_ALPHA_WHEN_TRANSPARENT_f(int p0) { FastCall<void>(0x203458fa4baad4e8, p0); }
	void SET_PORTABLE_PICKUP_PERSIST(Pickup pickup, BOOL toggle) { Call<void>(0x21ef492bef0b8558, pickup, toggle); }
	void SET_PORTABLE_PICKUP_PERSIST_f(Pickup pickup, BOOL toggle) { FastCall<void>(0x21ef492bef0b8558, pickup, toggle); }
	void ALLOW_PORTABLE_PICKUP_TO_MIGRATE_TO_NON_PARTICIPANTS(Pickup pickup, BOOL toggle) { Call<void>(0xa19a817f213372d3, pickup, toggle); }
	void ALLOW_PORTABLE_PICKUP_TO_MIGRATE_TO_NON_PARTICIPANTS_f(Pickup pickup, BOOL toggle) { FastCall<void>(0xa19a817f213372d3, pickup, toggle); }
	void FORCE_ACTIVATE_PHYSICS_ON_UNFIXED_PICKUP(Pickup pickup, BOOL toggle) { Call<void>(0xaf64840ffa2daad0, pickup, toggle); }
	void FORCE_ACTIVATE_PHYSICS_ON_UNFIXED_PICKUP_f(Pickup pickup, BOOL toggle) { FastCall<void>(0xaf64840ffa2daad0, pickup, toggle); }
	void ALLOW_PICKUP_BY_NONE_PARTICIPANT(Pickup pickup, BOOL toggle) { Call<void>(0x1b5778fac2fef807, pickup, toggle); }
	void ALLOW_PICKUP_BY_NONE_PARTICIPANT_f(Pickup pickup, BOOL toggle) { FastCall<void>(0x1b5778fac2fef807, pickup, toggle); }
	void SUPPRESS_PICKUP_REWARD_TYPE(int rewardType, BOOL suppress) { Call<void>(0xcb1c5ad6ade2a6d1, rewardType, suppress); }
	void SUPPRESS_PICKUP_REWARD_TYPE_f(int rewardType, BOOL suppress) { FastCall<void>(0xcb1c5ad6ade2a6d1, rewardType, suppress); }
	void CLEAR_ALL_PICKUP_REWARD_TYPE_SUPPRESSION() { Call<void>(0xc3cc411e2416b3ab); }
	void CLEAR_ALL_PICKUP_REWARD_TYPE_SUPPRESSION_f() { FastCall<void>(0xc3cc411e2416b3ab); }
	void CLEAR_PICKUP_REWARD_TYPE_SUPPRESSION(int rewardType) { Call<void>(0x28a28e4dbda74a2d, rewardType); }
	void CLEAR_PICKUP_REWARD_TYPE_SUPPRESSION_f(int rewardType) { FastCall<void>(0x28a28e4dbda74a2d, rewardType); }
	void RENDER_FAKE_PICKUP_GLOW(float x, float y, float z, int colorIndex) { Call<void>(0xa751a47c12a1f70f, x, y, z, colorIndex); }
	void RENDER_FAKE_PICKUP_GLOW_f(float x, float y, float z, int colorIndex) { FastCall<void>(0xa751a47c12a1f70f, x, y, z, colorIndex); }
	void SET_PICKUP_OBJECT_COLLECTABLE_IN_VEHICLE(Pickup pickup) { Call<void>(0x52f03fd8baef1c07, pickup); }
	void SET_PICKUP_OBJECT_COLLECTABLE_IN_VEHICLE_f(Pickup pickup) { FastCall<void>(0x52f03fd8baef1c07, pickup); }
	void SET_PICKUP_TRACK_DAMAGE_EVENTS(Pickup pickup, BOOL toggle) { Call<void>(0x13a483ea9ea81faf, pickup, toggle); }
	void SET_PICKUP_TRACK_DAMAGE_EVENTS_f(Pickup pickup, BOOL toggle) { FastCall<void>(0x13a483ea9ea81faf, pickup, toggle); }
	void SET_ENTITY_FLAG_SUPPRESS_SHADOW(Entity entity, BOOL toggle) { Call<void>(0x514e41c7da6fc776, entity, toggle); }
	void SET_ENTITY_FLAG_SUPPRESS_SHADOW_f(Entity entity, BOOL toggle) { FastCall<void>(0x514e41c7da6fc776, entity, toggle); }
	void SET_ENTITY_FLAG_RENDER_SMALL_SHADOW(Object object, BOOL toggle) { Call<void>(0xb2e4e6538dea970d, object, toggle); }
	void SET_ENTITY_FLAG_RENDER_SMALL_SHADOW_f(Object object, BOOL toggle) { FastCall<void>(0xb2e4e6538dea970d, object, toggle); }
	Hash GET_WEAPON_TYPE_FROM_PICKUP_TYPE(Hash pickupHash) { return Call<Hash>(0x5fced10b78702af3, pickupHash); }
	Hash GET_WEAPON_TYPE_FROM_PICKUP_TYPE_f(Hash pickupHash) { return FastCall<Hash>(0x5fced10b78702af3, pickupHash); }
	Hash GET_PICKUP_TYPE_FROM_WEAPON_HASH(Hash weaponHash) { return Call<Hash>(0x2e83257b924e2987, weaponHash); }
	Hash GET_PICKUP_TYPE_FROM_WEAPON_HASH_f(Hash weaponHash) { return FastCall<Hash>(0x2e83257b924e2987, weaponHash); }
	BOOL IS_PICKUP_WEAPON_OBJECT_VALID(Object object) { return Call<BOOL>(0xfd1afd151743a211, object); }
	BOOL IS_PICKUP_WEAPON_OBJECT_VALID_f(Object object) { return FastCall<BOOL>(0xfd1afd151743a211, object); }
	int GET_OBJECT_TINT_INDEX(Object object) { return Call<int>(0x420b22a78ccd62a5, object); }
	int GET_OBJECT_TINT_INDEX_f(Object object) { return FastCall<int>(0x420b22a78ccd62a5, object); }
	void SET_OBJECT_TINT_INDEX(Object object, int textureVariation) { Call<void>(0xc2482d4023f8e4b1, object, textureVariation); }
	void SET_OBJECT_TINT_INDEX_f(Object object, int textureVariation) { FastCall<void>(0xc2482d4023f8e4b1, object, textureVariation); }
	BOOL SET_TINT_INDEX_CLOSEST_BUILDING_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, int textureVariation) { return Call<BOOL>(0x118f45279560e291, x, y, z, radius, modelHash, textureVariation); }
	BOOL SET_TINT_INDEX_CLOSEST_BUILDING_OF_TYPE_f(float x, float y, float z, float radius, Hash modelHash, int textureVariation) { return FastCall<BOOL>(0x118f45279560e291, x, y, z, radius, modelHash, textureVariation); }
	void SET_PROP_TINT_INDEX(Any p0, Any p1) { Call<void>(0xdb91a0819ee416cd, p0, p1); }
	void SET_PROP_TINT_INDEX_f(Any p0, Any p1) { FastCall<void>(0xdb91a0819ee416cd, p0, p1); }
	BOOL SET_PROP_LIGHT_COLOR(Object object, BOOL p1, int r, int g, int b) { return Call<BOOL>(0x968b1e60891c323b, object, p1, r, g, b); }
	BOOL SET_PROP_LIGHT_COLOR_f(Object object, BOOL p1, int r, int g, int b) { return FastCall<BOOL>(0x968b1e60891c323b, object, p1, r, g, b); }
	BOOL IS_PROP_LIGHT_OVERRIDEN(Object object) { return Call<BOOL>(0xf52e69aaa048512, object); }
	BOOL IS_PROP_LIGHT_OVERRIDEN_f(Object object) { return FastCall<BOOL>(0xf52e69aaa048512, object); }
	void SET_OBJECT_IS_VISIBLE_IN_MIRRORS(Object object, BOOL toggle) { Call<void>(0x280f0728ca878879, object, toggle); }
	void SET_OBJECT_IS_VISIBLE_IN_MIRRORS_f(Object object, BOOL toggle) { FastCall<void>(0x280f0728ca878879, object, toggle); }
	void SET_OBJECT_SPEED_BOOST_AMOUNT(Object object, Any p1) { Call<void>(0xafe282e2e6c340ef, object, p1); }
	void SET_OBJECT_SPEED_BOOST_AMOUNT_f(Object object, Any p1) { FastCall<void>(0xafe282e2e6c340ef, object, p1); }
	void SET_OBJECT_SPEED_BOOST_DURATION(Object object, float duration) { Call<void>(0x414d55d925d3706b, object, duration); }
	void SET_OBJECT_SPEED_BOOST_DURATION_f(Object object, float duration) { FastCall<void>(0x414d55d925d3706b, object, duration); }
	Hash CONVERT_OLD_PICKUP_TYPE_TO_NEW(Hash pickupHash) { return Call<Hash>(0xe7a25d973791c682, pickupHash); }
	Hash CONVERT_OLD_PICKUP_TYPE_TO_NEW_f(Hash pickupHash) { return FastCall<Hash>(0xe7a25d973791c682, pickupHash); }
	void SET_FORCE_OBJECT_THIS_FRAME(float x, float y, float z, float p3) { Call<void>(0xcb38897b30851bfb, x, y, z, p3); }
	void SET_FORCE_OBJECT_THIS_FRAME_f(float x, float y, float z, float p3) { FastCall<void>(0xcb38897b30851bfb, x, y, z, p3); }
	void ONLY_CLEAN_UP_OBJECT_WHEN_OUT_OF_RANGE(Object object) { Call<void>(0xbb3435648da6aac6, object); }
	void ONLY_CLEAN_UP_OBJECT_WHEN_OUT_OF_RANGE_f(Object object) { FastCall<void>(0xbb3435648da6aac6, object); }
	void SET_DISABLE_COLLISIONS_BETWEEN_CARS_AND_CAR_PARACHUTE(Any p0) { Call<void>(0xadf3560afba5b1ef, p0); }
	void SET_DISABLE_COLLISIONS_BETWEEN_CARS_AND_CAR_PARACHUTE_f(Any p0) { FastCall<void>(0xadf3560afba5b1ef, p0); }
	void SET_PROJECTILES_SHOULD_EXPLODE_ON_CONTACT(Entity entity, Any p1) { Call<void>(0x9363de80a091d738, entity, p1); }
	void SET_PROJECTILES_SHOULD_EXPLODE_ON_CONTACT_f(Entity entity, Any p1) { FastCall<void>(0x9363de80a091d738, entity, p1); }
	void SET_DRIVE_ARTICULATED_JOINT(Object object, BOOL toggle, int p2) { Call<void>(0x26764798bce18a5f, object, toggle, p2); }
	void SET_DRIVE_ARTICULATED_JOINT_f(Object object, BOOL toggle, int p2) { FastCall<void>(0x26764798bce18a5f, object, toggle, p2); }
	void SET_DRIVE_ARTICULATED_JOINT_WITH_INFLICTOR(Object object, BOOL toggle, int p2, Ped ped) { Call<void>(0x901b2c9332a921b9, object, toggle, p2, ped); }
	void SET_DRIVE_ARTICULATED_JOINT_WITH_INFLICTOR_f(Object object, BOOL toggle, int p2, Ped ped) { FastCall<void>(0x901b2c9332a921b9, object, toggle, p2, ped); }
	void SET_OBJECT_IS_A_PRESSURE_PLATE(Object object, BOOL toggle) { Call<void>(0xc1e1b8964ed307cc, object, toggle); }
	void SET_OBJECT_IS_A_PRESSURE_PLATE_f(Object object, BOOL toggle) { FastCall<void>(0xc1e1b8964ed307cc, object, toggle); }
	void SET_WEAPON_IMPACTS_APPLY_GREATER_FORCE(Object object, BOOL p1) { Call<void>(0x9ea6b981d02b1cfd, object, p1); }
	void SET_WEAPON_IMPACTS_APPLY_GREATER_FORCE_f(Object object, BOOL p1) { FastCall<void>(0x9ea6b981d02b1cfd, object, p1); }
	BOOL GET_IS_ARTICULATED_JOINT_AT_MIN_ANGLE(Object object, Any p1) { return Call<BOOL>(0xe55ee82bac1440d4, object, p1); }
	BOOL GET_IS_ARTICULATED_JOINT_AT_MIN_ANGLE_f(Object object, Any p1) { return FastCall<BOOL>(0xe55ee82bac1440d4, object, p1); }
	BOOL GET_IS_ARTICULATED_JOINT_AT_MAX_ANGLE(Any p0, Any p1) { return Call<BOOL>(0xe55ee7fa7e092a66, p0, p1); }
	BOOL GET_IS_ARTICULATED_JOINT_AT_MAX_ANGLE_f(Any p0, Any p1) { return FastCall<BOOL>(0xe55ee7fa7e092a66, p0, p1); }
	void SET_IS_OBJECT_ARTICULATED(Object object, BOOL toggle) { Call<void>(0xd21823c4ec3cebfe, object, toggle); }
	void SET_IS_OBJECT_ARTICULATED_f(Object object, BOOL toggle) { FastCall<void>(0xd21823c4ec3cebfe, object, toggle); }
	void SET_IS_OBJECT_BALL(Object object, BOOL toggle) { Call<void>(0xb2921435a2f22907, object, toggle); }
	void SET_IS_OBJECT_BALL_f(Object object, BOOL toggle) { FastCall<void>(0xb2921435a2f22907, object, toggle); }
}
namespace PAD
{
	BOOL IS_CONTROL_ENABLED(int control, int action) { return Call<BOOL>(0xde85fcfcc388ed0a, control, action); }
	BOOL IS_CONTROL_ENABLED_f(int control, int action) { return FastCall<BOOL>(0xde85fcfcc388ed0a, control, action); }
	BOOL IS_CONTROL_PRESSED(int control, int action) { return Call<BOOL>(0xde85fcff10810deb, control, action); }
	BOOL IS_CONTROL_PRESSED_f(int control, int action) { return FastCall<BOOL>(0xde85fcff10810deb, control, action); }
	BOOL IS_CONTROL_RELEASED(int control, int action) { return Call<BOOL>(0xf239a2ed2ad6b074, control, action); }
	BOOL IS_CONTROL_RELEASED_f(int control, int action) { return FastCall<BOOL>(0xf239a2ed2ad6b074, control, action); }
	BOOL IS_CONTROL_JUST_PRESSED(int control, int action) { return Call<BOOL>(0x2303e4f899389366, control, action); }
	BOOL IS_CONTROL_JUST_PRESSED_f(int control, int action) { return FastCall<BOOL>(0x2303e4f899389366, control, action); }
	BOOL IS_CONTROL_JUST_RELEASED(int control, int action) { return Call<BOOL>(0x3d78ba24b90fda59, control, action); }
	BOOL IS_CONTROL_JUST_RELEASED_f(int control, int action) { return FastCall<BOOL>(0x3d78ba24b90fda59, control, action); }
	int GET_CONTROL_VALUE(int control, int action) { return Call<int>(0x1232c237b2575a86, control, action); }
	int GET_CONTROL_VALUE_f(int control, int action) { return FastCall<int>(0x1232c237b2575a86, control, action); }
	float GET_CONTROL_NORMAL(int control, int action) { return ToFloat(Call<_float>(0x342584be8bb51652, control, action)); }
	float GET_CONTROL_NORMAL_f(int control, int action) { return ToFloat(FastCall<_float>(0x342584be8bb51652, control, action)); }
	void SET_USE_ADJUSTED_MOUSE_COORDS(BOOL toggle) { Call<void>(0x17fdb64a2eaf7eb4, toggle); }
	void SET_USE_ADJUSTED_MOUSE_COORDS_f(BOOL toggle) { FastCall<void>(0x17fdb64a2eaf7eb4, toggle); }
	float GET_CONTROL_UNBOUND_NORMAL(int control, int action) { return ToFloat(Call<_float>(0x25a220b154867e6c, control, action)); }
	float GET_CONTROL_UNBOUND_NORMAL_f(int control, int action) { return ToFloat(FastCall<_float>(0x25a220b154867e6c, control, action)); }
	BOOL SET_CONTROL_VALUE_NEXT_FRAME(int control, int action, float value) { return Call<BOOL>(0xce0c847162f5f8ce, control, action, value); }
	BOOL SET_CONTROL_VALUE_NEXT_FRAME_f(int control, int action, float value) { return FastCall<BOOL>(0xce0c847162f5f8ce, control, action, value); }
	BOOL IS_DISABLED_CONTROL_PRESSED(int control, int action) { return Call<BOOL>(0x133888b7f2d498b2, control, action); }
	BOOL IS_DISABLED_CONTROL_PRESSED_f(int control, int action) { return FastCall<BOOL>(0x133888b7f2d498b2, control, action); }
	BOOL IS_DISABLED_CONTROL_RELEASED(int control, int action) { return Call<BOOL>(0x53d88e5092f47e8d, control, action); }
	BOOL IS_DISABLED_CONTROL_RELEASED_f(int control, int action) { return FastCall<BOOL>(0x53d88e5092f47e8d, control, action); }
	BOOL IS_DISABLED_CONTROL_JUST_PRESSED(int control, int action) { return Call<BOOL>(0x7aae220c031facff, control, action); }
	BOOL IS_DISABLED_CONTROL_JUST_PRESSED_f(int control, int action) { return FastCall<BOOL>(0x7aae220c031facff, control, action); }
	BOOL IS_DISABLED_CONTROL_JUST_RELEASED(int control, int action) { return Call<BOOL>(0xdb161f7e8c0bf3e0, control, action); }
	BOOL IS_DISABLED_CONTROL_JUST_RELEASED_f(int control, int action) { return FastCall<BOOL>(0xdb161f7e8c0bf3e0, control, action); }
	float GET_DISABLED_CONTROL_NORMAL(int control, int action) { return ToFloat(Call<_float>(0x5c7e79428fd82043, control, action)); }
	float GET_DISABLED_CONTROL_NORMAL_f(int control, int action) { return ToFloat(FastCall<_float>(0x5c7e79428fd82043, control, action)); }
	float GET_DISABLED_CONTROL_UNBOUND_NORMAL(int control, int action) { return ToFloat(Call<_float>(0x588f5e7481fd075d, control, action)); }
	float GET_DISABLED_CONTROL_UNBOUND_NORMAL_f(int control, int action) { return ToFloat(FastCall<_float>(0x588f5e7481fd075d, control, action)); }
	int GET_CONTROL_HOW_LONG_AGO(int control) { return Call<int>(0xd893d5088d6f0500, control); }
	int GET_CONTROL_HOW_LONG_AGO_f(int control) { return FastCall<int>(0xd893d5088d6f0500, control); }
	BOOL IS_USING_KEYBOARD_AND_MOUSE(int control) { return Call<BOOL>(0xe3a537a7550056d5, control); }
	BOOL IS_USING_KEYBOARD_AND_MOUSE_f(int control) { return FastCall<BOOL>(0xe3a537a7550056d5, control); }
	BOOL IS_USING_CURSOR(int control) { return Call<BOOL>(0x868802f3ef127c86, control); }
	BOOL IS_USING_CURSOR_f(int control) { return FastCall<BOOL>(0x868802f3ef127c86, control); }
	BOOL SET_CURSOR_POSITION(float x, float y) { return Call<BOOL>(0x84a0733ed0c665f5, x, y); }
	BOOL SET_CURSOR_POSITION_f(float x, float y) { return FastCall<BOOL>(0x84a0733ed0c665f5, x, y); }
	BOOL IS_USING_REMOTE_PLAY(int control) { return Call<BOOL>(0x5894fbb31169545d, control); }
	BOOL IS_USING_REMOTE_PLAY_f(int control) { return FastCall<BOOL>(0x5894fbb31169545d, control); }
	BOOL HAVE_CONTROLS_CHANGED(int control) { return Call<BOOL>(0x9914e2a11a075c02, control); }
	BOOL HAVE_CONTROLS_CHANGED_f(int control) { return FastCall<BOOL>(0x9914e2a11a075c02, control); }
	const char* GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(int control, int action, BOOL allowXOSwap) { return Call<char*>(0x46d33031813cadc0, control, action, allowXOSwap); }
	const char* GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING_f(int control, int action, BOOL allowXOSwap) { return FastCall<char*>(0x46d33031813cadc0, control, action, allowXOSwap); }
	const char* GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(int control, int controlGroup, BOOL allowXOSwap) { return Call<char*>(0x6b67d587ec099f60, control, controlGroup, allowXOSwap); }
	const char* GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING_f(int control, int controlGroup, BOOL allowXOSwap) { return FastCall<char*>(0x6b67d587ec099f60, control, controlGroup, allowXOSwap); }
	void SET_CONTROL_LIGHT_EFFECT_COLOR(int control, int red, int green, int blue) { Call<void>(0x4f6c0f4ba9b42c1d, control, red, green, blue); }
	void SET_CONTROL_LIGHT_EFFECT_COLOR_f(int control, int red, int green, int blue) { FastCall<void>(0x4f6c0f4ba9b42c1d, control, red, green, blue); }
	void CLEAR_CONTROL_LIGHT_EFFECT(int control) { Call<void>(0x9c5760dba2771b8e, control); }
	void CLEAR_CONTROL_LIGHT_EFFECT_f(int control) { FastCall<void>(0x9c5760dba2771b8e, control); }
	void SET_CONTROL_SHAKE(int control, int duration, int frequency) { Call<void>(0x4ef5a47b7a268027, control, duration, frequency); }
	void SET_CONTROL_SHAKE_f(int control, int duration, int frequency) { FastCall<void>(0x4ef5a47b7a268027, control, duration, frequency); }
	void SET_CONTROL_TRIGGER_SHAKE(int control, int leftDuration, int leftFrequency, int rightDuration, int rightFrequency) { Call<void>(0x6d04f78b944f61c0, control, leftDuration, leftFrequency, rightDuration, rightFrequency); }
	void SET_CONTROL_TRIGGER_SHAKE_f(int control, int leftDuration, int leftFrequency, int rightDuration, int rightFrequency) { FastCall<void>(0x6d04f78b944f61c0, control, leftDuration, leftFrequency, rightDuration, rightFrequency); }
	void STOP_CONTROL_SHAKE(int control) { Call<void>(0xa0b07cbfee61afe7, control); }
	void STOP_CONTROL_SHAKE_f(int control) { FastCall<void>(0xa0b07cbfee61afe7, control); }
	void SET_CONTROL_SHAKE_SUPPRESSED_ID(int control, int uniqueId) { Call<void>(0x361a447ded34810e, control, uniqueId); }
	void SET_CONTROL_SHAKE_SUPPRESSED_ID_f(int control, int uniqueId) { FastCall<void>(0x361a447ded34810e, control, uniqueId); }
	void CLEAR_CONTROL_SHAKE_SUPPRESSED_ID(int control) { Call<void>(0x1af9e5c0d0f04079, control); }
	void CLEAR_CONTROL_SHAKE_SUPPRESSED_ID_f(int control) { FastCall<void>(0x1af9e5c0d0f04079, control); }
	BOOL IS_LOOK_INVERTED() { return Call<BOOL>(0xe6bf7a80524d7e40); }
	BOOL IS_LOOK_INVERTED_f() { return FastCall<BOOL>(0xe6bf7a80524d7e40); }
	BOOL IS_MOUSE_LOOK_INVERTED() { return Call<BOOL>(0x36a09da5ec739bc6); }
	BOOL IS_MOUSE_LOOK_INVERTED_f() { return FastCall<BOOL>(0x36a09da5ec739bc6); }
	int GET_LOCAL_PLAYER_AIM_STATE() { return Call<int>(0xe829a92101b84a96); }
	int GET_LOCAL_PLAYER_AIM_STATE_f() { return FastCall<int>(0xe829a92101b84a96); }
	int GET_LOCAL_PLAYER_GAMEPAD_AIM_STATE() { return Call<int>(0x6be85fac1723cc18); }
	int GET_LOCAL_PLAYER_GAMEPAD_AIM_STATE_f() { return FastCall<int>(0x6be85fac1723cc18); }
	BOOL GET_IS_USING_ALTERNATE_HANDBRAKE() { return Call<BOOL>(0x125955361032ef90); }
	BOOL GET_IS_USING_ALTERNATE_HANDBRAKE_f() { return FastCall<BOOL>(0x125955361032ef90); }
	BOOL GET_IS_USING_ALTERNATE_DRIVEBY() { return Call<BOOL>(0x74f6c4f28e2e33d5); }
	BOOL GET_IS_USING_ALTERNATE_DRIVEBY_f() { return FastCall<BOOL>(0x74f6c4f28e2e33d5); }
	BOOL GET_ALLOW_MOVEMENT_WHILE_ZOOMED() { return Call<BOOL>(0x16974108f79b4811); }
	BOOL GET_ALLOW_MOVEMENT_WHILE_ZOOMED_f() { return FastCall<BOOL>(0x16974108f79b4811); }
	void SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED(BOOL toggle) { Call<void>(0x5745976d7432b302, toggle); }
	void SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED_f(BOOL toggle) { FastCall<void>(0x5745976d7432b302, toggle); }
	void SET_INPUT_EXCLUSIVE(int control, int action) { Call<void>(0x5fbe976ceb6bee2c, control, action); }
	void SET_INPUT_EXCLUSIVE_f(int control, int action) { FastCall<void>(0x5fbe976ceb6bee2c, control, action); }
	void DISABLE_CONTROL_ACTION(int control, int action, BOOL disableRelatedActions) { Call<void>(0xbfea621e3ffc65cf, control, action, disableRelatedActions); }
	void DISABLE_CONTROL_ACTION_f(int control, int action, BOOL disableRelatedActions) { FastCall<void>(0xbfea621e3ffc65cf, control, action, disableRelatedActions); }
	void ENABLE_CONTROL_ACTION(int control, int action, BOOL enableRelatedActions) { Call<void>(0x1018d0cfcbe9cdb4, control, action, enableRelatedActions); }
	void ENABLE_CONTROL_ACTION_f(int control, int action, BOOL enableRelatedActions) { FastCall<void>(0x1018d0cfcbe9cdb4, control, action, enableRelatedActions); }
	void DISABLE_ALL_CONTROL_ACTIONS(int control) { Call<void>(0xaa06170732e21926, control); }
	void DISABLE_ALL_CONTROL_ACTIONS_f(int control) { FastCall<void>(0xaa06170732e21926, control); }
	void ENABLE_ALL_CONTROL_ACTIONS(int control) { Call<void>(0x2aa4f5b25d02d861, control); }
	void ENABLE_ALL_CONTROL_ACTIONS_f(int control) { FastCall<void>(0x2aa4f5b25d02d861, control); }
	BOOL INIT_PC_SCRIPTED_CONTROLS(char* schemeName) { return Call<BOOL>(0xcb389d7d22bf852e, schemeName); }
	BOOL INIT_PC_SCRIPTED_CONTROLS_f(char* schemeName) { return FastCall<BOOL>(0xcb389d7d22bf852e, schemeName); }
	BOOL SWITCH_PC_SCRIPTED_CONTROLS(char* schemeName) { return Call<BOOL>(0x744196c2357e358a, schemeName); }
	BOOL SWITCH_PC_SCRIPTED_CONTROLS_f(char* schemeName) { return FastCall<BOOL>(0x744196c2357e358a, schemeName); }
	void SHUTDOWN_PC_SCRIPTED_CONTROLS() { Call<void>(0xaf337ae2344e93a8); }
	void SHUTDOWN_PC_SCRIPTED_CONTROLS_f() { FastCall<void>(0xaf337ae2344e93a8); }
	void ALLOW_ALTERNATIVE_SCRIPT_CONTROLS_LAYOUT(int control) { Call<void>(0x79cae119779d1b27, control); }
	void ALLOW_ALTERNATIVE_SCRIPT_CONTROLS_LAYOUT_f(int control) { FastCall<void>(0x79cae119779d1b27, control); }
}
namespace PATHFIND
{
	void SET_ROADS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL nodeEnabled, BOOL unknown2) { Call<void>(0xf2c56504f6e80f1e, x1, y1, z1, x2, y2, z2, nodeEnabled, unknown2); }
	void SET_ROADS_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, BOOL nodeEnabled, BOOL unknown2) { FastCall<void>(0xf2c56504f6e80f1e, x1, y1, z1, x2, y2, z2, nodeEnabled, unknown2); }
	void SET_ROADS_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL unknown1, BOOL unknown2, BOOL unknown3) { Call<void>(0xf9743633db9d5e6a, x1, y1, z1, x2, y2, z2, width, unknown1, unknown2, unknown3); }
	void SET_ROADS_IN_ANGLED_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL unknown1, BOOL unknown2, BOOL unknown3) { FastCall<void>(0xf9743633db9d5e6a, x1, y1, z1, x2, y2, z2, width, unknown1, unknown2, unknown3); }
	void SET_PED_PATHS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, Any p7) { Call<void>(0x5938eb02eed71ee9, x1, y1, z1, x2, y2, z2, p6, p7); }
	void SET_PED_PATHS_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, Any p7) { FastCall<void>(0x5938eb02eed71ee9, x1, y1, z1, x2, y2, z2, p6, p7); }
	BOOL GET_SAFE_COORD_FOR_PED(float x, float y, float z, BOOL onGround, Vector3* outPosition, int flags) { return Call<BOOL>(0x870b5277e4cd9766, x, y, z, onGround, outPosition, flags); }
	BOOL GET_SAFE_COORD_FOR_PED_f(float x, float y, float z, BOOL onGround, Vector3* outPosition, int flags) { return FastCall<BOOL>(0x870b5277e4cd9766, x, y, z, onGround, outPosition, flags); }
	BOOL GET_CLOSEST_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, int nodeFlags, float p5, float p6) { return Call<BOOL>(0x7413bfe7d3364504, x, y, z, outPosition, nodeFlags, p5, p6); }
	BOOL GET_CLOSEST_VEHICLE_NODE_f(float x, float y, float z, Vector3* outPosition, int nodeFlags, float p5, float p6) { return FastCall<BOOL>(0x7413bfe7d3364504, x, y, z, outPosition, nodeFlags, p5, p6); }
	BOOL GET_CLOSEST_MAJOR_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, float unknown1, float unknown2) { return Call<BOOL>(0x443637c84c4652aa, x, y, z, outPosition, unknown1, unknown2); }
	BOOL GET_CLOSEST_MAJOR_VEHICLE_NODE_f(float x, float y, float z, Vector3* outPosition, float unknown1, float unknown2) { return FastCall<BOOL>(0x443637c84c4652aa, x, y, z, outPosition, unknown1, unknown2); }
	BOOL GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, Vector3* outPosition, float* outHeading, int nodeType, float p6, float p7) { return Call<BOOL>(0x624bcb813aa99ec4, x, y, z, outPosition, outHeading, nodeType, p6, p7); }
	BOOL GET_CLOSEST_VEHICLE_NODE_WITH_HEADING_f(float x, float y, float z, Vector3* outPosition, float* outHeading, int nodeType, float p6, float p7) { return FastCall<BOOL>(0x624bcb813aa99ec4, x, y, z, outPosition, outHeading, nodeType, p6, p7); }
	BOOL GET_NTH_CLOSEST_VEHICLE_NODE(float x, float y, float z, int nthClosest, Vector3* outPosition, int nodeFlags, float unknown1, float unknown2) { return Call<BOOL>(0x3290c65a7f2d161, x, y, z, nthClosest, outPosition, nodeFlags, unknown1, unknown2); }
	BOOL GET_NTH_CLOSEST_VEHICLE_NODE_f(float x, float y, float z, int nthClosest, Vector3* outPosition, int nodeFlags, float unknown1, float unknown2) { return FastCall<BOOL>(0x3290c65a7f2d161, x, y, z, nthClosest, outPosition, nodeFlags, unknown1, unknown2); }
	int GET_NTH_CLOSEST_VEHICLE_NODE_ID(float x, float y, float z, int nth, int nodeFlags, float p5, float p6) { return Call<int>(0xc5d9a9d359fd14b9, x, y, z, nth, nodeFlags, p5, p6); }
	int GET_NTH_CLOSEST_VEHICLE_NODE_ID_f(float x, float y, float z, int nth, int nodeFlags, float p5, float p6) { return FastCall<int>(0xc5d9a9d359fd14b9, x, y, z, nth, nodeFlags, p5, p6); }
	BOOL GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, int* outNumLanes, int nodeFlags, float unknown3, float unknown4) { return Call<BOOL>(0x8a787f5f4f42d187, x, y, z, nthClosest, outPosition, outHeading, outNumLanes, nodeFlags, unknown3, unknown4); }
	BOOL GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING_f(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, int* outNumLanes, int nodeFlags, float unknown3, float unknown4) { return FastCall<BOOL>(0x8a787f5f4f42d187, x, y, z, nthClosest, outPosition, outHeading, outNumLanes, nodeFlags, unknown3, unknown4); }
	int GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, int nodeFlags, float p7, float p8) { return Call<int>(0x618189f76d7abd2f, x, y, z, nthClosest, outPosition, outHeading, nodeFlags, p7, p8); }
	int GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING_f(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, int nodeFlags, float p7, float p8) { return FastCall<int>(0x618189f76d7abd2f, x, y, z, nthClosest, outPosition, outHeading, nodeFlags, p7, p8); }
	BOOL GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION(float x, float y, float z, float desiredX, float desiredY, float desiredZ, int nthClosest, Vector3* outPosition, float* outHeading, int nodeFlags, float p10, float p11) { return Call<BOOL>(0x4dcc870ecaf8fe0f, x, y, z, desiredX, desiredY, desiredZ, nthClosest, outPosition, outHeading, nodeFlags, p10, p11); }
	BOOL GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION_f(float x, float y, float z, float desiredX, float desiredY, float desiredZ, int nthClosest, Vector3* outPosition, float* outHeading, int nodeFlags, float p10, float p11) { return FastCall<BOOL>(0x4dcc870ecaf8fe0f, x, y, z, desiredX, desiredY, desiredZ, nthClosest, outPosition, outHeading, nodeFlags, p10, p11); }
	BOOL GET_VEHICLE_NODE_PROPERTIES(float x, float y, float z, int* density, int* flags) { return Call<BOOL>(0x5c4efaf5abde254, x, y, z, density, flags); }
	BOOL GET_VEHICLE_NODE_PROPERTIES_f(float x, float y, float z, int* density, int* flags) { return FastCall<BOOL>(0x5c4efaf5abde254, x, y, z, density, flags); }
	BOOL IS_VEHICLE_NODE_ID_VALID(int vehicleNodeId) { return Call<BOOL>(0x53ce49164be4080d, vehicleNodeId); }
	BOOL IS_VEHICLE_NODE_ID_VALID_f(int vehicleNodeId) { return FastCall<BOOL>(0x53ce49164be4080d, vehicleNodeId); }
	void GET_VEHICLE_NODE_POSITION(int nodeId, Vector3* outPosition) { Call<void>(0x682a072c5758c68a, nodeId, outPosition); }
	void GET_VEHICLE_NODE_POSITION_f(int nodeId, Vector3* outPosition) { FastCall<void>(0x682a072c5758c68a, nodeId, outPosition); }
	BOOL GET_VEHICLE_NODE_IS_GPS_ALLOWED(int nodeID) { return Call<BOOL>(0x81ce1da518bb07df, nodeID); }
	BOOL GET_VEHICLE_NODE_IS_GPS_ALLOWED_f(int nodeID) { return FastCall<BOOL>(0x81ce1da518bb07df, nodeID); }
	BOOL GET_VEHICLE_NODE_IS_SWITCHED_OFF(int nodeID) { return Call<BOOL>(0xbc443aac730bae57, nodeID); }
	BOOL GET_VEHICLE_NODE_IS_SWITCHED_OFF_f(int nodeID) { return FastCall<BOOL>(0xbc443aac730bae57, nodeID); }
	BOOL GET_CLOSEST_ROAD(float x, float y, float z, float p3, int p4, Vector3* p5, Vector3* p6, Any* p7, Any* p8, float* p9, BOOL p10) { return Call<BOOL>(0x8cf0bbb5ce498fcf, x, y, z, p3, p4, p5, p6, p7, p8, p9, p10); }
	BOOL GET_CLOSEST_ROAD_f(float x, float y, float z, float p3, int p4, Vector3* p5, Vector3* p6, Any* p7, Any* p8, float* p9, BOOL p10) { return FastCall<BOOL>(0x8cf0bbb5ce498fcf, x, y, z, p3, p4, p5, p6, p7, p8, p9, p10); }
	BOOL LOAD_ALL_PATH_NODES(BOOL set) { return Call<BOOL>(0x4c589a3cc13b7fee, set); }
	BOOL LOAD_ALL_PATH_NODES_f(BOOL set) { return FastCall<BOOL>(0x4c589a3cc13b7fee, set); }
	void SET_ALLOW_STREAM_PROLOGUE_NODES(BOOL toggle) { Call<void>(0xc9e81e5037391625, toggle); }
	void SET_ALLOW_STREAM_PROLOGUE_NODES_f(BOOL toggle) { FastCall<void>(0xc9e81e5037391625, toggle); }
	void SET_ALLOW_STREAM_HEIST_ISLAND_NODES(int type) { Call<void>(0xa17b649ec266b225, type); }
	void SET_ALLOW_STREAM_HEIST_ISLAND_NODES_f(int type) { FastCall<void>(0xa17b649ec266b225, type); }
	BOOL ARE_NODES_LOADED_FOR_AREA(float x1, float y1, float x2, float y2) { return Call<BOOL>(0x92ec14dc4f9043e4, x1, y1, x2, y2); }
	BOOL ARE_NODES_LOADED_FOR_AREA_f(float x1, float y1, float x2, float y2) { return FastCall<BOOL>(0x92ec14dc4f9043e4, x1, y1, x2, y2); }
	BOOL REQUEST_PATH_NODES_IN_AREA_THIS_FRAME(float x1, float y1, float x2, float y2) { return Call<BOOL>(0xcf25639b95ee19bc, x1, y1, x2, y2); }
	BOOL REQUEST_PATH_NODES_IN_AREA_THIS_FRAME_f(float x1, float y1, float x2, float y2) { return FastCall<BOOL>(0xcf25639b95ee19bc, x1, y1, x2, y2); }
	void SET_ROADS_BACK_TO_ORIGINAL(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) { Call<void>(0xfde583661dbc89e6, p0, p1, p2, p3, p4, p5, p6); }
	void SET_ROADS_BACK_TO_ORIGINAL_f(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) { FastCall<void>(0xfde583661dbc89e6, p0, p1, p2, p3, p4, p5, p6); }
	void SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, Any p7) { Call<void>(0xba7d022e20c7ed7a, x1, y1, z1, x2, y2, z2, width, p7); }
	void SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, float width, Any p7) { FastCall<void>(0xba7d022e20c7ed7a, x1, y1, z1, x2, y2, z2, width, p7); }
	void SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME(float multiplier) { Call<void>(0x4c528ff393b3d3f4, multiplier); }
	void SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME_f(float multiplier) { FastCall<void>(0x4c528ff393b3d3f4, multiplier); }
	void ADJUST_AMBIENT_PED_SPAWN_DENSITIES_THIS_FRAME(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { Call<void>(0xddc1869a176bf0, p0, p1, p2, p3, p4, p5, p6); }
	void ADJUST_AMBIENT_PED_SPAWN_DENSITIES_THIS_FRAME_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { FastCall<void>(0xddc1869a176bf0, p0, p1, p2, p3, p4, p5, p6); }
	void SET_PED_PATHS_BACK_TO_ORIGINAL(float x1, float y1, float z1, float x2, float y2, float z2, Any p6) { Call<void>(0xba841b89a68b0e7b, x1, y1, z1, x2, y2, z2, p6); }
	void SET_PED_PATHS_BACK_TO_ORIGINAL_f(float x1, float y1, float z1, float x2, float y2, float z2, Any p6) { FastCall<void>(0xba841b89a68b0e7b, x1, y1, z1, x2, y2, z2, p6); }
	BOOL GET_RANDOM_VEHICLE_NODE(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, Vector3* outPosition, int* nodeId) { return Call<BOOL>(0x802b7fb075185ac8, x, y, z, radius, p4, p5, p6, outPosition, nodeId); }
	BOOL GET_RANDOM_VEHICLE_NODE_f(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, Vector3* outPosition, int* nodeId) { return FastCall<BOOL>(0x802b7fb075185ac8, x, y, z, radius, p4, p5, p6, outPosition, nodeId); }
	Vector3* GET_SPAWN_COORDS_FOR_VEHICLE_NODE(int nodeAddress, float towardsCoorsX, float towardsCoorsY, float towardsCoorsZ, Vector3* centrePoint, float* heading) { Call<Vector3*>(0x77fbce1efe48a8ff, nodeAddress, towardsCoorsX, towardsCoorsY, towardsCoorsZ, centrePoint, heading); return GetVector(); }
	void GET_STREET_NAME_AT_COORD(float x, float y, float z, Hash* streetName, Hash* crossingRoad) { Call<void>(0x63f9ffd8bf9d812a, x, y, z, streetName, crossingRoad); }
	void GET_STREET_NAME_AT_COORD_f(float x, float y, float z, Hash* streetName, Hash* crossingRoad) { FastCall<void>(0x63f9ffd8bf9d812a, x, y, z, streetName, crossingRoad); }
	int GENERATE_DIRECTIONS_TO_COORD(float x, float y, float z, BOOL p3, int* direction, float* p5, float* distToNxJunction) { return Call<int>(0x52f47517770b7952, x, y, z, p3, direction, p5, distToNxJunction); }
	int GENERATE_DIRECTIONS_TO_COORD_f(float x, float y, float z, BOOL p3, int* direction, float* p5, float* distToNxJunction) { return FastCall<int>(0x52f47517770b7952, x, y, z, p3, direction, p5, distToNxJunction); }
	void SET_IGNORE_NO_GPS_FLAG(BOOL toggle) { Call<void>(0xd435c596530e2ef, toggle); }
	void SET_IGNORE_NO_GPS_FLAG_f(BOOL toggle) { FastCall<void>(0xd435c596530e2ef, toggle); }
	void SET_IGNORE_NO_GPS_FLAG_UNTIL_FIRST_NORMAL_NODE(BOOL toggle) { Call<void>(0x18ef5e0f2ac52f1a, toggle); }
	void SET_IGNORE_NO_GPS_FLAG_UNTIL_FIRST_NORMAL_NODE_f(BOOL toggle) { FastCall<void>(0x18ef5e0f2ac52f1a, toggle); }
	void SET_GPS_DISABLED_ZONE(float x1, float y1, float z1, float x2, float y2, float z3) { Call<void>(0xc71718ed67a061dd, x1, y1, z1, x2, y2, z3); }
	void SET_GPS_DISABLED_ZONE_f(float x1, float y1, float z1, float x2, float y2, float z3) { FastCall<void>(0xc71718ed67a061dd, x1, y1, z1, x2, y2, z3); }
	int GET_GPS_BLIP_ROUTE_LENGTH() { return Call<int>(0xa135e42b28c34b8c); }
	int GET_GPS_BLIP_ROUTE_LENGTH_f() { return FastCall<int>(0xa135e42b28c34b8c); }
	BOOL GET_POS_ALONG_GPS_TYPE_ROUTE(Vector3* result, BOOL p1, float p2, int p3) { return Call<BOOL>(0x4c54368ad94c840f, result, p1, p2, p3); }
	BOOL GET_POS_ALONG_GPS_TYPE_ROUTE_f(Vector3* result, BOOL p1, float p2, int p3) { return FastCall<BOOL>(0x4c54368ad94c840f, result, p1, p2, p3); }
	BOOL GET_GPS_BLIP_ROUTE_FOUND() { return Call<BOOL>(0x895451aecf7455fc); }
	BOOL GET_GPS_BLIP_ROUTE_FOUND_f() { return FastCall<BOOL>(0x895451aecf7455fc); }
	BOOL GET_ROAD_BOUNDARY_USING_HEADING(float x, float y, float z, float heading, Vector3* outPosition) { return Call<BOOL>(0x47defa349cf2b028, x, y, z, heading, outPosition); }
	BOOL GET_ROAD_BOUNDARY_USING_HEADING_f(float x, float y, float z, float heading, Vector3* outPosition) { return FastCall<BOOL>(0x47defa349cf2b028, x, y, z, heading, outPosition); }
	BOOL GET_POSITION_BY_SIDE_OF_ROAD(float x, float y, float z, int p3, Vector3* outPosition) { return Call<BOOL>(0x541e462cb6eaa65b, x, y, z, p3, outPosition); }
	BOOL GET_POSITION_BY_SIDE_OF_ROAD_f(float x, float y, float z, int p3, Vector3* outPosition) { return FastCall<BOOL>(0x541e462cb6eaa65b, x, y, z, p3, outPosition); }
	BOOL IS_POINT_ON_ROAD(float x, float y, float z, Vehicle vehicle) { return Call<BOOL>(0x12679e7d22f0975c, x, y, z, vehicle); }
	BOOL IS_POINT_ON_ROAD_f(float x, float y, float z, Vehicle vehicle) { return FastCall<BOOL>(0x12679e7d22f0975c, x, y, z, vehicle); }
	int GET_NEXT_GPS_DISABLED_ZONE_INDEX() { return Call<int>(0x1828599912eaa7ea); }
	int GET_NEXT_GPS_DISABLED_ZONE_INDEX_f() { return FastCall<int>(0x1828599912eaa7ea); }
	void SET_GPS_DISABLED_ZONE_AT_INDEX(float x1, float y1, float z1, float x2, float y2, float z2, int index) { Call<void>(0x2d5571624b0601c8, x1, y1, z1, x2, y2, z2, index); }
	void SET_GPS_DISABLED_ZONE_AT_INDEX_f(float x1, float y1, float z1, float x2, float y2, float z2, int index) { FastCall<void>(0x2d5571624b0601c8, x1, y1, z1, x2, y2, z2, index); }
	void CLEAR_GPS_DISABLED_ZONE_AT_INDEX(int index) { Call<void>(0x55bfc0e8946f28fd, index); }
	void CLEAR_GPS_DISABLED_ZONE_AT_INDEX_f(int index) { FastCall<void>(0x55bfc0e8946f28fd, index); }
	void ADD_NAVMESH_REQUIRED_REGION(float x, float y, float radius) { Call<void>(0x60b14dd508c3c107, x, y, radius); }
	void ADD_NAVMESH_REQUIRED_REGION_f(float x, float y, float radius) { FastCall<void>(0x60b14dd508c3c107, x, y, radius); }
	void REMOVE_NAVMESH_REQUIRED_REGIONS() { Call<void>(0x5fbdcd5492d16989); }
	void REMOVE_NAVMESH_REQUIRED_REGIONS_f() { FastCall<void>(0x5fbdcd5492d16989); }
	BOOL IS_NAVMESH_REQUIRED_REGION_IN_USE() { return Call<BOOL>(0x33a9e355cd4c5bbc); }
	BOOL IS_NAVMESH_REQUIRED_REGION_IN_USE_f() { return FastCall<BOOL>(0x33a9e355cd4c5bbc); }
	void DISABLE_NAVMESH_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL toggle) { Call<void>(0x69ef51db2b1f1421, x1, y1, z1, x2, y2, z2, toggle); }
	void DISABLE_NAVMESH_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, BOOL toggle) { FastCall<void>(0x69ef51db2b1f1421, x1, y1, z1, x2, y2, z2, toggle); }
	BOOL ARE_ALL_NAVMESH_REGIONS_LOADED() { return Call<BOOL>(0x3c9228050b3d2c7d); }
	BOOL ARE_ALL_NAVMESH_REGIONS_LOADED_f() { return FastCall<BOOL>(0x3c9228050b3d2c7d); }
	BOOL IS_NAVMESH_LOADED_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { return Call<BOOL>(0xddd74dd0467de291, x1, y1, z1, x2, y2, z2); }
	BOOL IS_NAVMESH_LOADED_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<BOOL>(0xddd74dd0467de291, x1, y1, z1, x2, y2, z2); }
	int GET_NUM_NAVMESHES_EXISTING_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { return Call<int>(0xf5c349a1c3969b56, x1, y1, z1, x2, y2, z2); }
	int GET_NUM_NAVMESHES_EXISTING_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<int>(0xf5c349a1c3969b56, x1, y1, z1, x2, y2, z2); }
	int ADD_NAVMESH_BLOCKING_OBJECT(float p0, float p1, float p2, float p3, float p4, float p5, float p6, BOOL p7, Any p8) { return Call<int>(0xfd377a4f2c9247fc, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	int ADD_NAVMESH_BLOCKING_OBJECT_f(float p0, float p1, float p2, float p3, float p4, float p5, float p6, BOOL p7, Any p8) { return FastCall<int>(0xfd377a4f2c9247fc, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void UPDATE_NAVMESH_BLOCKING_OBJECT(Any p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8) { Call<void>(0xbdca4892e82a2044, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void UPDATE_NAVMESH_BLOCKING_OBJECT_f(Any p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8) { FastCall<void>(0xbdca4892e82a2044, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	void REMOVE_NAVMESH_BLOCKING_OBJECT(Any p0) { Call<void>(0x8f18aef8bd301eff, p0); }
	void REMOVE_NAVMESH_BLOCKING_OBJECT_f(Any p0) { FastCall<void>(0x8f18aef8bd301eff, p0); }
	BOOL DOES_NAVMESH_BLOCKING_OBJECT_EXIST(Any p0) { return Call<BOOL>(0x46bd59c76a458ccc, p0); }
	BOOL DOES_NAVMESH_BLOCKING_OBJECT_EXIST_f(Any p0) { return FastCall<BOOL>(0x46bd59c76a458ccc, p0); }
	float GET_APPROX_HEIGHT_FOR_POINT(float x, float y) { return ToFloat(Call<_float>(0x388abdf359e1a4be, x, y)); }
	float GET_APPROX_HEIGHT_FOR_POINT_f(float x, float y) { return ToFloat(FastCall<_float>(0x388abdf359e1a4be, x, y)); }
	float GET_APPROX_HEIGHT_FOR_AREA(float x1, float y1, float x2, float y2) { return ToFloat(Call<_float>(0x43e3717b767c5f7f, x1, y1, x2, y2)); }
	float GET_APPROX_HEIGHT_FOR_AREA_f(float x1, float y1, float x2, float y2) { return ToFloat(FastCall<_float>(0x43e3717b767c5f7f, x1, y1, x2, y2)); }
	float GET_APPROX_FLOOR_FOR_POINT(float x, float y) { return ToFloat(Call<_float>(0xbb076cbff4dc82cb, x, y)); }
	float GET_APPROX_FLOOR_FOR_POINT_f(float x, float y) { return ToFloat(FastCall<_float>(0xbb076cbff4dc82cb, x, y)); }
	float GET_APPROX_FLOOR_FOR_AREA(float x1, float y1, float x2, float y2) { return ToFloat(Call<_float>(0xfdc66edce6d70bd2, x1, y1, x2, y2)); }
	float GET_APPROX_FLOOR_FOR_AREA_f(float x1, float y1, float x2, float y2) { return ToFloat(FastCall<_float>(0xfdc66edce6d70bd2, x1, y1, x2, y2)); }
	float CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS(float x1, float y1, float z1, float x2, float y2, float z2) { return ToFloat(Call<_float>(0x5615fe9b32dba898, x1, y1, z1, x2, y2, z2)); }
	float CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS_f(float x1, float y1, float z1, float x2, float y2, float z2) { return ToFloat(FastCall<_float>(0x5615fe9b32dba898, x1, y1, z1, x2, y2, z2)); }
}
namespace PED
{
	Ped CREATE_PED(int pedType, Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOOL bScriptHostPed) { return Call<Ped>(0x68c846e9a1b2c, pedType, modelHash, x, y, z, heading, isNetwork, bScriptHostPed); }
	Ped CREATE_PED_f(int pedType, Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOOL bScriptHostPed) { return FastCall<Ped>(0x68c846e9a1b2c, pedType, modelHash, x, y, z, heading, isNetwork, bScriptHostPed); }
	void DELETE_PED(Ped* ped) { Call<void>(0x69aa8862b105b, ped); }
	void DELETE_PED_f(Ped* ped) { FastCall<void>(0x69aa8862b105b, ped); }
	Ped CLONE_PED(Ped ped, BOOL isNetwork, BOOL bScriptHostPed, BOOL copyHeadBlendFlag) { return Call<Ped>(0x35f080e162ed, ped, isNetwork, bScriptHostPed, copyHeadBlendFlag); }
	Ped CLONE_PED_f(Ped ped, BOOL isNetwork, BOOL bScriptHostPed, BOOL copyHeadBlendFlag) { return FastCall<Ped>(0x35f080e162ed, ped, isNetwork, bScriptHostPed, copyHeadBlendFlag); }
	Ped CLONE_PED_ALT(Ped ped, BOOL isNetwork, BOOL bScriptHostPed, BOOL copyHeadBlendFlag, BOOL p4) { return Call<Ped>(0xf81ad6189a985137, ped, isNetwork, bScriptHostPed, copyHeadBlendFlag, p4); }
	Ped CLONE_PED_ALT_f(Ped ped, BOOL isNetwork, BOOL bScriptHostPed, BOOL copyHeadBlendFlag, BOOL p4) { return FastCall<Ped>(0xf81ad6189a985137, ped, isNetwork, bScriptHostPed, copyHeadBlendFlag, p4); }
	void CLONE_PED_TO_TARGET(Ped ped, Ped targetPed) { Call<void>(0x87a9ec0b907c0103, ped, targetPed); }
	void CLONE_PED_TO_TARGET_f(Ped ped, Ped targetPed) { FastCall<void>(0x87a9ec0b907c0103, ped, targetPed); }
	void CLONE_PED_TO_TARGET_ALT(Ped ped, Ped targetPed, BOOL p2) { Call<void>(0x8976e29700e9f44d, ped, targetPed, p2); }
	void CLONE_PED_TO_TARGET_ALT_f(Ped ped, Ped targetPed, BOOL p2) { FastCall<void>(0x8976e29700e9f44d, ped, targetPed, p2); }
	BOOL IS_PED_IN_VEHICLE(Ped ped, Vehicle vehicle, BOOL atGetIn) { return Call<BOOL>(0xcba9dcce475f86f7, ped, vehicle, atGetIn); }
	BOOL IS_PED_IN_VEHICLE_f(Ped ped, Vehicle vehicle, BOOL atGetIn) { return FastCall<BOOL>(0xcba9dcce475f86f7, ped, vehicle, atGetIn); }
	BOOL IS_PED_IN_MODEL(Ped ped, Hash modelHash) { return Call<BOOL>(0x849b7b4d33026db4, ped, modelHash); }
	BOOL IS_PED_IN_MODEL_f(Ped ped, Hash modelHash) { return FastCall<BOOL>(0x849b7b4d33026db4, ped, modelHash); }
	BOOL IS_PED_IN_ANY_VEHICLE(Ped ped, BOOL atGetIn) { return Call<BOOL>(0xf67a735af4edb204, ped, atGetIn); }
	BOOL IS_PED_IN_ANY_VEHICLE_f(Ped ped, BOOL atGetIn) { return FastCall<BOOL>(0xf67a735af4edb204, ped, atGetIn); }
	BOOL IS_COP_PED_IN_AREA_3D(float x1, float y1, float z1, float x2, float y2, float z2) { return Call<BOOL>(0xb0237283bb42b909, x1, y1, z1, x2, y2, z2); }
	BOOL IS_COP_PED_IN_AREA_3D_f(float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<BOOL>(0xb0237283bb42b909, x1, y1, z1, x2, y2, z2); }
	BOOL IS_PED_INJURED(Ped ped) { return Call<BOOL>(0x4e99a92384a2065c, ped); }
	BOOL IS_PED_INJURED_f(Ped ped) { return FastCall<BOOL>(0x4e99a92384a2065c, ped); }
	BOOL IS_PED_HURT(Ped ped) { return Call<BOOL>(0xdca94ce03e1cd4, ped); }
	BOOL IS_PED_HURT_f(Ped ped) { return FastCall<BOOL>(0xdca94ce03e1cd4, ped); }
	BOOL IS_PED_FATALLY_INJURED(Ped ped) { return Call<BOOL>(0x113cc8f65d09fe8e, ped); }
	BOOL IS_PED_FATALLY_INJURED_f(Ped ped) { return FastCall<BOOL>(0x113cc8f65d09fe8e, ped); }
	BOOL IS_PED_DEAD_OR_DYING(Ped ped, BOOL p1) { return Call<BOOL>(0x51e95174296ae807, ped, p1); }
	BOOL IS_PED_DEAD_OR_DYING_f(Ped ped, BOOL p1) { return FastCall<BOOL>(0x51e95174296ae807, ped, p1); }
	BOOL IS_CONVERSATION_PED_DEAD(Ped ped) { return Call<BOOL>(0xfa29e2aad6d0b49b, ped); }
	BOOL IS_CONVERSATION_PED_DEAD_f(Ped ped) { return FastCall<BOOL>(0xfa29e2aad6d0b49b, ped); }
	BOOL IS_PED_AIMING_FROM_COVER(Ped ped) { return Call<BOOL>(0x240b4834fbac3b1f, ped); }
	BOOL IS_PED_AIMING_FROM_COVER_f(Ped ped) { return FastCall<BOOL>(0x240b4834fbac3b1f, ped); }
	BOOL IS_PED_RELOADING(Ped ped) { return Call<BOOL>(0xed3f516d256ade4, ped); }
	BOOL IS_PED_RELOADING_f(Ped ped) { return FastCall<BOOL>(0xed3f516d256ade4, ped); }
	BOOL IS_PED_A_PLAYER(Ped ped) { return Call<BOOL>(0x849b7b1d5d961ee4, ped); }
	BOOL IS_PED_A_PLAYER_f(Ped ped) { return FastCall<BOOL>(0x849b7b1d5d961ee4, ped); }
	Ped CREATE_PED_INSIDE_VEHICLE(Vehicle vehicle, int pedType, Hash modelHash, int seat, BOOL isNetwork, BOOL bScriptHostPed) { return Call<Ped>(0xe3d71ea277b7df3c, vehicle, pedType, modelHash, seat, isNetwork, bScriptHostPed); }
	Ped CREATE_PED_INSIDE_VEHICLE_f(Vehicle vehicle, int pedType, Hash modelHash, int seat, BOOL isNetwork, BOOL bScriptHostPed) { return FastCall<Ped>(0xe3d71ea277b7df3c, vehicle, pedType, modelHash, seat, isNetwork, bScriptHostPed); }
	void SET_PED_DESIRED_HEADING(Ped ped, float heading) { Call<void>(0xc7061a1ae15fa650, ped, heading); }
	void SET_PED_DESIRED_HEADING_f(Ped ped, float heading) { FastCall<void>(0xc7061a1ae15fa650, ped, heading); }
	void FORCE_ALL_HEADING_VALUES_TO_ALIGN(Ped ped) { Call<void>(0x7c30a4e8745d760f, ped); }
	void FORCE_ALL_HEADING_VALUES_TO_ALIGN_f(Ped ped) { FastCall<void>(0x7c30a4e8745d760f, ped); }
	BOOL IS_PED_FACING_PED(Ped ped, Ped otherPed, float angle) { return Call<BOOL>(0xcba989dee60f5c0f, ped, otherPed, angle); }
	BOOL IS_PED_FACING_PED_f(Ped ped, Ped otherPed, float angle) { return FastCall<BOOL>(0xcba989dee60f5c0f, ped, otherPed, angle); }
	BOOL IS_PED_IN_MELEE_COMBAT(Ped ped) { return Call<BOOL>(0xdcf3b04ec3a2c334, ped); }
	BOOL IS_PED_IN_MELEE_COMBAT_f(Ped ped) { return FastCall<BOOL>(0xdcf3b04ec3a2c334, ped); }
	BOOL IS_PED_STOPPED(Ped ped) { return Call<BOOL>(0x4e99a925a02192c8, ped); }
	BOOL IS_PED_STOPPED_f(Ped ped) { return FastCall<BOOL>(0x4e99a925a02192c8, ped); }
	BOOL IS_PED_SHOOTING_IN_AREA(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, BOOL p7, BOOL p8) { return Call<BOOL>(0x5de7bfad4f3afd0, ped, x1, y1, z1, x2, y2, z2, p7, p8); }
	BOOL IS_PED_SHOOTING_IN_AREA_f(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, BOOL p7, BOOL p8) { return FastCall<BOOL>(0x5de7bfad4f3afd0, ped, x1, y1, z1, x2, y2, z2, p7, p8); }
	BOOL IS_ANY_PED_SHOOTING_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7) { return Call<BOOL>(0x9e59c59a6af3a1e3, x1, y1, z1, x2, y2, z2, p6, p7); }
	BOOL IS_ANY_PED_SHOOTING_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7) { return FastCall<BOOL>(0x9e59c59a6af3a1e3, x1, y1, z1, x2, y2, z2, p6, p7); }
	BOOL IS_PED_SHOOTING(Ped ped) { return Call<BOOL>(0x849b7b8be939c9a8, ped); }
	BOOL IS_PED_SHOOTING_f(Ped ped) { return FastCall<BOOL>(0x849b7b8be939c9a8, ped); }
	void SET_PED_ACCURACY(Ped ped, int accuracy) { Call<void>(0x388fe9311b79e726, ped, accuracy); }
	void SET_PED_ACCURACY_f(Ped ped, int accuracy) { FastCall<void>(0x388fe9311b79e726, ped, accuracy); }
	int GET_PED_ACCURACY(Ped ped) { return Call<int>(0x9170d9a288a380b2, ped); }
	int GET_PED_ACCURACY_f(Ped ped) { return FastCall<int>(0x9170d9a288a380b2, ped); }
	void SET_AMBIENT_LAW_PED_ACCURACY_MODIFIER(float multiplier) { Call<void>(0xae957e0b4797854c, multiplier); }
	void SET_AMBIENT_LAW_PED_ACCURACY_MODIFIER_f(float multiplier) { FastCall<void>(0xae957e0b4797854c, multiplier); }
	BOOL IS_PED_MODEL(Ped ped, Hash modelHash) { return Call<BOOL>(0x1ab8804f27c902e4, ped, modelHash); }
	BOOL IS_PED_MODEL_f(Ped ped, Hash modelHash) { return FastCall<BOOL>(0x1ab8804f27c902e4, ped, modelHash); }
	void EXPLODE_PED_HEAD(Ped ped, Hash weaponHash) { Call<void>(0xff86f7930f867cee, ped, weaponHash); }
	void EXPLODE_PED_HEAD_f(Ped ped, Hash weaponHash) { FastCall<void>(0xff86f7930f867cee, ped, weaponHash); }
	void REMOVE_PED_ELEGANTLY(Ped* ped) { Call<void>(0xc4c1e6a4d18f93e0, ped); }
	void REMOVE_PED_ELEGANTLY_f(Ped* ped) { FastCall<void>(0xc4c1e6a4d18f93e0, ped); }
	void ADD_ARMOUR_TO_PED(Ped ped, int amount) { Call<void>(0x45c1a6eefd3b959c, ped, amount); }
	void ADD_ARMOUR_TO_PED_f(Ped ped, int amount) { FastCall<void>(0x45c1a6eefd3b959c, ped, amount); }
	void SET_PED_ARMOUR(Ped ped, int amount) { Call<void>(0xee7a27ef4599a0dd, ped, amount); }
	void SET_PED_ARMOUR_f(Ped ped, int amount) { FastCall<void>(0xee7a27ef4599a0dd, ped, amount); }
	void SET_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seatIndex) { Call<void>(0x321b2f4972db1fda, ped, vehicle, seatIndex); }
	void SET_PED_INTO_VEHICLE_f(Ped ped, Vehicle vehicle, int seatIndex) { FastCall<void>(0x321b2f4972db1fda, ped, vehicle, seatIndex); }
	void SET_PED_ALLOW_VEHICLES_OVERRIDE(Ped ped, BOOL toggle) { Call<void>(0x8d1a8d7b34024e1, ped, toggle); }
	void SET_PED_ALLOW_VEHICLES_OVERRIDE_f(Ped ped, BOOL toggle) { FastCall<void>(0x8d1a8d7b34024e1, ped, toggle); }
	BOOL CAN_CREATE_RANDOM_PED(BOOL p0) { return Call<BOOL>(0x4cd96024616e8fc7, p0); }
	BOOL CAN_CREATE_RANDOM_PED_f(BOOL p0) { return FastCall<BOOL>(0x4cd96024616e8fc7, p0); }
	Ped CREATE_RANDOM_PED(float posX, float posY, float posZ) { return Call<Ped>(0x865d3113a9422e96, posX, posY, posZ); }
	Ped CREATE_RANDOM_PED_f(float posX, float posY, float posZ) { return FastCall<Ped>(0x865d3113a9422e96, posX, posY, posZ); }
	Ped CREATE_RANDOM_PED_AS_DRIVER(Vehicle vehicle, BOOL returnHandle) { return Call<Ped>(0x24d31331e9a3aa6c, vehicle, returnHandle); }
	Ped CREATE_RANDOM_PED_AS_DRIVER_f(Vehicle vehicle, BOOL returnHandle) { return FastCall<Ped>(0x24d31331e9a3aa6c, vehicle, returnHandle); }
	BOOL CAN_CREATE_RANDOM_DRIVER() { return Call<BOOL>(0x43b29a62d6e2250); }
	BOOL CAN_CREATE_RANDOM_DRIVER_f() { return FastCall<BOOL>(0x43b29a62d6e2250); }
	BOOL CAN_CREATE_RANDOM_BIKE_RIDER() { return Call<BOOL>(0xb9a42fce03f252a4); }
	BOOL CAN_CREATE_RANDOM_BIKE_RIDER_f() { return FastCall<BOOL>(0xb9a42fce03f252a4); }
	void SET_PED_MOVE_ANIMS_BLEND_OUT(Ped ped) { Call<void>(0x134f148cb638a4c2, ped); }
	void SET_PED_MOVE_ANIMS_BLEND_OUT_f(Ped ped) { FastCall<void>(0x134f148cb638a4c2, ped); }
	void SET_PED_CAN_BE_DRAGGED_OUT(Ped ped, BOOL toggle) { Call<void>(0xede634f581d6a341, ped, toggle); }
	void SET_PED_CAN_BE_DRAGGED_OUT_f(Ped ped, BOOL toggle) { FastCall<void>(0xede634f581d6a341, ped, toggle); }
	void SET_PED_ALLOW_HURT_COMBAT_FOR_ALL_MISSION_PEDS(BOOL toggle) { Call<void>(0x55b6a14324619709, toggle); }
	void SET_PED_ALLOW_HURT_COMBAT_FOR_ALL_MISSION_PEDS_f(BOOL toggle) { FastCall<void>(0x55b6a14324619709, toggle); }
	BOOL IS_PED_MALE(Ped ped) { return Call<BOOL>(0xdca94ce04016d2, ped); }
	BOOL IS_PED_MALE_f(Ped ped) { return FastCall<BOOL>(0xdca94ce04016d2, ped); }
	BOOL IS_PED_HUMAN(Ped ped) { return Call<BOOL>(0x1ab8804f278568e8, ped); }
	BOOL IS_PED_HUMAN_f(Ped ped) { return FastCall<BOOL>(0x1ab8804f278568e8, ped); }
	Vehicle GET_VEHICLE_PED_IS_IN(Ped ped, BOOL includeEntering) { return Call<Vehicle>(0x70da7fa374dc56ce, ped, includeEntering); }
	Vehicle GET_VEHICLE_PED_IS_IN_f(Ped ped, BOOL includeEntering) { return FastCall<Vehicle>(0x70da7fa374dc56ce, ped, includeEntering); }
	void RESET_PED_LAST_VEHICLE(Ped ped) { Call<void>(0x31905073676fa8c3, ped); }
	void RESET_PED_LAST_VEHICLE_f(Ped ped) { FastCall<void>(0x31905073676fa8c3, ped); }
	void SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) { Call<void>(0x40e2a57b2090d166, multiplier); }
	void SET_PED_DENSITY_MULTIPLIER_THIS_FRAME_f(float multiplier) { FastCall<void>(0x40e2a57b2090d166, multiplier); }
	void SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME(float p0, float p1) { Call<void>(0x5a7bd87156aea551, p0, p1); }
	void SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME_f(float p0, float p1) { FastCall<void>(0x5a7bd87156aea551, p0, p1); }
	void SUPPRESS_AMBIENT_PED_AGGRESSIVE_CLEANUP_THIS_FRAME() { Call<void>(0x67eb9643f2f58c1); }
	void SUPPRESS_AMBIENT_PED_AGGRESSIVE_CLEANUP_THIS_FRAME_f() { FastCall<void>(0x67eb9643f2f58c1); }
	void SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME(float x, float y, float z) { Call<void>(0x5fc3211f4275e7, x, y, z); }
	void SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME_f(float x, float y, float z) { FastCall<void>(0x5fc3211f4275e7, x, y, z); }
	void SET_PED_NON_CREATION_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { Call<void>(0xda82e44a8e5e484e, x1, y1, z1, x2, y2, z2); }
	void SET_PED_NON_CREATION_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2) { FastCall<void>(0xda82e44a8e5e484e, x1, y1, z1, x2, y2, z2); }
	void CLEAR_PED_NON_CREATION_AREA() { Call<void>(0xb6b77c5f5c0cb3f9); }
	void CLEAR_PED_NON_CREATION_AREA_f() { FastCall<void>(0xb6b77c5f5c0cb3f9); }
	void INSTANTLY_FILL_PED_POPULATION() { Call<void>(0xd3bf5adeaa561828); }
	void INSTANTLY_FILL_PED_POPULATION_f() { FastCall<void>(0xd3bf5adeaa561828); }
	BOOL IS_PED_ON_MOUNT(Ped ped) { return Call<BOOL>(0x849b7b73a249bbde, ped); }
	BOOL IS_PED_ON_MOUNT_f(Ped ped) { return FastCall<BOOL>(0x849b7b73a249bbde, ped); }
	Ped GET_MOUNT(Ped ped) { return Call<Ped>(0x38df20b5f9b0, ped); }
	Ped GET_MOUNT_f(Ped ped) { return FastCall<Ped>(0x38df20b5f9b0, ped); }
	BOOL IS_PED_ON_VEHICLE(Ped ped) { return Call<BOOL>(0xcbaa6d1601182db1, ped); }
	BOOL IS_PED_ON_VEHICLE_f(Ped ped) { return FastCall<BOOL>(0xcbaa6d1601182db1, ped); }
	BOOL IS_PED_ON_SPECIFIC_VEHICLE(Ped ped, Vehicle vehicle) { return Call<BOOL>(0x464ee897a0395ffa, ped, vehicle); }
	BOOL IS_PED_ON_SPECIFIC_VEHICLE_f(Ped ped, Vehicle vehicle) { return FastCall<BOOL>(0x464ee897a0395ffa, ped, vehicle); }
	void SET_PED_MONEY(Ped ped, int amount) { Call<void>(0xa49895eef2626193, ped, amount); }
	void SET_PED_MONEY_f(Ped ped, int amount) { FastCall<void>(0xa49895eef2626193, ped, amount); }
	int GET_PED_MONEY(Ped ped) { return Call<int>(0x216c8063c43e1387, ped); }
	int GET_PED_MONEY_f(Ped ped) { return FastCall<int>(0x216c8063c43e1387, ped); }
	void SET_HEALTH_SNACKS_CARRIED_BY_ALL_NEW_PEDS(float p0, Any p1) { Call<void>(0x483ce8bc76dc94c0, p0, p1); }
	void SET_HEALTH_SNACKS_CARRIED_BY_ALL_NEW_PEDS_f(float p0, Any p1) { FastCall<void>(0x483ce8bc76dc94c0, p0, p1); }
	void SET_AMBIENT_PEDS_DROP_MONEY(BOOL p0) { Call<void>(0xe1dcc4dfc0e5c067, p0); }
	void SET_AMBIENT_PEDS_DROP_MONEY_f(BOOL p0) { FastCall<void>(0xe1dcc4dfc0e5c067, p0); }
	void _SET_BLOCK_AMBIENT_PEDS_FROM_DROPPING_WEAPONS_THIS_FRAME() { Call<void>(0x6058eba418673d03); }
	void _SET_BLOCK_AMBIENT_PEDS_FROM_DROPPING_WEAPONS_THIS_FRAME_f() { FastCall<void>(0x6058eba418673d03); }
	void SET_BLOCKING_OF_NON_TEMPORARY_EVENTS_FOR_AMBIENT_PEDS_THIS_FRAME(BOOL p0) { Call<void>(0x673f4ab4335f2d1f, p0); }
	void SET_BLOCKING_OF_NON_TEMPORARY_EVENTS_FOR_AMBIENT_PEDS_THIS_FRAME_f(BOOL p0) { FastCall<void>(0x673f4ab4335f2d1f, p0); }
	void SET_PED_SUFFERS_CRITICAL_HITS(Ped ped, BOOL toggle) { Call<void>(0x7201cf9082058938, ped, toggle); }
	void SET_PED_SUFFERS_CRITICAL_HITS_f(Ped ped, BOOL toggle) { FastCall<void>(0x7201cf9082058938, ped, toggle); }
	void SET_PED_UPPER_BODY_DAMAGE_ONLY(Ped ped, BOOL toggle) { Call<void>(0x4d076121fe3b0ce9, ped, toggle); }
	void SET_PED_UPPER_BODY_DAMAGE_ONLY_f(Ped ped, BOOL toggle) { FastCall<void>(0x4d076121fe3b0ce9, ped, toggle); }
	BOOL IS_PED_SITTING_IN_VEHICLE(Ped ped, Vehicle vehicle) { return Call<BOOL>(0xce0f8d0b8b5aa76a, ped, vehicle); }
	BOOL IS_PED_SITTING_IN_VEHICLE_f(Ped ped, Vehicle vehicle) { return FastCall<BOOL>(0xce0f8d0b8b5aa76a, ped, vehicle); }
	BOOL IS_PED_SITTING_IN_ANY_VEHICLE(Ped ped) { return Call<BOOL>(0xf1e77b118cad60f7, ped); }
	BOOL IS_PED_SITTING_IN_ANY_VEHICLE_f(Ped ped) { return FastCall<BOOL>(0xf1e77b118cad60f7, ped); }
	BOOL IS_PED_ON_FOOT(Ped ped) { return Call<BOOL>(0x4e99a924c3287be9, ped); }
	BOOL IS_PED_ON_FOOT_f(Ped ped) { return FastCall<BOOL>(0x4e99a924c3287be9, ped); }
	BOOL IS_PED_ON_ANY_BIKE(Ped ped) { return Call<BOOL>(0xa9a3352596c4d86f, ped); }
	BOOL IS_PED_ON_ANY_BIKE_f(Ped ped) { return FastCall<BOOL>(0xa9a3352596c4d86f, ped); }
	BOOL IS_PED_PLANTING_BOMB(Ped ped) { return Call<BOOL>(0xd78e30e74ef63525, ped); }
	BOOL IS_PED_PLANTING_BOMB_f(Ped ped) { return FastCall<BOOL>(0xd78e30e74ef63525, ped); }
	Vector3* GET_DEAD_PED_PICKUP_COORDS(Ped ped, float p1, float p2) { Call<Vector3*>(0xd4b743969fc0e7ff, ped, p1, p2); return GetVector(); }
	BOOL IS_PED_IN_ANY_BOAT(Ped ped) { return Call<BOOL>(0xa991bc761968bd48, ped); }
	BOOL IS_PED_IN_ANY_BOAT_f(Ped ped) { return FastCall<BOOL>(0xa991bc761968bd48, ped); }
	BOOL IS_PED_IN_ANY_SUB(Ped ped) { return Call<BOOL>(0xcba9dcca00d21518, ped); }
	BOOL IS_PED_IN_ANY_SUB_f(Ped ped) { return FastCall<BOOL>(0xcba9dcca00d21518, ped); }
	BOOL IS_PED_IN_ANY_HELI(Ped ped) { return Call<BOOL>(0xa991bc76196b5342, ped); }
	BOOL IS_PED_IN_ANY_HELI_f(Ped ped) { return FastCall<BOOL>(0xa991bc76196b5342, ped); }
	BOOL IS_PED_IN_ANY_PLANE(Ped ped) { return Call<BOOL>(0x88a5d24d1472d734, ped); }
	BOOL IS_PED_IN_ANY_PLANE_f(Ped ped) { return FastCall<BOOL>(0x88a5d24d1472d734, ped); }
	BOOL IS_PED_IN_FLYING_VEHICLE(Ped ped) { return Call<BOOL>(0x7be74a55e7e3ef11, ped); }
	BOOL IS_PED_IN_FLYING_VEHICLE_f(Ped ped) { return FastCall<BOOL>(0x7be74a55e7e3ef11, ped); }
	void SET_PED_DIES_IN_WATER(Ped ped, BOOL toggle) { Call<void>(0xd8b46007eeed8e1c, ped, toggle); }
	void SET_PED_DIES_IN_WATER_f(Ped ped, BOOL toggle) { FastCall<void>(0xd8b46007eeed8e1c, ped, toggle); }
	BOOL GET_PED_DIES_IN_WATER(Ped ped) { return Call<BOOL>(0x5877556f57c20c10, ped); }
	BOOL GET_PED_DIES_IN_WATER_f(Ped ped) { return FastCall<BOOL>(0x5877556f57c20c10, ped); }
	void SET_PED_DIES_IN_SINKING_VEHICLE(Ped ped, BOOL toggle) { Call<void>(0xd4d1d8566a7fb201, ped, toggle); }
	void SET_PED_DIES_IN_SINKING_VEHICLE_f(Ped ped, BOOL toggle) { FastCall<void>(0xd4d1d8566a7fb201, ped, toggle); }
	int GET_PED_ARMOUR(Ped ped) { return Call<int>(0xc238c14af342d69, ped); }
	int GET_PED_ARMOUR_f(Ped ped) { return FastCall<int>(0xc238c14af342d69, ped); }
	void SET_PED_STAY_IN_VEHICLE_WHEN_JACKED(Ped ped, BOOL toggle) { Call<void>(0x96aff5369c7ba7ef, ped, toggle); }
	void SET_PED_STAY_IN_VEHICLE_WHEN_JACKED_f(Ped ped, BOOL toggle) { FastCall<void>(0x96aff5369c7ba7ef, ped, toggle); }
	void SET_PED_CAN_BE_SHOT_IN_VEHICLE(Ped ped, BOOL toggle) { Call<void>(0x5912fb716b7c40b7, ped, toggle); }
	void SET_PED_CAN_BE_SHOT_IN_VEHICLE_f(Ped ped, BOOL toggle) { FastCall<void>(0x5912fb716b7c40b7, ped, toggle); }
	BOOL GET_PED_LAST_DAMAGE_BONE(Ped ped, int* outBone) { return Call<BOOL>(0xa3aed4147faa8024, ped, outBone); }
	BOOL GET_PED_LAST_DAMAGE_BONE_f(Ped ped, int* outBone) { return FastCall<BOOL>(0xa3aed4147faa8024, ped, outBone); }
	void CLEAR_PED_LAST_DAMAGE_BONE(Ped ped) { Call<void>(0x661c57770c0d258d, ped); }
	void CLEAR_PED_LAST_DAMAGE_BONE_f(Ped ped) { FastCall<void>(0x661c57770c0d258d, ped); }
	void SET_AI_WEAPON_DAMAGE_MODIFIER(float value) { Call<void>(0x726ce154003579be, value); }
	void SET_AI_WEAPON_DAMAGE_MODIFIER_f(float value) { FastCall<void>(0x726ce154003579be, value); }
	void RESET_AI_WEAPON_DAMAGE_MODIFIER() { Call<void>(0xdf5df6efe14fe06b); }
	void RESET_AI_WEAPON_DAMAGE_MODIFIER_f() { FastCall<void>(0xdf5df6efe14fe06b); }
	void SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER(float modifier) { Call<void>(0x7a1764e73f357189, modifier); }
	void SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER_f(float modifier) { FastCall<void>(0x7a1764e73f357189, modifier); }
	void RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER() { Call<void>(0xc70e68efe0016276); }
	void RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER_f() { FastCall<void>(0xc70e68efe0016276); }
	void SET_TREAT_AS_AMBIENT_PED_FOR_DRIVER_LOCKON(Ped ped, BOOL p1) { Call<void>(0x68b46a375d6e2c49, ped, p1); }
	void SET_TREAT_AS_AMBIENT_PED_FOR_DRIVER_LOCKON_f(Ped ped, BOOL p1) { FastCall<void>(0x68b46a375d6e2c49, ped, p1); }
	void SET_PED_CAN_BE_TARGETTED(Ped ped, BOOL toggle) { Call<void>(0x35868bebe4101922, ped, toggle); }
	void SET_PED_CAN_BE_TARGETTED_f(Ped ped, BOOL toggle) { FastCall<void>(0x35868bebe4101922, ped, toggle); }
	void SET_PED_CAN_BE_TARGETTED_BY_TEAM(Ped ped, int team, BOOL toggle) { Call<void>(0x7b272958012a0728, ped, team, toggle); }
	void SET_PED_CAN_BE_TARGETTED_BY_TEAM_f(Ped ped, int team, BOOL toggle) { FastCall<void>(0x7b272958012a0728, ped, team, toggle); }
	void SET_PED_CAN_BE_TARGETTED_BY_PLAYER(Ped ped, Player player, BOOL toggle) { Call<void>(0x4e02335c585454ec, ped, player, toggle); }
	void SET_PED_CAN_BE_TARGETTED_BY_PLAYER_f(Ped ped, Player player, BOOL toggle) { FastCall<void>(0x4e02335c585454ec, ped, player, toggle); }
	void SET_ALLOW_LOCKON_TO_PED_IF_FRIENDLY(Ped ped, BOOL toggle) { Call<void>(0x64ca866cec0b94fb, ped, toggle); }
	void SET_ALLOW_LOCKON_TO_PED_IF_FRIENDLY_f(Ped ped, BOOL toggle) { FastCall<void>(0x64ca866cec0b94fb, ped, toggle); }
	void SET_USE_CAMERA_HEADING_FOR_DESIRED_DIRECTION_LOCK_ON_TEST(Ped ped, BOOL toggle) { Call<void>(0xac7e9734a3e5223b, ped, toggle); }
	void SET_USE_CAMERA_HEADING_FOR_DESIRED_DIRECTION_LOCK_ON_TEST_f(Ped ped, BOOL toggle) { FastCall<void>(0xac7e9734a3e5223b, ped, toggle); }
	BOOL IS_PED_IN_ANY_POLICE_VEHICLE(Ped ped) { return Call<BOOL>(0xf71a5a1c2a0b7ef3, ped); }
	BOOL IS_PED_IN_ANY_POLICE_VEHICLE_f(Ped ped) { return FastCall<BOOL>(0xf71a5a1c2a0b7ef3, ped); }
	void FORCE_PED_TO_OPEN_PARACHUTE(Ped ped) { Call<void>(0x757c4c26415777ec, ped); }
	void FORCE_PED_TO_OPEN_PARACHUTE_f(Ped ped) { FastCall<void>(0x757c4c26415777ec, ped); }
	BOOL IS_PED_IN_PARACHUTE_FREE_FALL(Ped ped) { return Call<BOOL>(0xa79407165a67013b, ped); }
	BOOL IS_PED_IN_PARACHUTE_FREE_FALL_f(Ped ped) { return FastCall<BOOL>(0xa79407165a67013b, ped); }
	BOOL IS_PED_FALLING(Ped ped) { return Call<BOOL>(0x4e99a922cfd84b82, ped); }
	BOOL IS_PED_FALLING_f(Ped ped) { return FastCall<BOOL>(0x4e99a922cfd84b82, ped); }
	BOOL IS_PED_JUMPING(Ped ped) { return Call<BOOL>(0x4e99a923c5a20def, ped); }
	BOOL IS_PED_JUMPING_f(Ped ped) { return FastCall<BOOL>(0x4e99a923c5a20def, ped); }
	BOOL IS_PED_LANDING(Any p0) { return Call<BOOL>(0x4e99a9240d563b12, p0); }
	BOOL IS_PED_LANDING_f(Any p0) { return FastCall<BOOL>(0x4e99a9240d563b12, p0); }
	BOOL IS_PED_DOING_A_BEAST_JUMP(Any p0) { return Call<BOOL>(0xfe7d62526e8c23d9, p0); }
	BOOL IS_PED_DOING_A_BEAST_JUMP_f(Any p0) { return FastCall<BOOL>(0xfe7d62526e8c23d9, p0); }
	BOOL IS_PED_CLIMBING(Ped ped) { return Call<BOOL>(0x849b7b26345e7752, ped); }
	BOOL IS_PED_CLIMBING_f(Ped ped) { return FastCall<BOOL>(0x849b7b26345e7752, ped); }
	BOOL IS_PED_VAULTING(Ped ped) { return Call<BOOL>(0x849b7b9db8a47eb5, ped); }
	BOOL IS_PED_VAULTING_f(Ped ped) { return FastCall<BOOL>(0x849b7b9db8a47eb5, ped); }
	BOOL IS_PED_DIVING(Ped ped) { return Call<BOOL>(0x3c578995c1af6d36, ped); }
	BOOL IS_PED_DIVING_f(Ped ped) { return FastCall<BOOL>(0x3c578995c1af6d36, ped); }
	BOOL IS_PED_JUMPING_OUT_OF_VEHICLE(Ped ped) { return Call<BOOL>(0xff3a9366bf36e2a5, ped); }
	BOOL IS_PED_JUMPING_OUT_OF_VEHICLE_f(Ped ped) { return FastCall<BOOL>(0xff3a9366bf36e2a5, ped); }
	BOOL IS_PED_OPENING_DOOR(Ped ped) { return Call<BOOL>(0x8ac6db2eaefb7a1a, ped); }
	BOOL IS_PED_OPENING_DOOR_f(Ped ped) { return FastCall<BOOL>(0x8ac6db2eaefb7a1a, ped); }
	int GET_PED_PARACHUTE_STATE(Ped ped) { return Call<int>(0x71002804fdd283fa, ped); }
	int GET_PED_PARACHUTE_STATE_f(Ped ped) { return FastCall<int>(0x71002804fdd283fa, ped); }
	int GET_PED_PARACHUTE_LANDING_TYPE(Ped ped) { return Call<int>(0x94c78faffa9e08d9, ped); }
	int GET_PED_PARACHUTE_LANDING_TYPE_f(Ped ped) { return FastCall<int>(0x94c78faffa9e08d9, ped); }
	void SET_PED_PARACHUTE_TINT_INDEX(Ped ped, int tintIndex) { Call<void>(0xec504b6260fe64f9, ped, tintIndex); }
	void SET_PED_PARACHUTE_TINT_INDEX_f(Ped ped, int tintIndex) { FastCall<void>(0xec504b6260fe64f9, ped, tintIndex); }
	void GET_PED_PARACHUTE_TINT_INDEX(Ped ped, int* outTintIndex) { Call<void>(0x795d6ba317320c85, ped, outTintIndex); }
	void GET_PED_PARACHUTE_TINT_INDEX_f(Ped ped, int* outTintIndex) { FastCall<void>(0x795d6ba317320c85, ped, outTintIndex); }
	void SET_PED_RESERVE_PARACHUTE_TINT_INDEX(Ped ped, Any p1) { Call<void>(0x994659c54bfba3bc, ped, p1); }
	void SET_PED_RESERVE_PARACHUTE_TINT_INDEX_f(Ped ped, Any p1) { FastCall<void>(0x994659c54bfba3bc, ped, p1); }
	Object CREATE_PARACHUTE_BAG_OBJECT(Ped ped, BOOL p1, BOOL p2) { return Call<Object>(0x81c60878090fa6b7, ped, p1, p2); }
	Object CREATE_PARACHUTE_BAG_OBJECT_f(Ped ped, BOOL p1, BOOL p2) { return FastCall<Object>(0x81c60878090fa6b7, ped, p1, p2); }
	void SET_PED_DUCKING(Ped ped, BOOL toggle) { Call<void>(0xe0cad5fa10dccc9c, ped, toggle); }
	void SET_PED_DUCKING_f(Ped ped, BOOL toggle) { FastCall<void>(0xe0cad5fa10dccc9c, ped, toggle); }
	BOOL IS_PED_DUCKING(Ped ped) { return Call<BOOL>(0x4e99a92287ad7984, ped); }
	BOOL IS_PED_DUCKING_f(Ped ped) { return FastCall<BOOL>(0x4e99a92287ad7984, ped); }
	BOOL IS_PED_IN_ANY_TAXI(Ped ped) { return Call<BOOL>(0xa991bc761970ba26, ped); }
	BOOL IS_PED_IN_ANY_TAXI_f(Ped ped) { return FastCall<BOOL>(0xa991bc761970ba26, ped); }
	void SET_PED_ID_RANGE(Ped ped, float value) { Call<void>(0x388fe964beff6b26, ped, value); }
	void SET_PED_ID_RANGE_f(Ped ped, float value) { FastCall<void>(0x388fe964beff6b26, ped, value); }
	void SET_PED_HIGHLY_PERCEPTIVE(Ped ped, BOOL toggle) { Call<void>(0x1ef3c38115003578, ped, toggle); }
	void SET_PED_HIGHLY_PERCEPTIVE_f(Ped ped, BOOL toggle) { FastCall<void>(0x1ef3c38115003578, ped, toggle); }
	void SET_COP_PERCEPTION_OVERRIDES(float seeingRange, float seeingRangePeripheral, float hearingRange, float visualFieldMinAzimuthAngle, float visualFieldMaxAzimuthAngle, float fieldOfGazeMaxAngle, float p6) { Call<void>(0x6efb745883f8a845, seeingRange, seeingRangePeripheral, hearingRange, visualFieldMinAzimuthAngle, visualFieldMaxAzimuthAngle, fieldOfGazeMaxAngle, p6); }
	void SET_COP_PERCEPTION_OVERRIDES_f(float seeingRange, float seeingRangePeripheral, float hearingRange, float visualFieldMinAzimuthAngle, float visualFieldMaxAzimuthAngle, float fieldOfGazeMaxAngle, float p6) { FastCall<void>(0x6efb745883f8a845, seeingRange, seeingRangePeripheral, hearingRange, visualFieldMinAzimuthAngle, visualFieldMaxAzimuthAngle, fieldOfGazeMaxAngle, p6); }
	void SET_PED_INJURED_ON_GROUND_BEHAVIOUR(Ped ped, float p1) { Call<void>(0x500ce9f374c88afa, ped, p1); }
	void SET_PED_INJURED_ON_GROUND_BEHAVIOUR_f(Ped ped, float p1) { FastCall<void>(0x500ce9f374c88afa, ped, p1); }
	void DISABLE_PED_INJURED_ON_GROUND_BEHAVIOUR(Ped ped) { Call<void>(0xe89486ccf4e56180, ped); }
	void DISABLE_PED_INJURED_ON_GROUND_BEHAVIOUR_f(Ped ped) { FastCall<void>(0xe89486ccf4e56180, ped); }
	void SET_PED_SEEING_RANGE(Ped ped, float value) { Call<void>(0x35863d37e74f0f3a, ped, value); }
	void SET_PED_SEEING_RANGE_f(Ped ped, float value) { FastCall<void>(0x35863d37e74f0f3a, ped, value); }
	void SET_PED_HEARING_RANGE(Ped ped, float value) { Call<void>(0x2f8da4319490225, ped, value); }
	void SET_PED_HEARING_RANGE_f(Ped ped, float value) { FastCall<void>(0x2f8da4319490225, ped, value); }
	void SET_PED_VISUAL_FIELD_MIN_ANGLE(Ped ped, float value) { Call<void>(0x430a5fbca31b7af, ped, value); }
	void SET_PED_VISUAL_FIELD_MIN_ANGLE_f(Ped ped, float value) { FastCall<void>(0x430a5fbca31b7af, ped, value); }
	void SET_PED_VISUAL_FIELD_MAX_ANGLE(Ped ped, float value) { Call<void>(0x430a5ca9c26a141, ped, value); }
	void SET_PED_VISUAL_FIELD_MAX_ANGLE_f(Ped ped, float value) { FastCall<void>(0x430a5ca9c26a141, ped, value); }
	void SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE(Ped ped, float angle) { Call<void>(0x85acc69fc72d6c2d, ped, angle); }
	void SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE_f(Ped ped, float angle) { FastCall<void>(0x85acc69fc72d6c2d, ped, angle); }
	void SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE(Ped ped, float angle) { Call<void>(0x25e8e9b4c941073f, ped, angle); }
	void SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE_f(Ped ped, float angle) { FastCall<void>(0x25e8e9b4c941073f, ped, angle); }
	void SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE(Ped ped, float range) { Call<void>(0x57db77460ed45d31, ped, range); }
	void SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE_f(Ped ped, float range) { FastCall<void>(0x57db77460ed45d31, ped, range); }
	void SET_PED_VISUAL_FIELD_CENTER_ANGLE(Ped ped, float angle) { Call<void>(0x95b151162bb68860, ped, angle); }
	void SET_PED_VISUAL_FIELD_CENTER_ANGLE_f(Ped ped, float angle) { FastCall<void>(0x95b151162bb68860, ped, angle); }
	float GET_PED_VISUAL_FIELD_CENTER_ANGLE(Ped ped) { return ToFloat(Call<_float>(0x324542fc4599b854, ped)); }
	float GET_PED_VISUAL_FIELD_CENTER_ANGLE_f(Ped ped) { return ToFloat(FastCall<_float>(0x324542fc4599b854, ped)); }
	void SET_PED_STEALTH_MOVEMENT(Ped ped, BOOL p1, char* action) { Call<void>(0x8bcc15f6906f3eb8, ped, p1, action); }
	void SET_PED_STEALTH_MOVEMENT_f(Ped ped, BOOL p1, char* action) { FastCall<void>(0x8bcc15f6906f3eb8, ped, p1, action); }
	BOOL GET_PED_STEALTH_MOVEMENT(Ped ped) { return Call<BOOL>(0x4c5802d6c05c8c44, ped); }
	BOOL GET_PED_STEALTH_MOVEMENT_f(Ped ped) { return FastCall<BOOL>(0x4c5802d6c05c8c44, ped); }
	int CREATE_GROUP(int unused) { return Call<int>(0x18957d233007495c, unused); }
	int CREATE_GROUP_f(int unused) { return FastCall<int>(0x18957d233007495c, unused); }
	void SET_PED_AS_GROUP_LEADER(Ped ped, int groupId) { Call<void>(0xb76f212866bfc709, ped, groupId); }
	void SET_PED_AS_GROUP_LEADER_f(Ped ped, int groupId) { FastCall<void>(0xb76f212866bfc709, ped, groupId); }
	void SET_PED_AS_GROUP_MEMBER(Ped ped, int groupId) { Call<void>(0xb76f2128687a0c9a, ped, groupId); }
	void SET_PED_AS_GROUP_MEMBER_f(Ped ped, int groupId) { FastCall<void>(0xb76f2128687a0c9a, ped, groupId); }
	void SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(Ped pedHandle, int groupHandle, BOOL toggle) { Call<void>(0x5f0463d8d419a075, pedHandle, groupHandle, toggle); }
	void SET_PED_CAN_TELEPORT_TO_GROUP_LEADER_f(Ped pedHandle, int groupHandle, BOOL toggle) { FastCall<void>(0x5f0463d8d419a075, pedHandle, groupHandle, toggle); }
	void REMOVE_GROUP(int groupId) { Call<void>(0x1dba76baa19edae4, groupId); }
	void REMOVE_GROUP_f(int groupId) { FastCall<void>(0x1dba76baa19edae4, groupId); }
	void REMOVE_PED_FROM_GROUP(Ped ped) { Call<void>(0xd37b0aea4d45f7f5, ped); }
	void REMOVE_PED_FROM_GROUP_f(Ped ped) { FastCall<void>(0xd37b0aea4d45f7f5, ped); }
	BOOL IS_PED_GROUP_MEMBER(Ped ped, int groupId) { return Call<BOOL>(0x87fb7d299739e83f, ped, groupId); }
	BOOL IS_PED_GROUP_MEMBER_f(Ped ped, int groupId) { return FastCall<BOOL>(0x87fb7d299739e83f, ped, groupId); }
	BOOL IS_PED_HANGING_ON_TO_VEHICLE(Ped ped) { return Call<BOOL>(0x6421839db6c3f194, ped); }
	BOOL IS_PED_HANGING_ON_TO_VEHICLE_f(Ped ped) { return FastCall<BOOL>(0x6421839db6c3f194, ped); }
	void SET_GROUP_SEPARATION_RANGE(int groupHandle, float separationRange) { Call<void>(0xfe57b3c6f3976961, groupHandle, separationRange); }
	void SET_GROUP_SEPARATION_RANGE_f(int groupHandle, float separationRange) { FastCall<void>(0xfe57b3c6f3976961, groupHandle, separationRange); }
	void SET_PED_MIN_GROUND_TIME_FOR_STUNGUN(Ped ped, int ms) { Call<void>(0x5ff89a262058db7c, ped, ms); }
	void SET_PED_MIN_GROUND_TIME_FOR_STUNGUN_f(Ped ped, int ms) { FastCall<void>(0x5ff89a262058db7c, ped, ms); }
	BOOL IS_PED_PRONE(Ped ped) { return Call<BOOL>(0x1ab8804f27f4d0df, ped); }
	BOOL IS_PED_PRONE_f(Ped ped) { return FastCall<BOOL>(0x1ab8804f27f4d0df, ped); }
	BOOL IS_PED_IN_COMBAT(Ped ped, Ped target) { return Call<BOOL>(0xed3ee591c3edda9, ped, target); }
	BOOL IS_PED_IN_COMBAT_f(Ped ped, Ped target) { return FastCall<BOOL>(0xed3ee591c3edda9, ped, target); }
	Entity GET_PED_TARGET_FROM_COMBAT_PED(Ped ped, Any p1) { return Call<Entity>(0x3215aad021c14e24, ped, p1); }
	Entity GET_PED_TARGET_FROM_COMBAT_PED_f(Ped ped, Any p1) { return FastCall<Entity>(0x3215aad021c14e24, ped, p1); }
	BOOL CAN_PED_IN_COMBAT_SEE_TARGET(Ped ped, Ped target) { return Call<BOOL>(0x569013ebb34b5fad, ped, target); }
	BOOL CAN_PED_IN_COMBAT_SEE_TARGET_f(Ped ped, Ped target) { return FastCall<BOOL>(0x569013ebb34b5fad, ped, target); }
	BOOL IS_PED_DOING_DRIVEBY(Ped ped) { return Call<BOOL>(0x55882c0645868f34, ped); }
	BOOL IS_PED_DOING_DRIVEBY_f(Ped ped) { return FastCall<BOOL>(0x55882c0645868f34, ped); }
	BOOL IS_PED_JACKING(Ped ped) { return Call<BOOL>(0x4e99a923a2f1f09e, ped); }
	BOOL IS_PED_JACKING_f(Ped ped) { return FastCall<BOOL>(0x4e99a923a2f1f09e, ped); }
	BOOL IS_PED_BEING_JACKED(Ped ped) { return Call<BOOL>(0x8611b4086d470423, ped); }
	BOOL IS_PED_BEING_JACKED_f(Ped ped) { return FastCall<BOOL>(0x8611b4086d470423, ped); }
	BOOL IS_PED_BEING_STUNNED(Ped ped, int p1) { return Call<BOOL>(0x3c24cd07391ccfae, ped, p1); }
	BOOL IS_PED_BEING_STUNNED_f(Ped ped, int p1) { return FastCall<BOOL>(0x3c24cd07391ccfae, ped, p1); }
	Ped GET_PEDS_JACKER(Ped ped) { return Call<Ped>(0x784df63a7d68dc9e, ped); }
	Ped GET_PEDS_JACKER_f(Ped ped) { return FastCall<Ped>(0x784df63a7d68dc9e, ped); }
	Ped GET_JACK_TARGET(Ped ped) { return Call<Ped>(0x783c1c616cb04a68, ped); }
	Ped GET_JACK_TARGET_f(Ped ped) { return FastCall<Ped>(0x783c1c616cb04a68, ped); }
	BOOL IS_PED_FLEEING(Ped ped) { return Call<BOOL>(0x4e99a922e237c737, ped); }
	BOOL IS_PED_FLEEING_f(Ped ped) { return FastCall<BOOL>(0x4e99a922e237c737, ped); }
	BOOL IS_PED_IN_COVER(Ped ped, BOOL exceptUseWeapon) { return Call<BOOL>(0x849b7b4d3275c642, ped, exceptUseWeapon); }
	BOOL IS_PED_IN_COVER_f(Ped ped, BOOL exceptUseWeapon) { return FastCall<BOOL>(0x849b7b4d3275c642, ped, exceptUseWeapon); }
	BOOL IS_PED_IN_COVER_FACING_LEFT(Ped ped) { return Call<BOOL>(0xb16e2d48a1aab6cf, ped); }
	BOOL IS_PED_IN_COVER_FACING_LEFT_f(Ped ped) { return FastCall<BOOL>(0xb16e2d48a1aab6cf, ped); }
	BOOL IS_PED_IN_HIGH_COVER(Ped ped) { return Call<BOOL>(0x8c151b504d2fdaef, ped); }
	BOOL IS_PED_IN_HIGH_COVER_f(Ped ped) { return FastCall<BOOL>(0x8c151b504d2fdaef, ped); }
	BOOL IS_PED_GOING_INTO_COVER(Ped ped) { return Call<BOOL>(0x9b43671f0fafedc2, ped); }
	BOOL IS_PED_GOING_INTO_COVER_f(Ped ped) { return FastCall<BOOL>(0x9b43671f0fafedc2, ped); }
	BOOL SET_PED_PINNED_DOWN(Ped ped, BOOL pinned, int i) { return Call<BOOL>(0x333e1003c0d16b5c, ped, pinned, i); }
	BOOL SET_PED_PINNED_DOWN_f(Ped ped, BOOL pinned, int i) { return FastCall<BOOL>(0x333e1003c0d16b5c, ped, pinned, i); }
	BOOL _HAS_PED_CLEAR_LOS_TO_ENTITY(Ped ped, Entity entity, float x, float y, float z, int p5, BOOL p6, BOOL p7) { return Call<BOOL>(0x5f903418cd043b72, ped, entity, x, y, z, p5, p6, p7); }
	BOOL _HAS_PED_CLEAR_LOS_TO_ENTITY_f(Ped ped, Entity entity, float x, float y, float z, int p5, BOOL p6, BOOL p7) { return FastCall<BOOL>(0x5f903418cd043b72, ped, entity, x, y, z, p5, p6, p7); }
	int GET_SEAT_PED_IS_TRYING_TO_ENTER(Ped ped) { return Call<int>(0x1197020b1ba37f18, ped); }
	int GET_SEAT_PED_IS_TRYING_TO_ENTER_f(Ped ped) { return FastCall<int>(0x1197020b1ba37f18, ped); }
	Vehicle GET_VEHICLE_PED_IS_TRYING_TO_ENTER(Ped ped) { return Call<Vehicle>(0x2fe249c8466045e3, ped); }
	Vehicle GET_VEHICLE_PED_IS_TRYING_TO_ENTER_f(Ped ped) { return FastCall<Vehicle>(0x2fe249c8466045e3, ped); }
	Entity GET_PED_SOURCE_OF_DEATH(Ped ped) { return Call<Entity>(0x39f86d78ce5103b7, ped); }
	Entity GET_PED_SOURCE_OF_DEATH_f(Ped ped) { return FastCall<Entity>(0x39f86d78ce5103b7, ped); }
	Hash GET_PED_CAUSE_OF_DEATH(Ped ped) { return Call<Hash>(0x11c60052ff3f6a1b, ped); }
	Hash GET_PED_CAUSE_OF_DEATH_f(Ped ped) { return FastCall<Hash>(0x11c60052ff3f6a1b, ped); }
	int GET_PED_TIME_OF_DEATH(Ped ped) { return Call<int>(0x772c290521edb05, ped); }
	int GET_PED_TIME_OF_DEATH_f(Ped ped) { return FastCall<int>(0x772c290521edb05, ped); }
	int COUNT_PEDS_IN_COMBAT_WITH_TARGET(Ped ped) { return Call<int>(0x66ecea9cf43dec4e, ped); }
	int COUNT_PEDS_IN_COMBAT_WITH_TARGET_f(Ped ped) { return FastCall<int>(0x66ecea9cf43dec4e, ped); }
	int COUNT_PEDS_IN_COMBAT_WITH_TARGET_WITHIN_RADIUS(Ped ped, float x, float y, float z, float radius) { return Call<int>(0xa2457116acaba4b5, ped, x, y, z, radius); }
	int COUNT_PEDS_IN_COMBAT_WITH_TARGET_WITHIN_RADIUS_f(Ped ped, float x, float y, float z, float radius) { return FastCall<int>(0xa2457116acaba4b5, ped, x, y, z, radius); }
	void SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped, Hash hash) { Call<void>(0x74414d603e5766e6, ped, hash); }
	void SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH_f(Ped ped, Hash hash) { FastCall<void>(0x74414d603e5766e6, ped, hash); }
	void SET_PED_RELATIONSHIP_GROUP_HASH(Ped ped, Hash hash) { Call<void>(0x1b6aeacd6745fd88, ped, hash); }
	void SET_PED_RELATIONSHIP_GROUP_HASH_f(Ped ped, Hash hash) { FastCall<void>(0x1b6aeacd6745fd88, ped, hash); }
	void SET_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2) { Call<void>(0x4387d7eb29515c75, relationship, group1, group2); }
	void SET_RELATIONSHIP_BETWEEN_GROUPS_f(int relationship, Hash group1, Hash group2) { FastCall<void>(0x4387d7eb29515c75, relationship, group1, group2); }
	void CLEAR_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2) { Call<void>(0x2867792e0d0d1be0, relationship, group1, group2); }
	void CLEAR_RELATIONSHIP_BETWEEN_GROUPS_f(int relationship, Hash group1, Hash group2) { FastCall<void>(0x2867792e0d0d1be0, relationship, group1, group2); }
	BOOL ADD_RELATIONSHIP_GROUP(char* name, Hash* groupHash) { return Call<BOOL>(0x99a672ec685a0616, name, groupHash); }
	BOOL ADD_RELATIONSHIP_GROUP_f(char* name, Hash* groupHash) { return FastCall<BOOL>(0x99a672ec685a0616, name, groupHash); }
	void REMOVE_RELATIONSHIP_GROUP(Hash groupHash) { Call<void>(0x56f24d5822dc9933, groupHash); }
	void REMOVE_RELATIONSHIP_GROUP_f(Hash groupHash) { FastCall<void>(0x56f24d5822dc9933, groupHash); }
	BOOL DOES_RELATIONSHIP_GROUP_EXIST(Hash groupHash) { return Call<BOOL>(0x79411f724dcc7c76, groupHash); }
	BOOL DOES_RELATIONSHIP_GROUP_EXIST_f(Hash groupHash) { return FastCall<BOOL>(0x79411f724dcc7c76, groupHash); }
	int GET_RELATIONSHIP_BETWEEN_PEDS(Ped ped1, Ped ped2) { return Call<int>(0x9ea63b2c9e4c7619, ped1, ped2); }
	int GET_RELATIONSHIP_BETWEEN_PEDS_f(Ped ped1, Ped ped2) { return FastCall<int>(0x9ea63b2c9e4c7619, ped1, ped2); }
	Hash GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped) { return Call<Hash>(0x608f289ed24bcfda, ped); }
	Hash GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH_f(Ped ped) { return FastCall<Hash>(0x608f289ed24bcfda, ped); }
	Hash GET_PED_RELATIONSHIP_GROUP_HASH(Ped ped) { return Call<Hash>(0x65e735606c5c9a7c, ped); }
	Hash GET_PED_RELATIONSHIP_GROUP_HASH_f(Ped ped) { return FastCall<Hash>(0x65e735606c5c9a7c, ped); }
	int GET_RELATIONSHIP_BETWEEN_GROUPS(Hash group1, Hash group2) { return Call<int>(0x8e04227e2e67f969, group1, group2); }
	int GET_RELATIONSHIP_BETWEEN_GROUPS_f(Hash group1, Hash group2) { return FastCall<int>(0x8e04227e2e67f969, group1, group2); }
	void SET_RELATIONSHIP_GROUP_AFFECTS_WANTED_LEVEL(Hash group, BOOL p1) { Call<void>(0x68ca0de983216ddf, group, p1); }
	void SET_RELATIONSHIP_GROUP_AFFECTS_WANTED_LEVEL_f(Hash group, BOOL p1) { FastCall<void>(0x68ca0de983216ddf, group, p1); }
	void TELL_GROUP_PEDS_IN_AREA_TO_ATTACK(Ped ped, Any p1, float p2, Hash hash, Any p4, Any p5) { Call<void>(0x2d8fb88e5cfdfb27, ped, p1, p2, hash, p4, p5); }
	void TELL_GROUP_PEDS_IN_AREA_TO_ATTACK_f(Ped ped, Any p1, float p2, Hash hash, Any p4, Any p5) { FastCall<void>(0x2d8fb88e5cfdfb27, ped, p1, p2, hash, p4, p5); }
	void SET_PED_CAN_BE_TARGETED_WITHOUT_LOS(Ped ped, BOOL toggle) { Call<void>(0x95d83a27ff4026ea, ped, toggle); }
	void SET_PED_CAN_BE_TARGETED_WITHOUT_LOS_f(Ped ped, BOOL toggle) { FastCall<void>(0x95d83a27ff4026ea, ped, toggle); }
	void SET_PED_TO_INFORM_RESPECTED_FRIENDS(Ped ped, float radius, int maxFriends) { Call<void>(0xf95867ac9653229c, ped, radius, maxFriends); }
	void SET_PED_TO_INFORM_RESPECTED_FRIENDS_f(Ped ped, float radius, int maxFriends) { FastCall<void>(0xf95867ac9653229c, ped, radius, maxFriends); }
	BOOL IS_PED_RESPONDING_TO_EVENT(Ped ped, Any event) { return Call<BOOL>(0x4d077837722f3923, ped, event); }
	BOOL IS_PED_RESPONDING_TO_EVENT_f(Ped ped, Any event) { return FastCall<BOOL>(0x4d077837722f3923, ped, event); }
	BOOL GET_POS_FROM_FIRED_EVENT(Ped ped, int eventType, Any* outData) { return Call<BOOL>(0x3d056fbd8b2ec2c8, ped, eventType, outData); }
	BOOL GET_POS_FROM_FIRED_EVENT_f(Ped ped, int eventType, Any* outData) { return FastCall<BOOL>(0x3d056fbd8b2ec2c8, ped, eventType, outData); }
	void SET_PED_FIRING_PATTERN(Ped ped, Hash patternHash) { Call<void>(0xe80781e78c247511, ped, patternHash); }
	void SET_PED_FIRING_PATTERN_f(Ped ped, Hash patternHash) { FastCall<void>(0xe80781e78c247511, ped, patternHash); }
	void SET_PED_SHOOT_RATE(Ped ped, int shootRate) { Call<void>(0x543c165bdd5c800d, ped, shootRate); }
	void SET_PED_SHOOT_RATE_f(Ped ped, int shootRate) { FastCall<void>(0x543c165bdd5c800d, ped, shootRate); }
	void SET_COMBAT_FLOAT(Ped ped, int combatType, float p2) { Call<void>(0x34184a3b05739e0e, ped, combatType, p2); }
	void SET_COMBAT_FLOAT_f(Ped ped, int combatType, float p2) { FastCall<void>(0x34184a3b05739e0e, ped, combatType, p2); }
	float GET_COMBAT_FLOAT(Ped ped, int p1) { return ToFloat(Call<_float>(0x8cf93aac729d379a, ped, p1)); }
	float GET_COMBAT_FLOAT_f(Ped ped, int p1) { return ToFloat(FastCall<_float>(0x8cf93aac729d379a, ped, p1)); }
	void GET_GROUP_SIZE(int groupID, Any* p1, int* sizeInMembers) { Call<void>(0xc22be032019fa8a, groupID, p1, sizeInMembers); }
	void GET_GROUP_SIZE_f(int groupID, Any* p1, int* sizeInMembers) { FastCall<void>(0xc22be032019fa8a, groupID, p1, sizeInMembers); }
	BOOL DOES_GROUP_EXIST(int groupId) { return Call<BOOL>(0x65f49862ad7ddc31, groupId); }
	BOOL DOES_GROUP_EXIST_f(int groupId) { return FastCall<BOOL>(0x65f49862ad7ddc31, groupId); }
	int GET_PED_GROUP_INDEX(Ped ped) { return Call<int>(0x1b9153ec5591f079, ped); }
	int GET_PED_GROUP_INDEX_f(Ped ped) { return FastCall<int>(0x1b9153ec5591f079, ped); }
	BOOL IS_PED_IN_GROUP(Ped ped) { return Call<BOOL>(0x849b7b4d32af690a, ped); }
	BOOL IS_PED_IN_GROUP_f(Ped ped) { return FastCall<BOOL>(0x849b7b4d32af690a, ped); }
	Player GET_PLAYER_PED_IS_FOLLOWING(Ped ped) { return Call<Player>(0xea375838a189b281, ped); }
	Player GET_PLAYER_PED_IS_FOLLOWING_f(Ped ped) { return FastCall<Player>(0xea375838a189b281, ped); }
	void SET_GROUP_FORMATION(int groupId, int formationType) { Call<void>(0x8ecca9c6848938b4, groupId, formationType); }
	void SET_GROUP_FORMATION_f(int groupId, int formationType) { FastCall<void>(0x8ecca9c6848938b4, groupId, formationType); }
	void SET_GROUP_FORMATION_SPACING(int groupId, float x, float y, float z) { Call<void>(0xabe62423635b5b98, groupId, x, y, z); }
	void SET_GROUP_FORMATION_SPACING_f(int groupId, float x, float y, float z) { FastCall<void>(0xabe62423635b5b98, groupId, x, y, z); }
	void RESET_GROUP_FORMATION_DEFAULT_SPACING(int groupHandle) { Call<void>(0xce085e884f125f67, groupHandle); }
	void RESET_GROUP_FORMATION_DEFAULT_SPACING_f(int groupHandle) { FastCall<void>(0xce085e884f125f67, groupHandle); }
	Vehicle GET_VEHICLE_PED_IS_USING(Ped ped) { return Call<Vehicle>(0xe2eb6e9c35c60a1b, ped); }
	Vehicle GET_VEHICLE_PED_IS_USING_f(Ped ped) { return FastCall<Vehicle>(0xe2eb6e9c35c60a1b, ped); }
	Vehicle GET_VEHICLE_PED_IS_ENTERING(Ped ped) { return Call<Vehicle>(0xe37cd3ee3ccc9cf3, ped); }
	Vehicle GET_VEHICLE_PED_IS_ENTERING_f(Ped ped) { return FastCall<Vehicle>(0xe37cd3ee3ccc9cf3, ped); }
	void SET_PED_GRAVITY(Ped ped, BOOL toggle) { Call<void>(0xe0cad5faaa59c661, ped, toggle); }
	void SET_PED_GRAVITY_f(Ped ped, BOOL toggle) { FastCall<void>(0xe0cad5faaa59c661, ped, toggle); }
	void APPLY_DAMAGE_TO_PED(Ped ped, int damageAmount, BOOL p2, Any p3, Hash weaponType) { Call<void>(0xa773300532348ca, ped, damageAmount, p2, p3, weaponType); }
	void APPLY_DAMAGE_TO_PED_f(Ped ped, int damageAmount, BOOL p2, Any p3, Hash weaponType) { FastCall<void>(0xa773300532348ca, ped, damageAmount, p2, p3, weaponType); }
	int GET_TIME_PED_DAMAGED_BY_WEAPON(Ped ped, Hash weaponHash) { return Call<int>(0x5b46805ba3e22d61, ped, weaponHash); }
	int GET_TIME_PED_DAMAGED_BY_WEAPON_f(Ped ped, Hash weaponHash) { return FastCall<int>(0x5b46805ba3e22d61, ped, weaponHash); }
	void SET_PED_ALLOWED_TO_DUCK(Ped ped, BOOL toggle) { Call<void>(0xa69687c01f6c4579, ped, toggle); }
	void SET_PED_ALLOWED_TO_DUCK_f(Ped ped, BOOL toggle) { FastCall<void>(0xa69687c01f6c4579, ped, toggle); }
	void SET_PED_NEVER_LEAVES_GROUP(Ped ped, BOOL toggle) { Call<void>(0x911b31af453109dc, ped, toggle); }
	void SET_PED_NEVER_LEAVES_GROUP_f(Ped ped, BOOL toggle) { FastCall<void>(0x911b31af453109dc, ped, toggle); }
	int GET_PED_TYPE(Ped ped) { return Call<int>(0x19da35b0a33f2373, ped); }
	int GET_PED_TYPE_f(Ped ped) { return FastCall<int>(0x19da35b0a33f2373, ped); }
	void SET_PED_AS_COP(Ped ped, BOOL toggle) { Call<void>(0xee7a27ef45afb944, ped, toggle); }
	void SET_PED_AS_COP_f(Ped ped, BOOL toggle) { FastCall<void>(0xee7a27ef45afb944, ped, toggle); }
	void SET_PED_HEALTH_PENDING_LAST_DAMAGE_EVENT_OVERRIDE_FLAG(BOOL toggle) { Call<void>(0x3879e369d9408035, toggle); }
	void SET_PED_HEALTH_PENDING_LAST_DAMAGE_EVENT_OVERRIDE_FLAG_f(BOOL toggle) { FastCall<void>(0x3879e369d9408035, toggle); }
	void SET_PED_MAX_HEALTH(Ped ped, int value) { Call<void>(0x543b80e2f522fca4, ped, value); }
	void SET_PED_MAX_HEALTH_f(Ped ped, int value) { FastCall<void>(0x543b80e2f522fca4, ped, value); }
	int GET_PED_MAX_HEALTH(Ped ped) { return Call<int>(0xf8a21aadbe4c6330, ped); }
	int GET_PED_MAX_HEALTH_f(Ped ped) { return FastCall<int>(0xf8a21aadbe4c6330, ped); }
	void SET_PED_MAX_TIME_IN_WATER(Ped ped, float value) { Call<void>(0x75a035c9baa89f47, ped, value); }
	void SET_PED_MAX_TIME_IN_WATER_f(Ped ped, float value) { FastCall<void>(0x75a035c9baa89f47, ped, value); }
	void SET_PED_MAX_TIME_UNDERWATER(Ped ped, float value) { Call<void>(0x8e6b0a2496aa38a9, ped, value); }
	void SET_PED_MAX_TIME_UNDERWATER_f(Ped ped, float value) { FastCall<void>(0x8e6b0a2496aa38a9, ped, value); }
	void SET_CORPSE_RAGDOLL_FRICTION(Ped ped, float p1) { Call<void>(0x998aaddcf51781dc, ped, p1); }
	void SET_CORPSE_RAGDOLL_FRICTION_f(Ped ped, float p1) { FastCall<void>(0x998aaddcf51781dc, ped, p1); }
	void SET_PED_VEHICLE_FORCED_SEAT_USAGE(Ped ped, Vehicle vehicle, int seatIndex, int flags, Any p4) { Call<void>(0x2a2101350ad66eed, ped, vehicle, seatIndex, flags, p4); }
	void SET_PED_VEHICLE_FORCED_SEAT_USAGE_f(Ped ped, Vehicle vehicle, int seatIndex, int flags, Any p4) { FastCall<void>(0x2a2101350ad66eed, ped, vehicle, seatIndex, flags, p4); }
	void CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE(Ped ped) { Call<void>(0x188e318633fe6e5a, ped); }
	void CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE_f(Ped ped) { FastCall<void>(0x188e318633fe6e5a, ped); }
	void SET_PED_CAN_BE_KNOCKED_OFF_BIKE(Any p0, Any p1) { Call<void>(0xcd3316fa1f25aadd, p0, p1); }
	void SET_PED_CAN_BE_KNOCKED_OFF_BIKE_f(Any p0, Any p1) { FastCall<void>(0xcd3316fa1f25aadd, p0, p1); }
	void SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(Ped ped, int state) { Call<void>(0x4c5edcf2bb685a90, ped, state); }
	void SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE_f(Ped ped, int state) { FastCall<void>(0x4c5edcf2bb685a90, ped, state); }
	BOOL CAN_KNOCK_PED_OFF_VEHICLE(Ped ped) { return Call<BOOL>(0x339433d9e0bd2ff2, ped); }
	BOOL CAN_KNOCK_PED_OFF_VEHICLE_f(Ped ped) { return FastCall<BOOL>(0x339433d9e0bd2ff2, ped); }
	void KNOCK_PED_OFF_VEHICLE(Ped ped) { Call<void>(0x73dbe973c4f6cf41, ped); }
	void KNOCK_PED_OFF_VEHICLE_f(Ped ped) { FastCall<void>(0x73dbe973c4f6cf41, ped); }
	void SET_PED_COORDS_NO_GANG(Ped ped, float posX, float posY, float posZ) { Call<void>(0x301264f4b995cd1d, ped, posX, posY, posZ); }
	void SET_PED_COORDS_NO_GANG_f(Ped ped, float posX, float posY, float posZ) { FastCall<void>(0x301264f4b995cd1d, ped, posX, posY, posZ); }
	Ped GET_PED_AS_GROUP_MEMBER(int groupID, int memberNumber) { return Call<Ped>(0x524a5a58ee26dd8e, groupID, memberNumber); }
	Ped GET_PED_AS_GROUP_MEMBER_f(int groupID, int memberNumber) { return FastCall<Ped>(0x524a5a58ee26dd8e, groupID, memberNumber); }
	Ped GET_PED_AS_GROUP_LEADER(int groupID) { return Call<Ped>(0x524a5a58ec6c97fd, groupID); }
	Ped GET_PED_AS_GROUP_LEADER_f(int groupID) { return FastCall<Ped>(0x524a5a58ec6c97fd, groupID); }
	void SET_PED_KEEP_TASK(Ped ped, BOOL toggle) { Call<void>(0xd96d44c15035b572, ped, toggle); }
	void SET_PED_KEEP_TASK_f(Ped ped, BOOL toggle) { FastCall<void>(0xd96d44c15035b572, ped, toggle); }
	void SET_PED_ALLOW_MINOR_REACTIONS_AS_MISSION_PED(Ped ped, BOOL toggle) { Call<void>(0x13aacb3ece848a91, ped, toggle); }
	void SET_PED_ALLOW_MINOR_REACTIONS_AS_MISSION_PED_f(Ped ped, BOOL toggle) { FastCall<void>(0x13aacb3ece848a91, ped, toggle); }
	BOOL IS_PED_SWIMMING(Ped ped) { return Call<BOOL>(0x849b7b8ef85ad122, ped); }
	BOOL IS_PED_SWIMMING_f(Ped ped) { return FastCall<BOOL>(0x849b7b8ef85ad122, ped); }
	BOOL IS_PED_SWIMMING_UNDER_WATER(Ped ped) { return Call<BOOL>(0x68d370619aef1d13, ped); }
	BOOL IS_PED_SWIMMING_UNDER_WATER_f(Ped ped) { return FastCall<BOOL>(0x68d370619aef1d13, ped); }
	void SET_PED_COORDS_KEEP_VEHICLE(Ped ped, float posX, float posY, float posZ) { Call<void>(0x5038ed2351b19686, ped, posX, posY, posZ); }
	void SET_PED_COORDS_KEEP_VEHICLE_f(Ped ped, float posX, float posY, float posZ) { FastCall<void>(0x5038ed2351b19686, ped, posX, posY, posZ); }
	void SET_PED_DIES_IN_VEHICLE(Ped ped, BOOL toggle) { Call<void>(0x7d1c7dc7bb0826f1, ped, toggle); }
	void SET_PED_DIES_IN_VEHICLE_f(Ped ped, BOOL toggle) { FastCall<void>(0x7d1c7dc7bb0826f1, ped, toggle); }
	void SET_CREATE_RANDOM_COPS(BOOL toggle) { Call<void>(0x9b03b4c9d4e82dc5, toggle); }
	void SET_CREATE_RANDOM_COPS_f(BOOL toggle) { FastCall<void>(0x9b03b4c9d4e82dc5, toggle); }
	void SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS(BOOL toggle) { Call<void>(0xd82780f4f67355a9, toggle); }
	void SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS_f(BOOL toggle) { FastCall<void>(0xd82780f4f67355a9, toggle); }
	void SET_CREATE_RANDOM_COPS_ON_SCENARIOS(BOOL toggle) { Call<void>(0xceb74ded24970c9d, toggle); }
	void SET_CREATE_RANDOM_COPS_ON_SCENARIOS_f(BOOL toggle) { FastCall<void>(0xceb74ded24970c9d, toggle); }
	BOOL CAN_CREATE_RANDOM_COPS() { return Call<BOOL>(0x4e52a467cc5da797); }
	BOOL CAN_CREATE_RANDOM_COPS_f() { return FastCall<BOOL>(0x4e52a467cc5da797); }
	void SET_PED_AS_ENEMY(Ped ped, BOOL toggle) { Call<void>(0x388fe93498c21348, ped, toggle); }
	void SET_PED_AS_ENEMY_f(Ped ped, BOOL toggle) { FastCall<void>(0x388fe93498c21348, ped, toggle); }
	void SET_PED_CAN_SMASH_GLASS(Ped ped, BOOL p1, BOOL p2) { Call<void>(0x43fcb255c94d123d, ped, p1, p2); }
	void SET_PED_CAN_SMASH_GLASS_f(Ped ped, BOOL p1, BOOL p2) { FastCall<void>(0x43fcb255c94d123d, ped, p1, p2); }
	BOOL IS_PED_IN_ANY_TRAIN(Ped ped) { return Call<BOOL>(0x88a5d24d14adeee0, ped); }
	BOOL IS_PED_IN_ANY_TRAIN_f(Ped ped) { return FastCall<BOOL>(0x88a5d24d14adeee0, ped); }
	BOOL IS_PED_GETTING_INTO_A_VEHICLE(Ped ped) { return Call<BOOL>(0x3c0d83e02e5a91ef, ped); }
	BOOL IS_PED_GETTING_INTO_A_VEHICLE_f(Ped ped) { return FastCall<BOOL>(0x3c0d83e02e5a91ef, ped); }
	BOOL IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE(Ped ped) { return Call<BOOL>(0x3c2b94af8b2970cd, ped); }
	BOOL IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE_f(Ped ped) { return FastCall<BOOL>(0x3c2b94af8b2970cd, ped); }
	void SET_ENABLE_HANDCUFFS(Ped ped, BOOL toggle) { Call<void>(0xb2a71edbb6a4c973, ped, toggle); }
	void SET_ENABLE_HANDCUFFS_f(Ped ped, BOOL toggle) { FastCall<void>(0xb2a71edbb6a4c973, ped, toggle); }
	void SET_ENABLE_BOUND_ANKLES(Ped ped, BOOL toggle) { Call<void>(0x40bd96d523ab33c, ped, toggle); }
	void SET_ENABLE_BOUND_ANKLES_f(Ped ped, BOOL toggle) { FastCall<void>(0x40bd96d523ab33c, ped, toggle); }
	void SET_ENABLE_SCUBA(Ped ped, BOOL toggle) { Call<void>(0x34c8ca3c6a638e25, ped, toggle); }
	void SET_ENABLE_SCUBA_f(Ped ped, BOOL toggle) { FastCall<void>(0x34c8ca3c6a638e25, ped, toggle); }
	void SET_CAN_ATTACK_FRIENDLY(Ped ped, BOOL toggle, BOOL p2) { Call<void>(0x8a53e8befa114ab6, ped, toggle, p2); }
	void SET_CAN_ATTACK_FRIENDLY_f(Ped ped, BOOL toggle, BOOL p2) { FastCall<void>(0x8a53e8befa114ab6, ped, toggle, p2); }
	int GET_PED_ALERTNESS(Ped ped) { return Call<int>(0x9caa5ae8978734fa, ped); }
	int GET_PED_ALERTNESS_f(Ped ped) { return FastCall<int>(0x9caa5ae8978734fa, ped); }
	void SET_PED_ALERTNESS(Ped ped, int value) { Call<void>(0xd96d3d2c5f7d9d06, ped, value); }
	void SET_PED_ALERTNESS_f(Ped ped, int value) { FastCall<void>(0xd96d3d2c5f7d9d06, ped, value); }
	void SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(Ped ped, BOOL toggle) { Call<void>(0x90ec50b12dfd935, ped, toggle); }
	void SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE_f(Ped ped, BOOL toggle) { FastCall<void>(0x90ec50b12dfd935, ped, toggle); }
	void SET_PED_MOVEMENT_CLIPSET(Ped ped, char* clipSet, float transitionSpeed) { Call<void>(0xb94109baaac85c8f, ped, clipSet, transitionSpeed); }
	void SET_PED_MOVEMENT_CLIPSET_f(Ped ped, char* clipSet, float transitionSpeed) { FastCall<void>(0xb94109baaac85c8f, ped, clipSet, transitionSpeed); }
	void RESET_PED_MOVEMENT_CLIPSET(Ped ped, float p1) { Call<void>(0x2d2bec83e369bdc2, ped, p1); }
	void RESET_PED_MOVEMENT_CLIPSET_f(Ped ped, float p1) { FastCall<void>(0x2d2bec83e369bdc2, ped, p1); }
	void SET_PED_STRAFE_CLIPSET(Ped ped, char* clipSet) { Call<void>(0x95605ba53486a82f, ped, clipSet); }
	void SET_PED_STRAFE_CLIPSET_f(Ped ped, char* clipSet) { FastCall<void>(0x95605ba53486a82f, ped, clipSet); }
	void RESET_PED_STRAFE_CLIPSET(Ped ped) { Call<void>(0x21e2557cec64ba22, ped); }
	void RESET_PED_STRAFE_CLIPSET_f(Ped ped) { FastCall<void>(0x21e2557cec64ba22, ped); }
	void SET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped, char* clipSet) { Call<void>(0xf927c6147478c558, ped, clipSet); }
	void SET_PED_WEAPON_MOVEMENT_CLIPSET_f(Ped ped, char* clipSet) { FastCall<void>(0xf927c6147478c558, ped, clipSet); }
	void RESET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped) { Call<void>(0xee29e43c789434c5, ped); }
	void RESET_PED_WEAPON_MOVEMENT_CLIPSET_f(Ped ped) { FastCall<void>(0xee29e43c789434c5, ped); }
	void SET_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped, char* clipset) { Call<void>(0x3bde148ff0bb147f, ped, clipset); }
	void SET_PED_DRIVE_BY_CLIPSET_OVERRIDE_f(Ped ped, char* clipset) { FastCall<void>(0x3bde148ff0bb147f, ped, clipset); }
	void CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped) { Call<void>(0x675a70a8d484a52a, ped); }
	void CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE_f(Ped ped) { FastCall<void>(0x675a70a8d484a52a, ped); }
	void SET_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE(Ped ped, char* p1) { Call<void>(0xb31c8449870cea5f, ped, p1); }
	void SET_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE_f(Ped ped, char* p1) { FastCall<void>(0xb31c8449870cea5f, ped, p1); }
	void CLEAR_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE(Ped ped) { Call<void>(0x4084b67d8bca5354, ped); }
	void CLEAR_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE_f(Ped ped) { FastCall<void>(0x4084b67d8bca5354, ped); }
	void CLEAR_PED_FALL_UPPER_BODY_CLIPSET_OVERRIDE(Ped ped) { Call<void>(0x466e13c5f3552cd7, ped); }
	void CLEAR_PED_FALL_UPPER_BODY_CLIPSET_OVERRIDE_f(Ped ped) { FastCall<void>(0x466e13c5f3552cd7, ped); }
	void SET_PED_IN_VEHICLE_CONTEXT(Ped ped, Hash context) { Call<void>(0x382fac05cd49562f, ped, context); }
	void SET_PED_IN_VEHICLE_CONTEXT_f(Ped ped, Hash context) { FastCall<void>(0x382fac05cd49562f, ped, context); }
	void RESET_PED_IN_VEHICLE_CONTEXT(Ped ped) { Call<void>(0x5ced0163631736a2, ped); }
	void RESET_PED_IN_VEHICLE_CONTEXT_f(Ped ped) { FastCall<void>(0x5ced0163631736a2, ped); }
	BOOL IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM(Ped ped, char* animDict, char* anim) { return Call<BOOL>(0x9506cb5b3bf3004, ped, animDict, anim); }
	BOOL IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM_f(Ped ped, char* animDict, char* anim) { return FastCall<BOOL>(0x9506cb5b3bf3004, ped, animDict, anim); }
	void SET_PED_ALTERNATE_WALK_ANIM(Ped ped, char* animDict, char* animName, float p3, BOOL p4) { Call<void>(0x7082809d058fd4d5, ped, animDict, animName, p3, p4); }
	void SET_PED_ALTERNATE_WALK_ANIM_f(Ped ped, char* animDict, char* animName, float p3, BOOL p4) { FastCall<void>(0x7082809d058fd4d5, ped, animDict, animName, p3, p4); }
	void CLEAR_PED_ALTERNATE_WALK_ANIM(Ped ped, float p1) { Call<void>(0x11f166b5215201c0, ped, p1); }
	void CLEAR_PED_ALTERNATE_WALK_ANIM_f(Ped ped, float p1) { FastCall<void>(0x11f166b5215201c0, ped, p1); }
	void SET_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, char* animDictionary, char* animationName, float p4, BOOL p5) { Call<void>(0xba415c9d5a516af, ped, stance, animDictionary, animationName, p4, p5); }
	void SET_PED_ALTERNATE_MOVEMENT_ANIM_f(Ped ped, int stance, char* animDictionary, char* animationName, float p4, BOOL p5) { FastCall<void>(0xba415c9d5a516af, ped, stance, animDictionary, animationName, p4, p5); }
	void CLEAR_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, float p2) { Call<void>(0xf083b70cb960d61a, ped, stance, p2); }
	void CLEAR_PED_ALTERNATE_MOVEMENT_ANIM_f(Ped ped, int stance, float p2) { FastCall<void>(0xf083b70cb960d61a, ped, stance, p2); }
	void SET_PED_GESTURE_GROUP(Ped ped, char* animGroupGesture) { Call<void>(0xf83f26b0b3c79dbc, ped, animGroupGesture); }
	void SET_PED_GESTURE_GROUP_f(Ped ped, char* animGroupGesture) { FastCall<void>(0xf83f26b0b3c79dbc, ped, animGroupGesture); }
	Vector3* GET_ANIM_INITIAL_OFFSET_POSITION(char* animDict, char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9) { Call<Vector3*>(0x7388c6dd31357075, animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9); return GetVector(); }
	Vector3* GET_ANIM_INITIAL_OFFSET_ROTATION(char* animDict, char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9) { Call<Vector3*>(0x7388c6ea023be6ca, animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9); return GetVector(); }
	int GET_PED_DRAWABLE_VARIATION(Ped ped, int componentId) { return Call<int>(0x392a90f70c24b40b, ped, componentId); }
	int GET_PED_DRAWABLE_VARIATION_f(Ped ped, int componentId) { return FastCall<int>(0x392a90f70c24b40b, ped, componentId); }
	int GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(Ped ped, int componentId) { return Call<int>(0xb388fa1a3228e136, ped, componentId); }
	int GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS_f(Ped ped, int componentId) { return FastCall<int>(0xb388fa1a3228e136, ped, componentId); }
	int GET_PED_TEXTURE_VARIATION(Ped ped, int componentId) { return Call<int>(0x4aef1609224b1816, ped, componentId); }
	int GET_PED_TEXTURE_VARIATION_f(Ped ped, int componentId) { return FastCall<int>(0x4aef1609224b1816, ped, componentId); }
	int GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(Ped ped, int componentId, int drawableId) { return Call<int>(0xb6496445fb892daf, ped, componentId, drawableId); }
	int GET_NUMBER_OF_PED_TEXTURE_VARIATIONS_f(Ped ped, int componentId, int drawableId) { return FastCall<int>(0xb6496445fb892daf, ped, componentId, drawableId); }
	int GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(Ped ped, int propId) { return Call<int>(0x71840c88b0875710, ped, propId); }
	int GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS_f(Ped ped, int propId) { return FastCall<int>(0x71840c88b0875710, ped, propId); }
	int GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(Ped ped, int propId, int drawableId) { return Call<int>(0x9b6201c56af79495, ped, propId, drawableId); }
	int GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS_f(Ped ped, int propId, int drawableId) { return FastCall<int>(0x9b6201c56af79495, ped, propId, drawableId); }
	int GET_PED_PALETTE_VARIATION(Ped ped, int componentId) { return Call<int>(0x6ab806e07f4a176, ped, componentId); }
	int GET_PED_PALETTE_VARIATION_f(Ped ped, int componentId) { return FastCall<int>(0x6ab806e07f4a176, ped, componentId); }
	BOOL GET_MP_OUTFIT_DATA_FROM_METADATA(Any* p0, Any* p1) { return Call<BOOL>(0xc2fe663b0cddd0d8, p0, p1); }
	BOOL GET_MP_OUTFIT_DATA_FROM_METADATA_f(Any* p0, Any* p1) { return FastCall<BOOL>(0xc2fe663b0cddd0d8, p0, p1); }
	int GET_FM_MALE_SHOP_PED_APPAREL_ITEM_INDEX(int p0) { return Call<int>(0x86dd8504ac5a77e2, p0); }
	int GET_FM_MALE_SHOP_PED_APPAREL_ITEM_INDEX_f(int p0) { return FastCall<int>(0x86dd8504ac5a77e2, p0); }
	int GET_FM_FEMALE_SHOP_PED_APPAREL_ITEM_INDEX(int p0) { return Call<int>(0x484d9e60970c84e1, p0); }
	int GET_FM_FEMALE_SHOP_PED_APPAREL_ITEM_INDEX_f(int p0) { return FastCall<int>(0x484d9e60970c84e1, p0); }
	BOOL IS_PED_COMPONENT_VARIATION_VALID(Ped ped, int componentId, int drawableId, int textureId) { return Call<BOOL>(0x2d1b2ec4784ed789, ped, componentId, drawableId, textureId); }
	BOOL IS_PED_COMPONENT_VARIATION_VALID_f(Ped ped, int componentId, int drawableId, int textureId) { return FastCall<BOOL>(0x2d1b2ec4784ed789, ped, componentId, drawableId, textureId); }
	void SET_PED_COMPONENT_VARIATION(Ped ped, int componentId, int drawableId, int textureId, int paletteId) { Call<void>(0x7b69be2f47093cc4, ped, componentId, drawableId, textureId, paletteId); }
	void SET_PED_COMPONENT_VARIATION_f(Ped ped, int componentId, int drawableId, int textureId, int paletteId) { FastCall<void>(0x7b69be2f47093cc4, ped, componentId, drawableId, textureId, paletteId); }
	void SET_PED_RANDOM_COMPONENT_VARIATION(Ped ped, int p1) { Call<void>(0x1a2330a03a237c82, ped, p1); }
	void SET_PED_RANDOM_COMPONENT_VARIATION_f(Ped ped, int p1) { FastCall<void>(0x1a2330a03a237c82, ped, p1); }
	void SET_PED_RANDOM_PROPS(Ped ped) { Call<void>(0x3521271fe27b8e81, ped); }
	void SET_PED_RANDOM_PROPS_f(Ped ped) { FastCall<void>(0x3521271fe27b8e81, ped); }
	void SET_PED_DEFAULT_COMPONENT_VARIATION(Ped ped) { Call<void>(0x95b9c57ac7406ea6, ped); }
	void SET_PED_DEFAULT_COMPONENT_VARIATION_f(Ped ped) { FastCall<void>(0x95b9c57ac7406ea6, ped); }
	void SET_PED_BLEND_FROM_PARENTS(Ped ped, Any p1, Any p2, float p3, float p4) { Call<void>(0xdb34486b5984888f, ped, p1, p2, p3, p4); }
	void SET_PED_BLEND_FROM_PARENTS_f(Ped ped, Any p1, Any p2, float p3, float p4) { FastCall<void>(0xdb34486b5984888f, ped, p1, p2, p3, p4); }
	void SET_PED_HEAD_BLEND_DATA(Ped ped, int shapeFirstID, int shapeSecondID, int shapeThirdID, int skinFirstID, int skinSecondID, int skinThirdID, float shapeMix, float skinMix, float thirdMix, BOOL isParent) { Call<void>(0x237a8424627b77ea, ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent); }
	void SET_PED_HEAD_BLEND_DATA_f(Ped ped, int shapeFirstID, int shapeSecondID, int shapeThirdID, int skinFirstID, int skinSecondID, int skinThirdID, float shapeMix, float skinMix, float thirdMix, BOOL isParent) { FastCall<void>(0x237a8424627b77ea, ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent); }
	BOOL GET_PED_HEAD_BLEND_DATA(Ped ped, Any* headBlendData) { return Call<BOOL>(0xbe55bd54e82848de, ped, headBlendData); }
	BOOL GET_PED_HEAD_BLEND_DATA_f(Ped ped, Any* headBlendData) { return FastCall<BOOL>(0xbe55bd54e82848de, ped, headBlendData); }
	void UPDATE_PED_HEAD_BLEND_DATA(Ped ped, float shapeMix, float skinMix, float thirdMix) { Call<void>(0x9d57c87d2c88daf1, ped, shapeMix, skinMix, thirdMix); }
	void UPDATE_PED_HEAD_BLEND_DATA_f(Ped ped, float shapeMix, float skinMix, float thirdMix) { FastCall<void>(0x9d57c87d2c88daf1, ped, shapeMix, skinMix, thirdMix); }
	void SET_HEAD_BLEND_EYE_COLOR(Ped ped, int index) { Call<void>(0x6a4bcb0b2dd44485, ped, index); }
	void SET_HEAD_BLEND_EYE_COLOR_f(Ped ped, int index) { FastCall<void>(0x6a4bcb0b2dd44485, ped, index); }
	int GET_HEAD_BLEND_EYE_COLOR(Ped ped) { return Call<int>(0x2ad7b7eb5dc19211, ped); }
	int GET_HEAD_BLEND_EYE_COLOR_f(Ped ped) { return FastCall<int>(0x2ad7b7eb5dc19211, ped); }
	void SET_PED_HEAD_OVERLAY(Ped ped, int overlayID, int index, float opacity) { Call<void>(0x31a4e3f5594bbc7e, ped, overlayID, index, opacity); }
	void SET_PED_HEAD_OVERLAY_f(Ped ped, int overlayID, int index, float opacity) { FastCall<void>(0x31a4e3f5594bbc7e, ped, overlayID, index, opacity); }
	int GET_PED_HEAD_OVERLAY(Ped ped, int overlayID) { return Call<int>(0x56cc36327db5b00a, ped, overlayID); }
	int GET_PED_HEAD_OVERLAY_f(Ped ped, int overlayID) { return FastCall<int>(0x56cc36327db5b00a, ped, overlayID); }
	int GET_PED_HEAD_OVERLAY_NUM(int overlayID) { return Call<int>(0xc88b8ac4c16f9b1, overlayID); }
	int GET_PED_HEAD_OVERLAY_NUM_f(int overlayID) { return FastCall<int>(0xc88b8ac4c16f9b1, overlayID); }
	void SET_PED_HEAD_OVERLAY_TINT(Ped ped, int overlayID, int colorType, int colorID, int secondColorID) { Call<void>(0x339cadb7690e661c, ped, overlayID, colorType, colorID, secondColorID); }
	void SET_PED_HEAD_OVERLAY_TINT_f(Ped ped, int overlayID, int colorType, int colorID, int secondColorID) { FastCall<void>(0x339cadb7690e661c, ped, overlayID, colorType, colorID, secondColorID); }
	void SET_PED_HAIR_TINT(Ped ped, int colorID, int highlightColorID) { Call<void>(0xd96d4254cae670ab, ped, colorID, highlightColorID); }
	void SET_PED_HAIR_TINT_f(Ped ped, int colorID, int highlightColorID) { FastCall<void>(0xd96d4254cae670ab, ped, colorID, highlightColorID); }
	int GET_NUM_PED_HAIR_TINTS() { return Call<int>(0x5698a7e3a254950d); }
	int GET_NUM_PED_HAIR_TINTS_f() { return FastCall<int>(0x5698a7e3a254950d); }
	int GET_NUM_PED_MAKEUP_TINTS() { return Call<int>(0x14d1bba62a8a7474); }
	int GET_NUM_PED_MAKEUP_TINTS_f() { return FastCall<int>(0x14d1bba62a8a7474); }
	void GET_PED_HAIR_TINT_COLOR(int hairColorIndex, int* outR, int* outG, int* outB) { Call<void>(0xcf47b567c1ba6fa3, hairColorIndex, outR, outG, outB); }
	void GET_PED_HAIR_TINT_COLOR_f(int hairColorIndex, int* outR, int* outG, int* outB) { FastCall<void>(0xcf47b567c1ba6fa3, hairColorIndex, outR, outG, outB); }
	void GET_PED_MAKEUP_TINT_COLOR(int makeupColorIndex, int* outR, int* outG, int* outB) { Call<void>(0xf8959c3c7a51065c, makeupColorIndex, outR, outG, outB); }
	void GET_PED_MAKEUP_TINT_COLOR_f(int makeupColorIndex, int* outR, int* outG, int* outB) { FastCall<void>(0xf8959c3c7a51065c, makeupColorIndex, outR, outG, outB); }
	BOOL IS_PED_HAIR_TINT_FOR_CREATOR(int colorId) { return Call<BOOL>(0x53b201e9d20427ca, colorId); }
	BOOL IS_PED_HAIR_TINT_FOR_CREATOR_f(int colorId) { return FastCall<BOOL>(0x53b201e9d20427ca, colorId); }
	int GET_DEFAULT_SECONDARY_TINT_FOR_CREATOR(int colorId) { return Call<int>(0xb6e5349c929ee944, colorId); }
	int GET_DEFAULT_SECONDARY_TINT_FOR_CREATOR_f(int colorId) { return FastCall<int>(0xb6e5349c929ee944, colorId); }
	BOOL IS_PED_LIPSTICK_TINT_FOR_CREATOR(int colorId) { return Call<BOOL>(0xa0bd27d726d87daf, colorId); }
	BOOL IS_PED_LIPSTICK_TINT_FOR_CREATOR_f(int colorId) { return FastCall<BOOL>(0xa0bd27d726d87daf, colorId); }
	BOOL IS_PED_BLUSH_TINT_FOR_CREATOR(int colorId) { return Call<BOOL>(0x86508f8d28053e36, colorId); }
	BOOL IS_PED_BLUSH_TINT_FOR_CREATOR_f(int colorId) { return FastCall<BOOL>(0x86508f8d28053e36, colorId); }
	BOOL IS_PED_HAIR_TINT_FOR_BARBER(int colorID) { return Call<BOOL>(0x13374a625efe8c1e, colorID); }
	BOOL IS_PED_HAIR_TINT_FOR_BARBER_f(int colorID) { return FastCall<BOOL>(0x13374a625efe8c1e, colorID); }
	int GET_DEFAULT_SECONDARY_TINT_FOR_BARBER(int colorID) { return Call<int>(0x47f6e0aa33a8b364, colorID); }
	int GET_DEFAULT_SECONDARY_TINT_FOR_BARBER_f(int colorID) { return FastCall<int>(0x47f6e0aa33a8b364, colorID); }
	BOOL IS_PED_LIPSTICK_TINT_FOR_BARBER(int colorID) { return Call<BOOL>(0x36bbc77a8b056599, colorID); }
	BOOL IS_PED_LIPSTICK_TINT_FOR_BARBER_f(int colorID) { return FastCall<BOOL>(0x36bbc77a8b056599, colorID); }
	BOOL IS_PED_BLUSH_TINT_FOR_BARBER(int colorID) { return Call<BOOL>(0xb1c088c27a8af832, colorID); }
	BOOL IS_PED_BLUSH_TINT_FOR_BARBER_f(int colorID) { return FastCall<BOOL>(0xb1c088c27a8af832, colorID); }
	BOOL IS_PED_BLUSH_FACEPAINT_TINT_FOR_BARBER(int colorId) { return Call<BOOL>(0x6f01ed738ed064f4, colorId); }
	BOOL IS_PED_BLUSH_FACEPAINT_TINT_FOR_BARBER_f(int colorId) { return FastCall<BOOL>(0x6f01ed738ed064f4, colorId); }
	int GET_TINT_INDEX_FOR_LAST_GEN_HAIR_TEXTURE(Hash modelHash, int drawableId, int textureId) { return Call<int>(0xaac01d5dcf522a98, modelHash, drawableId, textureId); }
	int GET_TINT_INDEX_FOR_LAST_GEN_HAIR_TEXTURE_f(Hash modelHash, int drawableId, int textureId) { return FastCall<int>(0xaac01d5dcf522a98, modelHash, drawableId, textureId); }
	void SET_PED_MICRO_MORPH(Ped ped, int index, float scale) { Call<void>(0x33354b3f80cfce40, ped, index, scale); }
	void SET_PED_MICRO_MORPH_f(Ped ped, int index, float scale) { FastCall<void>(0x33354b3f80cfce40, ped, index, scale); }
	BOOL HAS_PED_HEAD_BLEND_FINISHED(Ped ped) { return Call<BOOL>(0xf0c110f2b206ceea, ped); }
	BOOL HAS_PED_HEAD_BLEND_FINISHED_f(Ped ped) { return FastCall<BOOL>(0xf0c110f2b206ceea, ped); }
	void FINALIZE_HEAD_BLEND(Ped ped) { Call<void>(0xdd7c677a257d53d3, ped); }
	void FINALIZE_HEAD_BLEND_f(Ped ped) { FastCall<void>(0xdd7c677a257d53d3, ped); }
	void SET_HEAD_BLEND_PALETTE_COLOR(Ped ped, int r, int g, int b, int id) { Call<void>(0xe9e51aff3b6e814f, ped, r, g, b, id); }
	void SET_HEAD_BLEND_PALETTE_COLOR_f(Ped ped, int r, int g, int b, int id) { FastCall<void>(0xe9e51aff3b6e814f, ped, r, g, b, id); }
	void DISABLE_HEAD_BLEND_PALETTE_COLOR(Ped ped) { Call<void>(0xa2677b988b7f5589, ped); }
	void DISABLE_HEAD_BLEND_PALETTE_COLOR_f(Ped ped) { FastCall<void>(0xa2677b988b7f5589, ped); }
	int GET_PED_HEAD_BLEND_FIRST_INDEX(int type) { return Call<int>(0x8b3b0d0777edde8f, type); }
	int GET_PED_HEAD_BLEND_FIRST_INDEX_f(int type) { return FastCall<int>(0x8b3b0d0777edde8f, type); }
	int GET_PED_HEAD_BLEND_NUM_HEADS(int type) { return Call<int>(0x39ba87af5d923a6, type); }
	int GET_PED_HEAD_BLEND_NUM_HEADS_f(int type) { return FastCall<int>(0x39ba87af5d923a6, type); }
	int SET_PED_PRELOAD_VARIATION_DATA(Ped ped, int slot, int drawableId, int textureId) { return Call<int>(0xb022b9dfcef3def9, ped, slot, drawableId, textureId); }
	int SET_PED_PRELOAD_VARIATION_DATA_f(Ped ped, int slot, int drawableId, int textureId) { return FastCall<int>(0xb022b9dfcef3def9, ped, slot, drawableId, textureId); }
	BOOL HAS_PED_PRELOAD_VARIATION_DATA_FINISHED(Ped ped) { return Call<BOOL>(0x4d44aa3a6ddbe530, ped); }
	BOOL HAS_PED_PRELOAD_VARIATION_DATA_FINISHED_f(Ped ped) { return FastCall<BOOL>(0x4d44aa3a6ddbe530, ped); }
	void RELEASE_PED_PRELOAD_VARIATION_DATA(Ped ped) { Call<void>(0xba25f8b879524c34, ped); }
	void RELEASE_PED_PRELOAD_VARIATION_DATA_f(Ped ped) { FastCall<void>(0xba25f8b879524c34, ped); }
	int SET_PED_PRELOAD_PROP_DATA(Ped ped, int componentId, int drawableId, int TextureId) { return Call<int>(0x6c31c1edf88d74a3, ped, componentId, drawableId, TextureId); }
	int SET_PED_PRELOAD_PROP_DATA_f(Ped ped, int componentId, int drawableId, int TextureId) { return FastCall<int>(0x6c31c1edf88d74a3, ped, componentId, drawableId, TextureId); }
	BOOL HAS_PED_PRELOAD_PROP_DATA_FINISHED(Ped ped) { return Call<BOOL>(0xb56ffbc9140f5756, ped); }
	BOOL HAS_PED_PRELOAD_PROP_DATA_FINISHED_f(Ped ped) { return FastCall<BOOL>(0xb56ffbc9140f5756, ped); }
	void RELEASE_PED_PRELOAD_PROP_DATA(Ped ped) { Call<void>(0x5e0719ac3e86e88, ped); }
	void RELEASE_PED_PRELOAD_PROP_DATA_f(Ped ped) { FastCall<void>(0x5e0719ac3e86e88, ped); }
	int GET_PED_PROP_INDEX(Ped ped, int componentId, Any p2) { return Call<int>(0xf8a26fc4dac9a64f, ped, componentId, p2); }
	int GET_PED_PROP_INDEX_f(Ped ped, int componentId, Any p2) { return FastCall<int>(0xf8a26fc4dac9a64f, ped, componentId, p2); }
	void SET_PED_PROP_INDEX(Ped ped, int componentId, int drawableId, int TextureId, BOOL attach, Any p5) { Call<void>(0x543bd5fa11a03fc3, ped, componentId, drawableId, TextureId, attach, p5); }
	void SET_PED_PROP_INDEX_f(Ped ped, int componentId, int drawableId, int TextureId, BOOL attach, Any p5) { FastCall<void>(0x543bd5fa11a03fc3, ped, componentId, drawableId, TextureId, attach, p5); }
	void KNOCK_OFF_PED_PROP(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4) { Call<void>(0x8cca1c6f13338b4e, ped, p1, p2, p3, p4); }
	void KNOCK_OFF_PED_PROP_f(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4) { FastCall<void>(0x8cca1c6f13338b4e, ped, p1, p2, p3, p4); }
	void CLEAR_PED_PROP(Ped ped, int propId, Any p2) { Call<void>(0x7949a0443a5f285, ped, propId, p2); }
	void CLEAR_PED_PROP_f(Ped ped, int propId, Any p2) { FastCall<void>(0x7949a0443a5f285, ped, propId, p2); }
	void CLEAR_ALL_PED_PROPS(Ped ped, Any p1) { Call<void>(0xc51a8acc885c4230, ped, p1); }
	void CLEAR_ALL_PED_PROPS_f(Ped ped, Any p1) { FastCall<void>(0xc51a8acc885c4230, ped, p1); }
	void DROP_AMBIENT_PROP(Ped ped) { Call<void>(0xdeb5dc683262601a, ped); }
	void DROP_AMBIENT_PROP_f(Ped ped) { FastCall<void>(0xdeb5dc683262601a, ped); }
	int GET_PED_PROP_TEXTURE_INDEX(Ped ped, int componentId) { return Call<int>(0x9323156b8116950b, ped, componentId); }
	int GET_PED_PROP_TEXTURE_INDEX_f(Ped ped, int componentId) { return FastCall<int>(0x9323156b8116950b, ped, componentId); }
	void CLEAR_PED_PARACHUTE_PACK_VARIATION(Ped ped) { Call<void>(0x7ad19a6f73b9da4d, ped); }
	void CLEAR_PED_PARACHUTE_PACK_VARIATION_f(Ped ped) { FastCall<void>(0x7ad19a6f73b9da4d, ped); }
	void SET_PED_SCUBA_GEAR_VARIATION(Ped ped) { Call<void>(0x1c07038cf66248b, ped); }
	void SET_PED_SCUBA_GEAR_VARIATION_f(Ped ped) { FastCall<void>(0x1c07038cf66248b, ped); }
	void CLEAR_PED_SCUBA_GEAR_VARIATION(Ped ped) { Call<void>(0x8e2e4d242be99500, ped); }
	void CLEAR_PED_SCUBA_GEAR_VARIATION_f(Ped ped) { FastCall<void>(0x8e2e4d242be99500, ped); }
	BOOL IS_USING_PED_SCUBA_GEAR_VARIATION(Any p0) { return Call<BOOL>(0x7b3e84a8bdd3ec5e, p0); }
	BOOL IS_USING_PED_SCUBA_GEAR_VARIATION_f(Any p0) { return FastCall<BOOL>(0x7b3e84a8bdd3ec5e, p0); }
	void SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, BOOL toggle) { Call<void>(0xc4b7e149e151b1f4, ped, toggle); }
	void SET_BLOCKING_OF_NON_TEMPORARY_EVENTS_f(Ped ped, BOOL toggle) { FastCall<void>(0xc4b7e149e151b1f4, ped, toggle); }
	void SET_PED_BOUNDS_ORIENTATION(Ped ped, float p1, float p2, float x, float y, float z) { Call<void>(0x4ed5421aecc99513, ped, p1, p2, x, y, z); }
	void SET_PED_BOUNDS_ORIENTATION_f(Ped ped, float p1, float p2, float x, float y, float z) { FastCall<void>(0x4ed5421aecc99513, ped, p1, p2, x, y, z); }
	void REGISTER_TARGET(Ped ped, Ped target) { Call<void>(0x424390f1e06116ad, ped, target); }
	void REGISTER_TARGET_f(Ped ped, Ped target) { FastCall<void>(0x424390f1e06116ad, ped, target); }
	void REGISTER_HATED_TARGETS_AROUND_PED(Ped ped, float radius) { Call<void>(0xbc84ad025476d11b, ped, radius); }
	void REGISTER_HATED_TARGETS_AROUND_PED_f(Ped ped, float radius) { FastCall<void>(0xbc84ad025476d11b, ped, radius); }
	Ped GET_RANDOM_PED_AT_COORD(float x, float y, float z, float xRadius, float yRadius, float zRadius, int pedType) { return Call<Ped>(0x7e0d934635eda48c, x, y, z, xRadius, yRadius, zRadius, pedType); }
	Ped GET_RANDOM_PED_AT_COORD_f(float x, float y, float z, float xRadius, float yRadius, float zRadius, int pedType) { return FastCall<Ped>(0x7e0d934635eda48c, x, y, z, xRadius, yRadius, zRadius, pedType); }
	BOOL GET_CLOSEST_PED(float x, float y, float z, float radius, BOOL p4, BOOL p5, Ped* outPed, BOOL p7, BOOL p8, int pedType) { return Call<BOOL>(0x7828cc3fabd0ca60, x, y, z, radius, p4, p5, outPed, p7, p8, pedType); }
	BOOL GET_CLOSEST_PED_f(float x, float y, float z, float radius, BOOL p4, BOOL p5, Ped* outPed, BOOL p7, BOOL p8, int pedType) { return FastCall<BOOL>(0x7828cc3fabd0ca60, x, y, z, radius, p4, p5, outPed, p7, p8, pedType); }
	void SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND(BOOL value) { Call<void>(0x8385594d029d3118, value); }
	void SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND_f(BOOL value) { FastCall<void>(0x8385594d029d3118, value); }
	BOOL GET_CAN_PED_BE_GRABBED_BY_SCRIPT(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4, BOOL p5, BOOL p6, BOOL p7, Any p8) { return Call<BOOL>(0x69ae2e42630152f5, ped, p1, p2, p3, p4, p5, p6, p7, p8); }
	BOOL GET_CAN_PED_BE_GRABBED_BY_SCRIPT_f(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4, BOOL p5, BOOL p6, BOOL p7, Any p8) { return FastCall<BOOL>(0x69ae2e42630152f5, ped, p1, p2, p3, p4, p5, p6, p7, p8); }
	void SET_DRIVER_RACING_MODIFIER(Ped driver, float modifier) { Call<void>(0xab7889c6d01c172e, driver, modifier); }
	void SET_DRIVER_RACING_MODIFIER_f(Ped driver, float modifier) { FastCall<void>(0xab7889c6d01c172e, driver, modifier); }
	void SET_DRIVER_ABILITY(Ped driver, float ability) { Call<void>(0x1a7c20436402d90, driver, ability); }
	void SET_DRIVER_ABILITY_f(Ped driver, float ability) { FastCall<void>(0x1a7c20436402d90, driver, ability); }
	void SET_DRIVER_AGGRESSIVENESS(Ped driver, float aggressiveness) { Call<void>(0xf9878ea2337bb915, driver, aggressiveness); }
	void SET_DRIVER_AGGRESSIVENESS_f(Ped driver, float aggressiveness) { FastCall<void>(0xf9878ea2337bb915, driver, aggressiveness); }
	BOOL CAN_PED_RAGDOLL(Ped ped) { return Call<BOOL>(0xc8716d4e174871e4, ped); }
	BOOL CAN_PED_RAGDOLL_f(Ped ped) { return FastCall<BOOL>(0xc8716d4e174871e4, ped); }
	BOOL SET_PED_TO_RAGDOLL(Ped ped, int time1, int time2, int ragdollType, BOOL p4, BOOL p5, BOOL p6) { return Call<BOOL>(0x543c343cda86086c, ped, time1, time2, ragdollType, p4, p5, p6); }
	BOOL SET_PED_TO_RAGDOLL_f(Ped ped, int time1, int time2, int ragdollType, BOOL p4, BOOL p5, BOOL p6) { return FastCall<BOOL>(0x543c343cda86086c, ped, time1, time2, ragdollType, p4, p5, p6); }
	BOOL SET_PED_TO_RAGDOLL_WITH_FALL(Ped ped, int time, int p2, int ragdollType, float x, float y, float z, float velocity, float p8, float p9, float p10, float p11, float p12, float p13) { return Call<BOOL>(0x70790bf96693d741, ped, time, p2, ragdollType, x, y, z, velocity, p8, p9, p10, p11, p12, p13); }
	BOOL SET_PED_TO_RAGDOLL_WITH_FALL_f(Ped ped, int time, int p2, int ragdollType, float x, float y, float z, float velocity, float p8, float p9, float p10, float p11, float p12, float p13) { return FastCall<BOOL>(0x70790bf96693d741, ped, time, p2, ragdollType, x, y, z, velocity, p8, p9, p10, p11, p12, p13); }
	void SET_PED_RAGDOLL_ON_COLLISION(Ped ped, BOOL toggle) { Call<void>(0x1274302508a7a6db, ped, toggle); }
	void SET_PED_RAGDOLL_ON_COLLISION_f(Ped ped, BOOL toggle) { FastCall<void>(0x1274302508a7a6db, ped, toggle); }
	BOOL IS_PED_RAGDOLL(Ped ped) { return Call<BOOL>(0x4e99a9254a59105e, ped); }
	BOOL IS_PED_RAGDOLL_f(Ped ped) { return FastCall<BOOL>(0x4e99a9254a59105e, ped); }
	BOOL IS_PED_RUNNING_RAGDOLL_TASK(Ped ped) { return Call<BOOL>(0xef37e84aa7436e66, ped); }
	BOOL IS_PED_RUNNING_RAGDOLL_TASK_f(Ped ped) { return FastCall<BOOL>(0xef37e84aa7436e66, ped); }
	void SET_PED_RAGDOLL_FORCE_FALL(Ped ped) { Call<void>(0x4f222c9bcddb48d8, ped); }
	void SET_PED_RAGDOLL_FORCE_FALL_f(Ped ped) { FastCall<void>(0x4f222c9bcddb48d8, ped); }
	void RESET_PED_RAGDOLL_TIMER(Ped ped) { Call<void>(0x41eb49f9255e48c9, ped); }
	void RESET_PED_RAGDOLL_TIMER_f(Ped ped) { FastCall<void>(0x41eb49f9255e48c9, ped); }
	void SET_PED_CAN_RAGDOLL(Ped ped, BOOL toggle) { Call<void>(0x331775421e1d0c67, ped, toggle); }
	void SET_PED_CAN_RAGDOLL_f(Ped ped, BOOL toggle) { FastCall<void>(0x331775421e1d0c67, ped, toggle); }
	BOOL IS_PED_RUNNING_MELEE_TASK(Ped ped) { return Call<BOOL>(0x3b62b2a98d362c35, ped); }
	BOOL IS_PED_RUNNING_MELEE_TASK_f(Ped ped) { return FastCall<BOOL>(0x3b62b2a98d362c35, ped); }
	BOOL IS_PED_RUNNING_MOBILE_PHONE_TASK(Ped ped) { return Call<BOOL>(0x2e889b3a17c3f4e, ped); }
	BOOL IS_PED_RUNNING_MOBILE_PHONE_TASK_f(Ped ped) { return FastCall<BOOL>(0x2e889b3a17c3f4e, ped); }
	BOOL IS_MOBILE_PHONE_TO_PED_EAR(Ped ped) { return Call<BOOL>(0x9ba05574eeb5df9b, ped); }
	BOOL IS_MOBILE_PHONE_TO_PED_EAR_f(Ped ped) { return FastCall<BOOL>(0x9ba05574eeb5df9b, ped); }
	void SET_RAGDOLL_BLOCKING_FLAGS(Ped ped, int blockingFlag) { Call<void>(0xef05e0cfbabbf2f6, ped, blockingFlag); }
	void SET_RAGDOLL_BLOCKING_FLAGS_f(Ped ped, int blockingFlag) { FastCall<void>(0xef05e0cfbabbf2f6, ped, blockingFlag); }
	void CLEAR_RAGDOLL_BLOCKING_FLAGS(Ped ped, int blockingFlag) { Call<void>(0x99644b54a2dafcab, ped, blockingFlag); }
	void CLEAR_RAGDOLL_BLOCKING_FLAGS_f(Ped ped, int blockingFlag) { FastCall<void>(0x99644b54a2dafcab, ped, blockingFlag); }
	void SET_PED_ANGLED_DEFENSIVE_AREA(Ped ped, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8, BOOL p9) { Call<void>(0xb0ebdf0ab91fcc7a, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	void SET_PED_ANGLED_DEFENSIVE_AREA_f(Ped ped, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8, BOOL p9) { FastCall<void>(0xb0ebdf0ab91fcc7a, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	void SET_PED_SPHERE_DEFENSIVE_AREA(Ped ped, float x, float y, float z, float radius, BOOL p5, BOOL p6) { Call<void>(0xf209640fd304131e, ped, x, y, z, radius, p5, p6); }
	void SET_PED_SPHERE_DEFENSIVE_AREA_f(Ped ped, float x, float y, float z, float radius, BOOL p5, BOOL p6) { FastCall<void>(0xf209640fd304131e, ped, x, y, z, radius, p5, p6); }
	void SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED(Ped ped, Ped target, float xOffset, float yOffset, float zOffset, float radius, BOOL p6) { Call<void>(0x7d375803c37bccd, ped, target, xOffset, yOffset, zOffset, radius, p6); }
	void SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED_f(Ped ped, Ped target, float xOffset, float yOffset, float zOffset, float radius, BOOL p6) { FastCall<void>(0x7d375803c37bccd, ped, target, xOffset, yOffset, zOffset, radius, p6); }
	void SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE(Ped ped, Vehicle target, float xOffset, float yOffset, float zOffset, float radius, BOOL p6) { Call<void>(0x5e200614eb0283ea, ped, target, xOffset, yOffset, zOffset, radius, p6); }
	void SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE_f(Ped ped, Vehicle target, float xOffset, float yOffset, float zOffset, float radius, BOOL p6) { FastCall<void>(0x5e200614eb0283ea, ped, target, xOffset, yOffset, zOffset, radius, p6); }
	void SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED(Ped ped, Ped attachPed, float p2, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9, BOOL p10) { Call<void>(0x4c951ac84e901bcd, ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	void SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED_f(Ped ped, Ped attachPed, float p2, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9, BOOL p10) { FastCall<void>(0x4c951ac84e901bcd, ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	void SET_PED_DEFENSIVE_AREA_DIRECTION(Ped ped, float p1, float p2, float p3, BOOL p4) { Call<void>(0xe043adf0f63f5446, ped, p1, p2, p3, p4); }
	void SET_PED_DEFENSIVE_AREA_DIRECTION_f(Ped ped, float p1, float p2, float p3, BOOL p4) { FastCall<void>(0xe043adf0f63f5446, ped, p1, p2, p3, p4); }
	void REMOVE_PED_DEFENSIVE_AREA(Ped ped, BOOL toggle) { Call<void>(0xb2f90667820264, ped, toggle); }
	void REMOVE_PED_DEFENSIVE_AREA_f(Ped ped, BOOL toggle) { FastCall<void>(0xb2f90667820264, ped, toggle); }
	Vector3* GET_PED_DEFENSIVE_AREA_POSITION(Ped ped, BOOL p1) { Call<Vector3*>(0xd5d9507d8e093056, ped, p1); return GetVector(); }
	BOOL IS_PED_DEFENSIVE_AREA_ACTIVE(Ped ped, BOOL p1) { return Call<BOOL>(0x57a32ab09ec7ae67, ped, p1); }
	BOOL IS_PED_DEFENSIVE_AREA_ACTIVE_f(Ped ped, BOOL p1) { return FastCall<BOOL>(0x57a32ab09ec7ae67, ped, p1); }
	void SET_PED_PREFERRED_COVER_SET(Ped ped, Any itemSet) { Call<void>(0x8c881c0dba5d0cef, ped, itemSet); }
	void SET_PED_PREFERRED_COVER_SET_f(Ped ped, Any itemSet) { FastCall<void>(0x8c881c0dba5d0cef, ped, itemSet); }
	void REMOVE_PED_PREFERRED_COVER_SET(Ped ped) { Call<void>(0x6454fa13fe699331, ped); }
	void REMOVE_PED_PREFERRED_COVER_SET_f(Ped ped) { FastCall<void>(0x6454fa13fe699331, ped); }
	void REVIVE_INJURED_PED(Ped ped) { Call<void>(0x6354ec95c85f6107, ped); }
	void REVIVE_INJURED_PED_f(Ped ped) { FastCall<void>(0x6354ec95c85f6107, ped); }
	void RESURRECT_PED(Ped ped) { Call<void>(0x99a666c4589cde31, ped); }
	void RESURRECT_PED_f(Ped ped) { FastCall<void>(0x99a666c4589cde31, ped); }
	void SET_PED_NAME_DEBUG(Ped ped, char* name) { Call<void>(0x543b98a33a90866c, ped, name); }
	void SET_PED_NAME_DEBUG_f(Ped ped, char* name) { FastCall<void>(0x543b98a33a90866c, ped, name); }
	Vector3* GET_PED_EXTRACTED_DISPLACEMENT(Ped ped, BOOL worldSpace) { Call<Vector3*>(0xb04a83114a5b5b2f, ped, worldSpace); return GetVector(); }
	void SET_PED_DIES_WHEN_INJURED(Ped ped, BOOL toggle) { Call<void>(0xaccfff9161100e7b, ped, toggle); }
	void SET_PED_DIES_WHEN_INJURED_f(Ped ped, BOOL toggle) { FastCall<void>(0xaccfff9161100e7b, ped, toggle); }
	void SET_PED_ENABLE_WEAPON_BLOCKING(Ped ped, BOOL toggle) { Call<void>(0x85cad1f1dd576ba9, ped, toggle); }
	void SET_PED_ENABLE_WEAPON_BLOCKING_f(Ped ped, BOOL toggle) { FastCall<void>(0x85cad1f1dd576ba9, ped, toggle); }
	void SPECIAL_FUNCTION_DO_NOT_USE(Ped ped, BOOL p1) { Call<void>(0x7c1940f8d1c1b848, ped, p1); }
	void SPECIAL_FUNCTION_DO_NOT_USE_f(Ped ped, BOOL p1) { FastCall<void>(0x7c1940f8d1c1b848, ped, p1); }
	void RESET_PED_VISIBLE_DAMAGE(Ped ped) { Call<void>(0xa2ab731b6c241a5c, ped); }
	void RESET_PED_VISIBLE_DAMAGE_f(Ped ped) { FastCall<void>(0xa2ab731b6c241a5c, ped); }
	void APPLY_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, float p2, float p3, Any p4) { Call<void>(0xa8d9149dfc67ffea, ped, p1, p2, p3, p4); }
	void APPLY_PED_BLOOD_DAMAGE_BY_ZONE_f(Ped ped, Any p1, float p2, float p3, Any p4) { FastCall<void>(0xa8d9149dfc67ffea, ped, p1, p2, p3, p4); }
	void APPLY_PED_BLOOD(Ped ped, int boneIndex, float xRot, float yRot, float zRot, char* woundType) { Call<void>(0xa139cb65aa94f2d9, ped, boneIndex, xRot, yRot, zRot, woundType); }
	void APPLY_PED_BLOOD_f(Ped ped, int boneIndex, float xRot, float yRot, float zRot, char* woundType) { FastCall<void>(0xa139cb65aa94f2d9, ped, boneIndex, xRot, yRot, zRot, woundType); }
	void APPLY_PED_BLOOD_BY_ZONE(Ped ped, int p1, float p2, float p3, char* p4) { Call<void>(0x6d3e229702b41b2e, ped, p1, p2, p3, p4); }
	void APPLY_PED_BLOOD_BY_ZONE_f(Ped ped, int p1, float p2, float p3, char* p4) { FastCall<void>(0x6d3e229702b41b2e, ped, p1, p2, p3, p4); }
	void APPLY_PED_BLOOD_SPECIFIC(Ped ped, int p1, float p2, float p3, float p4, float p5, int p6, float p7, char* p8) { Call<void>(0x3a8630b430063bd8, ped, p1, p2, p3, p4, p5, p6, p7, p8); }
	void APPLY_PED_BLOOD_SPECIFIC_f(Ped ped, int p1, float p2, float p3, float p4, float p5, int p6, float p7, char* p8) { FastCall<void>(0x3a8630b430063bd8, ped, p1, p2, p3, p4, p5, p6, p7, p8); }
	void APPLY_PED_DAMAGE_DECAL(Ped ped, int damageZone, float xOffset, float yOffset, float heading, float scale, float alpha, int variation, BOOL fadeIn, char* decalName) { Call<void>(0xc5c7997b62100de, ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, decalName); }
	void APPLY_PED_DAMAGE_DECAL_f(Ped ped, int damageZone, float xOffset, float yOffset, float heading, float scale, float alpha, int variation, BOOL fadeIn, char* decalName) { FastCall<void>(0xc5c7997b62100de, ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, decalName); }
	void APPLY_PED_DAMAGE_PACK(Ped ped, char* damagePack, float damage, float mult) { Call<void>(0xa58f5ec2d4590aa8, ped, damagePack, damage, mult); }
	void APPLY_PED_DAMAGE_PACK_f(Ped ped, char* damagePack, float damage, float mult) { FastCall<void>(0xa58f5ec2d4590aa8, ped, damagePack, damage, mult); }
	void CLEAR_PED_BLOOD_DAMAGE(Ped ped) { Call<void>(0x23f2b291bacb5a96, ped); }
	void CLEAR_PED_BLOOD_DAMAGE_f(Ped ped) { FastCall<void>(0x23f2b291bacb5a96, ped); }
	void CLEAR_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, int p1) { Call<void>(0x875b23657c1975eb, ped, p1); }
	void CLEAR_PED_BLOOD_DAMAGE_BY_ZONE_f(Ped ped, int p1) { FastCall<void>(0x875b23657c1975eb, ped, p1); }
	void HIDE_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, BOOL p2) { Call<void>(0xb2743fb800d71076, ped, p1, p2); }
	void HIDE_PED_BLOOD_DAMAGE_BY_ZONE_f(Ped ped, Any p1, BOOL p2) { FastCall<void>(0xb2743fb800d71076, ped, p1, p2); }
	void CLEAR_PED_DAMAGE_DECAL_BY_ZONE(Ped ped, int p1, char* p2) { Call<void>(0xe2b573bee559ca34, ped, p1, p2); }
	void CLEAR_PED_DAMAGE_DECAL_BY_ZONE_f(Ped ped, int p1, char* p2) { FastCall<void>(0xe2b573bee559ca34, ped, p1, p2); }
	int GET_PED_DECORATIONS_STATE(Ped ped) { return Call<int>(0xd3774a535018e33c, ped); }
	int GET_PED_DECORATIONS_STATE_f(Ped ped) { return FastCall<int>(0xd3774a535018e33c, ped); }
	void MARK_PED_DECORATIONS_AS_CLONED_FROM_LOCAL_PLAYER(Ped ped, BOOL p1) { Call<void>(0x4c63c29d15988241, ped, p1); }
	void MARK_PED_DECORATIONS_AS_CLONED_FROM_LOCAL_PLAYER_f(Ped ped, BOOL p1) { FastCall<void>(0x4c63c29d15988241, ped, p1); }
	void CLEAR_PED_WETNESS(Ped ped) { Call<void>(0x25ef163da8dc7c3b, ped); }
	void CLEAR_PED_WETNESS_f(Ped ped) { FastCall<void>(0x25ef163da8dc7c3b, ped); }
	void SET_PED_WETNESS_HEIGHT(Ped ped, float height) { Call<void>(0x3db5cbc56c56b176, ped, height); }
	void SET_PED_WETNESS_HEIGHT_f(Ped ped, float height) { FastCall<void>(0x3db5cbc56c56b176, ped, height); }
	void SET_PED_WETNESS_ENABLED_THIS_FRAME(Ped ped) { Call<void>(0x41452d7ffecdca19, ped); }
	void SET_PED_WETNESS_ENABLED_THIS_FRAME_f(Ped ped) { FastCall<void>(0x41452d7ffecdca19, ped); }
	void SET_PED_WETNESS(Ped ped, float wetLevel) { Call<void>(0xe0cad5fde39686d0, ped, wetLevel); }
	void SET_PED_WETNESS_f(Ped ped, float wetLevel) { FastCall<void>(0xe0cad5fde39686d0, ped, wetLevel); }
	void CLEAR_PED_ENV_DIRT(Ped ped) { Call<void>(0x97f3b106054e9fdb, ped); }
	void CLEAR_PED_ENV_DIRT_f(Ped ped) { FastCall<void>(0x97f3b106054e9fdb, ped); }
	void SET_PED_SWEAT(Ped ped, float sweat) { Call<void>(0xa49895eef2ba6f47, ped, sweat); }
	void SET_PED_SWEAT_f(Ped ped, float sweat) { FastCall<void>(0xa49895eef2ba6f47, ped, sweat); }
	void ADD_PED_DECORATION_FROM_HASHES(Ped ped, Hash collection, Hash overlay) { Call<void>(0xd48ffa31ac9e0b30, ped, collection, overlay); }
	void ADD_PED_DECORATION_FROM_HASHES_f(Ped ped, Hash collection, Hash overlay) { FastCall<void>(0xd48ffa31ac9e0b30, ped, collection, overlay); }
	void ADD_PED_DECORATION_FROM_HASHES_IN_CORONA(Ped ped, Hash collection, Hash overlay) { Call<void>(0xb584172a6b528527, ped, collection, overlay); }
	void ADD_PED_DECORATION_FROM_HASHES_IN_CORONA_f(Ped ped, Hash collection, Hash overlay) { FastCall<void>(0xb584172a6b528527, ped, collection, overlay); }
	int GET_PED_DECORATION_ZONE_FROM_HASHES(Hash collection, Hash overlay) { return Call<int>(0xe643aed372a94fb4, collection, overlay); }
	int GET_PED_DECORATION_ZONE_FROM_HASHES_f(Hash collection, Hash overlay) { return FastCall<int>(0xe643aed372a94fb4, collection, overlay); }
	void CLEAR_PED_DECORATIONS(Ped ped) { Call<void>(0xcfa19aa4c504b041, ped); }
	void CLEAR_PED_DECORATIONS_f(Ped ped) { FastCall<void>(0xcfa19aa4c504b041, ped); }
	void CLEAR_PED_DECORATIONS_LEAVE_SCARS(Ped ped) { Call<void>(0x7cd7a3095d3ef34c, ped); }
	void CLEAR_PED_DECORATIONS_LEAVE_SCARS_f(Ped ped) { FastCall<void>(0x7cd7a3095d3ef34c, ped); }
	BOOL WAS_PED_SKELETON_UPDATED(Ped ped) { return Call<BOOL>(0x5b5c4efa08993baf, ped); }
	BOOL WAS_PED_SKELETON_UPDATED_f(Ped ped) { return FastCall<BOOL>(0x5b5c4efa08993baf, ped); }
	Vector3* GET_PED_BONE_COORDS(Ped ped, int boneId, float offsetX, float offsetY, float offsetZ) { Call<Vector3*>(0x1b827b6167f1dfa0, ped, boneId, offsetX, offsetY, offsetZ); return GetVector(); }
	void CREATE_NM_MESSAGE(BOOL startImmediately, int messageId) { Call<void>(0x865cdaa17c9c188a, startImmediately, messageId); }
	void CREATE_NM_MESSAGE_f(BOOL startImmediately, int messageId) { FastCall<void>(0x865cdaa17c9c188a, startImmediately, messageId); }
	void GIVE_PED_NM_MESSAGE(Ped ped) { Call<void>(0x433bb4f3779279a5, ped); }
	void GIVE_PED_NM_MESSAGE_f(Ped ped) { FastCall<void>(0x433bb4f3779279a5, ped); }
	int ADD_SCENARIO_BLOCKING_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7, BOOL p8, BOOL p9, Any p10) { return Call<int>(0x82b9a2b2020a9966, x1, y1, z1, x2, y2, z2, p6, p7, p8, p9, p10); }
	int ADD_SCENARIO_BLOCKING_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7, BOOL p8, BOOL p9, Any p10) { return FastCall<int>(0x82b9a2b2020a9966, x1, y1, z1, x2, y2, z2, p6, p7, p8, p9, p10); }
	void REMOVE_SCENARIO_BLOCKING_AREAS() { Call<void>(0x665be837cfe66ab0); }
	void REMOVE_SCENARIO_BLOCKING_AREAS_f() { FastCall<void>(0x665be837cfe66ab0); }
	void REMOVE_SCENARIO_BLOCKING_AREA(Any p0, BOOL p1) { Call<void>(0xa87693e0c4a45603, p0, p1); }
	void REMOVE_SCENARIO_BLOCKING_AREA_f(Any p0, BOOL p1) { FastCall<void>(0xa87693e0c4a45603, p0, p1); }
	void SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA(float x, float y, float z, float range, int p4) { Call<void>(0x762693181bb78452, x, y, z, range, p4); }
	void SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA_f(float x, float y, float z, float range, int p4) { FastCall<void>(0x762693181bb78452, x, y, z, range, p4); }
	BOOL DOES_SCENARIO_BLOCKING_AREA_EXISTS(float x1, float y1, float z1, float x2, float y2, float z2) { return Call<BOOL>(0xab7843457278694d, x1, y1, z1, x2, y2, z2); }
	BOOL DOES_SCENARIO_BLOCKING_AREA_EXISTS_f(float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<BOOL>(0xab7843457278694d, x1, y1, z1, x2, y2, z2); }
	BOOL IS_PED_USING_SCENARIO(Ped ped, char* scenario) { return Call<BOOL>(0x7dc0e6e1a804790, ped, scenario); }
	BOOL IS_PED_USING_SCENARIO_f(Ped ped, char* scenario) { return FastCall<BOOL>(0x7dc0e6e1a804790, ped, scenario); }
	BOOL IS_PED_USING_ANY_SCENARIO(Ped ped) { return Call<BOOL>(0x7efdbb9bc22540a3, ped); }
	BOOL IS_PED_USING_ANY_SCENARIO_f(Ped ped) { return FastCall<BOOL>(0x7efdbb9bc22540a3, ped); }
	BOOL SET_PED_PANIC_EXIT_SCENARIO(Any p0, Any p1, Any p2, Any p3) { return Call<BOOL>(0xbe8d5e42b463d95c, p0, p1, p2, p3); }
	BOOL SET_PED_PANIC_EXIT_SCENARIO_f(Any p0, Any p1, Any p2, Any p3) { return FastCall<BOOL>(0xbe8d5e42b463d95c, p0, p1, p2, p3); }
	void TOGGLE_SCENARIO_PED_COWER_IN_PLACE(Ped ped, BOOL toggle) { Call<void>(0xa06073c884240e48, ped, toggle); }
	void TOGGLE_SCENARIO_PED_COWER_IN_PLACE_f(Ped ped, BOOL toggle) { FastCall<void>(0xa06073c884240e48, ped, toggle); }
	BOOL TRIGGER_PED_SCENARIO_PANICEXITTOFLEE(Any p0, Any p1, Any p2, Any p3) { return Call<BOOL>(0x700da70dd01f04fe, p0, p1, p2, p3); }
	BOOL TRIGGER_PED_SCENARIO_PANICEXITTOFLEE_f(Any p0, Any p1, Any p2, Any p3) { return FastCall<BOOL>(0x700da70dd01f04fe, p0, p1, p2, p3); }
	BOOL SET_PED_SHOULD_PLAY_DIRECTED_NORMAL_SCENARIO_EXIT(Any p0, Any p1, Any p2, Any p3) { return Call<BOOL>(0x8f99d63fdc9a3e60, p0, p1, p2, p3); }
	BOOL SET_PED_SHOULD_PLAY_DIRECTED_NORMAL_SCENARIO_EXIT_f(Any p0, Any p1, Any p2, Any p3) { return FastCall<BOOL>(0x8f99d63fdc9a3e60, p0, p1, p2, p3); }
	void SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT(Ped ped) { Call<void>(0x5cc77e36e517a2e1, ped); }
	void SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT_f(Ped ped) { FastCall<void>(0x5cc77e36e517a2e1, ped); }
	void SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT(Ped ped) { Call<void>(0x8de545163bba24f3, ped); }
	void SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT_f(Ped ped) { FastCall<void>(0x8de545163bba24f3, ped); }
	BOOL SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT(Ped ped, Any p1, Any p2, Any p3) { return Call<BOOL>(0xd4e5cf03a330c2a0, ped, p1, p2, p3); }
	BOOL SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT_f(Ped ped, Any p1, Any p2, Any p3) { return FastCall<BOOL>(0xd4e5cf03a330c2a0, ped, p1, p2, p3); }
	void SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS(Ped ped, BOOL p1) { Call<void>(0x25a99791a55ee1f8, ped, p1); }
	void SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS_f(Ped ped, BOOL p1) { FastCall<void>(0x25a99791a55ee1f8, ped, p1); }
	void SET_PED_SHOULD_IGNORE_SCENARIO_NAV_CHECKS(Any p0, BOOL p1) { Call<void>(0x34a79e3eadcdb5c8, p0, p1); }
	void SET_PED_SHOULD_IGNORE_SCENARIO_NAV_CHECKS_f(Any p0, BOOL p1) { FastCall<void>(0x34a79e3eadcdb5c8, p0, p1); }
	void SET_PED_SHOULD_PROBE_FOR_SCENARIO_EXITS_IN_ONE_FRAME(Any p0, BOOL p1) { Call<void>(0x5ce0b5b8057cf86f, p0, p1); }
	void SET_PED_SHOULD_PROBE_FOR_SCENARIO_EXITS_IN_ONE_FRAME_f(Any p0, BOOL p1) { FastCall<void>(0x5ce0b5b8057cf86f, p0, p1); }
	BOOL IS_PED_GESTURING(Any p0) { return Call<BOOL>(0xed3ec8fef59f601, p0); }
	BOOL IS_PED_GESTURING_f(Any p0) { return FastCall<BOOL>(0xed3ec8fef59f601, p0); }
	void RESET_FACIAL_IDLE_ANIM(Ped ped) { Call<void>(0x3c5f98d1f063ae79, ped); }
	void RESET_FACIAL_IDLE_ANIM_f(Ped ped) { FastCall<void>(0x3c5f98d1f063ae79, ped); }
	void PLAY_FACIAL_ANIM(Ped ped, char* animName, char* animDict) { Call<void>(0xe913bb086a4ef399, ped, animName, animDict); }
	void PLAY_FACIAL_ANIM_f(Ped ped, char* animName, char* animDict) { FastCall<void>(0xe913bb086a4ef399, ped, animName, animDict); }
	void SET_FACIAL_CLIPSET(Ped ped, char* animDict) { Call<void>(0xeb4935e5959fe19c, ped, animDict); }
	void SET_FACIAL_CLIPSET_f(Ped ped, char* animDict) { FastCall<void>(0xeb4935e5959fe19c, ped, animDict); }
	void SET_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped, char* animName, char* animDict) { Call<void>(0x6eb7c894a31e6025, ped, animName, animDict); }
	void SET_FACIAL_IDLE_ANIM_OVERRIDE_f(Ped ped, char* animName, char* animDict) { FastCall<void>(0x6eb7c894a31e6025, ped, animName, animDict); }
	void CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped) { Call<void>(0x70058914d708fe50, ped); }
	void CLEAR_FACIAL_IDLE_ANIM_OVERRIDE_f(Ped ped) { FastCall<void>(0x70058914d708fe50, ped); }
	void SET_PED_CAN_PLAY_GESTURE_ANIMS(Ped ped, BOOL toggle) { Call<void>(0xb96fc45064276c5d, ped, toggle); }
	void SET_PED_CAN_PLAY_GESTURE_ANIMS_f(Ped ped, BOOL toggle) { FastCall<void>(0xb96fc45064276c5d, ped, toggle); }
	void SET_PED_CAN_PLAY_VISEME_ANIMS(Ped ped, BOOL toggle, BOOL p2) { Call<void>(0xf28aca6fc191918f, ped, toggle, p2); }
	void SET_PED_CAN_PLAY_VISEME_ANIMS_f(Ped ped, BOOL toggle, BOOL p2) { FastCall<void>(0xf28aca6fc191918f, ped, toggle, p2); }
	void SET_PED_IS_IGNORED_BY_AUTO_OPEN_DOORS(Ped ped, BOOL p1) { Call<void>(0xbc1afc30e978d9ad, ped, p1); }
	void SET_PED_IS_IGNORED_BY_AUTO_OPEN_DOORS_f(Ped ped, BOOL p1) { FastCall<void>(0xbc1afc30e978d9ad, ped, p1); }
	void SET_PED_CAN_PLAY_AMBIENT_ANIMS(Ped ped, BOOL toggle) { Call<void>(0x7a794aebddfc8a6c, ped, toggle); }
	void SET_PED_CAN_PLAY_AMBIENT_ANIMS_f(Ped ped, BOOL toggle) { FastCall<void>(0x7a794aebddfc8a6c, ped, toggle); }
	void SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(Ped ped, BOOL toggle) { Call<void>(0x242ac1ca1317daa, ped, toggle); }
	void SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS_f(Ped ped, BOOL toggle) { FastCall<void>(0x242ac1ca1317daa, ped, toggle); }
	void TRIGGER_IDLE_ANIMATION_ON_PED(Ped ped) { Call<void>(0x1a259271c2810d6e, ped); }
	void TRIGGER_IDLE_ANIMATION_ON_PED_f(Ped ped) { FastCall<void>(0x1a259271c2810d6e, ped); }
	void SET_PED_CAN_ARM_IK(Ped ped, BOOL toggle) { Call<void>(0x543a902b5043d061, ped, toggle); }
	void SET_PED_CAN_ARM_IK_f(Ped ped, BOOL toggle) { FastCall<void>(0x543a902b5043d061, ped, toggle); }
	void SET_PED_CAN_HEAD_IK(Ped ped, BOOL toggle) { Call<void>(0x33177540139dcd05, ped, toggle); }
	void SET_PED_CAN_HEAD_IK_f(Ped ped, BOOL toggle) { FastCall<void>(0x33177540139dcd05, ped, toggle); }
	void SET_PED_CAN_LEG_IK(Ped ped, BOOL toggle) { Call<void>(0x543a902b624f336f, ped, toggle); }
	void SET_PED_CAN_LEG_IK_f(Ped ped, BOOL toggle) { FastCall<void>(0x543a902b624f336f, ped, toggle); }
	void SET_PED_CAN_TORSO_IK(Ped ped, BOOL toggle) { Call<void>(0x2fd733116d770e6a, ped, toggle); }
	void SET_PED_CAN_TORSO_IK_f(Ped ped, BOOL toggle) { FastCall<void>(0x2fd733116d770e6a, ped, toggle); }
	void SET_PED_CAN_TORSO_REACT_IK(Ped ped, BOOL p1) { Call<void>(0x2a4d83c493110b4a, ped, p1); }
	void SET_PED_CAN_TORSO_REACT_IK_f(Ped ped, BOOL p1) { FastCall<void>(0x2a4d83c493110b4a, ped, p1); }
	void SET_PED_CAN_TORSO_VEHICLE_IK(Ped ped, BOOL p1) { Call<void>(0xccfc0549da9f247d, ped, p1); }
	void SET_PED_CAN_TORSO_VEHICLE_IK_f(Ped ped, BOOL p1) { FastCall<void>(0xccfc0549da9f247d, ped, p1); }
	void SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(Ped ped, BOOL toggle) { Call<void>(0xed6f1c5e96ac48f2, ped, toggle); }
	void SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT_f(Ped ped, BOOL toggle) { FastCall<void>(0xed6f1c5e96ac48f2, ped, toggle); }
	BOOL IS_PED_HEADTRACKING_PED(Ped ped1, Ped ped2) { return Call<BOOL>(0x5258fa6ce0bc4e8c, ped1, ped2); }
	BOOL IS_PED_HEADTRACKING_PED_f(Ped ped1, Ped ped2) { return FastCall<BOOL>(0x5258fa6ce0bc4e8c, ped1, ped2); }
	BOOL IS_PED_HEADTRACKING_ENTITY(Ped ped, Entity entity) { return Call<BOOL>(0xe07e443ca73a7d26, ped, entity); }
	BOOL IS_PED_HEADTRACKING_ENTITY_f(Ped ped, Entity entity) { return FastCall<BOOL>(0xe07e443ca73a7d26, ped, entity); }
	void SET_PED_PRIMARY_LOOKAT(Ped ped, Ped lookAt) { Call<void>(0x83e41da483a6a47c, ped, lookAt); }
	void SET_PED_PRIMARY_LOOKAT_f(Ped ped, Ped lookAt) { FastCall<void>(0x83e41da483a6a47c, ped, lookAt); }
	void SET_PED_CLOTH_PIN_FRAMES(Any p0, Any p1) { Call<void>(0x72550954f5f9b342, p0, p1); }
	void SET_PED_CLOTH_PIN_FRAMES_f(Any p0, Any p1) { FastCall<void>(0x72550954f5f9b342, p0, p1); }
	void SET_PED_CLOTH_PACKAGE_INDEX(Any p0, Any p1) { Call<void>(0xf2d4e1fa4a49ed87, p0, p1); }
	void SET_PED_CLOTH_PACKAGE_INDEX_f(Any p0, Any p1) { FastCall<void>(0xf2d4e1fa4a49ed87, p0, p1); }
	void SET_PED_CLOTH_PRONE(Any p0, BOOL p1) { Call<void>(0x33187e43dd94ad32, p0, p1); }
	void SET_PED_CLOTH_PRONE_f(Any p0, BOOL p1) { FastCall<void>(0x33187e43dd94ad32, p0, p1); }
	void SET_PED_CONFIG_FLAG(Ped ped, int flagId, BOOL value) { Call<void>(0x3318c547849be8fc, ped, flagId, value); }
	void SET_PED_CONFIG_FLAG_f(Ped ped, int flagId, BOOL value) { FastCall<void>(0x3318c547849be8fc, ped, flagId, value); }
	void SET_PED_RESET_FLAG(Ped ped, int flagId, BOOL doReset) { Call<void>(0x543bfc13bac6d769, ped, flagId, doReset); }
	void SET_PED_RESET_FLAG_f(Ped ped, int flagId, BOOL doReset) { FastCall<void>(0x543bfc13bac6d769, ped, flagId, doReset); }
	BOOL GET_PED_CONFIG_FLAG(Ped ped, int flagId, BOOL p2) { return Call<BOOL>(0x1b8564d5e09f53f0, ped, flagId, p2); }
	BOOL GET_PED_CONFIG_FLAG_f(Ped ped, int flagId, BOOL p2) { return FastCall<BOOL>(0x1b8564d5e09f53f0, ped, flagId, p2); }
	BOOL GET_PED_RESET_FLAG(Ped ped, int flagId) { return Call<BOOL>(0xf8a295de83f03df5, ped, flagId); }
	BOOL GET_PED_RESET_FLAG_f(Ped ped, int flagId) { return FastCall<BOOL>(0xf8a295de83f03df5, ped, flagId); }
	void SET_PED_GROUP_MEMBER_PASSENGER_INDEX(Ped ped, int index) { Call<void>(0x4014e2525f3f2095, ped, index); }
	void SET_PED_GROUP_MEMBER_PASSENGER_INDEX_f(Ped ped, int index) { FastCall<void>(0x4014e2525f3f2095, ped, index); }
	void SET_PED_CAN_EVASIVE_DIVE(Ped ped, BOOL toggle) { Call<void>(0x36c4092eba14d01a, ped, toggle); }
	void SET_PED_CAN_EVASIVE_DIVE_f(Ped ped, BOOL toggle) { FastCall<void>(0x36c4092eba14d01a, ped, toggle); }
	BOOL IS_PED_EVASIVE_DIVING(Ped ped, Entity* evadingEntity) { return Call<BOOL>(0xf81ad5083e2e3280, ped, evadingEntity); }
	BOOL IS_PED_EVASIVE_DIVING_f(Ped ped, Entity* evadingEntity) { return FastCall<BOOL>(0xf81ad5083e2e3280, ped, evadingEntity); }
	void SET_PED_SHOOTS_AT_COORD(Ped ped, float x, float y, float z, BOOL toggle) { Call<void>(0x18a350e4e2de18a7, ped, x, y, z, toggle); }
	void SET_PED_SHOOTS_AT_COORD_f(Ped ped, float x, float y, float z, BOOL toggle) { FastCall<void>(0x18a350e4e2de18a7, ped, x, y, z, toggle); }
	void SET_PED_MODEL_IS_SUPPRESSED(Hash modelHash, BOOL toggle) { Call<void>(0x717acb4b536f946, modelHash, toggle); }
	void SET_PED_MODEL_IS_SUPPRESSED_f(Hash modelHash, BOOL toggle) { FastCall<void>(0x717acb4b536f946, modelHash, toggle); }
	void STOP_ANY_PED_MODEL_BEING_SUPPRESSED() { Call<void>(0x5c439ef268e153aa); }
	void STOP_ANY_PED_MODEL_BEING_SUPPRESSED_f() { FastCall<void>(0x5c439ef268e153aa); }
	void SET_PED_CAN_BE_TARGETED_WHEN_INJURED(Ped ped, BOOL toggle) { Call<void>(0x252abdbd7514238b, ped, toggle); }
	void SET_PED_CAN_BE_TARGETED_WHEN_INJURED_f(Ped ped, BOOL toggle) { FastCall<void>(0x252abdbd7514238b, ped, toggle); }
	void SET_PED_GENERATES_DEAD_BODY_EVENTS(Ped ped, BOOL toggle) { Call<void>(0x61cef6ad26fbd489, ped, toggle); }
	void SET_PED_GENERATES_DEAD_BODY_EVENTS_f(Ped ped, BOOL toggle) { FastCall<void>(0x61cef6ad26fbd489, ped, toggle); }
	void BLOCK_PED_FROM_GENERATING_DEAD_BODY_EVENTS_WHEN_DEAD(Ped ped, BOOL toggle) { Call<void>(0xa11d7f58cc8a4fff, ped, toggle); }
	void BLOCK_PED_FROM_GENERATING_DEAD_BODY_EVENTS_WHEN_DEAD_f(Ped ped, BOOL toggle) { FastCall<void>(0xa11d7f58cc8a4fff, ped, toggle); }
	void SET_PED_WILL_ONLY_ATTACK_WANTED_PLAYER(Any p0, Any p1) { Call<void>(0xe4a2c29e16bf33ad, p0, p1); }
	void SET_PED_WILL_ONLY_ATTACK_WANTED_PLAYER_f(Any p0, Any p1) { FastCall<void>(0xe4a2c29e16bf33ad, p0, p1); }
	void SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(Ped ped, BOOL toggle) { Call<void>(0xe7e02597c037b67, ped, toggle); }
	void SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT_f(Ped ped, BOOL toggle) { FastCall<void>(0xe7e02597c037b67, ped, toggle); }
	void GIVE_PED_HELMET(Ped ped, BOOL cannotRemove, int helmetFlag, int textureIndex) { Call<void>(0xd09e904fcd4f33ab, ped, cannotRemove, helmetFlag, textureIndex); }
	void GIVE_PED_HELMET_f(Ped ped, BOOL cannotRemove, int helmetFlag, int textureIndex) { FastCall<void>(0xd09e904fcd4f33ab, ped, cannotRemove, helmetFlag, textureIndex); }
	void REMOVE_PED_HELMET(Ped ped, BOOL instantly) { Call<void>(0xd946e6d6605458, ped, instantly); }
	void REMOVE_PED_HELMET_f(Ped ped, BOOL instantly) { FastCall<void>(0xd946e6d6605458, ped, instantly); }
	BOOL IS_PED_TAKING_OFF_HELMET(Ped ped) { return Call<BOOL>(0xae172313c5828853, ped); }
	BOOL IS_PED_TAKING_OFF_HELMET_f(Ped ped) { return FastCall<BOOL>(0xae172313c5828853, ped); }
	void SET_PED_HELMET(Ped ped, BOOL canWearHelmet) { Call<void>(0xee7a27ef50d3ddda, ped, canWearHelmet); }
	void SET_PED_HELMET_f(Ped ped, BOOL canWearHelmet) { FastCall<void>(0xee7a27ef50d3ddda, ped, canWearHelmet); }
	void SET_PED_HELMET_FLAG(Ped ped, int helmetFlag) { Call<void>(0x332662abd36a6ab1, ped, helmetFlag); }
	void SET_PED_HELMET_FLAG_f(Ped ped, int helmetFlag) { FastCall<void>(0x332662abd36a6ab1, ped, helmetFlag); }
	void SET_PED_HELMET_PROP_INDEX(Ped ped, int propIndex, BOOL p2) { Call<void>(0x62cf2c1d38c9045b, ped, propIndex, p2); }
	void SET_PED_HELMET_PROP_INDEX_f(Ped ped, int propIndex, BOOL p2) { FastCall<void>(0x62cf2c1d38c9045b, ped, propIndex, p2); }
	void SET_PED_HELMET_VISOR_PROP_INDICES(Ped ped, BOOL p1, int p2, int p3) { Call<void>(0x2a618cb466875a0c, ped, p1, p2, p3); }
	void SET_PED_HELMET_VISOR_PROP_INDICES_f(Ped ped, BOOL p1, int p2, int p3) { FastCall<void>(0x2a618cb466875a0c, ped, p1, p2, p3); }
	BOOL IS_PED_HELMET_VISOR_UP(Ped ped) { return Call<BOOL>(0x1ace064cebfbb824, ped); }
	BOOL IS_PED_HELMET_VISOR_UP_f(Ped ped) { return FastCall<BOOL>(0x1ace064cebfbb824, ped); }
	void SET_PED_HELMET_TEXTURE_INDEX(Ped ped, int textureIndex) { Call<void>(0xb21d0763ba3676c9, ped, textureIndex); }
	void SET_PED_HELMET_TEXTURE_INDEX_f(Ped ped, int textureIndex) { FastCall<void>(0xb21d0763ba3676c9, ped, textureIndex); }
	BOOL IS_PED_WEARING_HELMET(Ped ped) { return Call<BOOL>(0x11c60605e863a6ce, ped); }
	BOOL IS_PED_WEARING_HELMET_f(Ped ped) { return FastCall<BOOL>(0x11c60605e863a6ce, ped); }
	void CLEAR_PED_STORED_HAT_PROP(Ped ped) { Call<void>(0x7bf4352086975361, ped); }
	void CLEAR_PED_STORED_HAT_PROP_f(Ped ped) { FastCall<void>(0x7bf4352086975361, ped); }
	int GET_PED_HELMET_STORED_HAT_PROP_INDEX(Ped ped) { return Call<int>(0x53eb21a38d1cc41d, ped); }
	int GET_PED_HELMET_STORED_HAT_PROP_INDEX_f(Ped ped) { return FastCall<int>(0x53eb21a38d1cc41d, ped); }
	int GET_PED_HELMET_STORED_HAT_TEX_INDEX(Ped ped) { return Call<int>(0x4d079883f3288653, ped); }
	int GET_PED_HELMET_STORED_HAT_TEX_INDEX_f(Ped ped) { return FastCall<int>(0x4d079883f3288653, ped); }
	BOOL IS_CURRENT_HEAD_PROP_A_HELMET(Any p0) { return Call<BOOL>(0xd517118734888843, p0); }
	BOOL IS_CURRENT_HEAD_PROP_A_HELMET_f(Any p0) { return FastCall<BOOL>(0xd517118734888843, p0); }
	void SET_PED_TO_LOAD_COVER(Ped ped, BOOL toggle) { Call<void>(0x8a027007e11dcd35, ped, toggle); }
	void SET_PED_TO_LOAD_COVER_f(Ped ped, BOOL toggle) { FastCall<void>(0x8a027007e11dcd35, ped, toggle); }
	void SET_PED_CAN_COWER_IN_COVER(Ped ped, BOOL toggle) { Call<void>(0xab430301da85eb60, ped, toggle); }
	void SET_PED_CAN_COWER_IN_COVER_f(Ped ped, BOOL toggle) { FastCall<void>(0xab430301da85eb60, ped, toggle); }
	void SET_PED_CAN_PEEK_IN_COVER(Ped ped, BOOL toggle) { Call<void>(0x14073e5c4a20bc85, ped, toggle); }
	void SET_PED_CAN_PEEK_IN_COVER_f(Ped ped, BOOL toggle) { FastCall<void>(0x14073e5c4a20bc85, ped, toggle); }
	void SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE(Ped ped, BOOL toggle) { Call<void>(0xa23b88980cc30879, ped, toggle); }
	void SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE_f(Ped ped, BOOL toggle) { FastCall<void>(0xa23b88980cc30879, ped, toggle); }
	void SET_PED_LEG_IK_MODE(Ped ped, int mode) { Call<void>(0x3332050953bcbc02, ped, mode); }
	void SET_PED_LEG_IK_MODE_f(Ped ped, int mode) { FastCall<void>(0x3332050953bcbc02, ped, mode); }
	void SET_PED_MOTION_BLUR(Ped ped, BOOL toggle) { Call<void>(0x3335e87d501e8603, ped, toggle); }
	void SET_PED_MOTION_BLUR_f(Ped ped, BOOL toggle) { FastCall<void>(0x3335e87d501e8603, ped, toggle); }
	void SET_PED_CAN_SWITCH_WEAPON(Ped ped, BOOL toggle) { Call<void>(0x3b3783fa60aacbab, ped, toggle); }
	void SET_PED_CAN_SWITCH_WEAPON_f(Ped ped, BOOL toggle) { FastCall<void>(0x3b3783fa60aacbab, ped, toggle); }
	void SET_PED_DIES_INSTANTLY_IN_WATER(Ped ped, BOOL toggle) { Call<void>(0xa2b9b64b24b7dd6d, ped, toggle); }
	void SET_PED_DIES_INSTANTLY_IN_WATER_f(Ped ped, BOOL toggle) { FastCall<void>(0xa2b9b64b24b7dd6d, ped, toggle); }
	void SET_LADDER_CLIMB_INPUT_STATE(Ped ped, int p1) { Call<void>(0xa3b50da6e1417b72, ped, p1); }
	void SET_LADDER_CLIMB_INPUT_STATE_f(Ped ped, int p1) { FastCall<void>(0xa3b50da6e1417b72, ped, p1); }
	void STOP_PED_WEAPON_FIRING_WHEN_DROPPED(Ped ped) { Call<void>(0x6987262287310171, ped); }
	void STOP_PED_WEAPON_FIRING_WHEN_DROPPED_f(Ped ped) { FastCall<void>(0x6987262287310171, ped); }
	void SET_SCRIPTED_ANIM_SEAT_OFFSET(Ped ped, float p1) { Call<void>(0x61309ed4ee172617, ped, p1); }
	void SET_SCRIPTED_ANIM_SEAT_OFFSET_f(Ped ped, float p1) { FastCall<void>(0x61309ed4ee172617, ped, p1); }
	void SET_PED_COMBAT_MOVEMENT(Ped ped, int combatMovement) { Call<void>(0xb6b0990ddf4b26cd, ped, combatMovement); }
	void SET_PED_COMBAT_MOVEMENT_f(Ped ped, int combatMovement) { FastCall<void>(0xb6b0990ddf4b26cd, ped, combatMovement); }
	int GET_PED_COMBAT_MOVEMENT(Ped ped) { return Call<int>(0x518bd23e64f7f7c1, ped); }
	int GET_PED_COMBAT_MOVEMENT_f(Ped ped) { return FastCall<int>(0x518bd23e64f7f7c1, ped); }
	void SET_PED_COMBAT_ABILITY(Ped ped, int abilityLevel) { Call<void>(0x2f2efcab4c3bcf2c, ped, abilityLevel); }
	void SET_PED_COMBAT_ABILITY_f(Ped ped, int abilityLevel) { FastCall<void>(0x2f2efcab4c3bcf2c, ped, abilityLevel); }
	void SET_PED_COMBAT_RANGE(Ped ped, int combatRange) { Call<void>(0x2fffc8523ad1efbf, ped, combatRange); }
	void SET_PED_COMBAT_RANGE_f(Ped ped, int combatRange) { FastCall<void>(0x2fffc8523ad1efbf, ped, combatRange); }
	int GET_PED_COMBAT_RANGE(Ped ped) { return Call<int>(0x55271a8f5f3be34b, ped); }
	int GET_PED_COMBAT_RANGE_f(Ped ped) { return FastCall<int>(0x55271a8f5f3be34b, ped); }
	void SET_PED_COMBAT_ATTRIBUTES(Ped ped, int attributeId, BOOL enabled) { Call<void>(0xcced705a83f5bbf5, ped, attributeId, enabled); }
	void SET_PED_COMBAT_ATTRIBUTES_f(Ped ped, int attributeId, BOOL enabled) { FastCall<void>(0xcced705a83f5bbf5, ped, attributeId, enabled); }
	void SET_PED_TARGET_LOSS_RESPONSE(Ped ped, int responseType) { Call<void>(0x15dfd9d5c93fd65c, ped, responseType); }
	void SET_PED_TARGET_LOSS_RESPONSE_f(Ped ped, int responseType) { FastCall<void>(0x15dfd9d5c93fd65c, ped, responseType); }
	BOOL IS_PED_PERFORMING_MELEE_ACTION(Ped ped) { return Call<BOOL>(0x732322b5d029d3a, ped); }
	BOOL IS_PED_PERFORMING_MELEE_ACTION_f(Ped ped) { return FastCall<BOOL>(0x732322b5d029d3a, ped); }
	BOOL IS_PED_PERFORMING_STEALTH_KILL(Ped ped) { return Call<BOOL>(0x97ad1dee43b37f3, ped); }
	BOOL IS_PED_PERFORMING_STEALTH_KILL_f(Ped ped) { return FastCall<BOOL>(0x97ad1dee43b37f3, ped); }
	BOOL IS_PED_PERFORMING_A_COUNTER_ATTACK(Ped ped) { return Call<BOOL>(0xa574222c27e75702, ped); }
	BOOL IS_PED_PERFORMING_A_COUNTER_ATTACK_f(Ped ped) { return FastCall<BOOL>(0xa574222c27e75702, ped); }
	BOOL IS_PED_BEING_STEALTH_KILLED(Ped ped) { return Call<BOOL>(0x238231f7bf8992be, ped); }
	BOOL IS_PED_BEING_STEALTH_KILLED_f(Ped ped) { return FastCall<BOOL>(0x238231f7bf8992be, ped); }
	Ped GET_MELEE_TARGET_FOR_PED(Ped ped) { return Call<Ped>(0x7369210388822f5f, ped); }
	Ped GET_MELEE_TARGET_FOR_PED_f(Ped ped) { return FastCall<Ped>(0x7369210388822f5f, ped); }
	BOOL WAS_PED_KILLED_BY_STEALTH(Ped ped) { return Call<BOOL>(0xadf872bae63c38b7, ped); }
	BOOL WAS_PED_KILLED_BY_STEALTH_f(Ped ped) { return FastCall<BOOL>(0xadf872bae63c38b7, ped); }
	BOOL WAS_PED_KILLED_BY_TAKEDOWN(Ped ped) { return Call<BOOL>(0x1115e4a466876355, ped); }
	BOOL WAS_PED_KILLED_BY_TAKEDOWN_f(Ped ped) { return FastCall<BOOL>(0x1115e4a466876355, ped); }
	BOOL WAS_PED_KNOCKED_OUT(Ped ped) { return Call<BOOL>(0x17730f67ccc2cc7c, ped); }
	BOOL WAS_PED_KNOCKED_OUT_f(Ped ped) { return FastCall<BOOL>(0x17730f67ccc2cc7c, ped); }
	void SET_PED_FLEE_ATTRIBUTES(Ped ped, int attributeFlags, BOOL enable) { Call<void>(0x822bc9bd3c2f0c83, ped, attributeFlags, enable); }
	void SET_PED_FLEE_ATTRIBUTES_f(Ped ped, int attributeFlags, BOOL enable) { FastCall<void>(0x822bc9bd3c2f0c83, ped, attributeFlags, enable); }
	void SET_PED_COWER_HASH(Ped ped, char* p1) { Call<void>(0x543a9b3bd1415082, ped, p1); }
	void SET_PED_COWER_HASH_f(Ped ped, char* p1) { FastCall<void>(0x543a9b3bd1415082, ped, p1); }
	void SET_PED_STEERS_AROUND_DEAD_BODIES(Ped ped, BOOL toggle) { Call<void>(0x849c37288c0f1a99, ped, toggle); }
	void SET_PED_STEERS_AROUND_DEAD_BODIES_f(Ped ped, BOOL toggle) { FastCall<void>(0x849c37288c0f1a99, ped, toggle); }
	void SET_PED_STEERS_AROUND_PEDS(Ped ped, BOOL toggle) { Call<void>(0xd9f500c85f9a5266, ped, toggle); }
	void SET_PED_STEERS_AROUND_PEDS_f(Ped ped, BOOL toggle) { FastCall<void>(0xd9f500c85f9a5266, ped, toggle); }
	void SET_PED_STEERS_AROUND_OBJECTS(Ped ped, BOOL toggle) { Call<void>(0xe64615ad2de53c92, ped, toggle); }
	void SET_PED_STEERS_AROUND_OBJECTS_f(Ped ped, BOOL toggle) { FastCall<void>(0xe64615ad2de53c92, ped, toggle); }
	void SET_PED_STEERS_AROUND_VEHICLES(Ped ped, BOOL toggle) { Call<void>(0xe27ca026016bcee9, ped, toggle); }
	void SET_PED_STEERS_AROUND_VEHICLES_f(Ped ped, BOOL toggle) { FastCall<void>(0xe27ca026016bcee9, ped, toggle); }
	void SET_PED_IS_AVOIDED_BY_OTHERS(Any p0, BOOL p1) { Call<void>(0x11f02c1b90389d58, p0, p1); }
	void SET_PED_IS_AVOIDED_BY_OTHERS_f(Any p0, BOOL p1) { FastCall<void>(0x11f02c1b90389d58, p0, p1); }
	void SET_PED_INCREASED_AVOIDANCE_RADIUS(Ped ped) { Call<void>(0xd3a599e8dfa8e657, ped); }
	void SET_PED_INCREASED_AVOIDANCE_RADIUS_f(Ped ped) { FastCall<void>(0xd3a599e8dfa8e657, ped); }
	void SET_PED_BLOCKS_PATHING_WHEN_DEAD(Ped ped, BOOL toggle) { Call<void>(0xabc5b373157debbb, ped, toggle); }
	void SET_PED_BLOCKS_PATHING_WHEN_DEAD_f(Ped ped, BOOL toggle) { FastCall<void>(0xabc5b373157debbb, ped, toggle); }
	void SET_PED_NO_TIME_DELAY_BEFORE_SHOT(Any p0) { Call<void>(0x99bced7bfbec7b9d, p0); }
	void SET_PED_NO_TIME_DELAY_BEFORE_SHOT_f(Any p0) { FastCall<void>(0x99bced7bfbec7b9d, p0); }
	BOOL IS_ANY_PED_NEAR_POINT(float x, float y, float z, float radius) { return Call<BOOL>(0xee7c0acecc53eff1, x, y, z, radius); }
	BOOL IS_ANY_PED_NEAR_POINT_f(float x, float y, float z, float radius) { return FastCall<BOOL>(0xee7c0acecc53eff1, x, y, z, radius); }
	void FORCE_PED_AI_AND_ANIMATION_UPDATE(Ped ped, BOOL p1, BOOL p2) { Call<void>(0xbe5204963cb4a87f, ped, p1, p2); }
	void FORCE_PED_AI_AND_ANIMATION_UPDATE_f(Ped ped, BOOL p1, BOOL p2) { FastCall<void>(0xbe5204963cb4a87f, ped, p1, p2); }
	BOOL IS_PED_HEADING_TOWARDS_POSITION(Ped ped, float x, float y, float z, float p4) { return Call<BOOL>(0xc4e61fa4f612bb4e, ped, x, y, z, p4); }
	BOOL IS_PED_HEADING_TOWARDS_POSITION_f(Ped ped, float x, float y, float z, float p4) { return FastCall<BOOL>(0xc4e61fa4f612bb4e, ped, x, y, z, p4); }
	void REQUEST_PED_VISIBILITY_TRACKING(Ped ped) { Call<void>(0x3642565312f8a024, ped); }
	void REQUEST_PED_VISIBILITY_TRACKING_f(Ped ped) { FastCall<void>(0x3642565312f8a024, ped); }
	void REQUEST_PED_VEHICLE_VISIBILITY_TRACKING(Ped ped, BOOL p1) { Call<void>(0xfb8ca1acd52d6a71, ped, p1); }
	void REQUEST_PED_VEHICLE_VISIBILITY_TRACKING_f(Ped ped, BOOL p1) { FastCall<void>(0xfb8ca1acd52d6a71, ped, p1); }
	void REQUEST_PED_RESTRICTED_VEHICLE_VISIBILITY_TRACKING(Ped ped, BOOL p1) { Call<void>(0x8158e3510cc6d2cd, ped, p1); }
	void REQUEST_PED_RESTRICTED_VEHICLE_VISIBILITY_TRACKING_f(Ped ped, BOOL p1) { FastCall<void>(0x8158e3510cc6d2cd, ped, p1); }
	void REQUEST_PED_USE_SMALL_BBOX_VISIBILITY_TRACKING(Ped ped, BOOL p1) { Call<void>(0x3103ad93be9bc17e, ped, p1); }
	void REQUEST_PED_USE_SMALL_BBOX_VISIBILITY_TRACKING_f(Ped ped, BOOL p1) { FastCall<void>(0x3103ad93be9bc17e, ped, p1); }
	BOOL IS_TRACKED_PED_VISIBLE(Ped ped) { return Call<BOOL>(0xa49004145c20d8b8, ped); }
	BOOL IS_TRACKED_PED_VISIBLE_f(Ped ped) { return FastCall<BOOL>(0xa49004145c20d8b8, ped); }
	int GET_TRACKED_PED_PIXELCOUNT(Ped ped) { return Call<int>(0xca662c1e0b95f897, ped); }
	int GET_TRACKED_PED_PIXELCOUNT_f(Ped ped) { return FastCall<int>(0xca662c1e0b95f897, ped); }
	BOOL IS_PED_TRACKED(Ped ped) { return Call<BOOL>(0x4e99a925d0d2d825, ped); }
	BOOL IS_PED_TRACKED_f(Ped ped) { return FastCall<BOOL>(0x4e99a925d0d2d825, ped); }
	BOOL HAS_PED_RECEIVED_EVENT(Ped ped, int eventId) { return Call<BOOL>(0x4ae1a5f3d50681d1, ped, eventId); }
	BOOL HAS_PED_RECEIVED_EVENT_f(Ped ped, int eventId) { return FastCall<BOOL>(0x4ae1a5f3d50681d1, ped, eventId); }
	BOOL CAN_PED_SEE_HATED_PED(Ped ped1, Ped ped2) { return Call<BOOL>(0x26357db6820a845f, ped1, ped2); }
	BOOL CAN_PED_SEE_HATED_PED_f(Ped ped1, Ped ped2) { return FastCall<BOOL>(0x26357db6820a845f, ped1, ped2); }
	BOOL CAN_PED_SHUFFLE_TO_OR_FROM_TURRET_SEAT(Ped ped, int* p1) { return Call<BOOL>(0xf94c4f85a7da25c, ped, p1); }
	BOOL CAN_PED_SHUFFLE_TO_OR_FROM_TURRET_SEAT_f(Ped ped, int* p1) { return FastCall<BOOL>(0xf94c4f85a7da25c, ped, p1); }
	BOOL CAN_PED_SHUFFLE_TO_OR_FROM_EXTRA_SEAT(Ped ped, int* p1) { return Call<BOOL>(0xdf77032093c5f98c, ped, p1); }
	BOOL CAN_PED_SHUFFLE_TO_OR_FROM_EXTRA_SEAT_f(Ped ped, int* p1) { return FastCall<BOOL>(0xdf77032093c5f98c, ped, p1); }
	int GET_PED_BONE_INDEX(Ped ped, int boneId) { return Call<int>(0xf8a11cc1143270f0, ped, boneId); }
	int GET_PED_BONE_INDEX_f(Ped ped, int boneId) { return FastCall<int>(0xf8a11cc1143270f0, ped, boneId); }
	int GET_PED_RAGDOLL_BONE_INDEX(Ped ped, int bone) { return Call<int>(0x1c6601e6dbf90a6c, ped, bone); }
	int GET_PED_RAGDOLL_BONE_INDEX_f(Ped ped, int bone) { return FastCall<int>(0x1c6601e6dbf90a6c, ped, bone); }
	void SET_PED_ENVEFF_SCALE(Ped ped, float value) { Call<void>(0x30b2437c2b9041b0, ped, value); }
	void SET_PED_ENVEFF_SCALE_f(Ped ped, float value) { FastCall<void>(0x30b2437c2b9041b0, ped, value); }
	float GET_PED_ENVEFF_SCALE(Ped ped) { return ToFloat(Call<_float>(0x55d995b94ffa353c, ped)); }
	float GET_PED_ENVEFF_SCALE_f(Ped ped) { return ToFloat(FastCall<_float>(0x55d995b94ffa353c, ped)); }
	void SET_ENABLE_PED_ENVEFF_SCALE(Ped ped, BOOL toggle) { Call<void>(0xa3bbdc240d2a1192, ped, toggle); }
	void SET_ENABLE_PED_ENVEFF_SCALE_f(Ped ped, BOOL toggle) { FastCall<void>(0xa3bbdc240d2a1192, ped, toggle); }
	void SET_PED_ENVEFF_CPV_ADD(Ped ped, float p1) { Call<void>(0xcd2f551c51826bd1, ped, p1); }
	void SET_PED_ENVEFF_CPV_ADD_f(Ped ped, float p1) { FastCall<void>(0xcd2f551c51826bd1, ped, p1); }
	void SET_PED_ENVEFF_COLOR_MODULATOR(Ped ped, int p1, int p2, int p3) { Call<void>(0x92feddaf3604acd9, ped, p1, p2, p3); }
	void SET_PED_ENVEFF_COLOR_MODULATOR_f(Ped ped, int p1, int p2, int p3) { FastCall<void>(0x92feddaf3604acd9, ped, p1, p2, p3); }
	void SET_PED_EMISSIVE_SCALE(Ped ped, float intensity) { Call<void>(0xbdd57d95244765af, ped, intensity); }
	void SET_PED_EMISSIVE_SCALE_f(Ped ped, float intensity) { FastCall<void>(0xbdd57d95244765af, ped, intensity); }
	float GET_PED_EMISSIVE_SCALE(Ped ped) { return ToFloat(Call<_float>(0x3671351ad602a63b, ped)); }
	float GET_PED_EMISSIVE_SCALE_f(Ped ped) { return ToFloat(FastCall<_float>(0x3671351ad602a63b, ped)); }
	BOOL IS_PED_SHADER_READY(Ped ped) { return Call<BOOL>(0x8c183b0fe71bf46e, ped); }
	BOOL IS_PED_SHADER_READY_f(Ped ped) { return FastCall<BOOL>(0x8c183b0fe71bf46e, ped); }
	void SET_PED_ENABLE_CREW_EMBLEM(Ped ped, BOOL toggle) { Call<void>(0xf4b36a2984483ce9, ped, toggle); }
	void SET_PED_ENABLE_CREW_EMBLEM_f(Ped ped, BOOL toggle) { FastCall<void>(0xf4b36a2984483ce9, ped, toggle); }
	void REQUEST_RAGDOLL_BOUNDS_UPDATE(Any p0, Any p1) { Call<void>(0x8236ed85f48767c7, p0, p1); }
	void REQUEST_RAGDOLL_BOUNDS_UPDATE_f(Any p0, Any p1) { FastCall<void>(0x8236ed85f48767c7, p0, p1); }
	void SET_PED_AO_BLOB_RENDERING(Ped ped, BOOL toggle) { Call<void>(0x805bb2b5f538a0ee, ped, toggle); }
	void SET_PED_AO_BLOB_RENDERING_f(Ped ped, BOOL toggle) { FastCall<void>(0x805bb2b5f538a0ee, ped, toggle); }
	BOOL IS_PED_SHELTERED(Ped ped) { return Call<BOOL>(0xed3f5ef27e0ce7f, ped); }
	BOOL IS_PED_SHELTERED_f(Ped ped) { return FastCall<BOOL>(0xed3f5ef27e0ce7f, ped); }
	int CREATE_SYNCHRONIZED_SCENE(float x, float y, float z, float roll, float pitch, float yaw, int p6) { return Call<int>(0xe450f29e873909a4, x, y, z, roll, pitch, yaw, p6); }
	int CREATE_SYNCHRONIZED_SCENE_f(float x, float y, float z, float roll, float pitch, float yaw, int p6) { return FastCall<int>(0xe450f29e873909a4, x, y, z, roll, pitch, yaw, p6); }
	int CREATE_SYNCHRONIZED_SCENE_AT_MAP_OBJECT(float x, float y, float z, float radius, Hash object) { return Call<int>(0xbcc9619420593bd3, x, y, z, radius, object); }
	int CREATE_SYNCHRONIZED_SCENE_AT_MAP_OBJECT_f(float x, float y, float z, float radius, Hash object) { return FastCall<int>(0xbcc9619420593bd3, x, y, z, radius, object); }
	BOOL IS_SYNCHRONIZED_SCENE_RUNNING(int sceneId) { return Call<BOOL>(0x9493b409bd40cd16, sceneId); }
	BOOL IS_SYNCHRONIZED_SCENE_RUNNING_f(int sceneId) { return FastCall<BOOL>(0x9493b409bd40cd16, sceneId); }
	void SET_SYNCHRONIZED_SCENE_ORIGIN(int sceneID, float x, float y, float z, float roll, float pitch, float yaw, BOOL p7) { Call<void>(0xebe6e3a5dbc3b5e7, sceneID, x, y, z, roll, pitch, yaw, p7); }
	void SET_SYNCHRONIZED_SCENE_ORIGIN_f(int sceneID, float x, float y, float z, float roll, float pitch, float yaw, BOOL p7) { FastCall<void>(0xebe6e3a5dbc3b5e7, sceneID, x, y, z, roll, pitch, yaw, p7); }
	void SET_SYNCHRONIZED_SCENE_PHASE(int sceneID, float phase) { Call<void>(0x416a8b78f69c227a, sceneID, phase); }
	void SET_SYNCHRONIZED_SCENE_PHASE_f(int sceneID, float phase) { FastCall<void>(0x416a8b78f69c227a, sceneID, phase); }
	float GET_SYNCHRONIZED_SCENE_PHASE(int sceneID) { return ToFloat(Call<_float>(0xce77abb9accfca06, sceneID)); }
	float GET_SYNCHRONIZED_SCENE_PHASE_f(int sceneID) { return ToFloat(FastCall<_float>(0xce77abb9accfca06, sceneID)); }
	void SET_SYNCHRONIZED_SCENE_RATE(int sceneID, float rate) { Call<void>(0xf1981503e6ed13e1, sceneID, rate); }
	void SET_SYNCHRONIZED_SCENE_RATE_f(int sceneID, float rate) { FastCall<void>(0xf1981503e6ed13e1, sceneID, rate); }
	float GET_SYNCHRONIZED_SCENE_RATE(int sceneID) { return ToFloat(Call<_float>(0xccda91ed37204ad5, sceneID)); }
	float GET_SYNCHRONIZED_SCENE_RATE_f(int sceneID) { return ToFloat(FastCall<_float>(0xccda91ed37204ad5, sceneID)); }
	void SET_SYNCHRONIZED_SCENE_LOOPED(int sceneID, BOOL toggle) { Call<void>(0xebe6e3a5d67dc104, sceneID, toggle); }
	void SET_SYNCHRONIZED_SCENE_LOOPED_f(int sceneID, BOOL toggle) { FastCall<void>(0xebe6e3a5d67dc104, sceneID, toggle); }
	BOOL IS_SYNCHRONIZED_SCENE_LOOPED(int sceneID) { return Call<BOOL>(0x1d9126d6fb89b7ec, sceneID); }
	BOOL IS_SYNCHRONIZED_SCENE_LOOPED_f(int sceneID) { return FastCall<BOOL>(0x1d9126d6fb89b7ec, sceneID); }
	void SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(int sceneID, BOOL toggle) { Call<void>(0x301d95f5dcd69843, sceneID, toggle); }
	void SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME_f(int sceneID, BOOL toggle) { FastCall<void>(0x301d95f5dcd69843, sceneID, toggle); }
	BOOL IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(int sceneID) { return Call<BOOL>(0x1260bdfa296de65b, sceneID); }
	BOOL IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME_f(int sceneID) { return FastCall<BOOL>(0x1260bdfa296de65b, sceneID); }
	void ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY(int sceneID, Entity entity, int boneIndex) { Call<void>(0xad62b774235a24a3, sceneID, entity, boneIndex); }
	void ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY_f(int sceneID, Entity entity, int boneIndex) { FastCall<void>(0xad62b774235a24a3, sceneID, entity, boneIndex); }
	void DETACH_SYNCHRONIZED_SCENE(int sceneID) { Call<void>(0x82f7643f78fa45ad, sceneID); }
	void DETACH_SYNCHRONIZED_SCENE_f(int sceneID) { FastCall<void>(0x82f7643f78fa45ad, sceneID); }
	void TAKE_OWNERSHIP_OF_SYNCHRONIZED_SCENE(int scene) { Call<void>(0x901dce7f9e521441, scene); }
	void TAKE_OWNERSHIP_OF_SYNCHRONIZED_SCENE_f(int scene) { FastCall<void>(0x901dce7f9e521441, scene); }
	BOOL FORCE_PED_MOTION_STATE(Ped ped, Hash motionStateHash, BOOL p2, int p3, BOOL p4) { return Call<BOOL>(0xa237a01258e712ec, ped, motionStateHash, p2, p3, p4); }
	BOOL FORCE_PED_MOTION_STATE_f(Ped ped, Hash motionStateHash, BOOL p2, int p3, BOOL p4) { return FastCall<BOOL>(0xa237a01258e712ec, ped, motionStateHash, p2, p3, p4); }
	BOOL GET_PED_CURRENT_MOVE_BLEND_RATIO(Ped ped, float* speedX, float* speedY) { return Call<BOOL>(0x22b4d2c2457136ce, ped, speedX, speedY); }
	BOOL GET_PED_CURRENT_MOVE_BLEND_RATIO_f(Ped ped, float* speedX, float* speedY) { return FastCall<BOOL>(0x22b4d2c2457136ce, ped, speedX, speedY); }
	void SET_PED_MAX_MOVE_BLEND_RATIO(Ped ped, float value) { Call<void>(0xfb41535f8f29e737, ped, value); }
	void SET_PED_MAX_MOVE_BLEND_RATIO_f(Ped ped, float value) { FastCall<void>(0xfb41535f8f29e737, ped, value); }
	void SET_PED_MIN_MOVE_BLEND_RATIO(Ped ped, float value) { Call<void>(0x93f913d44eca2009, ped, value); }
	void SET_PED_MIN_MOVE_BLEND_RATIO_f(Ped ped, float value) { FastCall<void>(0x93f913d44eca2009, ped, value); }
	void SET_PED_MOVE_RATE_OVERRIDE(Ped ped, float value) { Call<void>(0xca2a0165f0eb224a, ped, value); }
	void SET_PED_MOVE_RATE_OVERRIDE_f(Ped ped, float value) { FastCall<void>(0xca2a0165f0eb224a, ped, value); }
	void SET_PED_MOVE_RATE_IN_WATER_OVERRIDE(Ped ped, float p1) { Call<void>(0x37b02773acf9c3b0, ped, p1); }
	void SET_PED_MOVE_RATE_IN_WATER_OVERRIDE_f(Ped ped, float p1) { FastCall<void>(0x37b02773acf9c3b0, ped, p1); }
	BOOL PED_HAS_SEXINESS_FLAG_SET(Ped ped, int sexinessFlag) { return Call<BOOL>(0x8b9393a3e3f09c1f, ped, sexinessFlag); }
	BOOL PED_HAS_SEXINESS_FLAG_SET_f(Ped ped, int sexinessFlag) { return FastCall<BOOL>(0x8b9393a3e3f09c1f, ped, sexinessFlag); }
	int GET_PED_NEARBY_VEHICLES(Ped ped, Any* sizeAndVehs) { return Call<int>(0xf731b7919441eeae, ped, sizeAndVehs); }
	int GET_PED_NEARBY_VEHICLES_f(Ped ped, Any* sizeAndVehs) { return FastCall<int>(0xf731b7919441eeae, ped, sizeAndVehs); }
	int GET_PED_NEARBY_PEDS(Ped ped, Any* sizeAndPeds, int ignore) { return Call<int>(0x1ba47280bf191cab, ped, sizeAndPeds, ignore); }
	int GET_PED_NEARBY_PEDS_f(Ped ped, Any* sizeAndPeds, int ignore) { return FastCall<int>(0x1ba47280bf191cab, ped, sizeAndPeds, ignore); }
	BOOL HAVE_ALL_STREAMING_REQUESTS_COMPLETED(Ped ped) { return Call<BOOL>(0x5920b39b26101082, ped); }
	BOOL HAVE_ALL_STREAMING_REQUESTS_COMPLETED_f(Ped ped) { return FastCall<BOOL>(0x5920b39b26101082, ped); }
	BOOL IS_PED_USING_ACTION_MODE(Ped ped) { return Call<BOOL>(0xa0fee055058a060c, ped); }
	BOOL IS_PED_USING_ACTION_MODE_f(Ped ped) { return FastCall<BOOL>(0xa0fee055058a060c, ped); }
	void SET_PED_USING_ACTION_MODE(Ped ped, BOOL p1, int p2, char* action) { Call<void>(0x6468ef163b5e5b24, ped, p1, p2, action); }
	void SET_PED_USING_ACTION_MODE_f(Ped ped, BOOL p1, int p2, char* action) { FastCall<void>(0x6468ef163b5e5b24, ped, p1, p2, action); }
	void SET_MOVEMENT_MODE_OVERRIDE(Ped ped, char* name) { Call<void>(0x1707f5a5c6ed0bf5, ped, name); }
	void SET_MOVEMENT_MODE_OVERRIDE_f(Ped ped, char* name) { FastCall<void>(0x1707f5a5c6ed0bf5, ped, name); }
	void SET_PED_CAPSULE(Ped ped, float value) { Call<void>(0xe0cad5f9ba90a640, ped, value); }
	void SET_PED_CAPSULE_f(Ped ped, float value) { FastCall<void>(0xe0cad5f9ba90a640, ped, value); }
	int REGISTER_PEDHEADSHOT(Ped ped) { return Call<int>(0x629f07693421f2d, ped); }
	int REGISTER_PEDHEADSHOT_f(Ped ped) { return FastCall<int>(0x629f07693421f2d, ped); }
	int REGISTER_PEDHEADSHOT_HIRES(Ped ped) { return Call<int>(0x5b831dc96d9cb44d, ped); }
	int REGISTER_PEDHEADSHOT_HIRES_f(Ped ped) { return FastCall<int>(0x5b831dc96d9cb44d, ped); }
	int REGISTER_PEDHEADSHOT_TRANSPARENT(Ped ped) { return Call<int>(0x218808a67f701320, ped); }
	int REGISTER_PEDHEADSHOT_TRANSPARENT_f(Ped ped) { return FastCall<int>(0x218808a67f701320, ped); }
	void UNREGISTER_PEDHEADSHOT(int id) { Call<void>(0x46bd0c0e1443e346, id); }
	void UNREGISTER_PEDHEADSHOT_f(int id) { FastCall<void>(0x46bd0c0e1443e346, id); }
	BOOL IS_PEDHEADSHOT_VALID(int id) { return Call<BOOL>(0xe9a7fd90d5cf3b11, id); }
	BOOL IS_PEDHEADSHOT_VALID_f(int id) { return FastCall<BOOL>(0xe9a7fd90d5cf3b11, id); }
	BOOL IS_PEDHEADSHOT_READY(int id) { return Call<BOOL>(0xe9a7fd90d59884b8, id); }
	BOOL IS_PEDHEADSHOT_READY_f(int id) { return FastCall<BOOL>(0xe9a7fd90d59884b8, id); }
	const char* GET_PEDHEADSHOT_TXD_STRING(int id) { return Call<char*>(0x2f10b6d681b8014f, id); }
	const char* GET_PEDHEADSHOT_TXD_STRING_f(int id) { return FastCall<char*>(0x2f10b6d681b8014f, id); }
	BOOL REQUEST_PEDHEADSHOT_IMG_UPLOAD(int id) { return Call<BOOL>(0x14644845a9489923, id); }
	BOOL REQUEST_PEDHEADSHOT_IMG_UPLOAD_f(int id) { return FastCall<BOOL>(0x14644845a9489923, id); }
	void RELEASE_PEDHEADSHOT_IMG_UPLOAD(int id) { Call<void>(0xfdf2b63694a5bcab, id); }
	void RELEASE_PEDHEADSHOT_IMG_UPLOAD_f(int id) { FastCall<void>(0xfdf2b63694a5bcab, id); }
	BOOL IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE() { return Call<BOOL>(0x6c94f91dda45732); }
	BOOL IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE_f() { return FastCall<BOOL>(0x6c94f91dda45732); }
	BOOL HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED() { return Call<BOOL>(0xad2502b6143921a4); }
	BOOL HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED_f() { return FastCall<BOOL>(0xad2502b6143921a4); }
	BOOL HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED() { return Call<BOOL>(0x5f68d4fbcc36b7a); }
	BOOL HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED_f() { return FastCall<BOOL>(0x5f68d4fbcc36b7a); }
	void SET_PED_HEATSCALE_OVERRIDE(Ped ped, float heatScale) { Call<void>(0x5e7314017f1aa71e, ped, heatScale); }
	void SET_PED_HEATSCALE_OVERRIDE_f(Ped ped, float heatScale) { FastCall<void>(0x5e7314017f1aa71e, ped, heatScale); }
	void DISABLE_PED_HEATSCALE_OVERRIDE(Ped ped) { Call<void>(0x5bfa45ebcfe741d8, ped); }
	void DISABLE_PED_HEATSCALE_OVERRIDE_f(Ped ped) { FastCall<void>(0x5bfa45ebcfe741d8, ped); }
	void SPAWNPOINTS_START_SEARCH(float p0, float p1, float p2, float p3, float p4, int interiorFlags, float scale, int duration) { Call<void>(0x9d8cc7af100d6e6, p0, p1, p2, p3, p4, interiorFlags, scale, duration); }
	void SPAWNPOINTS_START_SEARCH_f(float p0, float p1, float p2, float p3, float p4, int interiorFlags, float scale, int duration) { FastCall<void>(0x9d8cc7af100d6e6, p0, p1, p2, p3, p4, interiorFlags, scale, duration); }
	void SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, int interiorFlags, float scale, int duration) { Call<void>(0x618ae610bcc0007a, x1, y1, z1, x2, y2, z2, width, interiorFlags, scale, duration); }
	void SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, float width, int interiorFlags, float scale, int duration) { FastCall<void>(0x618ae610bcc0007a, x1, y1, z1, x2, y2, z2, width, interiorFlags, scale, duration); }
	void SPAWNPOINTS_CANCEL_SEARCH() { Call<void>(0x7bcc9a382130708c); }
	void SPAWNPOINTS_CANCEL_SEARCH_f() { FastCall<void>(0x7bcc9a382130708c); }
	BOOL SPAWNPOINTS_IS_SEARCH_ACTIVE() { return Call<BOOL>(0xc68302dc0289f549); }
	BOOL SPAWNPOINTS_IS_SEARCH_ACTIVE_f() { return FastCall<BOOL>(0xc68302dc0289f549); }
	BOOL SPAWNPOINTS_IS_SEARCH_COMPLETE() { return Call<BOOL>(0x31cdbbf4c6db1ebc); }
	BOOL SPAWNPOINTS_IS_SEARCH_COMPLETE_f() { return FastCall<BOOL>(0x31cdbbf4c6db1ebc); }
	BOOL SPAWNPOINTS_IS_SEARCH_FAILED() { return Call<BOOL>(0xc68302dc0af10a80); }
	BOOL SPAWNPOINTS_IS_SEARCH_FAILED_f() { return FastCall<BOOL>(0xc68302dc0af10a80); }
	int SPAWNPOINTS_GET_NUM_SEARCH_RESULTS() { return Call<int>(0x3422778d71df1742); }
	int SPAWNPOINTS_GET_NUM_SEARCH_RESULTS_f() { return FastCall<int>(0x3422778d71df1742); }
	void SPAWNPOINTS_GET_SEARCH_RESULT(int randomInt, float* x, float* y, float* z) { Call<void>(0x43e8015b9a1034a, randomInt, x, y, z); }
	void SPAWNPOINTS_GET_SEARCH_RESULT_f(int randomInt, float* x, float* y, float* z) { FastCall<void>(0x43e8015b9a1034a, randomInt, x, y, z); }
	void SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS(int p0, int* p1) { Call<void>(0xf89d02a0e03a3d32, p0, p1); }
	void SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS_f(int p0, int* p1) { FastCall<void>(0xf89d02a0e03a3d32, p0, p1); }
	void SET_IK_TARGET(Ped ped, int ikIndex, Entity entityLookAt, int boneLookAt, float offsetX, float offsetY, float offsetZ, Any p7, int blendInDuration, int blendOutDuration) { Call<void>(0xa49890acd4a57f91, ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration); }
	void SET_IK_TARGET_f(Ped ped, int ikIndex, Entity entityLookAt, int boneLookAt, float offsetX, float offsetY, float offsetZ, Any p7, int blendInDuration, int blendOutDuration) { FastCall<void>(0xa49890acd4a57f91, ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration); }
	void FORCE_INSTANT_LEG_IK_SETUP(Ped ped) { Call<void>(0x200e3371849cc2e3, ped); }
	void FORCE_INSTANT_LEG_IK_SETUP_f(Ped ped) { FastCall<void>(0x200e3371849cc2e3, ped); }
	void REQUEST_ACTION_MODE_ASSET(char* asset) { Call<void>(0xd96b929bab9e510d, asset); }
	void REQUEST_ACTION_MODE_ASSET_f(char* asset) { FastCall<void>(0xd96b929bab9e510d, asset); }
	BOOL HAS_ACTION_MODE_ASSET_LOADED(char* asset) { return Call<BOOL>(0xa58baa06ec66f1cc, asset); }
	BOOL HAS_ACTION_MODE_ASSET_LOADED_f(char* asset) { return FastCall<BOOL>(0xa58baa06ec66f1cc, asset); }
	void REMOVE_ACTION_MODE_ASSET(char* asset) { Call<void>(0xa150ae16999c43e2, asset); }
	void REMOVE_ACTION_MODE_ASSET_f(char* asset) { FastCall<void>(0xa150ae16999c43e2, asset); }
	void REQUEST_STEALTH_MODE_ASSET(char* asset) { Call<void>(0x335f5313893442e0, asset); }
	void REQUEST_STEALTH_MODE_ASSET_f(char* asset) { FastCall<void>(0x335f5313893442e0, asset); }
	BOOL HAS_STEALTH_MODE_ASSET_LOADED(char* asset) { return Call<BOOL>(0x1ad29e2e0751328f, asset); }
	BOOL HAS_STEALTH_MODE_ASSET_LOADED_f(char* asset) { return FastCall<BOOL>(0x1ad29e2e0751328f, asset); }
	void REMOVE_STEALTH_MODE_ASSET(char* asset) { Call<void>(0x681da6f65af4aaab, asset); }
	void REMOVE_STEALTH_MODE_ASSET_f(char* asset) { FastCall<void>(0x681da6f65af4aaab, asset); }
	void SET_PED_LOD_MULTIPLIER(Ped ped, float multiplier) { Call<void>(0x1619188a211bb20c, ped, multiplier); }
	void SET_PED_LOD_MULTIPLIER_f(Ped ped, float multiplier) { FastCall<void>(0x1619188a211bb20c, ped, multiplier); }
	void SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(Ped ped, BOOL toggle, int p2) { Call<void>(0x2962530153bca5d2, ped, toggle, p2); }
	void SET_PED_CAN_LOSE_PROPS_ON_DAMAGE_f(Ped ped, BOOL toggle, int p2) { FastCall<void>(0x2962530153bca5d2, ped, toggle, p2); }
	void SET_FORCE_FOOTSTEP_UPDATE(Ped ped, BOOL toggle) { Call<void>(0xd850eae336a6aebd, ped, toggle); }
	void SET_FORCE_FOOTSTEP_UPDATE_f(Ped ped, BOOL toggle) { FastCall<void>(0xd850eae336a6aebd, ped, toggle); }
	void SET_FORCE_STEP_TYPE(Ped ped, BOOL p1, int type, int p3) { Call<void>(0xa7d4201946403e5c, ped, p1, type, p3); }
	void SET_FORCE_STEP_TYPE_f(Ped ped, BOOL p1, int type, int p3) { FastCall<void>(0xa7d4201946403e5c, ped, p1, type, p3); }
	BOOL IS_ANY_HOSTILE_PED_NEAR_POINT(Ped ped, float x, float y, float z, float radius) { return Call<BOOL>(0x1e6ba52dff84d9f6, ped, x, y, z, radius); }
	BOOL IS_ANY_HOSTILE_PED_NEAR_POINT_f(Ped ped, float x, float y, float z, float radius) { return FastCall<BOOL>(0x1e6ba52dff84d9f6, ped, x, y, z, radius); }
	void SET_PED_CAN_PLAY_IN_CAR_IDLES(Ped ped, BOOL toggle) { Call<void>(0xee04f904627b3b69, ped, toggle); }
	void SET_PED_CAN_PLAY_IN_CAR_IDLES_f(Ped ped, BOOL toggle) { FastCall<void>(0xee04f904627b3b69, ped, toggle); }
	BOOL IS_TARGET_PED_IN_PERCEPTION_AREA(Ped ped, Ped targetPed, float p2, float p3, float p4, float p5) { return Call<BOOL>(0x7714ab38e30e3836, ped, targetPed, p2, p3, p4, p5); }
	BOOL IS_TARGET_PED_IN_PERCEPTION_AREA_f(Ped ped, Ped targetPed, float p2, float p3, float p4, float p5) { return FastCall<BOOL>(0x7714ab38e30e3836, ped, targetPed, p2, p3, p4, p5); }
	void SET_POP_CONTROL_SPHERE_THIS_FRAME(float x, float y, float z, float min, float max) { Call<void>(0x4eaa9d14ddcf2dd1, x, y, z, min, max); }
	void SET_POP_CONTROL_SPHERE_THIS_FRAME_f(float x, float y, float z, float min, float max) { FastCall<void>(0x4eaa9d14ddcf2dd1, x, y, z, min, max); }
	void FORCE_ZERO_MASS_IN_COLLISIONS(Ped ped) { Call<void>(0x113a9ba6d1599a53, ped); }
	void FORCE_ZERO_MASS_IN_COLLISIONS_f(Ped ped) { FastCall<void>(0x113a9ba6d1599a53, ped); }
	void SET_DISABLE_HIGH_FALL_DEATH(Ped ped, BOOL toggle) { Call<void>(0xc8b7072ba6309ed9, ped, toggle); }
	void SET_DISABLE_HIGH_FALL_DEATH_f(Ped ped, BOOL toggle) { FastCall<void>(0xc8b7072ba6309ed9, ped, toggle); }
	void SET_PED_PHONE_PALETTE_IDX(Any p0, Any p1) { Call<void>(0x7b1dd0add56849bb, p0, p1); }
	void SET_PED_PHONE_PALETTE_IDX_f(Any p0, Any p1) { FastCall<void>(0x7b1dd0add56849bb, p0, p1); }
	void SET_PED_STEER_BIAS(Ped ped, float value) { Call<void>(0x543c1f68ad56c774, ped, value); }
	void SET_PED_STEER_BIAS_f(Ped ped, float value) { FastCall<void>(0x543c1f68ad56c774, ped, value); }
	BOOL IS_PED_SWITCHING_WEAPON(Ped Ped) { return Call<BOOL>(0xc7f5095283848cb2, Ped); }
	BOOL IS_PED_SWITCHING_WEAPON_f(Ped Ped) { return FastCall<BOOL>(0xc7f5095283848cb2, Ped); }
	void SET_PED_TREATED_AS_FRIENDLY(Any p0, Any p1, Any p2) { Call<void>(0xb6edad16a29328a5, p0, p1, p2); }
	void SET_PED_TREATED_AS_FRIENDLY_f(Any p0, Any p1, Any p2) { FastCall<void>(0xb6edad16a29328a5, p0, p1, p2); }
	void SET_DISABLE_PED_MAP_COLLISION(Ped ped) { Call<void>(0x4e8d9091072b390b, ped); }
	void SET_DISABLE_PED_MAP_COLLISION_f(Ped ped) { FastCall<void>(0x4e8d9091072b390b, ped); }
	void ENABLE_MP_LIGHT(Ped ped, BOOL toggle) { Call<void>(0x76aef00b12f8be96, ped, toggle); }
	void ENABLE_MP_LIGHT_f(Ped ped, BOOL toggle) { FastCall<void>(0x76aef00b12f8be96, ped, toggle); }
	BOOL GET_MP_LIGHT_ENABLED(Ped ped) { return Call<BOOL>(0x7abf72e1d8f7c925, ped); }
	BOOL GET_MP_LIGHT_ENABLED_f(Ped ped) { return FastCall<BOOL>(0x7abf72e1d8f7c925, ped); }
	void CLEAR_COVER_POINT_FOR_PED(Ped ped) { Call<void>(0x5d1268f8be098d0, ped); }
	void CLEAR_COVER_POINT_FOR_PED_f(Ped ped) { FastCall<void>(0x5d1268f8be098d0, ped); }
	void SET_ALLOW_STUNT_JUMP_CAMERA(Ped ped, BOOL toggle) { Call<void>(0xd3420c010c2ef1de, ped, toggle); }
	void SET_ALLOW_STUNT_JUMP_CAMERA_f(Ped ped, BOOL toggle) { FastCall<void>(0xd3420c010c2ef1de, ped, toggle); }
}
namespace PHYSICS
{
	int ADD_ROPE(float x, float y, float z, float rotX, float rotY, float rotZ, float length, int ropeType, float maxLength, float minLength, float windingSpeed, BOOL p11, BOOL p12, BOOL rigid, float p14, BOOL breakWhenShot, Any* unkPtr) { return Call<int>(0x1aee6beddf0, x, y, z, rotX, rotY, rotZ, length, ropeType, maxLength, minLength, windingSpeed, p11, p12, rigid, p14, breakWhenShot, unkPtr); }
	int ADD_ROPE_f(float x, float y, float z, float rotX, float rotY, float rotZ, float length, int ropeType, float maxLength, float minLength, float windingSpeed, BOOL p11, BOOL p12, BOOL rigid, float p14, BOOL breakWhenShot, Any* unkPtr) { return FastCall<int>(0x1aee6beddf0, x, y, z, rotX, rotY, rotZ, length, ropeType, maxLength, minLength, windingSpeed, p11, p12, rigid, p14, breakWhenShot, unkPtr); }
	void DELETE_ROPE(int* ropeId) { Call<void>(0xccba683f380b06, ropeId); }
	void DELETE_ROPE_f(int* ropeId) { FastCall<void>(0xccba683f380b06, ropeId); }
	void DELETE_CHILD_ROPE(int ropeId) { Call<void>(0x9701b54cd8aa569, ropeId); }
	void DELETE_CHILD_ROPE_f(int ropeId) { FastCall<void>(0x9701b54cd8aa569, ropeId); }
	BOOL DOES_ROPE_EXIST(int* ropeId) { return Call<BOOL>(0xf2c6d990f9a376d0, ropeId); }
	BOOL DOES_ROPE_EXIST_f(int* ropeId) { return FastCall<BOOL>(0xf2c6d990f9a376d0, ropeId); }
	void ROPE_DRAW_ENABLED(int* ropeId, BOOL p1) { Call<void>(0xcb7f203c6827e953, ropeId, p1); }
	void ROPE_DRAW_ENABLED_f(int* ropeId, BOOL p1) { FastCall<void>(0xcb7f203c6827e953, ropeId, p1); }
	void ROPE_DRAW_SHADOW_ENABLED(int* ropeId, BOOL toggle) { Call<void>(0x77b65d3603f0bc90, ropeId, toggle); }
	void ROPE_DRAW_SHADOW_ENABLED_f(int* ropeId, BOOL toggle) { FastCall<void>(0x77b65d3603f0bc90, ropeId, toggle); }
	void LOAD_ROPE_DATA(int ropeId, char* rope_preset) { Call<void>(0x10c16ba45fd63ebe, ropeId, rope_preset); }
	void LOAD_ROPE_DATA_f(int ropeId, char* rope_preset) { FastCall<void>(0x10c16ba45fd63ebe, ropeId, rope_preset); }
	void PIN_ROPE_VERTEX(int ropeId, int vertex, float x, float y, float z) { Call<void>(0xd08e9354a4caa1c7, ropeId, vertex, x, y, z); }
	void PIN_ROPE_VERTEX_f(int ropeId, int vertex, float x, float y, float z) { FastCall<void>(0xd08e9354a4caa1c7, ropeId, vertex, x, y, z); }
	void UNPIN_ROPE_VERTEX(int ropeId, int vertex) { Call<void>(0x67e7907e27a2f20e, ropeId, vertex); }
	void UNPIN_ROPE_VERTEX_f(int ropeId, int vertex) { FastCall<void>(0x67e7907e27a2f20e, ropeId, vertex); }
	int GET_ROPE_VERTEX_COUNT(int ropeId) { return Call<int>(0x6d00cfbdb78dfbf8, ropeId); }
	int GET_ROPE_VERTEX_COUNT_f(int ropeId) { return FastCall<int>(0x6d00cfbdb78dfbf8, ropeId); }
	void ATTACH_ENTITIES_TO_ROPE(int ropeId, Entity ent1, Entity ent2, float ent1_x, float ent1_y, float ent1_z, float ent2_x, float ent2_y, float ent2_z, float length, BOOL p10, BOOL p11, Any* p12, Any* p13) { Call<void>(0xef3431359f7fbc72, ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, p12, p13); }
	void ATTACH_ENTITIES_TO_ROPE_f(int ropeId, Entity ent1, Entity ent2, float ent1_x, float ent1_y, float ent1_z, float ent2_x, float ent2_y, float ent2_z, float length, BOOL p10, BOOL p11, Any* p12, Any* p13) { FastCall<void>(0xef3431359f7fbc72, ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, p12, p13); }
	void ATTACH_ROPE_TO_ENTITY(int ropeId, Entity entity, float x, float y, float z, BOOL p5) { Call<void>(0xb2cea9f3733fa054, ropeId, entity, x, y, z, p5); }
	void ATTACH_ROPE_TO_ENTITY_f(int ropeId, Entity entity, float x, float y, float z, BOOL p5) { FastCall<void>(0xb2cea9f3733fa054, ropeId, entity, x, y, z, p5); }
	void DETACH_ROPE_FROM_ENTITY(int ropeId, Entity entity) { Call<void>(0x29af49abbbac3d77, ropeId, entity); }
	void DETACH_ROPE_FROM_ENTITY_f(int ropeId, Entity entity) { FastCall<void>(0x29af49abbbac3d77, ropeId, entity); }
	void ROPE_SET_UPDATE_PINVERTS(int ropeId) { Call<void>(0xf108467d6097aed9, ropeId); }
	void ROPE_SET_UPDATE_PINVERTS_f(int ropeId) { FastCall<void>(0xf108467d6097aed9, ropeId); }
	void ROPE_SET_UPDATE_ORDER(int ropeId, Any p1) { Call<void>(0x9460d6484a4074c2, ropeId, p1); }
	void ROPE_SET_UPDATE_ORDER_f(int ropeId, Any p1) { FastCall<void>(0x9460d6484a4074c2, ropeId, p1); }
	void ROPE_SET_SMOOTH_REELIN(int ropeId, BOOL p1) { Call<void>(0xe0efce8607967126, ropeId, p1); }
	void ROPE_SET_SMOOTH_REELIN_f(int ropeId, BOOL p1) { FastCall<void>(0xe0efce8607967126, ropeId, p1); }
	BOOL IS_ROPE_ATTACHED_AT_BOTH_ENDS(int* ropeId) { return Call<BOOL>(0xea624a3ea8f95b4d, ropeId); }
	BOOL IS_ROPE_ATTACHED_AT_BOTH_ENDS_f(int* ropeId) { return FastCall<BOOL>(0xea624a3ea8f95b4d, ropeId); }
	Vector3* GET_ROPE_LAST_VERTEX_COORD(int ropeId) { Call<Vector3*>(0x40ceb93786f51c9f, ropeId); return GetVector(); }
	Vector3* GET_ROPE_VERTEX_COORD(int ropeId, int vertex) { Call<Vector3*>(0x6d00cfbdb78de5de, ropeId, vertex); return GetVector(); }
	void START_ROPE_WINDING(int ropeId) { Call<void>(0x92c9d6ca9f6a3d4a, ropeId); }
	void START_ROPE_WINDING_f(int ropeId) { FastCall<void>(0x92c9d6ca9f6a3d4a, ropeId); }
	void STOP_ROPE_WINDING(int ropeId) { Call<void>(0x4c89adcfbc3e218a, ropeId); }
	void STOP_ROPE_WINDING_f(int ropeId) { FastCall<void>(0x4c89adcfbc3e218a, ropeId); }
	void START_ROPE_UNWINDING_FRONT(int ropeId) { Call<void>(0x8629835c7d0c38db, ropeId); }
	void START_ROPE_UNWINDING_FRONT_f(int ropeId) { FastCall<void>(0x8629835c7d0c38db, ropeId); }
	void STOP_ROPE_UNWINDING_FRONT(int ropeId) { Call<void>(0xcc0d439f1ad7dd1b, ropeId); }
	void STOP_ROPE_UNWINDING_FRONT_f(int ropeId) { FastCall<void>(0xcc0d439f1ad7dd1b, ropeId); }
	void ROPE_CONVERT_TO_SIMPLE(int ropeId) { Call<void>(0xbb511893e2303a3d, ropeId); }
	void ROPE_CONVERT_TO_SIMPLE_f(int ropeId) { FastCall<void>(0xbb511893e2303a3d, ropeId); }
	void ROPE_LOAD_TEXTURES() { Call<void>(0xfac709333ac01164); }
	void ROPE_LOAD_TEXTURES_f() { FastCall<void>(0xfac709333ac01164); }
	BOOL ROPE_ARE_TEXTURES_LOADED() { return Call<BOOL>(0x6e19f6bdff646894); }
	BOOL ROPE_ARE_TEXTURES_LOADED_f() { return FastCall<BOOL>(0x6e19f6bdff646894); }
	void ROPE_UNLOAD_TEXTURES() { Call<void>(0xdc708fd909ecb6ab); }
	void ROPE_UNLOAD_TEXTURES_f() { FastCall<void>(0xdc708fd909ecb6ab); }
	BOOL DOES_SCRIPT_OWN_ROPE(int ropeId) { return Call<BOOL>(0x5976972bf5132d59, ropeId); }
	BOOL DOES_SCRIPT_OWN_ROPE_f(int ropeId) { return FastCall<BOOL>(0x5976972bf5132d59, ropeId); }
	void ROPE_ATTACH_VIRTUAL_BOUND_GEOM(int ropeId, int p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13) { Call<void>(0x44c7471f8e9b427e, ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13); }
	void ROPE_ATTACH_VIRTUAL_BOUND_GEOM_f(int ropeId, int p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13) { FastCall<void>(0x44c7471f8e9b427e, ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13); }
	void ROPE_CHANGE_SCRIPT_OWNER(Any p0, BOOL p1, BOOL p2) { Call<void>(0x2a1ed41419599781, p0, p1, p2); }
	void ROPE_CHANGE_SCRIPT_OWNER_f(Any p0, BOOL p1, BOOL p2) { FastCall<void>(0x2a1ed41419599781, p0, p1, p2); }
	void ROPE_SET_REFFRAMEVELOCITY_COLLIDERORDER(int ropeId, int p1) { Call<void>(0x4ca98b2f9eb8b71c, ropeId, p1); }
	void ROPE_SET_REFFRAMEVELOCITY_COLLIDERORDER_f(int ropeId, int p1) { FastCall<void>(0x4ca98b2f9eb8b71c, ropeId, p1); }
	float ROPE_GET_DISTANCE_BETWEEN_ENDS(int ropeId) { return ToFloat(Call<_float>(0x77a473155ac94fa3, ropeId)); }
	float ROPE_GET_DISTANCE_BETWEEN_ENDS_f(int ropeId) { return ToFloat(FastCall<_float>(0x77a473155ac94fa3, ropeId)); }
	void ROPE_FORCE_LENGTH(int ropeId, float length) { Call<void>(0xcc2c764b2bbc7907, ropeId, length); }
	void ROPE_FORCE_LENGTH_f(int ropeId, float length) { FastCall<void>(0xcc2c764b2bbc7907, ropeId, length); }
	void ROPE_RESET_LENGTH(int ropeId, float length) { Call<void>(0xd04aac4aea252e23, ropeId, length); }
	void ROPE_RESET_LENGTH_f(int ropeId, float length) { FastCall<void>(0xd04aac4aea252e23, ropeId, length); }
	void APPLY_IMPULSE_TO_CLOTH(float posX, float posY, float posZ, float vecX, float vecY, float vecZ, float impulse) { Call<void>(0x6895625a6a048831, posX, posY, posZ, vecX, vecY, vecZ, impulse); }
	void APPLY_IMPULSE_TO_CLOTH_f(float posX, float posY, float posZ, float vecX, float vecY, float vecZ, float impulse) { FastCall<void>(0x6895625a6a048831, posX, posY, posZ, vecX, vecY, vecZ, impulse); }
	void SET_DAMPING(Entity entity, int vertex, float value) { Call<void>(0xf86ef6d16acde5, entity, vertex, value); }
	void SET_DAMPING_f(Entity entity, int vertex, float value) { FastCall<void>(0xf86ef6d16acde5, entity, vertex, value); }
	void ACTIVATE_PHYSICS(Entity entity) { Call<void>(0x3e0f1495014f3adb, entity); }
	void ACTIVATE_PHYSICS_f(Entity entity) { FastCall<void>(0x3e0f1495014f3adb, entity); }
	void SET_CGOFFSET(Entity entity, float x, float y, float z) { Call<void>(0x1e156fde344ea154, entity, x, y, z); }
	void SET_CGOFFSET_f(Entity entity, float x, float y, float z) { FastCall<void>(0x1e156fde344ea154, entity, x, y, z); }
	Vector3* GET_CGOFFSET(Entity entity) { Call<Vector3*>(0x19da355dd7fae0e0, entity); return GetVector(); }
	void SET_CG_AT_BOUNDCENTER(Entity entity) { Call<void>(0xf3efc27b983423a5, entity); }
	void SET_CG_AT_BOUNDCENTER_f(Entity entity) { FastCall<void>(0xf3efc27b983423a5, entity); }
	void BREAK_ENTITY_GLASS(Entity entity, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, Any p9, BOOL p10) { Call<void>(0x26e5d8dbcfe83f60, entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	void BREAK_ENTITY_GLASS_f(Entity entity, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, Any p9, BOOL p10) { FastCall<void>(0x26e5d8dbcfe83f60, entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	BOOL GET_IS_ENTITY_A_FRAG(Object object) { return Call<BOOL>(0x128e8ec660a0c2a0, object); }
	BOOL GET_IS_ENTITY_A_FRAG_f(Object object) { return FastCall<BOOL>(0x128e8ec660a0c2a0, object); }
	void SET_DISABLE_BREAKING(Object object, BOOL toggle) { Call<void>(0x3e4f65238bee2c77, object, toggle); }
	void SET_DISABLE_BREAKING_f(Object object, BOOL toggle) { FastCall<void>(0x3e4f65238bee2c77, object, toggle); }
	void RESET_DISABLE_BREAKING(Object object) { Call<void>(0x3cdba6aa07fe1f2a, object); }
	void RESET_DISABLE_BREAKING_f(Object object) { FastCall<void>(0x3cdba6aa07fe1f2a, object); }
	void SET_DISABLE_FRAG_DAMAGE(Object object, BOOL toggle) { Call<void>(0x19564673641173e8, object, toggle); }
	void SET_DISABLE_FRAG_DAMAGE_f(Object object, BOOL toggle) { FastCall<void>(0x19564673641173e8, object, toggle); }
	void SET_USE_KINEMATIC_PHYSICS(Entity entity, BOOL toggle) { Call<void>(0xe6b4a1831f52b8, entity, toggle); }
	void SET_USE_KINEMATIC_PHYSICS_f(Entity entity, BOOL toggle) { FastCall<void>(0xe6b4a1831f52b8, entity, toggle); }
	void SET_IN_STUNT_MODE(BOOL p0) { Call<void>(0x9062d4a4e7f01605, p0); }
	void SET_IN_STUNT_MODE_f(BOOL p0) { FastCall<void>(0x9062d4a4e7f01605, p0); }
	void SET_IN_ARENA_MODE(BOOL toggle) { Call<void>(0x906121d9f3be6218, toggle); }
	void SET_IN_ARENA_MODE_f(BOOL toggle) { FastCall<void>(0x906121d9f3be6218, toggle); }
}
namespace PLAYER
{
	Ped GET_PLAYER_PED(Player player) { return Call<Ped>(0xc23916e4ee5df3a, player); }
	Ped GET_PLAYER_PED_f(Player player) { return FastCall<Ped>(0xc23916e4ee5df3a, player); }
	Ped GET_PLAYER_PED_SCRIPT_INDEX(Player player) { return Call<Ped>(0xed8e3b902467ed23, player); }
	Ped GET_PLAYER_PED_SCRIPT_INDEX_f(Player player) { return FastCall<Ped>(0xed8e3b902467ed23, player); }
	void SET_PLAYER_MODEL(Player player, Hash model) { Call<void>(0x38a3fea4bf9bad08, player, model); }
	void SET_PLAYER_MODEL_f(Player player, Hash model) { FastCall<void>(0x38a3fea4bf9bad08, player, model); }
	void CHANGE_PLAYER_PED(Player player, Ped ped, BOOL p2, BOOL resetDamage) { Call<void>(0x7f5cedec43c53a80, player, ped, p2, resetDamage); }
	void CHANGE_PLAYER_PED_f(Player player, Ped ped, BOOL p2, BOOL resetDamage) { FastCall<void>(0x7f5cedec43c53a80, player, ped, p2, resetDamage); }
	void GET_PLAYER_RGB_COLOUR(Player player, int* r, int* g, int* b) { Call<void>(0xbd0fe6881e3080f3, player, r, g, b); }
	void GET_PLAYER_RGB_COLOUR_f(Player player, int* r, int* g, int* b) { FastCall<void>(0xbd0fe6881e3080f3, player, r, g, b); }
	int GET_NUMBER_OF_PLAYERS() { return Call<int>(0xd19d4e5e9ed96117); }
	int GET_NUMBER_OF_PLAYERS_f() { return FastCall<int>(0xd19d4e5e9ed96117); }
	int GET_PLAYER_TEAM(Player player) { return Call<int>(0x784e9c5b8dd7d972, player); }
	int GET_PLAYER_TEAM_f(Player player) { return FastCall<int>(0x784e9c5b8dd7d972, player); }
	void SET_PLAYER_TEAM(Player player, int team) { Call<void>(0xe0cb7bd3c420d47e, player, team); }
	void SET_PLAYER_TEAM_f(Player player, int team) { FastCall<void>(0xe0cb7bd3c420d47e, player, team); }
	int GET_NUMBER_OF_PLAYERS_IN_TEAM(int team) { return Call<int>(0x67b14d5822c0da0f, team); }
	int GET_NUMBER_OF_PLAYERS_IN_TEAM_f(int team) { return FastCall<int>(0x67b14d5822c0da0f, team); }
	const char* GET_PLAYER_NAME(Player player) { return Call<char*>(0x784e9c5b8dd511a0, player); }
	const char* GET_PLAYER_NAME_f(Player player) { return FastCall<char*>(0x784e9c5b8dd511a0, player); }
	float GET_WANTED_LEVEL_RADIUS(Player player) { return ToFloat(Call<_float>(0x79ce953585b27ad4, player)); }
	float GET_WANTED_LEVEL_RADIUS_f(Player player) { return ToFloat(FastCall<_float>(0x79ce953585b27ad4, player)); }
	Vector3* GET_PLAYER_WANTED_CENTRE_POSITION(Player player) { Call<Vector3*>(0xd98efd4acb882952, player); return GetVector(); }
	void SET_PLAYER_WANTED_CENTRE_POSITION(Player player, Vector3* position, BOOL p2, BOOL p3) { Call<void>(0x3cfb0b64b1a4f95e, player, position, p2, p3); }
	void SET_PLAYER_WANTED_CENTRE_POSITION_f(Player player, Vector3* position, BOOL p2, BOOL p3) { FastCall<void>(0x3cfb0b64b1a4f95e, player, position, p2, p3); }
	int GET_WANTED_LEVEL_THRESHOLD(int wantedLevel) { return Call<int>(0xcf45a12e5a389ac9, wantedLevel); }
	int GET_WANTED_LEVEL_THRESHOLD_f(int wantedLevel) { return FastCall<int>(0xcf45a12e5a389ac9, wantedLevel); }
	void SET_PLAYER_WANTED_LEVEL(Player player, int wantedLevel, BOOL disableNoMission) { Call<void>(0x1f88238b361c3ef5, player, wantedLevel, disableNoMission); }
	void SET_PLAYER_WANTED_LEVEL_f(Player player, int wantedLevel, BOOL disableNoMission) { FastCall<void>(0x1f88238b361c3ef5, player, wantedLevel, disableNoMission); }
	void SET_PLAYER_WANTED_LEVEL_NO_DROP(Player player, int wantedLevel, BOOL p2) { Call<void>(0xed0ce7d7095be763, player, wantedLevel, p2); }
	void SET_PLAYER_WANTED_LEVEL_NO_DROP_f(Player player, int wantedLevel, BOOL p2) { FastCall<void>(0xed0ce7d7095be763, player, wantedLevel, p2); }
	void SET_PLAYER_WANTED_LEVEL_NOW(Player player, BOOL p1) { Call<void>(0x1068608e3f761a6c, player, p1); }
	void SET_PLAYER_WANTED_LEVEL_NOW_f(Player player, BOOL p1) { FastCall<void>(0x1068608e3f761a6c, player, p1); }
	BOOL ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP(Player player) { return Call<BOOL>(0x94ac4495a5d6fe29, player); }
	BOOL ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP_f(Player player) { return FastCall<BOOL>(0x94ac4495a5d6fe29, player); }
	BOOL ARE_PLAYER_STARS_GREYED_OUT(Player player) { return Call<BOOL>(0x4802a93ab17fa27e, player); }
	BOOL ARE_PLAYER_STARS_GREYED_OUT_f(Player player) { return FastCall<BOOL>(0x4802a93ab17fa27e, player); }
	BOOL IS_WANTED_AND_HAS_BEEN_SEEN_BY_COPS(Player player) { return Call<BOOL>(0xacdff20f8f83819e, player); }
	BOOL IS_WANTED_AND_HAS_BEEN_SEEN_BY_COPS_f(Player player) { return FastCall<BOOL>(0xacdff20f8f83819e, player); }
	void SET_DISPATCH_COPS_FOR_PLAYER(Player player, BOOL toggle) { Call<void>(0x9598b627a83359f, player, toggle); }
	void SET_DISPATCH_COPS_FOR_PLAYER_f(Player player, BOOL toggle) { FastCall<void>(0x9598b627a83359f, player, toggle); }
	BOOL IS_PLAYER_WANTED_LEVEL_GREATER(Player player, int wantedLevel) { return Call<BOOL>(0x5d332351aca8f578, player, wantedLevel); }
	BOOL IS_PLAYER_WANTED_LEVEL_GREATER_f(Player player, int wantedLevel) { return FastCall<BOOL>(0x5d332351aca8f578, player, wantedLevel); }
	void CLEAR_PLAYER_WANTED_LEVEL(Player player) { Call<void>(0x9fa0b38d5d379960, player); }
	void CLEAR_PLAYER_WANTED_LEVEL_f(Player player) { FastCall<void>(0x9fa0b38d5d379960, player); }
	BOOL IS_PLAYER_DEAD(Player player) { return Call<BOOL>(0x4e9a4efc3aea3b6d, player); }
	BOOL IS_PLAYER_DEAD_f(Player player) { return FastCall<BOOL>(0x4e9a4efc3aea3b6d, player); }
	BOOL IS_PLAYER_PRESSING_HORN(Player player) { return Call<BOOL>(0x95129f59e0c8001a, player); }
	BOOL IS_PLAYER_PRESSING_HORN_f(Player player) { return FastCall<BOOL>(0x95129f59e0c8001a, player); }
	void SET_PLAYER_CONTROL(Player player, BOOL bHasControl, int flags) { Call<void>(0x9f9ee87136fa177c, player, bHasControl, flags); }
	void SET_PLAYER_CONTROL_f(Player player, BOOL bHasControl, int flags) { FastCall<void>(0x9f9ee87136fa177c, player, bHasControl, flags); }
	int GET_PLAYER_WANTED_LEVEL(Player player) { return Call<int>(0xba635cbbbbc90fe9, player); }
	int GET_PLAYER_WANTED_LEVEL_f(Player player) { return FastCall<int>(0xba635cbbbbc90fe9, player); }
	void SET_MAX_WANTED_LEVEL(int maxWantedLevel) { Call<void>(0x63838107fb49334c, maxWantedLevel); }
	void SET_MAX_WANTED_LEVEL_f(int maxWantedLevel) { FastCall<void>(0x63838107fb49334c, maxWantedLevel); }
	void SET_POLICE_RADAR_BLIPS(BOOL toggle) { Call<void>(0x558e79b691f67665, toggle); }
	void SET_POLICE_RADAR_BLIPS_f(BOOL toggle) { FastCall<void>(0x558e79b691f67665, toggle); }
	void SET_POLICE_IGNORE_PLAYER(Player player, BOOL toggle) { Call<void>(0xcbb1e1f25ee1606a, player, toggle); }
	void SET_POLICE_IGNORE_PLAYER_f(Player player, BOOL toggle) { FastCall<void>(0xcbb1e1f25ee1606a, player, toggle); }
	BOOL IS_PLAYER_PLAYING(Player player) { return Call<BOOL>(0x170d9a4e86a0cc65, player); }
	BOOL IS_PLAYER_PLAYING_f(Player player) { return FastCall<BOOL>(0x170d9a4e86a0cc65, player); }
	void SET_EVERYONE_IGNORE_PLAYER(Player player, BOOL toggle) { Call<void>(0xf2f24a5ad0e3cab7, player, toggle); }
	void SET_EVERYONE_IGNORE_PLAYER_f(Player player, BOOL toggle) { FastCall<void>(0xf2f24a5ad0e3cab7, player, toggle); }
	void SET_ALL_RANDOM_PEDS_FLEE(Player player, BOOL toggle) { Call<void>(0x47e45a08b06f5c60, player, toggle); }
	void SET_ALL_RANDOM_PEDS_FLEE_f(Player player, BOOL toggle) { FastCall<void>(0x47e45a08b06f5c60, player, toggle); }
	void SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME(Player player) { Call<void>(0xc9711ea7466be9ab, player); }
	void SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME_f(Player player) { FastCall<void>(0xc9711ea7466be9ab, player); }
	void SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE(Player player, BOOL toggle) { Call<void>(0xeaa0c07f670dacf8, player, toggle); }
	void SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE_f(Player player, BOOL toggle) { FastCall<void>(0xeaa0c07f670dacf8, player, toggle); }
	void SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE_THIS_FRAME(Player player) { Call<void>(0xdfd72512f635ca13, player); }
	void SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE_THIS_FRAME_f(Player player) { FastCall<void>(0xdfd72512f635ca13, player); }
	void SET_LAW_PEDS_CAN_ATTACK_NON_WANTED_PLAYER_THIS_FRAME(Player player) { Call<void>(0xfeeda72ac058f3d3, player); }
	void SET_LAW_PEDS_CAN_ATTACK_NON_WANTED_PLAYER_THIS_FRAME_f(Player player) { FastCall<void>(0xfeeda72ac058f3d3, player); }
	void SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS(Player player, BOOL toggle) { Call<void>(0x76b342ee37de4418, player, toggle); }
	void SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS_f(Player player, BOOL toggle) { FastCall<void>(0x76b342ee37de4418, player, toggle); }
	void SET_WANTED_LEVEL_MULTIPLIER(float multiplier) { Call<void>(0x3e2b69520fb45c0f, multiplier); }
	void SET_WANTED_LEVEL_MULTIPLIER_f(float multiplier) { FastCall<void>(0x3e2b69520fb45c0f, multiplier); }
	void SET_WANTED_LEVEL_DIFFICULTY(Player player, float difficulty) { Call<void>(0x3e2a876e3158d609, player, difficulty); }
	void SET_WANTED_LEVEL_DIFFICULTY_f(Player player, float difficulty) { FastCall<void>(0x3e2a876e3158d609, player, difficulty); }
	void RESET_WANTED_LEVEL_DIFFICULTY(Player player) { Call<void>(0xb117ddc3554703f6, player); }
	void RESET_WANTED_LEVEL_DIFFICULTY_f(Player player) { FastCall<void>(0xb117ddc3554703f6, player); }
	int GET_WANTED_LEVEL_TIME_TO_ESCAPE() { return Call<int>(0x85c08f48c435815); }
	int GET_WANTED_LEVEL_TIME_TO_ESCAPE_f() { return FastCall<int>(0x85c08f48c435815); }
	void SET_WANTED_LEVEL_HIDDEN_ESCAPE_TIME(Player player, int wantedLevel, int lossTime) { Call<void>(0xa8e6d25a03e5bd04, player, wantedLevel, lossTime); }
	void SET_WANTED_LEVEL_HIDDEN_ESCAPE_TIME_f(Player player, int wantedLevel, int lossTime) { FastCall<void>(0xa8e6d25a03e5bd04, player, wantedLevel, lossTime); }
	void RESET_WANTED_LEVEL_HIDDEN_ESCAPE_TIME(Player player) { Call<void>(0xf5ddd662a4b1adf1, player); }
	void RESET_WANTED_LEVEL_HIDDEN_ESCAPE_TIME_f(Player player) { FastCall<void>(0xf5ddd662a4b1adf1, player); }
	void START_FIRING_AMNESTY(int duration) { Call<void>(0xe48132e0736e2726, duration); }
	void START_FIRING_AMNESTY_f(int duration) { FastCall<void>(0xe48132e0736e2726, duration); }
	void REPORT_CRIME(Player player, int crimeType, int wantedLvlThresh) { Call<void>(0x1dbabec7f83b7e07, player, crimeType, wantedLvlThresh); }
	void REPORT_CRIME_f(Player player, int crimeType, int wantedLvlThresh) { FastCall<void>(0x1dbabec7f83b7e07, player, crimeType, wantedLvlThresh); }
	void SUPPRESS_CRIME_THIS_FRAME(Player player, int crimeType) { Call<void>(0xec999a9323d54e43, player, crimeType); }
	void SUPPRESS_CRIME_THIS_FRAME_f(Player player, int crimeType) { FastCall<void>(0xec999a9323d54e43, player, crimeType); }
	void UPDATE_WANTED_POSITION_THIS_FRAME(Player player) { Call<void>(0x56a8ddf5758918e8, player); }
	void UPDATE_WANTED_POSITION_THIS_FRAME_f(Player player) { FastCall<void>(0x56a8ddf5758918e8, player); }
	void SUPPRESS_LOSING_WANTED_LEVEL_IF_HIDDEN_THIS_FRAME(Player player) { Call<void>(0x8c164e8c635750e7, player); }
	void SUPPRESS_LOSING_WANTED_LEVEL_IF_HIDDEN_THIS_FRAME_f(Player player) { FastCall<void>(0x8c164e8c635750e7, player); }
	void ALLOW_EVASION_HUD_IF_DISABLING_HIDDEN_EVASION_THIS_FRAME(Player player, Any p1) { Call<void>(0x11e110bcbcf71e37, player, p1); }
	void ALLOW_EVASION_HUD_IF_DISABLING_HIDDEN_EVASION_THIS_FRAME_f(Player player, Any p1) { FastCall<void>(0x11e110bcbcf71e37, player, p1); }
	void FORCE_START_HIDDEN_EVASION(Player player) { Call<void>(0x95ab3a1f9b269561, player); }
	void FORCE_START_HIDDEN_EVASION_f(Player player) { FastCall<void>(0x95ab3a1f9b269561, player); }
	void SUPPRESS_WITNESSES_CALLING_POLICE_THIS_FRAME(Player player) { Call<void>(0x14776ec6f148d810, player); }
	void SUPPRESS_WITNESSES_CALLING_POLICE_THIS_FRAME_f(Player player) { FastCall<void>(0x14776ec6f148d810, player); }
	void REPORT_POLICE_SPOTTED_PLAYER(Player player) { Call<void>(0xb4c31359c7837a5, player); }
	void REPORT_POLICE_SPOTTED_PLAYER_f(Player player) { FastCall<void>(0xb4c31359c7837a5, player); }
	void SET_LAW_RESPONSE_DELAY_OVERRIDE(float p0) { Call<void>(0x7d4a62da952cc4ac, p0); }
	void SET_LAW_RESPONSE_DELAY_OVERRIDE_f(float p0) { FastCall<void>(0x7d4a62da952cc4ac, p0); }
	void RESET_LAW_RESPONSE_DELAY_OVERRIDE() { Call<void>(0x724c810299483419); }
	void RESET_LAW_RESPONSE_DELAY_OVERRIDE_f() { FastCall<void>(0x724c810299483419); }
	BOOL CAN_PLAYER_START_MISSION(Player player) { return Call<BOOL>(0xc7a18f58c594a6c0, player); }
	BOOL CAN_PLAYER_START_MISSION_f(Player player) { return FastCall<BOOL>(0xc7a18f58c594a6c0, player); }
	BOOL IS_PLAYER_READY_FOR_CUTSCENE(Player player) { return Call<BOOL>(0x7977c01b1c8286e5, player); }
	BOOL IS_PLAYER_READY_FOR_CUTSCENE_f(Player player) { return FastCall<BOOL>(0x7977c01b1c8286e5, player); }
	BOOL IS_PLAYER_TARGETTING_ENTITY(Player player, Entity entity) { return Call<BOOL>(0x4d8d18c8274357ba, player, entity); }
	BOOL IS_PLAYER_TARGETTING_ENTITY_f(Player player, Entity entity) { return FastCall<BOOL>(0x4d8d18c8274357ba, player, entity); }
	BOOL GET_PLAYER_TARGET_ENTITY(Player player, Entity* entity) { return Call<BOOL>(0x7147a2ee5046c2dc, player, entity); }
	BOOL GET_PLAYER_TARGET_ENTITY_f(Player player, Entity* entity) { return FastCall<BOOL>(0x7147a2ee5046c2dc, player, entity); }
	BOOL IS_PLAYER_FREE_AIMING(Player player) { return Call<BOOL>(0x46e6a0e209085a87, player); }
	BOOL IS_PLAYER_FREE_AIMING_f(Player player) { return FastCall<BOOL>(0x46e6a0e209085a87, player); }
	BOOL IS_PLAYER_FREE_AIMING_AT_ENTITY(Player player, Entity entity) { return Call<BOOL>(0x1b79a49ec89ed5b7, player, entity); }
	BOOL IS_PLAYER_FREE_AIMING_AT_ENTITY_f(Player player, Entity entity) { return FastCall<BOOL>(0x1b79a49ec89ed5b7, player, entity); }
	BOOL GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(Player player, Entity* entity) { return Call<BOOL>(0xd5a605ad26abaecc, player, entity); }
	BOOL GET_ENTITY_PLAYER_IS_FREE_AIMING_AT_f(Player player, Entity* entity) { return FastCall<BOOL>(0xd5a605ad26abaecc, player, entity); }
	void SET_PLAYER_LOCKON_RANGE_OVERRIDE(Player player, float range) { Call<void>(0x2491582df73f2142, player, range); }
	void SET_PLAYER_LOCKON_RANGE_OVERRIDE_f(Player player, float range) { FastCall<void>(0x2491582df73f2142, player, range); }
	void SET_PLAYER_CAN_DO_DRIVE_BY(Player player, BOOL toggle) { Call<void>(0xb959e53b7629c1b0, player, toggle); }
	void SET_PLAYER_CAN_DO_DRIVE_BY_f(Player player, BOOL toggle) { FastCall<void>(0xb959e53b7629c1b0, player, toggle); }
	void SET_PLAYER_CAN_BE_HASSLED_BY_GANGS(Player player, BOOL toggle) { Call<void>(0xf83b45785bbe55d1, player, toggle); }
	void SET_PLAYER_CAN_BE_HASSLED_BY_GANGS_f(Player player, BOOL toggle) { FastCall<void>(0xf83b45785bbe55d1, player, toggle); }
	void SET_PLAYER_CAN_USE_COVER(Player player, BOOL toggle) { Call<void>(0xf6de949085ba7bef, player, toggle); }
	void SET_PLAYER_CAN_USE_COVER_f(Player player, BOOL toggle) { FastCall<void>(0xf6de949085ba7bef, player, toggle); }
	int GET_MAX_WANTED_LEVEL() { return Call<int>(0x88aad3451fb326d8); }
	int GET_MAX_WANTED_LEVEL_f() { return FastCall<int>(0x88aad3451fb326d8); }
	BOOL IS_PLAYER_TARGETTING_ANYTHING(Player player) { return Call<BOOL>(0x1eaa0741cd653499, player); }
	BOOL IS_PLAYER_TARGETTING_ANYTHING_f(Player player) { return FastCall<BOOL>(0x1eaa0741cd653499, player); }
	void SET_PLAYER_SPRINT(Player player, BOOL toggle) { Call<void>(0xdbdbd5f33e2b8bfb, player, toggle); }
	void SET_PLAYER_SPRINT_f(Player player, BOOL toggle) { FastCall<void>(0xdbdbd5f33e2b8bfb, player, toggle); }
	void RESET_PLAYER_STAMINA(Player player) { Call<void>(0x53f6f6602dee8801, player); }
	void RESET_PLAYER_STAMINA_f(Player player) { FastCall<void>(0x53f6f6602dee8801, player); }
	void RESTORE_PLAYER_STAMINA(Player player, float p1) { Call<void>(0x549bfe8a6d68c8e2, player, p1); }
	void RESTORE_PLAYER_STAMINA_f(Player player, float p1) { FastCall<void>(0x549bfe8a6d68c8e2, player, p1); }
	float GET_PLAYER_SPRINT_STAMINA_REMAINING(Player player) { return ToFloat(Call<_float>(0x6358385e08a24f96, player)); }
	float GET_PLAYER_SPRINT_STAMINA_REMAINING_f(Player player) { return ToFloat(FastCall<_float>(0x6358385e08a24f96, player)); }
	float GET_PLAYER_SPRINT_TIME_REMAINING(Player player) { return ToFloat(Call<_float>(0x8ad57331ad82b534, player)); }
	float GET_PLAYER_SPRINT_TIME_REMAINING_f(Player player) { return ToFloat(FastCall<_float>(0x8ad57331ad82b534, player)); }
	float GET_PLAYER_UNDERWATER_TIME_REMAINING(Player player) { return ToFloat(Call<_float>(0xff99e6487f61a9ef, player)); }
	float GET_PLAYER_UNDERWATER_TIME_REMAINING_f(Player player) { return ToFloat(FastCall<_float>(0xff99e6487f61a9ef, player)); }
	float SET_PLAYER_UNDERWATER_BREATH_PERCENT_REMAINING(Player player, float time) { return ToFloat(Call<_float>(0x2e696ed7e1bc60dc, player, time)); }
	float SET_PLAYER_UNDERWATER_BREATH_PERCENT_REMAINING_f(Player player, float time) { return ToFloat(FastCall<_float>(0x2e696ed7e1bc60dc, player, time)); }
	int GET_PLAYER_GROUP(Player player) { return Call<int>(0x9184ef162c7241ea, player); }
	int GET_PLAYER_GROUP_f(Player player) { return FastCall<int>(0x9184ef162c7241ea, player); }
	int GET_PLAYER_MAX_ARMOUR(Player player) { return Call<int>(0xbd0f6a31c9419620, player); }
	int GET_PLAYER_MAX_ARMOUR_f(Player player) { return FastCall<int>(0xbd0f6a31c9419620, player); }
	BOOL IS_PLAYER_CONTROL_ON(Player player) { return Call<BOOL>(0xb7f6a22f74b9b46a, player); }
	BOOL IS_PLAYER_CONTROL_ON_f(Player player) { return FastCall<BOOL>(0xb7f6a22f74b9b46a, player); }
	BOOL GET_ARE_CAMERA_CONTROLS_DISABLED() { return Call<BOOL>(0x4d8a407bae71575f); }
	BOOL GET_ARE_CAMERA_CONTROLS_DISABLED_f() { return FastCall<BOOL>(0x4d8a407bae71575f); }
	BOOL IS_PLAYER_SCRIPT_CONTROL_ON(Player player) { return Call<BOOL>(0xd7c3042984f6fbac, player); }
	BOOL IS_PLAYER_SCRIPT_CONTROL_ON_f(Player player) { return FastCall<BOOL>(0xd7c3042984f6fbac, player); }
	BOOL IS_PLAYER_CLIMBING(Player player) { return Call<BOOL>(0xcaa5af2f1403e396, player); }
	BOOL IS_PLAYER_CLIMBING_f(Player player) { return FastCall<BOOL>(0xcaa5af2f1403e396, player); }
	BOOL IS_PLAYER_BEING_ARRESTED(Player player, BOOL atArresting) { return Call<BOOL>(0xf8709dd52b4cd24d, player, atArresting); }
	BOOL IS_PLAYER_BEING_ARRESTED_f(Player player, BOOL atArresting) { return FastCall<BOOL>(0xf8709dd52b4cd24d, player, atArresting); }
	void RESET_PLAYER_ARREST_STATE(Player player) { Call<void>(0x1bb54eefd22ca8c5, player); }
	void RESET_PLAYER_ARREST_STATE_f(Player player) { FastCall<void>(0x1bb54eefd22ca8c5, player); }
	Vehicle GET_PLAYERS_LAST_VEHICLE() { return Call<Vehicle>(0xadf66f928a3d559); }
	Vehicle GET_PLAYERS_LAST_VEHICLE_f() { return FastCall<Vehicle>(0xadf66f928a3d559); }
	Player GET_PLAYER_INDEX() { return Call<Player>(0x9184ef162c8c743d); }
	Player GET_PLAYER_INDEX_f() { return FastCall<Player>(0x9184ef162c8c743d); }
	Player INT_TO_PLAYERINDEX(int value) { return Call<Player>(0x7793993031d8a91d, value); }
	Player INT_TO_PLAYERINDEX_f(int value) { return FastCall<Player>(0x7793993031d8a91d, value); }
	int INT_TO_PARTICIPANTINDEX(int value) { return Call<int>(0x9f74f79074168a53, value); }
	int INT_TO_PARTICIPANTINDEX_f(int value) { return FastCall<int>(0x9f74f79074168a53, value); }
	int GET_TIME_SINCE_PLAYER_HIT_VEHICLE(Player player) { return Call<int>(0x8da6029ca3be6510, player); }
	int GET_TIME_SINCE_PLAYER_HIT_VEHICLE_f(Player player) { return FastCall<int>(0x8da6029ca3be6510, player); }
	int GET_TIME_SINCE_PLAYER_HIT_PED(Player player) { return Call<int>(0x648b4339cae20f3, player); }
	int GET_TIME_SINCE_PLAYER_HIT_PED_f(Player player) { return FastCall<int>(0x648b4339cae20f3, player); }
	int GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT(Player player) { return Call<int>(0x5c4c0bc1dd870d1f, player); }
	int GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT_f(Player player) { return FastCall<int>(0x5c4c0bc1dd870d1f, player); }
	int GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC(Player player) { return Call<int>(0xf3cb1c240aa531c0, player); }
	int GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC_f(Player player) { return FastCall<int>(0xf3cb1c240aa531c0, player); }
	BOOL IS_PLAYER_FREE_FOR_AMBIENT_TASK(Player player) { return Call<BOOL>(0x1f9dde60c4692c4c, player); }
	BOOL IS_PLAYER_FREE_FOR_AMBIENT_TASK_f(Player player) { return FastCall<BOOL>(0x1f9dde60c4692c4c, player); }
	Player PLAYER_ID() { return Call<Player>(0x400336836739); }
	Player PLAYER_ID_f() { return FastCall<Player>(0x400336836739); }
	Ped PLAYER_PED_ID() { return Call_PLAYER_PED_ID(); }
	int NETWORK_PLAYER_ID_TO_INT() { return Call<int>(0x4c3ec8430499ede2); }
	int NETWORK_PLAYER_ID_TO_INT_f() { return FastCall<int>(0x4c3ec8430499ede2); }
	BOOL HAS_FORCE_CLEANUP_OCCURRED(int cleanupFlags) { return Call<BOOL>(0x9c5d8b249686bed9, cleanupFlags); }
	BOOL HAS_FORCE_CLEANUP_OCCURRED_f(int cleanupFlags) { return FastCall<BOOL>(0x9c5d8b249686bed9, cleanupFlags); }
	void FORCE_CLEANUP(int cleanupFlags) { Call<void>(0x19fc5ded18fe2110, cleanupFlags); }
	void FORCE_CLEANUP_f(int cleanupFlags) { FastCall<void>(0x19fc5ded18fe2110, cleanupFlags); }
	void FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(char* name, int cleanupFlags) { Call<void>(0x1bdd029fa5c499ac, name, cleanupFlags); }
	void FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME_f(char* name, int cleanupFlags) { FastCall<void>(0x1bdd029fa5c499ac, name, cleanupFlags); }
	void FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID(int id, int cleanupFlags) { Call<void>(0xde5fda5d5a609133, id, cleanupFlags); }
	void FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID_f(int id, int cleanupFlags) { FastCall<void>(0xde5fda5d5a609133, id, cleanupFlags); }
	int GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP() { return Call<int>(0x76451e56129bc6df); }
	int GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP_f() { return FastCall<int>(0x76451e56129bc6df); }
	void SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE(Player player, Vehicle vehicle) { Call<void>(0x11ec976a7c29e7ca, player, vehicle); }
	void SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE_f(Player player, Vehicle vehicle) { FastCall<void>(0x11ec976a7c29e7ca, player, vehicle); }
	void SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE(Player player) { Call<void>(0xc03dfb6a4a69eb0b, player); }
	void SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE_f(Player player) { FastCall<void>(0xc03dfb6a4a69eb0b, player); }
	BOOL GIVE_ACHIEVEMENT_TO_PLAYER(int achievementId) { return Call<BOOL>(0x276e7e6a33d93947, achievementId); }
	BOOL GIVE_ACHIEVEMENT_TO_PLAYER_f(int achievementId) { return FastCall<BOOL>(0x276e7e6a33d93947, achievementId); }
	BOOL SET_ACHIEVEMENT_PROGRESS(int achievementId, int progress) { return Call<BOOL>(0x7486f3bc9ceab93a, achievementId, progress); }
	BOOL SET_ACHIEVEMENT_PROGRESS_f(int achievementId, int progress) { return FastCall<BOOL>(0x7486f3bc9ceab93a, achievementId, progress); }
	int GET_ACHIEVEMENT_PROGRESS(int achievementId) { return Call<int>(0x3512e09cccd806c6, achievementId); }
	int GET_ACHIEVEMENT_PROGRESS_f(int achievementId) { return FastCall<int>(0x3512e09cccd806c6, achievementId); }
	BOOL HAS_ACHIEVEMENT_BEEN_PASSED(int achievementId) { return Call<BOOL>(0x3883b89bd6b0fbee, achievementId); }
	BOOL HAS_ACHIEVEMENT_BEEN_PASSED_f(int achievementId) { return FastCall<BOOL>(0x3883b89bd6b0fbee, achievementId); }
	BOOL IS_PLAYER_ONLINE() { return Call<BOOL>(0x114280d93c92531c); }
	BOOL IS_PLAYER_ONLINE_f() { return FastCall<BOOL>(0x114280d93c92531c); }
	BOOL IS_PLAYER_LOGGING_IN_NP() { return Call<BOOL>(0x684f1ee8b82e3933); }
	BOOL IS_PLAYER_LOGGING_IN_NP_f() { return FastCall<BOOL>(0x684f1ee8b82e3933); }
	void DISPLAY_SYSTEM_SIGNIN_UI(BOOL p0) { Call<void>(0x182fc0f52eafd83e, p0); }
	void DISPLAY_SYSTEM_SIGNIN_UI_f(BOOL p0) { FastCall<void>(0x182fc0f52eafd83e, p0); }
	BOOL IS_SYSTEM_UI_BEING_DISPLAYED() { return Call<BOOL>(0x57fc7c9606352ab1); }
	BOOL IS_SYSTEM_UI_BEING_DISPLAYED_f() { return FastCall<BOOL>(0x57fc7c9606352ab1); }
	void SET_PLAYER_INVINCIBLE(Player player, BOOL toggle) { Call<void>(0x3d4c1e9ed08f2180, player, toggle); }
	void SET_PLAYER_INVINCIBLE_f(Player player, BOOL toggle) { FastCall<void>(0x3d4c1e9ed08f2180, player, toggle); }
	BOOL GET_PLAYER_INVINCIBLE(Player player) { return Call<BOOL>(0xbd0f140639639f74, player); }
	BOOL GET_PLAYER_INVINCIBLE_f(Player player) { return FastCall<BOOL>(0xbd0f140639639f74, player); }
	BOOL GET_PLAYER_DEBUG_INVINCIBLE(Player player) { return Call<BOOL>(0x2f7c245fc431f540, player); }
	BOOL GET_PLAYER_DEBUG_INVINCIBLE_f(Player player) { return FastCall<BOOL>(0x2f7c245fc431f540, player); }
	void SET_PLAYER_INVINCIBLE_BUT_HAS_REACTIONS(Player player, BOOL toggle) { Call<void>(0x4761155780c77d68, player, toggle); }
	void SET_PLAYER_INVINCIBLE_BUT_HAS_REACTIONS_f(Player player, BOOL toggle) { FastCall<void>(0x4761155780c77d68, player, toggle); }
	void SET_PLAYER_CAN_COLLECT_DROPPED_MONEY(Player player, BOOL p1) { Call<void>(0x446d183ff00381fc, player, p1); }
	void SET_PLAYER_CAN_COLLECT_DROPPED_MONEY_f(Player player, BOOL p1) { FastCall<void>(0x446d183ff00381fc, player, p1); }
	void REMOVE_PLAYER_HELMET(Player player, BOOL p2) { Call<void>(0xc7307c515f999f10, player, p2); }
	void REMOVE_PLAYER_HELMET_f(Player player, BOOL p2) { FastCall<void>(0xc7307c515f999f10, player, p2); }
	void GIVE_PLAYER_RAGDOLL_CONTROL(Player player, BOOL toggle) { Call<void>(0x3dd4024ea7c7dbd1, player, toggle); }
	void GIVE_PLAYER_RAGDOLL_CONTROL_f(Player player, BOOL toggle) { FastCall<void>(0x3dd4024ea7c7dbd1, player, toggle); }
	void SET_PLAYER_LOCKON(Player player, BOOL toggle) { Call<void>(0xdbdbd5f33224be2b, player, toggle); }
	void SET_PLAYER_LOCKON_f(Player player, BOOL toggle) { FastCall<void>(0xdbdbd5f33224be2b, player, toggle); }
	void SET_PLAYER_TARGETING_MODE(int targetMode) { Call<void>(0x66bb0b2ace3e4172, targetMode); }
	void SET_PLAYER_TARGETING_MODE_f(int targetMode) { FastCall<void>(0x66bb0b2ace3e4172, targetMode); }
	void SET_PLAYER_TARGET_LEVEL(int targetLevel) { Call<void>(0x1e79ab08b7172457, targetLevel); }
	void SET_PLAYER_TARGET_LEVEL_f(int targetLevel) { FastCall<void>(0x1e79ab08b7172457, targetLevel); }
	BOOL GET_IS_USING_FPS_THIRD_PERSON_COVER() { return Call<BOOL>(0xca83397ba28ad82); }
	BOOL GET_IS_USING_FPS_THIRD_PERSON_COVER_f() { return FastCall<BOOL>(0xca83397ba28ad82); }
	BOOL GET_IS_USING_HOOD_CAMERA() { return Call<BOOL>(0xeb1c468472789de1); }
	BOOL GET_IS_USING_HOOD_CAMERA_f() { return FastCall<BOOL>(0xeb1c468472789de1); }
	void CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED(Player player) { Call<void>(0x52010b437a39c66f, player); }
	void CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED_f(Player player) { FastCall<void>(0x52010b437a39c66f, player); }
	BOOL HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(Player player) { return Call<BOOL>(0xf595903e9c047697, player); }
	BOOL HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED_f(Player player) { return FastCall<BOOL>(0xf595903e9c047697, player); }
	void CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player) { Call<void>(0x9725d8541e822f7e, player); }
	void CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED_f(Player player) { FastCall<void>(0x9725d8541e822f7e, player); }
	BOOL HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player) { return Call<BOOL>(0x2abcb9422feb5656, player); }
	BOOL HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED_f(Player player) { return FastCall<BOOL>(0x2abcb9422feb5656, player); }
	void SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(Player player, float multiplier) { Call<void>(0x12a6654bb0a3724, player, multiplier); }
	void SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE_f(Player player, float multiplier) { FastCall<void>(0x12a6654bb0a3724, player, multiplier); }
	void SET_SWIM_MULTIPLIER_FOR_PLAYER(Player player, float multiplier) { Call<void>(0x7a31bdfb1a51281b, player, multiplier); }
	void SET_SWIM_MULTIPLIER_FOR_PLAYER_f(Player player, float multiplier) { FastCall<void>(0x7a31bdfb1a51281b, player, multiplier); }
	void SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER(Player player, float multiplier) { Call<void>(0xd5a555db6e8879c1, player, multiplier); }
	void SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER_f(Player player, float multiplier) { FastCall<void>(0xd5a555db6e8879c1, player, multiplier); }
	int GET_TIME_SINCE_LAST_ARREST() { return Call<int>(0x58ecc47cb8e265e0); }
	int GET_TIME_SINCE_LAST_ARREST_f() { return FastCall<int>(0x58ecc47cb8e265e0); }
	int GET_TIME_SINCE_LAST_DEATH() { return Call<int>(0xf25a37e2fdd8d899); }
	int GET_TIME_SINCE_LAST_DEATH_f() { return FastCall<int>(0xf25a37e2fdd8d899); }
	void ASSISTED_MOVEMENT_CLOSE_ROUTE() { Call<void>(0xd772f535614b6089); }
	void ASSISTED_MOVEMENT_CLOSE_ROUTE_f() { FastCall<void>(0xd772f535614b6089); }
	void ASSISTED_MOVEMENT_FLUSH_ROUTE() { Call<void>(0xd77bb6353846c495); }
	void ASSISTED_MOVEMENT_FLUSH_ROUTE_f() { FastCall<void>(0xd77bb6353846c495); }
	void SET_PLAYER_FORCED_AIM(Player player, BOOL toggle) { Call<void>(0x3d4bd7269bc99c20, player, toggle); }
	void SET_PLAYER_FORCED_AIM_f(Player player, BOOL toggle) { FastCall<void>(0x3d4bd7269bc99c20, player, toggle); }
	void SET_PLAYER_FORCED_ZOOM(Player player, BOOL toggle) { Call<void>(0x6c2f0dacdd755c38, player, toggle); }
	void SET_PLAYER_FORCED_ZOOM_f(Player player, BOOL toggle) { FastCall<void>(0x6c2f0dacdd755c38, player, toggle); }
	void SET_PLAYER_FORCE_SKIP_AIM_INTRO(Player player, BOOL toggle) { Call<void>(0x6f7d9fd39cf4a807, player, toggle); }
	void SET_PLAYER_FORCE_SKIP_AIM_INTRO_f(Player player, BOOL toggle) { FastCall<void>(0x6f7d9fd39cf4a807, player, toggle); }
	void DISABLE_PLAYER_FIRING(Player player, BOOL toggle) { Call<void>(0x17381399b083735a, player, toggle); }
	void DISABLE_PLAYER_FIRING_f(Player player, BOOL toggle) { FastCall<void>(0x17381399b083735a, player, toggle); }
	void DISABLE_PLAYER_THROW_GRENADE_WHILE_USING_GUN() { Call<void>(0xdb13a22e8be3c1c6); }
	void DISABLE_PLAYER_THROW_GRENADE_WHILE_USING_GUN_f() { FastCall<void>(0xdb13a22e8be3c1c6); }
	void SET_DISABLE_AMBIENT_MELEE_MOVE(Player player, BOOL toggle) { Call<void>(0xebb1e7ffd73d58f7, player, toggle); }
	void SET_DISABLE_AMBIENT_MELEE_MOVE_f(Player player, BOOL toggle) { FastCall<void>(0xebb1e7ffd73d58f7, player, toggle); }
	void SET_PLAYER_MAX_ARMOUR(Player player, int value) { Call<void>(0x3d4c74ca606d182c, player, value); }
	void SET_PLAYER_MAX_ARMOUR_f(Player player, int value) { FastCall<void>(0x3d4c74ca606d182c, player, value); }
	void SPECIAL_ABILITY_ACTIVATE(Player player, int p1) { Call<void>(0x9f7c428875277b6e, player, p1); }
	void SPECIAL_ABILITY_ACTIVATE_f(Player player, int p1) { FastCall<void>(0x9f7c428875277b6e, player, p1); }
	void SET_SPECIAL_ABILITY_MP(Player player, int p1, Any p2) { Call<void>(0x55930e42d5d437b, player, p1, p2); }
	void SET_SPECIAL_ABILITY_MP_f(Player player, int p1, Any p2) { FastCall<void>(0x55930e42d5d437b, player, p1, p2); }
	void SPECIAL_ABILITY_DEACTIVATE_MP(Player player, int p1) { Call<void>(0x57ffa6d8dd770bb3, player, p1); }
	void SPECIAL_ABILITY_DEACTIVATE_MP_f(Player player, int p1) { FastCall<void>(0x57ffa6d8dd770bb3, player, p1); }
	void SPECIAL_ABILITY_DEACTIVATE(Player player, Any p1) { Call<void>(0xb1760b75d887c02f, player, p1); }
	void SPECIAL_ABILITY_DEACTIVATE_f(Player player, Any p1) { FastCall<void>(0xb1760b75d887c02f, player, p1); }
	void SPECIAL_ABILITY_DEACTIVATE_FAST(Player player, Any p1) { Call<void>(0x56b154175bdf8e6c, player, p1); }
	void SPECIAL_ABILITY_DEACTIVATE_FAST_f(Player player, Any p1) { FastCall<void>(0x56b154175bdf8e6c, player, p1); }
	void SPECIAL_ABILITY_RESET(Player player, Any p1) { Call<void>(0xf566be950c777894, player, p1); }
	void SPECIAL_ABILITY_RESET_f(Player player, Any p1) { FastCall<void>(0xf566be950c777894, player, p1); }
	void SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED(Player player, Any p1) { Call<void>(0xd92d9501a346ec80, player, p1); }
	void SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED_f(Player player, Any p1) { FastCall<void>(0xd92d9501a346ec80, player, p1); }
	void SPECIAL_ABILITY_CHARGE_SMALL(Player player, BOOL p1, BOOL p2, Any p3) { Call<void>(0x2bcf882832e54097, player, p1, p2, p3); }
	void SPECIAL_ABILITY_CHARGE_SMALL_f(Player player, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x2bcf882832e54097, player, p1, p2, p3); }
	void SPECIAL_ABILITY_CHARGE_MEDIUM(Player player, BOOL p1, BOOL p2, Any p3) { Call<void>(0x4e217cde1f1655c5, player, p1, p2, p3); }
	void SPECIAL_ABILITY_CHARGE_MEDIUM_f(Player player, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x4e217cde1f1655c5, player, p1, p2, p3); }
	void SPECIAL_ABILITY_CHARGE_LARGE(Player player, BOOL p1, BOOL p2, Any p3) { Call<void>(0x2bcf8828327d66cb, player, p1, p2, p3); }
	void SPECIAL_ABILITY_CHARGE_LARGE_f(Player player, BOOL p1, BOOL p2, Any p3) { FastCall<void>(0x2bcf8828327d66cb, player, p1, p2, p3); }
	void SPECIAL_ABILITY_CHARGE_CONTINUOUS(Player player, Ped p1, Any p2) { Call<void>(0x353cab7ddcf5e95f, player, p1, p2); }
	void SPECIAL_ABILITY_CHARGE_CONTINUOUS_f(Player player, Ped p1, Any p2) { FastCall<void>(0x353cab7ddcf5e95f, player, p1, p2); }
	void SPECIAL_ABILITY_CHARGE_ABSOLUTE(Player player, int p1, BOOL p2, Any p3) { Call<void>(0x4bb5bd854f807bc7, player, p1, p2, p3); }
	void SPECIAL_ABILITY_CHARGE_ABSOLUTE_f(Player player, int p1, BOOL p2, Any p3) { FastCall<void>(0x4bb5bd854f807bc7, player, p1, p2, p3); }
	void SPECIAL_ABILITY_CHARGE_NORMALIZED(Player player, float normalizedValue, BOOL p2, Any p3) { Call<void>(0x353db4197b8e9947, player, normalizedValue, p2, p3); }
	void SPECIAL_ABILITY_CHARGE_NORMALIZED_f(Player player, float normalizedValue, BOOL p2, Any p3) { FastCall<void>(0x353db4197b8e9947, player, normalizedValue, p2, p3); }
	void SPECIAL_ABILITY_FILL_METER(Player player, BOOL p1, Any p2) { Call<void>(0xb1763ef077e79968, player, p1, p2); }
	void SPECIAL_ABILITY_FILL_METER_f(Player player, BOOL p1, Any p2) { FastCall<void>(0xb1763ef077e79968, player, p1, p2); }
	void SPECIAL_ABILITY_DEPLETE_METER(Player player, BOOL p1, Any p2) { Call<void>(0x582c219ba3a19028, player, p1, p2); }
	void SPECIAL_ABILITY_DEPLETE_METER_f(Player player, BOOL p1, Any p2) { FastCall<void>(0x582c219ba3a19028, player, p1, p2); }
	void SPECIAL_ABILITY_LOCK(Hash playerModel, Any p1) { Call<void>(0x41b8fde3c695e926, playerModel, p1); }
	void SPECIAL_ABILITY_LOCK_f(Hash playerModel, Any p1) { FastCall<void>(0x41b8fde3c695e926, playerModel, p1); }
	void SPECIAL_ABILITY_UNLOCK(Hash playerModel, Any p1) { Call<void>(0xb771140c8811ec7f, playerModel, p1); }
	void SPECIAL_ABILITY_UNLOCK_f(Hash playerModel, Any p1) { FastCall<void>(0xb771140c8811ec7f, playerModel, p1); }
	BOOL IS_SPECIAL_ABILITY_UNLOCKED(Hash playerModel) { return Call<BOOL>(0x9d16adffcac91ed3, playerModel); }
	BOOL IS_SPECIAL_ABILITY_UNLOCKED_f(Hash playerModel) { return FastCall<BOOL>(0x9d16adffcac91ed3, playerModel); }
	BOOL IS_SPECIAL_ABILITY_ACTIVE(Player player, Any p1) { return Call<BOOL>(0xb7f8d4c25408b2f6, player, p1); }
	BOOL IS_SPECIAL_ABILITY_ACTIVE_f(Player player, Any p1) { return FastCall<BOOL>(0xb7f8d4c25408b2f6, player, p1); }
	BOOL IS_SPECIAL_ABILITY_METER_FULL(Player player, Any p1) { return Call<BOOL>(0xb222660ead07a195, player, p1); }
	BOOL IS_SPECIAL_ABILITY_METER_FULL_f(Player player, Any p1) { return FastCall<BOOL>(0xb222660ead07a195, player, p1); }
	void ENABLE_SPECIAL_ABILITY(Player player, BOOL toggle, Any p2) { Call<void>(0x68b3d764b12014a8, player, toggle, p2); }
	void ENABLE_SPECIAL_ABILITY_f(Player player, BOOL toggle, Any p2) { FastCall<void>(0x68b3d764b12014a8, player, toggle, p2); }
	BOOL IS_SPECIAL_ABILITY_ENABLED(Player player, Any p1) { return Call<BOOL>(0x4721c389125cd531, player, p1); }
	BOOL IS_SPECIAL_ABILITY_ENABLED_f(Player player, Any p1) { return FastCall<BOOL>(0x4721c389125cd531, player, p1); }
	void SET_SPECIAL_ABILITY_MULTIPLIER(float multiplier) { Call<void>(0xae844f543f234b99, multiplier); }
	void SET_SPECIAL_ABILITY_MULTIPLIER_f(float multiplier) { FastCall<void>(0xae844f543f234b99, multiplier); }
	void UPDATE_SPECIAL_ABILITY_FROM_STAT(Player player, Any p1) { Call<void>(0x34d3d480bd2b26b8, player, p1); }
	void UPDATE_SPECIAL_ABILITY_FROM_STAT_f(Player player, Any p1) { FastCall<void>(0x34d3d480bd2b26b8, player, p1); }
	BOOL GET_IS_PLAYER_DRIVING_ON_HIGHWAY(Player player) { return Call<BOOL>(0x9466e5d70e1bbed7, player); }
	BOOL GET_IS_PLAYER_DRIVING_ON_HIGHWAY_f(Player player) { return FastCall<BOOL>(0x9466e5d70e1bbed7, player); }
	BOOL GET_IS_PLAYER_DRIVING_WRECKLESS(Player player, int p1) { return Call<BOOL>(0xe3c14781562fcec1, player, p1); }
	BOOL GET_IS_PLAYER_DRIVING_WRECKLESS_f(Player player, int p1) { return FastCall<BOOL>(0xe3c14781562fcec1, player, p1); }
	BOOL GET_IS_MOPPING_AREA_FREE_IN_FRONT_OF_PLAYER(Player player, float p1) { return Call<BOOL>(0xbe2fe9d0ba2767e5, player, p1); }
	BOOL GET_IS_MOPPING_AREA_FREE_IN_FRONT_OF_PLAYER_f(Player player, float p1) { return FastCall<BOOL>(0xbe2fe9d0ba2767e5, player, p1); }
	void START_PLAYER_TELEPORT(Player player, float x, float y, float z, float heading, BOOL p5, BOOL findCollisionLand, BOOL p7) { Call<void>(0x4704e323152014cc, player, x, y, z, heading, p5, findCollisionLand, p7); }
	void START_PLAYER_TELEPORT_f(Player player, float x, float y, float z, float heading, BOOL p5, BOOL findCollisionLand, BOOL p7) { FastCall<void>(0x4704e323152014cc, player, x, y, z, heading, p5, findCollisionLand, p7); }
	BOOL UPDATE_PLAYER_TELEPORT(Player player) { return Call<BOOL>(0xf02bb064eece8753, player); }
	BOOL UPDATE_PLAYER_TELEPORT_f(Player player) { return FastCall<BOOL>(0xf02bb064eece8753, player); }
	void STOP_PLAYER_TELEPORT() { Call<void>(0x22a3ff18cb2ec88c); }
	void STOP_PLAYER_TELEPORT_f() { FastCall<void>(0x22a3ff18cb2ec88c); }
	BOOL IS_PLAYER_TELEPORT_ACTIVE() { return Call<BOOL>(0xd015c70e5dc25bf1); }
	BOOL IS_PLAYER_TELEPORT_ACTIVE_f() { return FastCall<BOOL>(0xd015c70e5dc25bf1); }
	float GET_PLAYER_CURRENT_STEALTH_NOISE(Player player) { return ToFloat(Call<_float>(0x8bbbe64b9e248c3, player)); }
	float GET_PLAYER_CURRENT_STEALTH_NOISE_f(Player player) { return ToFloat(FastCall<_float>(0x8bbbe64b9e248c3, player)); }
	void SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(Player player, float regenRate) { Call<void>(0x99e658a63c900b57, player, regenRate); }
	void SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER_f(Player player, float regenRate) { FastCall<void>(0x99e658a63c900b57, player, regenRate); }
	float GET_PLAYER_HEALTH_RECHARGE_MAX_PERCENT(Player player) { return ToFloat(Call<_float>(0xb2c45f78798f75e0, player)); }
	float GET_PLAYER_HEALTH_RECHARGE_MAX_PERCENT_f(Player player) { return ToFloat(FastCall<_float>(0xb2c45f78798f75e0, player)); }
	void SET_PLAYER_HEALTH_RECHARGE_MAX_PERCENT(Player player, float limit) { Call<void>(0xa2e2e4c9096ecd54, player, limit); }
	void SET_PLAYER_HEALTH_RECHARGE_MAX_PERCENT_f(Player player, float limit) { FastCall<void>(0xa2e2e4c9096ecd54, player, limit); }
	void DISABLE_PLAYER_HEALTH_RECHARGE(Player player) { Call<void>(0x993d0e15f4c42323, player); }
	void DISABLE_PLAYER_HEALTH_RECHARGE_f(Player player) { FastCall<void>(0x993d0e15f4c42323, player); }
	void SET_PLAYER_FALL_DISTANCE_TO_TRIGGER_RAGDOLL_OVERRIDE(Player player, float p1) { Call<void>(0x1a1c82ecdf2ec5cc, player, p1); }
	void SET_PLAYER_FALL_DISTANCE_TO_TRIGGER_RAGDOLL_OVERRIDE_f(Player player, float p1) { FastCall<void>(0x1a1c82ecdf2ec5cc, player, p1); }
	void SET_PLAYER_WEAPON_DAMAGE_MODIFIER(Player player, float modifier) { Call<void>(0x47ec7c8359189965, player, modifier); }
	void SET_PLAYER_WEAPON_DAMAGE_MODIFIER_f(Player player, float modifier) { FastCall<void>(0x47ec7c8359189965, player, modifier); }
	void SET_PLAYER_WEAPON_DEFENSE_MODIFIER(Player player, float modifier) { Call<void>(0xc2c7231823de5e18, player, modifier); }
	void SET_PLAYER_WEAPON_DEFENSE_MODIFIER_f(Player player, float modifier) { FastCall<void>(0xc2c7231823de5e18, player, modifier); }
	void SET_PLAYER_WEAPON_MINIGUN_DEFENSE_MODIFIER(Player player, float modifier) { Call<void>(0xbd4390f64061f82e, player, modifier); }
	void SET_PLAYER_WEAPON_MINIGUN_DEFENSE_MODIFIER_f(Player player, float modifier) { FastCall<void>(0xbd4390f64061f82e, player, modifier); }
	void SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(Player player, float modifier, BOOL p2) { Call<void>(0x22d9b3e58535f7f0, player, modifier, p2); }
	void SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER_f(Player player, float modifier, BOOL p2) { FastCall<void>(0x22d9b3e58535f7f0, player, modifier, p2); }
	void SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER(Player player, float modifier) { Call<void>(0x4580d7fb7b6cd0ed, player, modifier); }
	void SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER_f(Player player, float modifier) { FastCall<void>(0x4580d7fb7b6cd0ed, player, modifier); }
	void SET_PLAYER_VEHICLE_DAMAGE_MODIFIER(Player player, float modifier) { Call<void>(0x3ebd1a049a9a32b3, player, modifier); }
	void SET_PLAYER_VEHICLE_DAMAGE_MODIFIER_f(Player player, float modifier) { FastCall<void>(0x3ebd1a049a9a32b3, player, modifier); }
	void SET_PLAYER_VEHICLE_DEFENSE_MODIFIER(Player player, float modifier) { Call<void>(0xa60a35bf128fee8a, player, modifier); }
	void SET_PLAYER_VEHICLE_DEFENSE_MODIFIER_f(Player player, float modifier) { FastCall<void>(0xa60a35bf128fee8a, player, modifier); }
	void SET_PLAYER_MAX_EXPLOSIVE_DAMAGE(Player player, float p1) { Call<void>(0x116d08f7f74602e5, player, p1); }
	void SET_PLAYER_MAX_EXPLOSIVE_DAMAGE_f(Player player, float p1) { FastCall<void>(0x116d08f7f74602e5, player, p1); }
	void SET_PLAYER_EXPLOSIVE_DAMAGE_MODIFIER(Player player, Any p1) { Call<void>(0xc669396805c7b5ac, player, p1); }
	void SET_PLAYER_EXPLOSIVE_DAMAGE_MODIFIER_f(Player player, Any p1) { FastCall<void>(0xc669396805c7b5ac, player, p1); }
	void SET_PLAYER_WEAPON_TAKEDOWN_DEFENSE_MODIFIER(Player player, float p1) { Call<void>(0xc3f5dda6f914fc2a, player, p1); }
	void SET_PLAYER_WEAPON_TAKEDOWN_DEFENSE_MODIFIER_f(Player player, float p1) { FastCall<void>(0xc3f5dda6f914fc2a, player, p1); }
	void SET_PLAYER_PARACHUTE_TINT_INDEX(Player player, int tintIndex) { Call<void>(0xcda25853506b3a6d, player, tintIndex); }
	void SET_PLAYER_PARACHUTE_TINT_INDEX_f(Player player, int tintIndex) { FastCall<void>(0xcda25853506b3a6d, player, tintIndex); }
	void GET_PLAYER_PARACHUTE_TINT_INDEX(Player player, int* tintIndex) { Call<void>(0x181ea2e65581d761, player, tintIndex); }
	void GET_PLAYER_PARACHUTE_TINT_INDEX_f(Player player, int* tintIndex) { FastCall<void>(0x181ea2e65581d761, player, tintIndex); }
	void SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int index) { Call<void>(0xf6cc7a8e2ec5c530, player, index); }
	void SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX_f(Player player, int index) { FastCall<void>(0xf6cc7a8e2ec5c530, player, index); }
	void GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int* index) { Call<void>(0xe31a55ccc2ba2e24, player, index); }
	void GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX_f(Player player, int* index) { FastCall<void>(0xe31a55ccc2ba2e24, player, index); }
	void SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int tintIndex) { Call<void>(0xeb1e466fc4833bb5, player, tintIndex); }
	void SET_PLAYER_PARACHUTE_PACK_TINT_INDEX_f(Player player, int tintIndex) { FastCall<void>(0xeb1e466fc4833bb5, player, tintIndex); }
	void GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int* tintIndex) { Call<void>(0xfa14e8e518c9741, player, tintIndex); }
	void GET_PLAYER_PARACHUTE_PACK_TINT_INDEX_f(Player player, int* tintIndex) { FastCall<void>(0xfa14e8e518c9741, player, tintIndex); }
	void SET_PLAYER_HAS_RESERVE_PARACHUTE(Player player) { Call<void>(0x63659bf825b39cb8, player); }
	void SET_PLAYER_HAS_RESERVE_PARACHUTE_f(Player player) { FastCall<void>(0x63659bf825b39cb8, player); }
	BOOL GET_PLAYER_HAS_RESERVE_PARACHUTE(Player player) { return Call<BOOL>(0x6872a3c5c3709e44, player); }
	BOOL GET_PLAYER_HAS_RESERVE_PARACHUTE_f(Player player) { return FastCall<BOOL>(0x6872a3c5c3709e44, player); }
	void SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(Player player, BOOL enabled) { Call<void>(0xe7e9b9b899009460, player, enabled); }
	void SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL_f(Player player, BOOL enabled) { FastCall<void>(0xe7e9b9b899009460, player, enabled); }
	void SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int r, int g, int b) { Call<void>(0xa33f86438b4a4fdb, player, r, g, b); }
	void SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR_f(Player player, int r, int g, int b) { FastCall<void>(0xa33f86438b4a4fdb, player, r, g, b); }
	void GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int* r, int* g, int* b) { Call<void>(0xb32100f2fb6af867, player, r, g, b); }
	void GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR_f(Player player, int* r, int* g, int* b) { FastCall<void>(0xb32100f2fb6af867, player, r, g, b); }
	void SET_PLAYER_PHONE_PALETTE_IDX(Player player, int flags) { Call<void>(0xb0e67817992488c7, player, flags); }
	void SET_PLAYER_PHONE_PALETTE_IDX_f(Player player, int flags) { FastCall<void>(0xb0e67817992488c7, player, flags); }
	void SET_PLAYER_NOISE_MULTIPLIER(Player player, float multiplier) { Call<void>(0x6407f6ef1538c0c7, player, multiplier); }
	void SET_PLAYER_NOISE_MULTIPLIER_f(Player player, float multiplier) { FastCall<void>(0x6407f6ef1538c0c7, player, multiplier); }
	void SET_PLAYER_SNEAKING_NOISE_MULTIPLIER(Player player, float multiplier) { Call<void>(0x76a725c4ffee2476, player, multiplier); }
	void SET_PLAYER_SNEAKING_NOISE_MULTIPLIER_f(Player player, float multiplier) { FastCall<void>(0x76a725c4ffee2476, player, multiplier); }
	BOOL CAN_PED_HEAR_PLAYER(Player player, Ped ped) { return Call<BOOL>(0x2c229bd302777c73, player, ped); }
	BOOL CAN_PED_HEAR_PLAYER_f(Player player, Ped ped) { return FastCall<BOOL>(0x2c229bd302777c73, player, ped); }
	void SIMULATE_PLAYER_INPUT_GAIT(Player player, float amount, int gaitType, float speed, BOOL p4, BOOL p5, Any p6) { Call<void>(0x75eeee7c347751bd, player, amount, gaitType, speed, p4, p5, p6); }
	void SIMULATE_PLAYER_INPUT_GAIT_f(Player player, float amount, int gaitType, float speed, BOOL p4, BOOL p5, Any p6) { FastCall<void>(0x75eeee7c347751bd, player, amount, gaitType, speed, p4, p5, p6); }
	void RESET_PLAYER_INPUT_GAIT(Player player) { Call<void>(0x10480dc3edc7f808, player); }
	void RESET_PLAYER_INPUT_GAIT_f(Player player) { FastCall<void>(0x10480dc3edc7f808, player); }
	void SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE(Player player, BOOL toggle) { Call<void>(0xd3954dd1b1182f09, player, toggle); }
	void SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE_f(Player player, BOOL toggle) { FastCall<void>(0xd3954dd1b1182f09, player, toggle); }
	void SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE(Player player, BOOL toggle) { Call<void>(0x55029b15f2837936, player, toggle); }
	void SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE_f(Player player, BOOL toggle) { FastCall<void>(0x55029b15f2837936, player, toggle); }
	void SET_PLAYER_STEALTH_PERCEPTION_MODIFIER(Player player, float value) { Call<void>(0x8795657a8b4b0394, player, value); }
	void SET_PLAYER_STEALTH_PERCEPTION_MODIFIER_f(Player player, float value) { FastCall<void>(0x8795657a8b4b0394, player, value); }
	BOOL IS_REMOTE_PLAYER_IN_NON_CLONED_VEHICLE(Player player) { return Call<BOOL>(0xaf8463e6451d6c86, player); }
	BOOL IS_REMOTE_PLAYER_IN_NON_CLONED_VEHICLE_f(Player player) { return FastCall<BOOL>(0xaf8463e6451d6c86, player); }
	void INCREASE_PLAYER_JUMP_SUPPRESSION_RANGE(Player player) { Call<void>(0xa9a45560c7231f01, player); }
	void INCREASE_PLAYER_JUMP_SUPPRESSION_RANGE_f(Player player) { FastCall<void>(0xa9a45560c7231f01, player); }
	void SET_PLAYER_SIMULATE_AIMING(Player player, BOOL toggle) { Call<void>(0xcd3061a4dcc36237, player, toggle); }
	void SET_PLAYER_SIMULATE_AIMING_f(Player player, BOOL toggle) { FastCall<void>(0xcd3061a4dcc36237, player, toggle); }
	void SET_PLAYER_CLOTH_PIN_FRAMES(Player player, int p1) { Call<void>(0xaddfa360a17362b6, player, p1); }
	void SET_PLAYER_CLOTH_PIN_FRAMES_f(Player player, int p1) { FastCall<void>(0xaddfa360a17362b6, player, p1); }
	void SET_PLAYER_CLOTH_PACKAGE_INDEX(int index) { Call<void>(0xd91156020ff29993, index); }
	void SET_PLAYER_CLOTH_PACKAGE_INDEX_f(int index) { FastCall<void>(0xd91156020ff29993, index); }
	void SET_PLAYER_CLOTH_LOCK_COUNTER(int value) { Call<void>(0xb32b9b838013414e, value); }
	void SET_PLAYER_CLOTH_LOCK_COUNTER_f(int value) { FastCall<void>(0xb32b9b838013414e, value); }
	void PLAYER_ATTACH_VIRTUAL_BOUND(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7) { Call<void>(0x4a756172ecf85d2e, p0, p1, p2, p3, p4, p5, p6, p7); }
	void PLAYER_ATTACH_VIRTUAL_BOUND_f(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7) { FastCall<void>(0x4a756172ecf85d2e, p0, p1, p2, p3, p4, p5, p6, p7); }
	void PLAYER_DETACH_VIRTUAL_BOUND() { Call<void>(0xe3b3545596e225fc); }
	void PLAYER_DETACH_VIRTUAL_BOUND_f() { FastCall<void>(0xe3b3545596e225fc); }
	BOOL HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE(Player player) { return Call<BOOL>(0x6bd1648f627bd206, player); }
	BOOL HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE_f(Player player) { return FastCall<BOOL>(0x6bd1648f627bd206, player); }
	BOOL IS_PLAYER_BATTLE_AWARE(Player player) { return Call<BOOL>(0x94545b205926ee00, player); }
	BOOL IS_PLAYER_BATTLE_AWARE_f(Player player) { return FastCall<BOOL>(0x94545b205926ee00, player); }
	BOOL GET_PLAYER_RECEIVED_BATTLE_EVENT_RECENTLY(Player player, int p1, BOOL p2) { return Call<BOOL>(0x6038dfa0ee5566ab, player, p1, p2); }
	BOOL GET_PLAYER_RECEIVED_BATTLE_EVENT_RECENTLY_f(Player player, int p1, BOOL p2) { return FastCall<BOOL>(0x6038dfa0ee5566ab, player, p1, p2); }
	void EXTEND_WORLD_BOUNDARY_FOR_PLAYER(float x, float y, float z) { Call<void>(0x11231eb7f9d1bd3a, x, y, z); }
	void EXTEND_WORLD_BOUNDARY_FOR_PLAYER_f(float x, float y, float z) { FastCall<void>(0x11231eb7f9d1bd3a, x, y, z); }
	void RESET_WORLD_BOUNDARY_FOR_PLAYER() { Call<void>(0x7404ebb11d540f0f); }
	void RESET_WORLD_BOUNDARY_FOR_PLAYER_f() { FastCall<void>(0x7404ebb11d540f0f); }
	BOOL IS_PLAYER_RIDING_TRAIN(Player player) { return Call<BOOL>(0x9a0e6b7b12774ae7, player); }
	BOOL IS_PLAYER_RIDING_TRAIN_f(Player player) { return FastCall<BOOL>(0x9a0e6b7b12774ae7, player); }
	BOOL HAS_PLAYER_LEFT_THE_WORLD(Player player) { return Call<BOOL>(0x7970dae3785b00e5, player); }
	BOOL HAS_PLAYER_LEFT_THE_WORLD_f(Player player) { return FastCall<BOOL>(0x7970dae3785b00e5, player); }
	void SET_PLAYER_LEAVE_PED_BEHIND(Player player, BOOL toggle) { Call<void>(0x7b0193231eff6dd3, player, toggle); }
	void SET_PLAYER_LEAVE_PED_BEHIND_f(Player player, BOOL toggle) { FastCall<void>(0x7b0193231eff6dd3, player, toggle); }
	void SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player, int p1, Any p2, Any p3, BOOL p4) { Call<void>(0xaf99fd83ff136197, player, p1, p2, p3, p4); }
	void SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE_f(Player player, int p1, Any p2, Any p3, BOOL p4) { FastCall<void>(0xaf99fd83ff136197, player, p1, p2, p3, p4); }
	void CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player) { Call<void>(0x3008b4cfff3a8602, player); }
	void CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE_f(Player player) { FastCall<void>(0x3008b4cfff3a8602, player); }
	void SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player, Hash model) { Call<void>(0x3267dae7a3a40c1, player, model); }
	void SET_PLAYER_PARACHUTE_MODEL_OVERRIDE_f(Player player, Hash model) { FastCall<void>(0x3267dae7a3a40c1, player, model); }
	void SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(Player player, Hash model) { Call<void>(0x69ad30463efbb204, player, model); }
	void SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE_f(Player player, Hash model) { FastCall<void>(0x69ad30463efbb204, player, model); }
	Hash GET_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player) { return Call<Hash>(0xca858e75a81143b5, player); }
	Hash GET_PLAYER_PARACHUTE_MODEL_OVERRIDE_f(Player player) { return FastCall<Hash>(0xca858e75a81143b5, player); }
	Hash GET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(Player player) { return Call<Hash>(0x790761777fea80f8, player); }
	Hash GET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE_f(Player player) { return FastCall<Hash>(0x790761777fea80f8, player); }
	void CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player) { Call<void>(0x40fc371d91e252ac, player); }
	void CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE_f(Player player) { FastCall<void>(0x40fc371d91e252ac, player); }
	void CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(Player player) { Call<void>(0x1a1763b9d4d4a8ef, player); }
	void CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE_f(Player player) { FastCall<void>(0x1a1763b9d4d4a8ef, player); }
	void SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player, Hash model) { Call<void>(0x68c61c334605e09, player, model); }
	void SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE_f(Player player, Hash model) { FastCall<void>(0x68c61c334605e09, player, model); }
	void CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player) { Call<void>(0x93f493f7391dc6fe, player); }
	void CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE_f(Player player) { FastCall<void>(0x93f493f7391dc6fe, player); }
	void DISABLE_PLAYER_VEHICLE_REWARDS(Player player) { Call<void>(0x5e6871d226a42aca, player); }
	void DISABLE_PLAYER_VEHICLE_REWARDS_f(Player player) { FastCall<void>(0x5e6871d226a42aca, player); }
	void SET_PLAYER_SPECTATED_VEHICLE_RADIO_OVERRIDE(BOOL p0) { Call<void>(0x2de66552e6ff8f18, p0); }
	void SET_PLAYER_SPECTATED_VEHICLE_RADIO_OVERRIDE_f(BOOL p0) { FastCall<void>(0x2de66552e6ff8f18, p0); }
	void SET_PLAYER_BLUETOOTH_STATE(Player player, BOOL state) { Call<void>(0x83a6cfc42adfd6bf, player, state); }
	void SET_PLAYER_BLUETOOTH_STATE_f(Player player, BOOL state) { FastCall<void>(0x83a6cfc42adfd6bf, player, state); }
	BOOL IS_PLAYER_BLUETOOTH_ENABLE(Player player) { return Call<BOOL>(0x6011c57606cee9dd, player); }
	BOOL IS_PLAYER_BLUETOOTH_ENABLE_f(Player player) { return FastCall<BOOL>(0x6011c57606cee9dd, player); }
	void DISABLE_CAMERA_VIEW_MODE_CYCLE(Player player) { Call<void>(0x9c2199ede82adb41, player); }
	void DISABLE_CAMERA_VIEW_MODE_CYCLE_f(Player player) { FastCall<void>(0x9c2199ede82adb41, player); }
	int GET_PLAYER_FAKE_WANTED_LEVEL(Player player) { return Call<int>(0xbccc16eb6708d89, player); }
	int GET_PLAYER_FAKE_WANTED_LEVEL_f(Player player) { return FastCall<int>(0xbccc16eb6708d89, player); }
	void SET_PLAYER_CAN_DAMAGE_PLAYER(Player player1, Player player2, BOOL toggle) { Call<void>(0xc5510523c173e6e1, player1, player2, toggle); }
	void SET_PLAYER_CAN_DAMAGE_PLAYER_f(Player player1, Player player2, BOOL toggle) { FastCall<void>(0xc5510523c173e6e1, player1, player2, toggle); }
	void SET_APPLY_WAYPOINT_OF_PLAYER(Player player, int hudColor) { Call<void>(0xb7a80031ad99a579, player, hudColor); }
	void SET_APPLY_WAYPOINT_OF_PLAYER_f(Player player, int hudColor) { FastCall<void>(0xb7a80031ad99a579, player, hudColor); }
	BOOL IS_PLAYER_VEHICLE_WEAPON_TOGGLED_TO_NON_HOMING(Any p0) { return Call<BOOL>(0xa2858807dbae2edc, p0); }
	BOOL IS_PLAYER_VEHICLE_WEAPON_TOGGLED_TO_NON_HOMING_f(Any p0) { return FastCall<BOOL>(0xa2858807dbae2edc, p0); }
	void SET_PLAYER_VEHICLE_WEAPON_TO_NON_HOMING(Any p0) { Call<void>(0xb29149782937f983, p0); }
	void SET_PLAYER_VEHICLE_WEAPON_TO_NON_HOMING_f(Any p0) { FastCall<void>(0xb29149782937f983, p0); }
	void SET_PLAYER_HOMING_DISABLED_FOR_ALL_VEHICLE_WEAPONS(Any p0, Any p1) { Call<void>(0x68cf48f1b76defaf, p0, p1); }
	void SET_PLAYER_HOMING_DISABLED_FOR_ALL_VEHICLE_WEAPONS_f(Any p0, Any p1) { FastCall<void>(0x68cf48f1b76defaf, p0, p1); }
	void ADD_PLAYER_TARGETABLE_ENTITY(Player player, Entity entity) { Call<void>(0x57e9a3aa5ebe7057, player, entity); }
	void ADD_PLAYER_TARGETABLE_ENTITY_f(Player player, Entity entity) { FastCall<void>(0x57e9a3aa5ebe7057, player, entity); }
	void REMOVE_PLAYER_TARGETABLE_ENTITY(Player player, Entity entity) { Call<void>(0x22f0432e1db79b4, player, entity); }
	void REMOVE_PLAYER_TARGETABLE_ENTITY_f(Player player, Entity entity) { FastCall<void>(0x22f0432e1db79b4, player, entity); }
	void SET_PLAYER_PREVIOUS_VARIATION_DATA(Player player, int p1, int p2, Any p3, Any p4, Any p5) { Call<void>(0x727ac040a9948cfd, player, p1, p2, p3, p4, p5); }
	void SET_PLAYER_PREVIOUS_VARIATION_DATA_f(Player player, int p1, int p2, Any p3, Any p4, Any p5) { FastCall<void>(0x727ac040a9948cfd, player, p1, p2, p3, p4, p5); }
	void REMOVE_SCRIPT_FIRE_POSITION() { Call<void>(0x1886177340482979); }
	void REMOVE_SCRIPT_FIRE_POSITION_f() { FastCall<void>(0x1886177340482979); }
	void SET_SCRIPT_FIRE_POSITION(float coordX, float coordY, float coordZ) { Call<void>(0x303e0c4586c7387b, coordX, coordY, coordZ); }
	void SET_SCRIPT_FIRE_POSITION_f(float coordX, float coordY, float coordZ) { FastCall<void>(0x303e0c4586c7387b, coordX, coordY, coordZ); }
}
namespace RECORDING
{
	void REPLAY_START_EVENT(int p0) { Call<void>(0x388982345a61e7e5, p0); }
	void REPLAY_START_EVENT_f(int p0) { FastCall<void>(0x388982345a61e7e5, p0); }
	void REPLAY_STOP_EVENT() { Call<void>(0x43e367a558ccc755); }
	void REPLAY_STOP_EVENT_f() { FastCall<void>(0x43e367a558ccc755); }
	void REPLAY_CANCEL_EVENT() { Call<void>(0xd2cc4f6a49adb9cd); }
	void REPLAY_CANCEL_EVENT_f() { FastCall<void>(0xd2cc4f6a49adb9cd); }
	void REPLAY_RECORD_BACK_FOR_TIME(float p0, float p1, int p2) { Call<void>(0xa479037e7732b2e5, p0, p1, p2); }
	void REPLAY_RECORD_BACK_FOR_TIME_f(float p0, float p1, int p2) { FastCall<void>(0xa479037e7732b2e5, p0, p1, p2); }
	void REPLAY_CHECK_FOR_EVENT_THIS_FRAME(char* missionNameLabel, Any p1) { Call<void>(0x2a81c2359cc00276, missionNameLabel, p1); }
	void REPLAY_CHECK_FOR_EVENT_THIS_FRAME_f(char* missionNameLabel, Any p1) { FastCall<void>(0x2a81c2359cc00276, missionNameLabel, p1); }
	void REPLAY_PREVENT_RECORDING_THIS_FRAME() { Call<void>(0xb092fc54bec2e119); }
	void REPLAY_PREVENT_RECORDING_THIS_FRAME_f() { FastCall<void>(0xb092fc54bec2e119); }
	void REPLAY_RESET_EVENT_INFO() { Call<void>(0x994c1dff555d15bb); }
	void REPLAY_RESET_EVENT_INFO_f() { FastCall<void>(0x994c1dff555d15bb); }
	void REPLAY_DISABLE_CAMERA_MOVEMENT_THIS_FRAME() { Call<void>(0x999901241c9511); }
	void REPLAY_DISABLE_CAMERA_MOVEMENT_THIS_FRAME_f() { FastCall<void>(0x999901241c9511); }
	void RECORD_GREATEST_MOMENT(int p0, int p1, int p2) { Call<void>(0xa945b70832860d38, p0, p1, p2); }
	void RECORD_GREATEST_MOMENT_f(int p0, int p1, int p2) { FastCall<void>(0xa945b70832860d38, p0, p1, p2); }
	void START_REPLAY_RECORDING(int mode) { Call<void>(0xc3fba4b3fc5eb1d6, mode); }
	void START_REPLAY_RECORDING_f(int mode) { FastCall<void>(0xc3fba4b3fc5eb1d6, mode); }
	void STOP_REPLAY_RECORDING() { Call<void>(0x5c40077508267616); }
	void STOP_REPLAY_RECORDING_f() { FastCall<void>(0x5c40077508267616); }
	void CANCEL_REPLAY_RECORDING() { Call<void>(0xd0b2390ddf6a929e); }
	void CANCEL_REPLAY_RECORDING_f() { FastCall<void>(0xd0b2390ddf6a929e); }
	BOOL SAVE_REPLAY_RECORDING() { return Call<BOOL>(0xd0dcf992048781fb); }
	BOOL SAVE_REPLAY_RECORDING_f() { return FastCall<BOOL>(0xd0dcf992048781fb); }
	BOOL IS_REPLAY_RECORDING() { return Call<BOOL>(0xb474672b6d2be1ee); }
	BOOL IS_REPLAY_RECORDING_f() { return FastCall<BOOL>(0xb474672b6d2be1ee); }
	BOOL IS_REPLAY_INITIALIZED() { return Call<BOOL>(0x68ddf22ecc37fb91); }
	BOOL IS_REPLAY_INITIALIZED_f() { return FastCall<BOOL>(0x68ddf22ecc37fb91); }
	BOOL IS_REPLAY_AVAILABLE() { return Call<BOOL>(0xb4745a680634eec6); }
	BOOL IS_REPLAY_AVAILABLE_f() { return FastCall<BOOL>(0xb4745a680634eec6); }
	BOOL IS_REPLAY_RECORD_SPACE_AVAILABLE(BOOL p0) { return Call<BOOL>(0xb6aaace365bb1da5, p0); }
	BOOL IS_REPLAY_RECORD_SPACE_AVAILABLE_f(BOOL p0) { return FastCall<BOOL>(0xb6aaace365bb1da5, p0); }
}
namespace REPLAY
{
	void REGISTER_EFFECT_FOR_REPLAY_EDITOR(char* p0, BOOL p1) { Call<void>(0x190b31979cd7d29d, p0, p1); }
	void REGISTER_EFFECT_FOR_REPLAY_EDITOR_f(char* p0, BOOL p1) { FastCall<void>(0x190b31979cd7d29d, p0, p1); }
	BOOL REPLAY_SYSTEM_HAS_REQUESTED_A_SCRIPT_CLEANUP() { return Call<BOOL>(0xc6d73deee09d963c); }
	BOOL REPLAY_SYSTEM_HAS_REQUESTED_A_SCRIPT_CLEANUP_f() { return FastCall<BOOL>(0xc6d73deee09d963c); }
	void SET_SCRIPTS_HAVE_CLEANED_UP_FOR_REPLAY_SYSTEM() { Call<void>(0xd5aac6e929dfa147); }
	void SET_SCRIPTS_HAVE_CLEANED_UP_FOR_REPLAY_SYSTEM_f() { FastCall<void>(0xd5aac6e929dfa147); }
	void SET_REPLAY_SYSTEM_PAUSED_FOR_SAVE(BOOL p0) { Call<void>(0x25fd9cdbe94f394f, p0); }
	void SET_REPLAY_SYSTEM_PAUSED_FOR_SAVE_f(BOOL p0) { FastCall<void>(0x25fd9cdbe94f394f, p0); }
	void REPLAY_CONTROL_SHUTDOWN() { Call<void>(0x243ded822979dc70); }
	void REPLAY_CONTROL_SHUTDOWN_f() { FastCall<void>(0x243ded822979dc70); }
	void ACTIVATE_ROCKSTAR_EDITOR(int p0) { Call<void>(0xc9dc645ebc26f029, p0); }
	void ACTIVATE_ROCKSTAR_EDITOR_f(int p0) { FastCall<void>(0xc9dc645ebc26f029, p0); }
}
namespace SAVEMIGRATION
{
	BOOL SAVEMIGRATION_IS_MP_ENABLED() { return Call<BOOL>(0x9548964e2fe139cc); }
	BOOL SAVEMIGRATION_IS_MP_ENABLED_f() { return FastCall<BOOL>(0x9548964e2fe139cc); }
	BOOL SAVEMIGRATION_MP_REQUEST_ACCOUNTS() { return Call<BOOL>(0x7365026e73b78064); }
	BOOL SAVEMIGRATION_MP_REQUEST_ACCOUNTS_f() { return FastCall<BOOL>(0x7365026e73b78064); }
	int SAVEMIGRATION_MP_GET_ACCOUNTS_STATUS() { return Call<int>(0xb73f9727de2187f4); }
	int SAVEMIGRATION_MP_GET_ACCOUNTS_STATUS_f() { return FastCall<int>(0xb73f9727de2187f4); }
	int SAVEMIGRATION_MP_NUM_ACCOUNTS() { return Call<int>(0x9022162675847c4d); }
	int SAVEMIGRATION_MP_NUM_ACCOUNTS_f() { return FastCall<int>(0x9022162675847c4d); }
	BOOL SAVEMIGRATION_MP_GET_ACCOUNT(int p0, Any* p1) { return Call<BOOL>(0x3e5ed8f10d663096, p0, p1); }
	BOOL SAVEMIGRATION_MP_GET_ACCOUNT_f(int p0, Any* p1) { return FastCall<BOOL>(0x3e5ed8f10d663096, p0, p1); }
	BOOL SAVEMIGRATION_MP_REQUEST_STATUS() { return Call<BOOL>(0xadce4a535a1b9ff0); }
	BOOL SAVEMIGRATION_MP_REQUEST_STATUS_f() { return FastCall<BOOL>(0xadce4a535a1b9ff0); }
	int SAVEMIGRATION_MP_GET_STATUS() { return Call<int>(0xbff28b20ac77b449); }
	int SAVEMIGRATION_MP_GET_STATUS_f() { return FastCall<int>(0xbff28b20ac77b449); }
}
namespace SCRIPT
{
	void REQUEST_SCRIPT(const char* scriptName) { Call<void>(0x9a70b097b446f89b, scriptName); }
	void REQUEST_SCRIPT_f(const char* scriptName) { FastCall<void>(0x9a70b097b446f89b, scriptName); }
	void SET_SCRIPT_AS_NO_LONGER_NEEDED(const char* scriptName) { Call<void>(0xb6e3338ab4d367a3, scriptName); }
	void SET_SCRIPT_AS_NO_LONGER_NEEDED_f(const char* scriptName) { FastCall<void>(0xb6e3338ab4d367a3, scriptName); }
	BOOL HAS_SCRIPT_LOADED(const char* scriptName) { return Call<BOOL>(0x2c3866052e4a7cf4, scriptName); }
	BOOL HAS_SCRIPT_LOADED_f(const char* scriptName) { return FastCall<BOOL>(0x2c3866052e4a7cf4, scriptName); }
	BOOL DOES_SCRIPT_EXIST(char* scriptName) { return Call<BOOL>(0x5cae3f8f74467269, scriptName); }
	BOOL DOES_SCRIPT_EXIST_f(char* scriptName) { return FastCall<BOOL>(0x5cae3f8f74467269, scriptName); }
	void REQUEST_SCRIPT_WITH_NAME_HASH(Hash scriptHash) { Call<void>(0xa8fb8fb876a28e2d, scriptHash); }
	void REQUEST_SCRIPT_WITH_NAME_HASH_f(Hash scriptHash) { FastCall<void>(0xa8fb8fb876a28e2d, scriptHash); }
	void SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED(Hash scriptHash) { Call<void>(0xacf9eb8f507097fb, scriptHash); }
	void SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED_f(Hash scriptHash) { FastCall<void>(0xacf9eb8f507097fb, scriptHash); }
	BOOL HAS_SCRIPT_WITH_NAME_HASH_LOADED(Hash scriptHash) { return Call<BOOL>(0xa910042c8b5a7e2c, scriptHash); }
	BOOL HAS_SCRIPT_WITH_NAME_HASH_LOADED_f(Hash scriptHash) { return FastCall<BOOL>(0xa910042c8b5a7e2c, scriptHash); }
	BOOL DOES_SCRIPT_WITH_NAME_HASH_EXIST(Hash scriptHash) { return Call<BOOL>(0xd139e9ad736cd74f, scriptHash); }
	BOOL DOES_SCRIPT_WITH_NAME_HASH_EXIST_f(Hash scriptHash) { return FastCall<BOOL>(0xd139e9ad736cd74f, scriptHash); }
	void TERMINATE_THREAD(int threadId) { Call<void>(0xd9a3f28cc379d5c8, threadId); }
	void TERMINATE_THREAD_f(int threadId) { FastCall<void>(0xd9a3f28cc379d5c8, threadId); }
	BOOL IS_THREAD_ACTIVE(int threadId) { return Call<BOOL>(0x3bc266158d6d7886, threadId); }
	BOOL IS_THREAD_ACTIVE_f(int threadId) { return FastCall<BOOL>(0x3bc266158d6d7886, threadId); }
	const char* GET_NAME_OF_SCRIPT_WITH_THIS_ID(int threadId) { return Call<char*>(0x1ec98b6d49baf31a, threadId); }
	const char* GET_NAME_OF_SCRIPT_WITH_THIS_ID_f(int threadId) { return FastCall<char*>(0x1ec98b6d49baf31a, threadId); }
	void SCRIPT_THREAD_ITERATOR_RESET() { Call<void>(0xb9cae1e071f587f); }
	void SCRIPT_THREAD_ITERATOR_RESET_f() { FastCall<void>(0xb9cae1e071f587f); }
	int SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID() { return Call<int>(0xcf0a7d3e0ba1d7fd); }
	int SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID_f() { return FastCall<int>(0xcf0a7d3e0ba1d7fd); }
	int GET_ID_OF_THIS_THREAD() { return Call<int>(0x57870fba1efe8f3e); }
	int GET_ID_OF_THIS_THREAD_f() { return FastCall<int>(0x57870fba1efe8f3e); }
	void TERMINATE_THIS_THREAD() { Call<void>(0x99374f4117fa7dcd); }
	void TERMINATE_THIS_THREAD_f() { FastCall<void>(0x99374f4117fa7dcd); }
	int GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Hash scriptHash) { return Call<int>(0x36e21a49312616cb, scriptHash); }
	int GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH_f(Hash scriptHash) { return FastCall<int>(0x36e21a49312616cb, scriptHash); }
	char* GET_THIS_SCRIPT_NAME() { Call<char*>(0xcc084d716c17b747); }
	char* GET_THIS_SCRIPT_NAME_f() { FastCall<char*>(0xcc084d716c17b747); }
	Hash GET_HASH_OF_THIS_SCRIPT_NAME() { return Call<Hash>(0xe802453e316852fe); }
	Hash GET_HASH_OF_THIS_SCRIPT_NAME_f() { return FastCall<Hash>(0xe802453e316852fe); }
	int GET_NUMBER_OF_EVENTS(int eventGroup) { return Call<int>(0x721dd93cc99ebcf4, eventGroup); }
	int GET_NUMBER_OF_EVENTS_f(int eventGroup) { return FastCall<int>(0x721dd93cc99ebcf4, eventGroup); }
	BOOL GET_EVENT_EXISTS(int eventGroup, int eventIndex) { return Call<BOOL>(0x8dc16ff9b5644c2a, eventGroup, eventIndex); }
	BOOL GET_EVENT_EXISTS_f(int eventGroup, int eventIndex) { return FastCall<BOOL>(0x8dc16ff9b5644c2a, eventGroup, eventIndex); }
	int GET_EVENT_AT_INDEX(int eventGroup, int eventIndex) { return Call<int>(0x232558479f5f11f4, eventGroup, eventIndex); }
	int GET_EVENT_AT_INDEX_f(int eventGroup, int eventIndex) { return FastCall<int>(0x232558479f5f11f4, eventGroup, eventIndex); }
	BOOL GET_EVENT_DATA(int eventGroup, int eventIndex, Any* eventData, int eventDataSize) { return Call<BOOL>(0xc2290c40e4de6f8, eventGroup, eventIndex, eventData, eventDataSize); }
	BOOL GET_EVENT_DATA_f(int eventGroup, int eventIndex, Any* eventData, int eventDataSize) { return FastCall<BOOL>(0xc2290c40e4de6f8, eventGroup, eventIndex, eventData, eventDataSize); }
	void TRIGGER_SCRIPT_EVENT(int eventGroup, Any* eventData, int eventDataSize, int playerBits) { Call<void>(0x5e840c8f671d7d4d, eventGroup, eventData, eventDataSize, playerBits); }
	void TRIGGER_SCRIPT_EVENT_f(int eventGroup, Any* eventData, int eventDataSize, int playerBits) { FastCall<void>(0x5e840c8f671d7d4d, eventGroup, eventData, eventDataSize, playerBits); }
	void SHUTDOWN_LOADING_SCREEN() { Call<void>(0x9394eebcdbbccdf8); }
	void SHUTDOWN_LOADING_SCREEN_f() { FastCall<void>(0x9394eebcdbbccdf8); }
	void SET_NO_LOADING_SCREEN(BOOL toggle) { Call<void>(0x3ea54cee7bbb7470, toggle); }
	void SET_NO_LOADING_SCREEN_f(BOOL toggle) { FastCall<void>(0x3ea54cee7bbb7470, toggle); }
	BOOL GET_NO_LOADING_SCREEN() { return Call<BOOL>(0xbe684255e48ff264); }
	BOOL GET_NO_LOADING_SCREEN_f() { return FastCall<BOOL>(0xbe684255e48ff264); }
	void COMMIT_TO_LOADINGSCREEN_SELCTION() { Call<void>(0xcd4c6b54c81ebcf0); }
	void COMMIT_TO_LOADINGSCREEN_SELCTION_f() { FastCall<void>(0xcd4c6b54c81ebcf0); }
	BOOL BG_IS_EXITFLAG_SET() { return Call<BOOL>(0xe09f9b813ec3cd08); }
	BOOL BG_IS_EXITFLAG_SET_f() { return FastCall<BOOL>(0xe09f9b813ec3cd08); }
	void BG_SET_EXITFLAG_RESPONSE() { Call<void>(0x15282d829d115c1f); }
	void BG_SET_EXITFLAG_RESPONSE_f() { FastCall<void>(0x15282d829d115c1f); }
	void BG_START_CONTEXT_HASH(Hash contextHash) { Call<void>(0x984acd1a7ebb70d5, contextHash); }
	void BG_START_CONTEXT_HASH_f(Hash contextHash) { FastCall<void>(0x984acd1a7ebb70d5, contextHash); }
	void BG_END_CONTEXT_HASH(Hash contextHash) { Call<void>(0x27b0b9c1f68fc37c, contextHash); }
	void BG_END_CONTEXT_HASH_f(Hash contextHash) { FastCall<void>(0x27b0b9c1f68fc37c, contextHash); }
	void BG_START_CONTEXT(char* contextName) { Call<void>(0x6ae5684d63a75018, contextName); }
	void BG_START_CONTEXT_f(char* contextName) { FastCall<void>(0x6ae5684d63a75018, contextName); }
	void BG_END_CONTEXT(char* contextName) { Call<void>(0x8746892c1eb5b111, contextName); }
	void BG_END_CONTEXT_f(char* contextName) { FastCall<void>(0x8746892c1eb5b111, contextName); }
	BOOL BG_DOES_LAUNCH_PARAM_EXIST(int scriptIndex, char* p1) { return Call<BOOL>(0x90af44d8d671bf85, scriptIndex, p1); }
	BOOL BG_DOES_LAUNCH_PARAM_EXIST_f(int scriptIndex, char* p1) { return FastCall<BOOL>(0x90af44d8d671bf85, scriptIndex, p1); }
	int BG_GET_LAUNCH_PARAM_VALUE(int scriptIndex, char* p1) { return Call<int>(0x8d5a4112aee7bd56, scriptIndex, p1); }
	int BG_GET_LAUNCH_PARAM_VALUE_f(int scriptIndex, char* p1) { return FastCall<int>(0x8d5a4112aee7bd56, scriptIndex, p1); }
	int BG_GET_SCRIPT_ID_FROM_NAME_HASH(Hash p0) { return Call<int>(0xc7e79dd49aa027c0, p0); }
	int BG_GET_SCRIPT_ID_FROM_NAME_HASH_f(Hash p0) { return FastCall<int>(0xc7e79dd49aa027c0, p0); }
	void _SEND_TU_SCRIPT_EVENT_NEW(int eventGroup, Any* eventData, int eventDataSize, int playerBits, Hash eventType) { Call<void>(0xd197ca6d5095e5ed, eventGroup, eventData, eventDataSize, playerBits, eventType); }
	void _SEND_TU_SCRIPT_EVENT_NEW_f(int eventGroup, Any* eventData, int eventDataSize, int playerBits, Hash eventType) { FastCall<void>(0xd197ca6d5095e5ed, eventGroup, eventData, eventDataSize, playerBits, eventType); }
}
namespace SECURITY
{
	void REGISTER_SCRIPT_VARIABLE(Any* variable) { Call<void>(0x1423ecfd2ac031d4, variable); }
	void REGISTER_SCRIPT_VARIABLE_f(Any* variable) { FastCall<void>(0x1423ecfd2ac031d4, variable); }
	void UNREGISTER_SCRIPT_VARIABLE(Any* variable) { Call<void>(0x58087f050ea0416d, variable); }
	void UNREGISTER_SCRIPT_VARIABLE_f(Any* variable) { FastCall<void>(0x58087f050ea0416d, variable); }
	void FORCE_CHECK_SCRIPT_VARIABLES() { Call<void>(0xc6bca7c6445e454e); }
	void FORCE_CHECK_SCRIPT_VARIABLES_f() { FastCall<void>(0xc6bca7c6445e454e); }
}
namespace SHAPETEST
{
	int START_SHAPE_TEST_LOS_PROBE(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8) { return Call<int>(0x2cd679c105954eaf, x1, y1, z1, x2, y2, z2, flags, entity, p8); }
	int START_SHAPE_TEST_LOS_PROBE_f(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8) { return FastCall<int>(0x2cd679c105954eaf, x1, y1, z1, x2, y2, z2, flags, entity, p8); }
	int START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8) { return Call<int>(0x8f35bc9f1f865819, x1, y1, z1, x2, y2, z2, flags, entity, p8); }
	int START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE_f(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8) { return FastCall<int>(0x8f35bc9f1f865819, x1, y1, z1, x2, y2, z2, flags, entity, p8); }
	int START_SHAPE_TEST_BOUNDING_BOX(Entity entity, int flags1, int flags2) { return Call<int>(0xcf3c1701c11ecce2, entity, flags1, flags2); }
	int START_SHAPE_TEST_BOUNDING_BOX_f(Entity entity, int flags1, int flags2) { return FastCall<int>(0xcf3c1701c11ecce2, entity, flags1, flags2); }
	int START_SHAPE_TEST_BOX(float x, float y, float z, float dimX, float dimY, float dimZ, float rotX, float rotY, float rotZ, Any p9, int flags, Entity entity, Any p12) { return Call<int>(0x8db0dc54401e519, x, y, z, dimX, dimY, dimZ, rotX, rotY, rotZ, p9, flags, entity, p12); }
	int START_SHAPE_TEST_BOX_f(float x, float y, float z, float dimX, float dimY, float dimZ, float rotX, float rotY, float rotZ, Any p9, int flags, Entity entity, Any p12) { return FastCall<int>(0x8db0dc54401e519, x, y, z, dimX, dimY, dimZ, rotX, rotY, rotZ, p9, flags, entity, p12); }
	int START_SHAPE_TEST_BOUND(Entity entity, int flags1, int flags2) { return Call<int>(0x3e4eb1844b1d014c, entity, flags1, flags2); }
	int START_SHAPE_TEST_BOUND_f(Entity entity, int flags1, int flags2) { return FastCall<int>(0x3e4eb1844b1d014c, entity, flags1, flags2); }
	int START_SHAPE_TEST_CAPSULE(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, int p9) { return Call<int>(0xe568619e14a05a7b, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9); }
	int START_SHAPE_TEST_CAPSULE_f(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, int p9) { return FastCall<int>(0xe568619e14a05a7b, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9); }
	int START_SHAPE_TEST_SWEPT_SPHERE(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, Any p9) { return Call<int>(0xd55076afe1dab579, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9); }
	int START_SHAPE_TEST_SWEPT_SPHERE_f(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, Any p9) { return FastCall<int>(0xd55076afe1dab579, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9); }
	int START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE(Vector3* pVec1, Vector3* pVec2, int flag, Entity entity, int flag2) { return Call<int>(0x89bae6a14460f664, pVec1, pVec2, flag, entity, flag2); }
	int START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE_f(Vector3* pVec1, Vector3* pVec2, int flag, Entity entity, int flag2) { return FastCall<int>(0x89bae6a14460f664, pVec1, pVec2, flag, entity, flag2); }
	int GET_SHAPE_TEST_RESULT(int shapeTestHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Entity* entityHit) { return Call<int>(0xaf3eeda089aaebe3, shapeTestHandle, hit, endCoords, surfaceNormal, entityHit); }
	int GET_SHAPE_TEST_RESULT_f(int shapeTestHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Entity* entityHit) { return FastCall<int>(0xaf3eeda089aaebe3, shapeTestHandle, hit, endCoords, surfaceNormal, entityHit); }
	int GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL(int shapeTestHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Hash* materialHash, Entity* entityHit) { return Call<int>(0xa30fbd7bf4b7ebd, shapeTestHandle, hit, endCoords, surfaceNormal, materialHash, entityHit); }
	int GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL_f(int shapeTestHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Hash* materialHash, Entity* entityHit) { return FastCall<int>(0xa30fbd7bf4b7ebd, shapeTestHandle, hit, endCoords, surfaceNormal, materialHash, entityHit); }
	void RELEASE_SCRIPT_GUID_FROM_ENTITY(Entity entityHit) { Call<void>(0x6ef581f17bfcb9fe, entityHit); }
	void RELEASE_SCRIPT_GUID_FROM_ENTITY_f(Entity entityHit) { FastCall<void>(0x6ef581f17bfcb9fe, entityHit); }
}
namespace SOCIALCLUB
{
	int SC_INBOX_GET_TOTAL_NUM_MESSAGES() { return Call<int>(0x62da77ab051e3871); }
	int SC_INBOX_GET_TOTAL_NUM_MESSAGES_f() { return FastCall<int>(0x62da77ab051e3871); }
	Hash SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX(int msgIndex) { return Call<Hash>(0x10f6d6b21695a7e2, msgIndex); }
	Hash SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX_f(int msgIndex) { return FastCall<Hash>(0x10f6d6b21695a7e2, msgIndex); }
	BOOL SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX(int msgIndex) { return Call<BOOL>(0xb74c501edddaa5a3, msgIndex); }
	BOOL SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX_f(int msgIndex) { return FastCall<BOOL>(0xb74c501edddaa5a3, msgIndex); }
	BOOL SC_INBOX_SET_MESSAGE_AS_READ_AT_INDEX(int msgIndex) { return Call<BOOL>(0xbad5257f1b180f1f, msgIndex); }
	BOOL SC_INBOX_SET_MESSAGE_AS_READ_AT_INDEX_f(int msgIndex) { return FastCall<BOOL>(0xbad5257f1b180f1f, msgIndex); }
	BOOL SC_INBOX_MESSAGE_GET_DATA_INT(int p0, char* context, int* out) { return Call<BOOL>(0x493639dfe3d91d83, p0, context, out); }
	BOOL SC_INBOX_MESSAGE_GET_DATA_INT_f(int p0, char* context, int* out) { return FastCall<BOOL>(0x493639dfe3d91d83, p0, context, out); }
	BOOL SC_INBOX_MESSAGE_GET_DATA_BOOL(int p0, char* p1) { return Call<BOOL>(0xdd91021c974767b6, p0, p1); }
	BOOL SC_INBOX_MESSAGE_GET_DATA_BOOL_f(int p0, char* p1) { return FastCall<BOOL>(0xdd91021c974767b6, p0, p1); }
	BOOL SC_INBOX_MESSAGE_GET_DATA_STRING(int p0, char* context, char* out) { return Call<BOOL>(0xbd58ed54005685dd, p0, context, out); }
	BOOL SC_INBOX_MESSAGE_GET_DATA_STRING_f(int p0, char* context, char* out) { return FastCall<BOOL>(0xbd58ed54005685dd, p0, context, out); }
	BOOL SC_INBOX_MESSAGE_DO_APPLY(int p0) { return Call<BOOL>(0x25a3c1e18985077a, p0); }
	BOOL SC_INBOX_MESSAGE_DO_APPLY_f(int p0) { return FastCall<BOOL>(0x25a3c1e18985077a, p0); }
	const char* SC_INBOX_MESSAGE_GET_RAW_TYPE_AT_INDEX(int p0) { return Call<char*>(0xd1d400ab1eddd76b, p0); }
	const char* SC_INBOX_MESSAGE_GET_RAW_TYPE_AT_INDEX_f(int p0) { return FastCall<char*>(0xd1d400ab1eddd76b, p0); }
	void SC_INBOX_MESSAGE_PUSH_GAMER_T0_RECIP_LIST(Any* gamerHandle) { Call<void>(0xa49e33680e7614e5, gamerHandle); }
	void SC_INBOX_MESSAGE_PUSH_GAMER_T0_RECIP_LIST_f(Any* gamerHandle) { FastCall<void>(0xa49e33680e7614e5, gamerHandle); }
	void SC_INBOX_SEND_UGCSTATUPDATE_TO_RECIP_LIST(Any* data) { Call<void>(0x9caceaa1cfce3e2a, data); }
	void SC_INBOX_SEND_UGCSTATUPDATE_TO_RECIP_LIST_f(Any* data) { FastCall<void>(0x9caceaa1cfce3e2a, data); }
	BOOL SC_INBOX_MESSAGE_GET_UGCDATA(int p0, Any* p1) { return Call<BOOL>(0x2ba6e91b499f6232, p0, p1); }
	BOOL SC_INBOX_MESSAGE_GET_UGCDATA_f(int p0, Any* p1) { return FastCall<BOOL>(0x2ba6e91b499f6232, p0, p1); }
	BOOL SC_INBOX_GET_BOUNTY_DATA_AT_INDEX(int index, Any* outData) { return Call<BOOL>(0xff96fba1d87172f8, index, outData); }
	BOOL SC_INBOX_GET_BOUNTY_DATA_AT_INDEX_f(int index, Any* outData) { return FastCall<BOOL>(0xff96fba1d87172f8, index, outData); }
	void SC_EMAIL_RETRIEVE_EMAILS(int offset, int limit) { Call<void>(0xcff9ab7ea39f4e48, offset, limit); }
	void SC_EMAIL_RETRIEVE_EMAILS_f(int offset, int limit) { FastCall<void>(0xcff9ab7ea39f4e48, offset, limit); }
	int SC_EMAIL_GET_RETRIEVAL_STATUS() { return Call<int>(0x3fa1bfd2df203598); }
	int SC_EMAIL_GET_RETRIEVAL_STATUS_f() { return FastCall<int>(0x3fa1bfd2df203598); }
	int SC_EMAIL_GET_NUM_RETRIEVED_EMAILS() { return Call<int>(0xc93e17c690c58942); }
	int SC_EMAIL_GET_NUM_RETRIEVED_EMAILS_f() { return FastCall<int>(0xc93e17c690c58942); }
	BOOL SC_EMAIL_GET_EMAIL_AT_INDEX(int p0, Any* p1) { return Call<BOOL>(0xb1397f5bc57ee7e4, p0, p1); }
	BOOL SC_EMAIL_GET_EMAIL_AT_INDEX_f(int p0, Any* p1) { return FastCall<BOOL>(0xb1397f5bc57ee7e4, p0, p1); }
	void _SC_EMAIL_MARKETING_EMAIL_OPENED(int index) { Call<void>(0xa0b4534c12ac0398, index); }
	void _SC_EMAIL_MARKETING_EMAIL_OPENED_f(int index) { FastCall<void>(0xa0b4534c12ac0398, index); }
	void SC_EMAIL_DELETE_EMAILS(Any* p0, Any p1) { Call<void>(0x24390d2ef47a2579, p0, p1); }
	void SC_EMAIL_DELETE_EMAILS_f(Any* p0, Any p1) { FastCall<void>(0x24390d2ef47a2579, p0, p1); }
	void SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST(Any* gamerHandle) { Call<void>(0x1a799c55a935ed10, gamerHandle); }
	void SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST_f(Any* gamerHandle) { FastCall<void>(0x1a799c55a935ed10, gamerHandle); }
	void SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST() { Call<void>(0x7e4d9541237e822); }
	void SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST_f() { FastCall<void>(0x7e4d9541237e822); }
	void SC_EMAIL_SEND_EMAIL(char* p0) { Call<void>(0x9178ef144d1f36b7, p0); }
	void SC_EMAIL_SEND_EMAIL_f(char* p0) { FastCall<void>(0x9178ef144d1f36b7, p0); }
	BOOL SC_EMAIL_SET_CURRENT_EMAIL_TAG(Any p0) { return Call<BOOL>(0x8db9a1c5237fec22, p0); }
	BOOL SC_EMAIL_SET_CURRENT_EMAIL_TAG_f(Any p0) { return FastCall<BOOL>(0x8db9a1c5237fec22, p0); }
	void SC_CACHE_NEW_ROCKSTAR_MSGS(BOOL toggle) { Call<void>(0x60cc372b4e27f40f, toggle); }
	void SC_CACHE_NEW_ROCKSTAR_MSGS_f(BOOL toggle) { FastCall<void>(0x60cc372b4e27f40f, toggle); }
	BOOL SC_HAS_NEW_ROCKSTAR_MSG() { return Call<BOOL>(0xa3c486f7756fc06c); }
	BOOL SC_HAS_NEW_ROCKSTAR_MSG_f() { return FastCall<BOOL>(0xa3c486f7756fc06c); }
	char* SC_GET_NEW_ROCKSTAR_MSG() { Call<char*>(0xb65b0bd189095330); }
	char* SC_GET_NEW_ROCKSTAR_MSG_f() { FastCall<char*>(0xb65b0bd189095330); }
	BOOL SC_PRESENCE_ATTR_SET_INT(Hash attrHash, int value) { return Call<BOOL>(0x7f23b09959f04e19, attrHash, value); }
	BOOL SC_PRESENCE_ATTR_SET_INT_f(Hash attrHash, int value) { return FastCall<BOOL>(0x7f23b09959f04e19, attrHash, value); }
	BOOL SC_PRESENCE_ATTR_SET_FLOAT(Hash attrHash, float value) { return Call<BOOL>(0x44f9efaa9ee9f206, attrHash, value); }
	BOOL SC_PRESENCE_ATTR_SET_FLOAT_f(Hash attrHash, float value) { return FastCall<BOOL>(0x44f9efaa9ee9f206, attrHash, value); }
	BOOL SC_PRESENCE_ATTR_SET_STRING(Hash attrHash, char* value) { return Call<BOOL>(0x5a4405a954f58587, attrHash, value); }
	BOOL SC_PRESENCE_ATTR_SET_STRING_f(Hash attrHash, char* value) { return FastCall<BOOL>(0x5a4405a954f58587, attrHash, value); }
	BOOL SC_PRESENCE_SET_ACTIVITY_RATING(Any p0, float p1) { return Call<BOOL>(0xfaef59ab3417451b, p0, p1); }
	BOOL SC_PRESENCE_SET_ACTIVITY_RATING_f(Any p0, float p1) { return FastCall<BOOL>(0xfaef59ab3417451b, p0, p1); }
	BOOL SC_GAMERDATA_GET_INT(char* name, int* value) { return Call<BOOL>(0xaae41c282bc66222, name, value); }
	BOOL SC_GAMERDATA_GET_INT_f(char* name, int* value) { return FastCall<BOOL>(0xaae41c282bc66222, name, value); }
	BOOL SC_GAMERDATA_GET_FLOAT(char* name, float* value) { return Call<BOOL>(0x824db2cc538b27cf, name, value); }
	BOOL SC_GAMERDATA_GET_FLOAT_f(char* name, float* value) { return FastCall<BOOL>(0x824db2cc538b27cf, name, value); }
	BOOL SC_GAMERDATA_GET_BOOL(char* name) { return Call<BOOL>(0xb19f68dd4d02b6f7, name); }
	BOOL SC_GAMERDATA_GET_BOOL_f(char* name) { return FastCall<BOOL>(0xb19f68dd4d02b6f7, name); }
	BOOL SC_GAMERDATA_GET_STRING(char* name, char* value) { return Call<BOOL>(0xc768a6be347b08de, name, value); }
	BOOL SC_GAMERDATA_GET_STRING_f(char* name, char* value) { return FastCall<BOOL>(0xc768a6be347b08de, name, value); }
	BOOL SC_GAMERDATA_GET_ACTIVE_XP_BONUS(float* value) { return Call<BOOL>(0xf039fcfafc31a2e4, value); }
	BOOL SC_GAMERDATA_GET_ACTIVE_XP_BONUS_f(float* value) { return FastCall<BOOL>(0xf039fcfafc31a2e4, value); }
	BOOL SC_PROFANITY_CHECK_STRING(char* string, int* token) { return Call<BOOL>(0xb5153272a33d536e, string, token); }
	BOOL SC_PROFANITY_CHECK_STRING_f(char* string, int* token) { return FastCall<BOOL>(0xb5153272a33d536e, string, token); }
	BOOL SC_PROFANITY_CHECK_STRING_UGC(char* string, int* token) { return Call<BOOL>(0xe97ba5c9549663a0, string, token); }
	BOOL SC_PROFANITY_CHECK_STRING_UGC_f(char* string, int* token) { return FastCall<BOOL>(0xe97ba5c9549663a0, string, token); }
	BOOL SC_PROFANITY_GET_CHECK_IS_VALID(int token) { return Call<BOOL>(0xb5c5dc636c169dcd, token); }
	BOOL SC_PROFANITY_GET_CHECK_IS_VALID_f(int token) { return FastCall<BOOL>(0xb5c5dc636c169dcd, token); }
	BOOL SC_PROFANITY_GET_CHECK_IS_PENDING(int token) { return Call<BOOL>(0x5bc051378a6e6328, token); }
	BOOL SC_PROFANITY_GET_CHECK_IS_PENDING_f(int token) { return FastCall<BOOL>(0x5bc051378a6e6328, token); }
	BOOL SC_PROFANITY_GET_STRING_PASSED(int token) { return Call<BOOL>(0xc166418b4fd8baaf, token); }
	BOOL SC_PROFANITY_GET_STRING_PASSED_f(int token) { return FastCall<BOOL>(0xc166418b4fd8baaf, token); }
	int SC_PROFANITY_GET_STRING_STATUS(int token) { return Call<int>(0xc166418b55fada31, token); }
	int SC_PROFANITY_GET_STRING_STATUS_f(int token) { return FastCall<int>(0xc166418b55fada31, token); }
	BOOL SC_PROFANITY_GET_PROFANE_WORD(int token, char* outProfaneWord) { return Call<BOOL>(0x15ac4f9cde147f19, token, outProfaneWord); }
	BOOL SC_PROFANITY_GET_PROFANE_WORD_f(int token, char* outProfaneWord) { return FastCall<BOOL>(0x15ac4f9cde147f19, token, outProfaneWord); }
	BOOL SC_LICENSEPLATE_CHECK_STRING(char* p0, int* p1) { return Call<BOOL>(0x31b79ecb9c3a5ea3, p0, p1); }
	BOOL SC_LICENSEPLATE_CHECK_STRING_f(char* p0, int* p1) { return FastCall<BOOL>(0x31b79ecb9c3a5ea3, p0, p1); }
	BOOL SC_LICENSEPLATE_GET_CHECK_IS_VALID(Any p0) { return Call<BOOL>(0x347ef9fbcb89ad42, p0); }
	BOOL SC_LICENSEPLATE_GET_CHECK_IS_VALID_f(Any p0) { return FastCall<BOOL>(0x347ef9fbcb89ad42, p0); }
	BOOL SC_LICENSEPLATE_GET_CHECK_IS_PENDING(Any p0) { return Call<BOOL>(0x10a86a35d95b695d, p0); }
	BOOL SC_LICENSEPLATE_GET_CHECK_IS_PENDING_f(Any p0) { return FastCall<BOOL>(0x10a86a35d95b695d, p0); }
	int SC_LICENSEPLATE_GET_COUNT(int token) { return Call<int>(0xe07b5b31e6eef52b, token); }
	int SC_LICENSEPLATE_GET_COUNT_f(int token) { return FastCall<int>(0xe07b5b31e6eef52b, token); }
	const char* SC_LICENSEPLATE_GET_PLATE(int token, int plateIndex) { return Call<char*>(0xe07b5b31e7a47f32, token, plateIndex); }
	const char* SC_LICENSEPLATE_GET_PLATE_f(int token, int plateIndex) { return FastCall<char*>(0xe07b5b31e7a47f32, token, plateIndex); }
	const char* SC_LICENSEPLATE_GET_PLATE_DATA(int token, int plateIndex) { return Call<char*>(0xd28e439a50ffd097, token, plateIndex); }
	const char* SC_LICENSEPLATE_GET_PLATE_DATA_f(int token, int plateIndex) { return FastCall<char*>(0xd28e439a50ffd097, token, plateIndex); }
	BOOL SC_LICENSEPLATE_SET_PLATE_DATA(char* oldPlateText, char* newPlateText, Any* plateData) { return Call<BOOL>(0xb4e4df74e765440b, oldPlateText, newPlateText, plateData); }
	BOOL SC_LICENSEPLATE_SET_PLATE_DATA_f(char* oldPlateText, char* newPlateText, Any* plateData) { return FastCall<BOOL>(0xb4e4df74e765440b, oldPlateText, newPlateText, plateData); }
	BOOL SC_LICENSEPLATE_ADD(char* plateText, Any* plateData, int* token) { return Call<BOOL>(0x4ab17b54b0c36ac6, plateText, plateData, token); }
	BOOL SC_LICENSEPLATE_ADD_f(char* plateText, Any* plateData, int* token) { return FastCall<BOOL>(0x4ab17b54b0c36ac6, plateText, plateData, token); }
	BOOL SC_LICENSEPLATE_GET_ADD_IS_PENDING(int token) { return Call<BOOL>(0x63038e4bd5259124, token); }
	BOOL SC_LICENSEPLATE_GET_ADD_IS_PENDING_f(int token) { return FastCall<BOOL>(0x63038e4bd5259124, token); }
	int SC_LICENSEPLATE_GET_ADD_STATUS(int token) { return Call<int>(0xd28cd4c7f35e8ab4, token); }
	int SC_LICENSEPLATE_GET_ADD_STATUS_f(int token) { return FastCall<int>(0xd28cd4c7f35e8ab4, token); }
	BOOL SC_LICENSEPLATE_ISVALID(char* plateText, int* token) { return Call<BOOL>(0x54256c4039cb7cb7, plateText, token); }
	BOOL SC_LICENSEPLATE_ISVALID_f(char* plateText, int* token) { return FastCall<BOOL>(0x54256c4039cb7cb7, plateText, token); }
	BOOL SC_LICENSEPLATE_GET_ISVALID_IS_PENDING(int token) { return Call<BOOL>(0xff212d3937d21213, token); }
	BOOL SC_LICENSEPLATE_GET_ISVALID_IS_PENDING_f(int token) { return FastCall<BOOL>(0xff212d3937d21213, token); }
	int SC_LICENSEPLATE_GET_ISVALID_STATUS(int token) { return Call<int>(0xa3e0cd2c4496db23, token); }
	int SC_LICENSEPLATE_GET_ISVALID_STATUS_f(int token) { return FastCall<int>(0xa3e0cd2c4496db23, token); }
	BOOL SC_COMMUNITY_EVENT_IS_ACTIVE() { return Call<BOOL>(0xdc319190d5bc4a91); }
	BOOL SC_COMMUNITY_EVENT_IS_ACTIVE_f() { return FastCall<BOOL>(0xdc319190d5bc4a91); }
	int SC_COMMUNITY_EVENT_GET_EVENT_ID() { return Call<int>(0x2b7c666381f46553); }
	int SC_COMMUNITY_EVENT_GET_EVENT_ID_f() { return FastCall<int>(0x2b7c666381f46553); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT(char* p0, int* p1) { return Call<BOOL>(0x52be888a686c33c, p0, p1); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_f(char* p0, int* p1) { return FastCall<BOOL>(0x52be888a686c33c, p0, p1); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT(char* p0, float* p1) { return Call<BOOL>(0x69d3e8f91fb7aa69, p0, p1); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_f(char* p0, float* p1) { return FastCall<BOOL>(0x69d3e8f91fb7aa69, p0, p1); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING(char* p0, char* p1) { return Call<BOOL>(0xd0a9362aedded984, p0, p1); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_f(char* p0, char* p1) { return FastCall<BOOL>(0xd0a9362aedded984, p0, p1); }
	BOOL SC_COMMUNITY_EVENT_GET_DISPLAY_NAME(char* p0) { return Call<BOOL>(0xafd4d67893f3f6db, p0); }
	BOOL SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_f(char* p0) { return FastCall<BOOL>(0xafd4d67893f3f6db, p0); }
	BOOL SC_COMMUNITY_EVENT_IS_ACTIVE_FOR_TYPE(char* p0) { return Call<BOOL>(0xef5b1062c7636afe, p0); }
	BOOL SC_COMMUNITY_EVENT_IS_ACTIVE_FOR_TYPE_f(char* p0) { return FastCall<BOOL>(0xef5b1062c7636afe, p0); }
	int SC_COMMUNITY_EVENT_GET_EVENT_ID_FOR_TYPE(char* p0) { return Call<int>(0xb67fbfc0ef504a7c, p0); }
	int SC_COMMUNITY_EVENT_GET_EVENT_ID_FOR_TYPE_f(char* p0) { return FastCall<int>(0xb67fbfc0ef504a7c, p0); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_FOR_TYPE(char* p0, int* p1, char* p2) { return Call<BOOL>(0x59bdb7a6d3ee82b3, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_FOR_TYPE_f(char* p0, int* p1, char* p2) { return FastCall<BOOL>(0x59bdb7a6d3ee82b3, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_FOR_TYPE(char* p0, float* p1, char* p2) { return Call<BOOL>(0xd0a2bcfbe6ba5e26, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_FOR_TYPE_f(char* p0, float* p1, char* p2) { return FastCall<BOOL>(0xd0a2bcfbe6ba5e26, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_FOR_TYPE(char* p0, char* p1, char* p2) { return Call<BOOL>(0x6f54c23e53f6fd6b, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_FOR_TYPE_f(char* p0, char* p1, char* p2) { return FastCall<BOOL>(0x6f54c23e53f6fd6b, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_FOR_TYPE(char* p0, char* p1) { return Call<BOOL>(0x8d7858ae0c47f1f4, p0, p1); }
	BOOL SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_FOR_TYPE_f(char* p0, char* p1) { return FastCall<BOOL>(0x8d7858ae0c47f1f4, p0, p1); }
	BOOL SC_COMMUNITY_EVENT_IS_ACTIVE_BY_ID(int p0) { return Call<BOOL>(0x88ac9d59c22caed5, p0); }
	BOOL SC_COMMUNITY_EVENT_IS_ACTIVE_BY_ID_f(int p0) { return FastCall<BOOL>(0x88ac9d59c22caed5, p0); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_BY_ID(int p0, char* p1, int* p2) { return Call<BOOL>(0x1b5685cf9506bb40, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_BY_ID_f(int p0, char* p1, int* p2) { return FastCall<BOOL>(0x1b5685cf9506bb40, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_BY_ID(int p0, char* p1, float* p2) { return Call<BOOL>(0x9fc35f317626ccad, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_BY_ID_f(int p0, char* p1, float* p2) { return FastCall<BOOL>(0x9fc35f317626ccad, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_BY_ID(int p0, char* p1, char* p2) { return Call<BOOL>(0x5d55a01fa436fb88, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_BY_ID_f(int p0, char* p1, char* p2) { return FastCall<BOOL>(0x5d55a01fa436fb88, p0, p1, p2); }
	BOOL SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_BY_ID(int p0, char* p1) { return Call<BOOL>(0xe0daba0bb5807b9f, p0, p1); }
	BOOL SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_BY_ID_f(int p0, char* p1) { return FastCall<BOOL>(0xe0daba0bb5807b9f, p0, p1); }
	BOOL SC_TRANSITION_NEWS_SHOW(Any p0) { return Call<BOOL>(0xbedf7be54edee50e, p0); }
	BOOL SC_TRANSITION_NEWS_SHOW_f(Any p0) { return FastCall<BOOL>(0xbedf7be54edee50e, p0); }
	BOOL SC_TRANSITION_NEWS_SHOW_TIMED(Any p0, Any p1) { return Call<BOOL>(0xdc56712faed4d4a6, p0, p1); }
	BOOL SC_TRANSITION_NEWS_SHOW_TIMED_f(Any p0, Any p1) { return FastCall<BOOL>(0xdc56712faed4d4a6, p0, p1); }
	BOOL SC_TRANSITION_NEWS_SHOW_NEXT_ITEM() { return Call<BOOL>(0xfc55dca1216aeeee); }
	BOOL SC_TRANSITION_NEWS_SHOW_NEXT_ITEM_f() { return FastCall<BOOL>(0xfc55dca1216aeeee); }
	BOOL SC_TRANSITION_NEWS_HAS_EXTRA_DATA_TU() { return Call<BOOL>(0x3e86b84699245e71); }
	BOOL SC_TRANSITION_NEWS_HAS_EXTRA_DATA_TU_f() { return FastCall<BOOL>(0x3e86b84699245e71); }
	BOOL SC_TRANSITION_NEWS_GET_EXTRA_DATA_INT_TU(char* p0, int* p1) { return Call<BOOL>(0xf087a9bae6962e9d, p0, p1); }
	BOOL SC_TRANSITION_NEWS_GET_EXTRA_DATA_INT_TU_f(char* p0, int* p1) { return FastCall<BOOL>(0xf087a9bae6962e9d, p0, p1); }
	void SC_TRANSITION_NEWS_END() { Call<void>(0xbbd5a9286de5f48a); }
	void SC_TRANSITION_NEWS_END_f() { FastCall<void>(0xbbd5a9286de5f48a); }
	BOOL SC_PAUSE_NEWS_INIT_STARTER_PACK(Any p0) { return Call<BOOL>(0xa8165a1381811c64, p0); }
	BOOL SC_PAUSE_NEWS_INIT_STARTER_PACK_f(Any p0) { return FastCall<BOOL>(0xa8165a1381811c64, p0); }
	BOOL SC_PAUSE_NEWS_GET_PENDING_STORY(Any p0) { return Call<BOOL>(0x119302e356c2f470, p0); }
	BOOL SC_PAUSE_NEWS_GET_PENDING_STORY_f(Any p0) { return FastCall<BOOL>(0x119302e356c2f470, p0); }
	void SC_PAUSE_NEWS_SHUTDOWN() { Call<void>(0xa9ed6128b727832a); }
	void SC_PAUSE_NEWS_SHUTDOWN_f() { FastCall<void>(0xa9ed6128b727832a); }
	char* SC_ACCOUNT_INFO_GET_NICKNAME() { Call<char*>(0xbe3e8b28de7a067); }
	char* SC_ACCOUNT_INFO_GET_NICKNAME_f() { FastCall<char*>(0xbe3e8b28de7a067); }
	BOOL SC_ACHIEVEMENT_INFO_STATUS(int* p0) { return Call<BOOL>(0x942e7a984144e684, p0); }
	BOOL SC_ACHIEVEMENT_INFO_STATUS_f(int* p0) { return FastCall<BOOL>(0x942e7a984144e684, p0); }
	BOOL SC_HAS_ACHIEVEMENT_BEEN_PASSED(int achievementId) { return Call<BOOL>(0xd4d73d503c272a7f, achievementId); }
	BOOL SC_HAS_ACHIEVEMENT_BEEN_PASSED_f(int achievementId) { return FastCall<BOOL>(0xd4d73d503c272a7f, achievementId); }
}
namespace STATS
{
	BOOL STAT_CLEAR_SLOT_FOR_RELOAD(int statSlot) { return Call<BOOL>(0x5650b9d6c3640d13, statSlot); }
	BOOL STAT_CLEAR_SLOT_FOR_RELOAD_f(int statSlot) { return FastCall<BOOL>(0x5650b9d6c3640d13, statSlot); }
	BOOL STAT_LOAD(int statSlot) { return Call<BOOL>(0x428a2b3d4bf1, statSlot); }
	BOOL STAT_LOAD_f(int statSlot) { return FastCall<BOOL>(0x428a2b3d4bf1, statSlot); }
	BOOL STAT_SAVE(int p0, BOOL p1, int p2, BOOL p3) { return Call<BOOL>(0x428a2b404888, p0, p1, p2, p3); }
	BOOL STAT_SAVE_f(int p0, BOOL p1, int p2, BOOL p3) { return FastCall<BOOL>(0x428a2b404888, p0, p1, p2, p3); }
	void STAT_SET_OPEN_SAVETYPE_IN_JOB(int p0) { Call<void>(0x8baf2b3117b097fe, p0); }
	void STAT_SET_OPEN_SAVETYPE_IN_JOB_f(int p0) { FastCall<void>(0x8baf2b3117b097fe, p0); }
	BOOL STAT_LOAD_PENDING(int statSlot) { return Call<BOOL>(0x1bf5d650cdda8729, statSlot); }
	BOOL STAT_LOAD_PENDING_f(int statSlot) { return FastCall<BOOL>(0x1bf5d650cdda8729, statSlot); }
	BOOL STAT_SAVE_PENDING() { return Call<BOOL>(0x1e46edee7d7efcc0); }
	BOOL STAT_SAVE_PENDING_f() { return FastCall<BOOL>(0x1e46edee7d7efcc0); }
	BOOL STAT_SAVE_PENDING_OR_REQUESTED() { return Call<BOOL>(0x5d8c5252a27a1111); }
	BOOL STAT_SAVE_PENDING_OR_REQUESTED_f() { return FastCall<BOOL>(0x5d8c5252a27a1111); }
	BOOL STAT_DELETE_SLOT(int p0) { return Call<BOOL>(0x21d6f47254bcf2a7, p0); }
	BOOL STAT_DELETE_SLOT_f(int p0) { return FastCall<BOOL>(0x21d6f47254bcf2a7, p0); }
	BOOL STAT_SLOT_IS_LOADED(int statSlot) { return Call<BOOL>(0x1e34b1350e8fc904, statSlot); }
	BOOL STAT_SLOT_IS_LOADED_f(int statSlot) { return FastCall<BOOL>(0x1e34b1350e8fc904, statSlot); }
	BOOL STAT_CLOUD_SLOT_LOAD_FAILED(int p0) { return Call<BOOL>(0x114f2623679e982a, p0); }
	BOOL STAT_CLOUD_SLOT_LOAD_FAILED_f(int p0) { return FastCall<BOOL>(0x114f2623679e982a, p0); }
	int STAT_CLOUD_SLOT_LOAD_FAILED_CODE(Any p0) { return Call<int>(0x7ca3098658c650e2, p0); }
	int STAT_CLOUD_SLOT_LOAD_FAILED_CODE_f(Any p0) { return FastCall<int>(0x7ca3098658c650e2, p0); }
	void STAT_SET_BLOCK_SAVES(BOOL toggle) { Call<void>(0x9e8e1622cc2f57bc, toggle); }
	void STAT_SET_BLOCK_SAVES_f(BOOL toggle) { FastCall<void>(0x9e8e1622cc2f57bc, toggle); }
	BOOL STAT_GET_BLOCK_SAVES() { return Call<BOOL>(0x361136aa95e65cb0); }
	BOOL STAT_GET_BLOCK_SAVES_f() { return FastCall<BOOL>(0x361136aa95e65cb0); }
	BOOL STAT_CLOUD_SLOT_SAVE_FAILED(Any p0) { return Call<BOOL>(0x116247eeaf5993b3, p0); }
	BOOL STAT_CLOUD_SLOT_SAVE_FAILED_f(Any p0) { return FastCall<BOOL>(0x116247eeaf5993b3, p0); }
	void STAT_CLEAR_PENDING_SAVES(Any p0) { Call<void>(0xda69d905361490b1, p0); }
	void STAT_CLEAR_PENDING_SAVES_f(Any p0) { FastCall<void>(0xda69d905361490b1, p0); }
	BOOL STAT_LOAD_DIRTY_READ_DETECTED() { return Call<BOOL>(0x2800cee00061e3f0); }
	BOOL STAT_LOAD_DIRTY_READ_DETECTED_f() { return FastCall<BOOL>(0x2800cee00061e3f0); }
	void STAT_CLEAR_DIRTY_READ_DETECTED() { Call<void>(0x319098e2ca9b601); }
	void STAT_CLEAR_DIRTY_READ_DETECTED_f() { FastCall<void>(0x319098e2ca9b601); }
	BOOL STAT_GET_LOAD_SAFE_TO_PROGRESS_TO_MP_FROM_SP() { return Call<BOOL>(0xca1d3db4a5a6293f); }
	BOOL STAT_GET_LOAD_SAFE_TO_PROGRESS_TO_MP_FROM_SP_f() { return FastCall<BOOL>(0xca1d3db4a5a6293f); }
	Hash _GET_STAT_HASH_FOR_CHARACTER_STAT(int dataType, int statIndex, int charSlot) { return Call<Hash>(0x8c8c1a1d4d39bece, dataType, statIndex, charSlot); }
	Hash _GET_STAT_HASH_FOR_CHARACTER_STAT_f(int dataType, int statIndex, int charSlot) { return FastCall<Hash>(0x8c8c1a1d4d39bece, dataType, statIndex, charSlot); }
	BOOL STAT_SET_INT(Hash statName, int value, BOOL save) { return Call<BOOL>(0x1e3f4cdf347cab67, statName, value, save); }
	BOOL STAT_SET_INT_f(Hash statName, int value, BOOL save) { return FastCall<BOOL>(0x1e3f4cdf347cab67, statName, value, save); }
	BOOL STAT_SET_FLOAT(Hash statName, float value, BOOL save) { return Call<BOOL>(0x8b9f91e407d433d4, statName, value, save); }
	BOOL STAT_SET_FLOAT_f(Hash statName, float value, BOOL save) { return FastCall<BOOL>(0x8b9f91e407d433d4, statName, value, save); }
	BOOL STAT_SET_BOOL(Hash statName, BOOL value, BOOL save) { return Call<BOOL>(0xa9aa4f075b159652, statName, value, save); }
	BOOL STAT_SET_BOOL_f(Hash statName, BOOL value, BOOL save) { return FastCall<BOOL>(0xa9aa4f075b159652, statName, value, save); }
	BOOL STAT_SET_GXT_LABEL(Hash statName, char* value, BOOL save) { return Call<BOOL>(0xabfc6f4b865f0eb0, statName, value, save); }
	BOOL STAT_SET_GXT_LABEL_f(Hash statName, char* value, BOOL save) { return FastCall<BOOL>(0xabfc6f4b865f0eb0, statName, value, save); }
	BOOL STAT_SET_DATE(Hash statName, Any* value, int numFields, BOOL save) { return Call<BOOL>(0xa9aa4f075b164b16, statName, value, numFields, save); }
	BOOL STAT_SET_DATE_f(Hash statName, Any* value, int numFields, BOOL save) { return FastCall<BOOL>(0xa9aa4f075b164b16, statName, value, numFields, save); }
	BOOL STAT_SET_STRING(Hash statName, char* value, BOOL save) { return Call<BOOL>(0xe852aa9d09537d79, statName, value, save); }
	BOOL STAT_SET_STRING_f(Hash statName, char* value, BOOL save) { return FastCall<BOOL>(0xe852aa9d09537d79, statName, value, save); }
	BOOL STAT_SET_POS(Hash statName, float x, float y, float z, BOOL save) { return Call<BOOL>(0x1e3f4cdf347cc5cc, statName, x, y, z, save); }
	BOOL STAT_SET_POS_f(Hash statName, float x, float y, float z, BOOL save) { return FastCall<BOOL>(0x1e3f4cdf347cc5cc, statName, x, y, z, save); }
	BOOL STAT_SET_MASKED_INT(Hash statName, int p1, int p2, int p3, BOOL save) { return Call<BOOL>(0xd391f88b177d3f83, statName, p1, p2, p3, save); }
	BOOL STAT_SET_MASKED_INT_f(Hash statName, int p1, int p2, int p3, BOOL save) { return FastCall<BOOL>(0xd391f88b177d3f83, statName, p1, p2, p3, save); }
	BOOL STAT_SET_USER_ID(Hash statName, char* value, BOOL save) { return Call<BOOL>(0x2202a9048880f5a7, statName, value, save); }
	BOOL STAT_SET_USER_ID_f(Hash statName, char* value, BOOL save) { return FastCall<BOOL>(0x2202a9048880f5a7, statName, value, save); }
	BOOL STAT_SET_CURRENT_POSIX_TIME(Hash statName, BOOL p1) { return Call<BOOL>(0x3eb5f7395e68bf37, statName, p1); }
	BOOL STAT_SET_CURRENT_POSIX_TIME_f(Hash statName, BOOL p1) { return FastCall<BOOL>(0x3eb5f7395e68bf37, statName, p1); }
	BOOL STAT_GET_INT(Hash statHash, int* outValue, int p2) { return Call<BOOL>(0x1e3f4cdcb9b1e45b, statHash, outValue, p2); }
	BOOL STAT_GET_INT_f(Hash statHash, int* outValue, int p2) { return FastCall<BOOL>(0x1e3f4cdcb9b1e45b, statHash, outValue, p2); }
	BOOL STAT_GET_FLOAT(Hash statHash, float* outValue, Any p2) { return Call<BOOL>(0x8b9f8895149effc8, statHash, outValue, p2); }
	BOOL STAT_GET_FLOAT_f(Hash statHash, float* outValue, Any p2) { return FastCall<BOOL>(0x8b9f8895149effc8, statHash, outValue, p2); }
	BOOL STAT_GET_BOOL(Hash statHash, BOOL* outValue, Any p2) { return Call<BOOL>(0xa9aa4eba7c877bde, statHash, outValue, p2); }
	BOOL STAT_GET_BOOL_f(Hash statHash, BOOL* outValue, Any p2) { return FastCall<BOOL>(0xa9aa4eba7c877bde, statHash, outValue, p2); }
	BOOL STAT_GET_DATE(Hash statHash, Any* outValue, int numFields, Any p3) { return Call<BOOL>(0xa9aa4eba7c8830a2, statHash, outValue, numFields, p3); }
	BOOL STAT_GET_DATE_f(Hash statHash, Any* outValue, int numFields, Any p3) { return FastCall<BOOL>(0xa9aa4eba7c8830a2, statHash, outValue, numFields, p3); }
	const char* STAT_GET_STRING(Hash statHash, int p1) { return Call<char*>(0xe8518a0d95e23005, statHash, p1); }
	const char* STAT_GET_STRING_f(Hash statHash, int p1) { return FastCall<char*>(0xe8518a0d95e23005, statHash, p1); }
	BOOL STAT_GET_POS(Hash statName, float* outX, float* outY, float* outZ, Any p4) { return Call<BOOL>(0x1e3f4cdcb9b1fec0, statName, outX, outY, outZ, p4); }
	BOOL STAT_GET_POS_f(Hash statName, float* outX, float* outY, float* outZ, Any p4) { return FastCall<BOOL>(0x1e3f4cdcb9b1fec0, statName, outX, outY, outZ, p4); }
	BOOL STAT_GET_MASKED_INT(Hash statHash, int* outValue, int p2, int p3, Any p4) { return Call<BOOL>(0xf13b5cb08117cc0f, statHash, outValue, p2, p3, p4); }
	BOOL STAT_GET_MASKED_INT_f(Hash statHash, int* outValue, int p2, int p3, Any p4) { return FastCall<BOOL>(0xf13b5cb08117cc0f, statHash, outValue, p2, p3, p4); }
	const char* STAT_GET_USER_ID(Hash statHash) { return Call<char*>(0x21dfb7a58dc8949b, statHash); }
	const char* STAT_GET_USER_ID_f(Hash statHash) { return FastCall<char*>(0x21dfb7a58dc8949b, statHash); }
	const char* STAT_GET_LICENSE_PLATE(Hash statName) { return Call<char*>(0x62bc0fc30a2d82e4, statName); }
	const char* STAT_GET_LICENSE_PLATE_f(Hash statName) { return FastCall<char*>(0x62bc0fc30a2d82e4, statName); }
	BOOL STAT_SET_LICENSE_PLATE(Hash statName, char* str) { return Call<BOOL>(0x9f7ef206d223eaf0, statName, str); }
	BOOL STAT_SET_LICENSE_PLATE_f(Hash statName, char* str) { return FastCall<BOOL>(0x9f7ef206d223eaf0, statName, str); }
	void STAT_INCREMENT(Hash statName, float value) { Call<void>(0x8b9f8a584a8bbb24, statName, value); }
	void STAT_INCREMENT_f(Hash statName, float value) { FastCall<void>(0x8b9f8a584a8bbb24, statName, value); }
	BOOL STAT_COMMUNITY_START_SYNCH() { return Call<BOOL>(0xa0fcf7fb5e80f7af); }
	BOOL STAT_COMMUNITY_START_SYNCH_f() { return FastCall<BOOL>(0xa0fcf7fb5e80f7af); }
	BOOL STAT_COMMUNITY_SYNCH_IS_PENDING() { return Call<BOOL>(0x7f004c58cd254855); }
	BOOL STAT_COMMUNITY_SYNCH_IS_PENDING_f() { return FastCall<BOOL>(0x7f004c58cd254855); }
	BOOL STAT_COMMUNITY_GET_HISTORY(Hash statName, int p1, float* outValue) { return Call<BOOL>(0xa0d8acf6baa6d54a, statName, p1, outValue); }
	BOOL STAT_COMMUNITY_GET_HISTORY_f(Hash statName, int p1, float* outValue) { return FastCall<BOOL>(0xa0d8acf6baa6d54a, statName, p1, outValue); }
	void STAT_RESET_ALL_ONLINE_CHARACTER_STATS(int p0) { Call<void>(0x4c2e92fe804c37f6, p0); }
	void STAT_RESET_ALL_ONLINE_CHARACTER_STATS_f(int p0) { FastCall<void>(0x4c2e92fe804c37f6, p0); }
	void STAT_LOCAL_RESET_ALL_ONLINE_CHARACTER_STATS(int p0) { Call<void>(0x253484731848962a, p0); }
	void STAT_LOCAL_RESET_ALL_ONLINE_CHARACTER_STATS_f(int p0) { FastCall<void>(0x253484731848962a, p0); }
	int STAT_GET_NUMBER_OF_DAYS(Hash statName) { return Call<int>(0x212833fcbf42eabd, statName); }
	int STAT_GET_NUMBER_OF_DAYS_f(Hash statName) { return FastCall<int>(0x212833fcbf42eabd, statName); }
	int STAT_GET_NUMBER_OF_HOURS(Hash statName) { return Call<int>(0x3de4b9b29591949, statName); }
	int STAT_GET_NUMBER_OF_HOURS_f(Hash statName) { return FastCall<int>(0x3de4b9b29591949, statName); }
	int STAT_GET_NUMBER_OF_MINUTES(Hash statName) { return Call<int>(0x8579d1773558c499, statName); }
	int STAT_GET_NUMBER_OF_MINUTES_f(Hash statName) { return FastCall<int>(0x8579d1773558c499, statName); }
	int STAT_GET_NUMBER_OF_SECONDS(Hash statName) { return Call<int>(0x8579d1786b4cf239, statName); }
	int STAT_GET_NUMBER_OF_SECONDS_f(Hash statName) { return FastCall<int>(0x8579d1786b4cf239, statName); }
	void STAT_SET_PROFILE_SETTING_VALUE(int profileSetting, int value) { Call<void>(0x6a0260237b3c0fe4, profileSetting, value); }
	void STAT_SET_PROFILE_SETTING_VALUE_f(int profileSetting, int value) { FastCall<void>(0x6a0260237b3c0fe4, profileSetting, value); }
	void STATS_COMPLETED_CHARACTER_CREATION(Any p0) { Call<void>(0x2d8597455d9245a9, p0); }
	void STATS_COMPLETED_CHARACTER_CREATION_f(Any p0) { FastCall<void>(0x2d8597455d9245a9, p0); }
	int PACKED_STAT_GET_INT_STAT_INDEX(int p0) { return Call<int>(0xf695282c13ec9aa4, p0); }
	int PACKED_STAT_GET_INT_STAT_INDEX_f(int p0) { return FastCall<int>(0xf695282c13ec9aa4, p0); }
	Hash GET_PACKED_INT_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character) { return Call<Hash>(0xb60f4c84414b8a22, index, spStat, charStat, character); }
	Hash GET_PACKED_INT_STAT_KEY_f(int index, BOOL spStat, BOOL charStat, int character) { return FastCall<Hash>(0xb60f4c84414b8a22, index, spStat, charStat, character); }
	Hash GET_PACKED_TU_INT_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character) { return Call<Hash>(0x92965596cf0962a4, index, spStat, charStat, character); }
	Hash GET_PACKED_TU_INT_STAT_KEY_f(int index, BOOL spStat, BOOL charStat, int character) { return FastCall<Hash>(0x92965596cf0962a4, index, spStat, charStat, character); }
	Hash GET_PACKED_NG_INT_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character, char* section) { return Call<Hash>(0xd648300659c3de6c, index, spStat, charStat, character, section); }
	Hash GET_PACKED_NG_INT_STAT_KEY_f(int index, BOOL spStat, BOOL charStat, int character, char* section) { return FastCall<Hash>(0xd648300659c3de6c, index, spStat, charStat, character, section); }
	BOOL GET_PACKED_STAT_BOOL_CODE(int index, int characterSlot) { return Call<BOOL>(0xe6cfb7841b6a2455, index, characterSlot); }
	BOOL GET_PACKED_STAT_BOOL_CODE_f(int index, int characterSlot) { return FastCall<BOOL>(0xe6cfb7841b6a2455, index, characterSlot); }
	int GET_PACKED_STAT_INT_CODE(int index, int characterSlot) { return Call<int>(0x7b0ef594078283ca, index, characterSlot); }
	int GET_PACKED_STAT_INT_CODE_f(int index, int characterSlot) { return FastCall<int>(0x7b0ef594078283ca, index, characterSlot); }
	void SET_PACKED_STAT_BOOL_CODE(int index, BOOL value, int characterSlot) { Call<void>(0x95de085e4dadc061, index, value, characterSlot); }
	void SET_PACKED_STAT_BOOL_CODE_f(int index, BOOL value, int characterSlot) { FastCall<void>(0x95de085e4dadc061, index, value, characterSlot); }
	void SET_PACKED_STAT_INT_CODE(int index, int value, int characterSlot) { Call<void>(0xba8308b3d795363e, index, value, characterSlot); }
	void SET_PACKED_STAT_INT_CODE_f(int index, int value, int characterSlot) { FastCall<void>(0xba8308b3d795363e, index, value, characterSlot); }
	void PLAYSTATS_BACKGROUND_SCRIPT_ACTION(char* action, int value) { Call<void>(0xb3fc47d90c39ecd, action, value); }
	void PLAYSTATS_BACKGROUND_SCRIPT_ACTION_f(char* action, int value) { FastCall<void>(0xb3fc47d90c39ecd, action, value); }
	void _PLAYSTATS_FLOW_LOW(float posX, float posY, float posZ, char* action, BOOL p4, int p5) { Call<void>(0xb9ef30e663822b36, posX, posY, posZ, action, p4, p5); }
	void _PLAYSTATS_FLOW_LOW_f(float posX, float posY, float posZ, char* action, BOOL p4, int p5) { FastCall<void>(0xb9ef30e663822b36, posX, posY, posZ, action, p4, p5); }
	void _PLAYSTATS_FLOW_MEDIUM(float posX, float posY, float posZ, char* action, BOOL p4, int p5) { Call<void>(0x61eb8a95ea02e833, posX, posY, posZ, action, p4, p5); }
	void _PLAYSTATS_FLOW_MEDIUM_f(float posX, float posY, float posZ, char* action, BOOL p4, int p5) { FastCall<void>(0x61eb8a95ea02e833, posX, posY, posZ, action, p4, p5); }
	void _PLAYSTATS_FLOW_HIGH(float posX, float posY, float posZ, char* action, BOOL p4, int p5) { Call<void>(0x83f6ebe60cc151e0, posX, posY, posZ, action, p4, p5); }
	void _PLAYSTATS_FLOW_HIGH_f(float posX, float posY, float posZ, char* action, BOOL p4, int p5) { FastCall<void>(0x83f6ebe60cc151e0, posX, posY, posZ, action, p4, p5); }
	void PLAYSTATS_NPC_INVITE(char* p0) { Call<void>(0x3aec0277576b53b, p0); }
	void PLAYSTATS_NPC_INVITE_f(char* p0) { FastCall<void>(0x3aec0277576b53b, p0); }
	void PLAYSTATS_AWARD_XP(int amount, Hash type, Hash category) { Call<void>(0xa9f5ca9a3790442e, amount, type, category); }
	void PLAYSTATS_AWARD_XP_f(int amount, Hash type, Hash category) { FastCall<void>(0xa9f5ca9a3790442e, amount, type, category); }
	void PLAYSTATS_RANK_UP(int rank) { Call<void>(0xbb28f60857fc811a, rank); }
	void PLAYSTATS_RANK_UP_f(int rank) { FastCall<void>(0xbb28f60857fc811a, rank); }
	void PLAYSTATS_STARTED_SESSION_IN_OFFLINEMODE() { Call<void>(0x6a6e0cec14085147); }
	void PLAYSTATS_STARTED_SESSION_IN_OFFLINEMODE_f() { FastCall<void>(0x6a6e0cec14085147); }
	void PLAYSTATS_ACTIVITY_DONE(int p0, int activityId, Any p2) { Call<void>(0xfa6abd5bf78fff3e, p0, activityId, p2); }
	void PLAYSTATS_ACTIVITY_DONE_f(int p0, int activityId, Any p2) { FastCall<void>(0xfa6abd5bf78fff3e, p0, activityId, p2); }
	void PLAYSTATS_LEAVE_JOB_CHAIN(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0x44e74d6114fc4163, p0, p1, p2, p3, p4); }
	void PLAYSTATS_LEAVE_JOB_CHAIN_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0x44e74d6114fc4163, p0, p1, p2, p3, p4); }
	void PLAYSTATS_MISSION_STARTED(char* p0, Any p1, Any p2, BOOL p3) { Call<void>(0x5ccc0e33f2fdde1a, p0, p1, p2, p3); }
	void PLAYSTATS_MISSION_STARTED_f(char* p0, Any p1, Any p2, BOOL p3) { FastCall<void>(0x5ccc0e33f2fdde1a, p0, p1, p2, p3); }
	void PLAYSTATS_MISSION_OVER(char* p0, Any p1, Any p2, BOOL p3, BOOL p4, BOOL p5) { Call<void>(0xd292248e528125bb, p0, p1, p2, p3, p4, p5); }
	void PLAYSTATS_MISSION_OVER_f(char* p0, Any p1, Any p2, BOOL p3, BOOL p4, BOOL p5) { FastCall<void>(0xd292248e528125bb, p0, p1, p2, p3, p4, p5); }
	void PLAYSTATS_MISSION_CHECKPOINT(char* p0, Any p1, Any p2, Any p3) { Call<void>(0xe627456a7459a92f, p0, p1, p2, p3); }
	void PLAYSTATS_MISSION_CHECKPOINT_f(char* p0, Any p1, Any p2, Any p3) { FastCall<void>(0xe627456a7459a92f, p0, p1, p2, p3); }
	void PLAYSTATS_RANDOM_MISSION_DONE(char* name, Any p1, Any p2, Any p3) { Call<void>(0x35e02f427f953fd, name, p1, p2, p3); }
	void PLAYSTATS_RANDOM_MISSION_DONE_f(char* name, Any p1, Any p2, Any p3) { FastCall<void>(0x35e02f427f953fd, name, p1, p2, p3); }
	void PLAYSTATS_ROS_BET(int amount, int act, Player player, float cm) { Call<void>(0xbb28f608702f77f4, amount, act, player, cm); }
	void PLAYSTATS_ROS_BET_f(int amount, int act, Player player, float cm) { FastCall<void>(0xbb28f608702f77f4, amount, act, player, cm); }
	void PLAYSTATS_RACE_CHECKPOINT(Vehicle p0, Any p1, int p2, int p3, Any p4) { Call<void>(0x3ddab7124640a142, p0, p1, p2, p3, p4); }
	void PLAYSTATS_RACE_CHECKPOINT_f(Vehicle p0, Any p1, int p2, int p3, Any p4) { FastCall<void>(0x3ddab7124640a142, p0, p1, p2, p3, p4); }
	BOOL PLAYSTATS_CREATE_MATCH_HISTORY_ID_2(int* playerAccountId, int* posixTime) { return Call<BOOL>(0x985fee0ffb5c0a02, playerAccountId, posixTime); }
	BOOL PLAYSTATS_CREATE_MATCH_HISTORY_ID_2_f(int* playerAccountId, int* posixTime) { return FastCall<BOOL>(0x985fee0ffb5c0a02, playerAccountId, posixTime); }
	void PLAYSTATS_MATCH_STARTED(Any p0, Any p1, Any p2) { Call<void>(0x7ce1ae8fef255c53, p0, p1, p2); }
	void PLAYSTATS_MATCH_STARTED_f(Any p0, Any p1, Any p2) { FastCall<void>(0x7ce1ae8fef255c53, p0, p1, p2); }
	void PLAYSTATS_SHOP_ITEM(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0x94c39645f3b66548, p0, p1, p2, p3, p4); }
	void PLAYSTATS_SHOP_ITEM_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0x94c39645f3b66548, p0, p1, p2, p3, p4); }
	void PLAYSTATS_CRATE_DROP_MISSION_DONE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { Call<void>(0x45c076775f2899b5, p0, p1, p2, p3, p4, p5, p6, p7); }
	void PLAYSTATS_CRATE_DROP_MISSION_DONE_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { FastCall<void>(0x45c076775f2899b5, p0, p1, p2, p3, p4, p5, p6, p7); }
	void PLAYSTATS_CRATE_CREATED(float p0, float p1, float p2) { Call<void>(0x155b1d1a3e5046b8, p0, p1, p2); }
	void PLAYSTATS_CRATE_CREATED_f(float p0, float p1, float p2) { FastCall<void>(0x155b1d1a3e5046b8, p0, p1, p2); }
	void PLAYSTATS_HOLD_UP_MISSION_DONE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x4ddeae19b4d5700d, p0, p1, p2, p3); }
	void PLAYSTATS_HOLD_UP_MISSION_DONE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x4ddeae19b4d5700d, p0, p1, p2, p3); }
	void PLAYSTATS_IMPORT_EXPORT_MISSION_DONE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x74f6e3ab17afc87a, p0, p1, p2, p3); }
	void PLAYSTATS_IMPORT_EXPORT_MISSION_DONE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x74f6e3ab17afc87a, p0, p1, p2, p3); }
	void PLAYSTATS_RACE_TO_POINT_MISSION_DONE(int p0, Any p1, Any p2, Any p3) { Call<void>(0x2709bec65bf5112e, p0, p1, p2, p3); }
	void PLAYSTATS_RACE_TO_POINT_MISSION_DONE_f(int p0, Any p1, Any p2, Any p3) { FastCall<void>(0x2709bec65bf5112e, p0, p1, p2, p3); }
	void PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE(Any p0) { Call<void>(0x304c54ef7b100a2e, p0); }
	void PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE_f(Any p0) { FastCall<void>(0x304c54ef7b100a2e, p0); }
	void PLAYSTATS_WEBSITE_VISITED(Hash scaleformHash, int p1) { Call<void>(0xae993c8b3353b0d2, scaleformHash, p1); }
	void PLAYSTATS_WEBSITE_VISITED_f(Hash scaleformHash, int p1) { FastCall<void>(0xae993c8b3353b0d2, scaleformHash, p1); }
	void PLAYSTATS_FRIEND_ACTIVITY(int p0, BOOL p1) { Call<void>(0x9767e858797b311c, p0, p1); }
	void PLAYSTATS_FRIEND_ACTIVITY_f(int p0, BOOL p1) { FastCall<void>(0x9767e858797b311c, p0, p1); }
	void PLAYSTATS_ODDJOB_DONE(int totalTimeMs, int p1, BOOL p2) { Call<void>(0x722b0deb9306d07f, totalTimeMs, p1, p2); }
	void PLAYSTATS_ODDJOB_DONE_f(int totalTimeMs, int p1, BOOL p2) { FastCall<void>(0x722b0deb9306d07f, totalTimeMs, p1, p2); }
	void PLAYSTATS_PROP_CHANGE(Ped p0, int p1, int p2, int p3) { Call<void>(0x722f50b7a0fa9398, p0, p1, p2, p3); }
	void PLAYSTATS_PROP_CHANGE_f(Ped p0, int p1, int p2, int p3) { FastCall<void>(0x722f50b7a0fa9398, p0, p1, p2, p3); }
	void PLAYSTATS_CLOTH_CHANGE(Ped p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xcf13d0b959d01389, p0, p1, p2, p3, p4); }
	void PLAYSTATS_CLOTH_CHANGE_f(Ped p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xcf13d0b959d01389, p0, p1, p2, p3, p4); }
	void PLAYSTATS_WEAPON_MODE_CHANGE(Hash weaponHash, Hash componentHashTo, Hash componentHashFrom) { Call<void>(0xcacb3d103a688b1d, weaponHash, componentHashTo, componentHashFrom); }
	void PLAYSTATS_WEAPON_MODE_CHANGE_f(Hash weaponHash, Hash componentHashTo, Hash componentHashFrom) { FastCall<void>(0xcacb3d103a688b1d, weaponHash, componentHashTo, componentHashFrom); }
	void PLAYSTATS_CHEAT_APPLIED(char* cheat) { Call<void>(0x11de54e366eb695d, cheat); }
	void PLAYSTATS_CHEAT_APPLIED_f(char* cheat) { FastCall<void>(0x11de54e366eb695d, cheat); }
	void PLAYSTATS_JOB_ACTIVITY_END(Any* p0, Any* p1, Any* p2, Any* p3) { Call<void>(0x46be83cbe7baf8e1, p0, p1, p2, p3); }
	void PLAYSTATS_JOB_ACTIVITY_END_f(Any* p0, Any* p1, Any* p2, Any* p3) { FastCall<void>(0x46be83cbe7baf8e1, p0, p1, p2, p3); }
	void PLAYSTATS_JOB_BEND(Any* p0, Any* p1, Any* p2, Any* p3) { Call<void>(0xa9f5cad239b3bc8f, p0, p1, p2, p3); }
	void PLAYSTATS_JOB_BEND_f(Any* p0, Any* p1, Any* p2, Any* p3) { FastCall<void>(0xa9f5cad239b3bc8f, p0, p1, p2, p3); }
	void PLAYSTATS_JOB_LTS_END(Any* p0, Any* p1, Any* p2, Any* p3) { Call<void>(0x721d862b060e8f31, p0, p1, p2, p3); }
	void PLAYSTATS_JOB_LTS_END_f(Any* p0, Any* p1, Any* p2, Any* p3) { FastCall<void>(0x721d862b060e8f31, p0, p1, p2, p3); }
	void PLAYSTATS_JOB_LTS_ROUND_END(Any* p0, Any* p1, Any* p2, Any* p3) { Call<void>(0xf4d6b9c7a61e060, p0, p1, p2, p3); }
	void PLAYSTATS_JOB_LTS_ROUND_END_f(Any* p0, Any* p1, Any* p2, Any* p3) { FastCall<void>(0xf4d6b9c7a61e060, p0, p1, p2, p3); }
	void PLAYSTATS_QUICKFIX_TOOL(int element, char* item) { Call<void>(0xaf8866596c8b48fb, element, item); }
	void PLAYSTATS_QUICKFIX_TOOL_f(int element, char* item) { FastCall<void>(0xaf8866596c8b48fb, element, item); }
	void PLAYSTATS_IDLE_KICK(int msStoodIdle) { Call<void>(0x94c38e69d80e1a5d, msStoodIdle); }
	void PLAYSTATS_IDLE_KICK_f(int msStoodIdle) { FastCall<void>(0x94c38e69d80e1a5d, msStoodIdle); }
	void PLAYSTATS_SET_JOIN_TYPE(int joinType) { Call<void>(0xbfe36f48ede8e1fe, joinType); }
	void PLAYSTATS_SET_JOIN_TYPE_f(int joinType) { FastCall<void>(0xbfe36f48ede8e1fe, joinType); }
	void PLAYSTATS_HEIST_SAVE_CHEAT(Hash hash, int p1) { Call<void>(0x9bb1934123a31c97, hash, p1); }
	void PLAYSTATS_HEIST_SAVE_CHEAT_f(Hash hash, int p1) { FastCall<void>(0x9bb1934123a31c97, hash, p1); }
	void PLAYSTATS_APPEND_DIRECTOR_METRIC(Any* p0) { Call<void>(0x21fca670436c5392, p0); }
	void PLAYSTATS_APPEND_DIRECTOR_METRIC_f(Any* p0) { FastCall<void>(0x21fca670436c5392, p0); }
	void PLAYSTATS_AWARD_BAD_SPORT(int id) { Call<void>(0xb73566cf80b97084, id); }
	void PLAYSTATS_AWARD_BAD_SPORT_f(int id) { FastCall<void>(0xb73566cf80b97084, id); }
	void PLAYSTATS_PEGASUS_AS_PERSONAL_AIRCRAFT(Hash modelHash) { Call<void>(0x28633820cdabdb39, modelHash); }
	void PLAYSTATS_PEGASUS_AS_PERSONAL_AIRCRAFT_f(Hash modelHash) { FastCall<void>(0x28633820cdabdb39, modelHash); }
	void _PLAYSTATS_SHOPMENU_NAV(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xe00f9bda743bc02c, p0, p1, p2, p3); }
	void _PLAYSTATS_SHOPMENU_NAV_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xe00f9bda743bc02c, p0, p1, p2, p3); }
	void PLAYSTATS_FM_EVENT_CHALLENGES(Any p0) { Call<void>(0xefac6efb02766b59, p0); }
	void PLAYSTATS_FM_EVENT_CHALLENGES_f(Any p0) { FastCall<void>(0xefac6efb02766b59, p0); }
	void PLAYSTATS_FM_EVENT_VEHICLETARGET(Any p0) { Call<void>(0xe1fca8433f3ec414, p0); }
	void PLAYSTATS_FM_EVENT_VEHICLETARGET_f(Any p0) { FastCall<void>(0xe1fca8433f3ec414, p0); }
	void PLAYSTATS_FM_EVENT_URBANWARFARE(Any p0) { Call<void>(0xbcc2a212a1ad032d, p0); }
	void PLAYSTATS_FM_EVENT_URBANWARFARE_f(Any p0) { FastCall<void>(0xbcc2a212a1ad032d, p0); }
	void PLAYSTATS_FM_EVENT_CHECKPOINTCOLLECTION(Any p0) { Call<void>(0xf1069d4ec68031cf, p0); }
	void PLAYSTATS_FM_EVENT_CHECKPOINTCOLLECTION_f(Any p0) { FastCall<void>(0xf1069d4ec68031cf, p0); }
	void PLAYSTATS_FM_EVENT_ATOB(Any p0) { Call<void>(0x34b8c9629c49e2ef, p0); }
	void PLAYSTATS_FM_EVENT_ATOB_f(Any p0) { FastCall<void>(0x34b8c9629c49e2ef, p0); }
	void PLAYSTATS_FM_EVENT_PENNEDIN(Any p0) { Call<void>(0x2e99e322c979a322, p0); }
	void PLAYSTATS_FM_EVENT_PENNEDIN_f(Any p0) { FastCall<void>(0x2e99e322c979a322, p0); }
	void PLAYSTATS_FM_EVENT_PASSTHEPARCEL(Any p0) { Call<void>(0x9f1e8f77ac4b5b20, p0); }
	void PLAYSTATS_FM_EVENT_PASSTHEPARCEL_f(Any p0) { FastCall<void>(0x9f1e8f77ac4b5b20, p0); }
	void PLAYSTATS_FM_EVENT_HOTPROPERTY(Any p0) { Call<void>(0x5f0b6cdd1fad739, p0); }
	void PLAYSTATS_FM_EVENT_HOTPROPERTY_f(Any p0) { FastCall<void>(0x5f0b6cdd1fad739, p0); }
	void PLAYSTATS_FM_EVENT_DEADDROP(Any p0) { Call<void>(0x2e99e2d5d42f5e7c, p0); }
	void PLAYSTATS_FM_EVENT_DEADDROP_f(Any p0) { FastCall<void>(0x2e99e2d5d42f5e7c, p0); }
	void PLAYSTATS_FM_EVENT_KINGOFTHECASTLE(Any p0) { Call<void>(0x8221f8fe697cb752, p0); }
	void PLAYSTATS_FM_EVENT_KINGOFTHECASTLE_f(Any p0) { FastCall<void>(0x8221f8fe697cb752, p0); }
	void PLAYSTATS_FM_EVENT_CRIMINALDAMAGE(Any p0) { Call<void>(0xc5bad26ffccc27fb, p0); }
	void PLAYSTATS_FM_EVENT_CRIMINALDAMAGE_f(Any p0) { FastCall<void>(0xc5bad26ffccc27fb, p0); }
	void PLAYSTATS_FM_EVENT_COMPETITIVEURBANWARFARE(Any p0) { Call<void>(0xb769072b5a4d762a, p0); }
	void PLAYSTATS_FM_EVENT_COMPETITIVEURBANWARFARE_f(Any p0) { FastCall<void>(0xb769072b5a4d762a, p0); }
	void PLAYSTATS_FM_EVENT_HUNTBEAST(Any p0) { Call<void>(0xa4a27b684bbd3b83, p0); }
	void PLAYSTATS_FM_EVENT_HUNTBEAST_f(Any p0) { FastCall<void>(0xa4a27b684bbd3b83, p0); }
	void PLAYSTATS_PIMENU_HIDE_OPTIONS(Any* data) { Call<void>(0xd1c89a0554d56614, data); }
	void PLAYSTATS_PIMENU_HIDE_OPTIONS_f(Any* data) { FastCall<void>(0xd1c89a0554d56614, data); }
	void _PLAYSTATS_NAMED_USER_CONTENT(BOOL isBoss, int bossType, int bossId1, int bossId2, int textType, char* textString, int textSource) { Call<void>(0x67bcc444d5ad321e, isBoss, bossType, bossId1, bossId2, textType, textString, textSource); }
	void _PLAYSTATS_NAMED_USER_CONTENT_f(BOOL isBoss, int bossType, int bossId1, int bossId2, int textType, char* textString, int textSource) { FastCall<void>(0x67bcc444d5ad321e, isBoss, bossType, bossId1, bossId2, textType, textString, textSource); }
	int LEADERBOARDS_GET_NUMBER_OF_COLUMNS(int p0, Any p1) { return Call<int>(0x7a64e9ea1158b459, p0, p1); }
	int LEADERBOARDS_GET_NUMBER_OF_COLUMNS_f(int p0, Any p1) { return FastCall<int>(0x7a64e9ea1158b459, p0, p1); }
	int LEADERBOARDS_GET_COLUMN_ID(int p0, int p1, int p2) { return Call<int>(0x96179ed8d8c7e4f2, p0, p1, p2); }
	int LEADERBOARDS_GET_COLUMN_ID_f(int p0, int p1, int p2) { return FastCall<int>(0x96179ed8d8c7e4f2, p0, p1, p2); }
	int LEADERBOARDS_GET_COLUMN_TYPE(int p0, Any p1, Any p2) { return Call<int>(0x6eab4c05c667c951, p0, p1, p2); }
	int LEADERBOARDS_GET_COLUMN_TYPE_f(int p0, Any p1, Any p2) { return FastCall<int>(0x6eab4c05c667c951, p0, p1, p2); }
	int LEADERBOARDS_READ_CLEAR_ALL() { return Call<int>(0xb5572766109bd3cf); }
	int LEADERBOARDS_READ_CLEAR_ALL_f() { return FastCall<int>(0xb5572766109bd3cf); }
	int LEADERBOARDS_READ_CLEAR(Any p0, Any p1, Any p2) { return Call<int>(0x340844805d4f358d, p0, p1, p2); }
	int LEADERBOARDS_READ_CLEAR_f(Any p0, Any p1, Any p2) { return FastCall<int>(0x340844805d4f358d, p0, p1, p2); }
	BOOL LEADERBOARDS_READ_PENDING(Any p0, Any p1, Any p2) { return Call<BOOL>(0x530925e0ea9734d7, p0, p1, p2); }
	BOOL LEADERBOARDS_READ_PENDING_f(Any p0, Any p1, Any p2) { return FastCall<BOOL>(0x530925e0ea9734d7, p0, p1, p2); }
	BOOL LEADERBOARDS_READ_ANY_PENDING() { return Call<BOOL>(0xbc25539a44049d64); }
	BOOL LEADERBOARDS_READ_ANY_PENDING_f() { return FastCall<BOOL>(0xbc25539a44049d64); }
	BOOL LEADERBOARDS_READ_SUCCESSFUL(Any p0, Any p1, Any p2) { return Call<BOOL>(0xf58f4d0a0117bb3a, p0, p1, p2); }
	BOOL LEADERBOARDS_READ_SUCCESSFUL_f(Any p0, Any p1, Any p2) { return FastCall<BOOL>(0xf58f4d0a0117bb3a, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_FRIENDS_BY_ROW(Any* p0, Any* p1, Any p2, BOOL p3, Any p4, Any p5) { return Call<BOOL>(0x12bca600de80e342, p0, p1, p2, p3, p4, p5); }
	BOOL LEADERBOARDS2_READ_FRIENDS_BY_ROW_f(Any* p0, Any* p1, Any p2, BOOL p3, Any p4, Any p5) { return FastCall<BOOL>(0x12bca600de80e342, p0, p1, p2, p3, p4, p5); }
	BOOL LEADERBOARDS2_READ_BY_HANDLE(Any* p0, Any* p1) { return Call<BOOL>(0x539ceed57eb7a7ea, p0, p1); }
	BOOL LEADERBOARDS2_READ_BY_HANDLE_f(Any* p0, Any* p1) { return FastCall<BOOL>(0x539ceed57eb7a7ea, p0, p1); }
	BOOL LEADERBOARDS2_READ_BY_RANK(Any* p0, Any p1, Any p2) { return Call<BOOL>(0x101202e99443126e, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_BY_RANK_f(Any* p0, Any p1, Any p2) { return FastCall<BOOL>(0x101202e99443126e, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_BY_RADIUS(Any* p0, Any p1, Any* p2) { return Call<BOOL>(0x539ceed58fc3a654, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_BY_RADIUS_f(Any* p0, Any p1, Any* p2) { return FastCall<BOOL>(0x539ceed58fc3a654, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_BY_SCORE_INT(Any* p0, Any p1, Any p2) { return Call<BOOL>(0x2375673ab964d380, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_BY_SCORE_INT_f(Any* p0, Any p1, Any p2) { return FastCall<BOOL>(0x2375673ab964d380, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_BY_SCORE_FLOAT(Any* p0, float p1, Any p2) { return Call<BOOL>(0x1bb88371f352b9ad, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_BY_SCORE_FLOAT_f(Any* p0, float p1, Any p2) { return FastCall<BOOL>(0x1bb88371f352b9ad, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_RANK_PREDICTION(Any* p0, Any* p1, Any* p2) { return Call<BOOL>(0x65a78d6b815677dc, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_RANK_PREDICTION_f(Any* p0, Any* p1, Any* p2) { return FastCall<BOOL>(0x65a78d6b815677dc, p0, p1, p2); }
	BOOL LEADERBOARDS2_READ_BY_PLAFORM(Any* p0, char* gamerHandleCsv, char* platformName) { return Call<BOOL>(0x2000ebdc117e4287, p0, gamerHandleCsv, platformName); }
	BOOL LEADERBOARDS2_READ_BY_PLAFORM_f(Any* p0, char* gamerHandleCsv, char* platformName) { return FastCall<BOOL>(0x2000ebdc117e4287, p0, gamerHandleCsv, platformName); }
	BOOL LEADERBOARDS2_READ_GET_ROW_DATA_START(Any* p0) { return Call<BOOL>(0x13d90e5fa7c55ba1, p0); }
	BOOL LEADERBOARDS2_READ_GET_ROW_DATA_START_f(Any* p0) { return FastCall<BOOL>(0x13d90e5fa7c55ba1, p0); }
	void LEADERBOARDS2_READ_GET_ROW_DATA_END() { Call<void>(0xa01edc519d57e7da); }
	void LEADERBOARDS2_READ_GET_ROW_DATA_END_f() { FastCall<void>(0xa01edc519d57e7da); }
	BOOL LEADERBOARDS2_READ_GET_ROW_DATA_INFO(Any p0, Any* p1) { return Call<BOOL>(0x63bcade20da6e56f, p0, p1); }
	BOOL LEADERBOARDS2_READ_GET_ROW_DATA_INFO_f(Any p0, Any* p1) { return FastCall<BOOL>(0x63bcade20da6e56f, p0, p1); }
	int LEADERBOARDS2_READ_GET_ROW_DATA_INT(Any p0, Any p1) { return Call<int>(0xa01edc519d57f6ee, p0, p1); }
	int LEADERBOARDS2_READ_GET_ROW_DATA_INT_f(Any p0, Any p1) { return FastCall<int>(0xa01edc519d57f6ee, p0, p1); }
	float LEADERBOARDS2_READ_GET_ROW_DATA_FLOAT(Any p0, Any p1) { return ToFloat(Call<_float>(0x13d90e5fa70ab99b, p0, p1)); }
	float LEADERBOARDS2_READ_GET_ROW_DATA_FLOAT_f(Any p0, Any p1) { return ToFloat(FastCall<_float>(0x13d90e5fa70ab99b, p0, p1)); }
	BOOL LEADERBOARDS2_WRITE_DATA(Any* p0) { return Call<BOOL>(0x3d49c9204da621ed, p0); }
	BOOL LEADERBOARDS2_WRITE_DATA_f(Any* p0) { return FastCall<BOOL>(0x3d49c9204da621ed, p0); }
	void LEADERBOARDS_WRITE_ADD_COLUMN(Any p0, Any p1, float p2) { Call<void>(0xafee79406df14ddd, p0, p1, p2); }
	void LEADERBOARDS_WRITE_ADD_COLUMN_f(Any p0, Any p1, float p2) { FastCall<void>(0xafee79406df14ddd, p0, p1, p2); }
	void LEADERBOARDS_WRITE_ADD_COLUMN_LONG(Any p0, Any p1, Any p2) { Call<void>(0xfd26eac084544b9e, p0, p1, p2); }
	void LEADERBOARDS_WRITE_ADD_COLUMN_LONG_f(Any p0, Any p1, Any p2) { FastCall<void>(0xfd26eac084544b9e, p0, p1, p2); }
	BOOL LEADERBOARDS_CACHE_DATA_ROW(Any* p0) { return Call<BOOL>(0xaf6f5be8f26816ab, p0); }
	BOOL LEADERBOARDS_CACHE_DATA_ROW_f(Any* p0) { return FastCall<BOOL>(0xaf6f5be8f26816ab, p0); }
	void LEADERBOARDS_CLEAR_CACHE_DATA() { Call<void>(0x4e99f14ae3b89042); }
	void LEADERBOARDS_CLEAR_CACHE_DATA_f() { FastCall<void>(0x4e99f14ae3b89042); }
	void LEADERBOARDS_CLEAR_CACHE_DATA_ID(Any p0) { Call<void>(0xec7679fa22dcde38, p0); }
	void LEADERBOARDS_CLEAR_CACHE_DATA_ID_f(Any p0) { FastCall<void>(0xec7679fa22dcde38, p0); }
	BOOL LEADERBOARDS_GET_CACHE_EXISTS(Any p0) { return Call<BOOL>(0x66948dbddc14aacb, p0); }
	BOOL LEADERBOARDS_GET_CACHE_EXISTS_f(Any p0) { return FastCall<BOOL>(0x66948dbddc14aacb, p0); }
	int LEADERBOARDS_GET_CACHE_TIME(Any p0) { return Call<int>(0x2cdc3129c11edcfc, p0); }
	int LEADERBOARDS_GET_CACHE_TIME_f(Any p0) { return FastCall<int>(0x2cdc3129c11edcfc, p0); }
	int LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS(Any p0) { return Call<int>(0x3bdc7cc464c6b7ba, p0); }
	int LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS_f(Any p0) { return FastCall<int>(0x3bdc7cc464c6b7ba, p0); }
	BOOL LEADERBOARDS_GET_CACHE_DATA_ROW(Any p0, Any p1, Any* p2) { return Call<BOOL>(0x13a815ac12d15254, p0, p1, p2); }
	BOOL LEADERBOARDS_GET_CACHE_DATA_ROW_f(Any p0, Any p1, Any* p2) { return FastCall<BOOL>(0x13a815ac12d15254, p0, p1, p2); }
	void PRESENCE_EVENT_UPDATESTAT_INT(Hash statHash, int value, int p2) { Call<void>(0x11a6cdf34961cc56, statHash, value, p2); }
	void PRESENCE_EVENT_UPDATESTAT_INT_f(Hash statHash, int value, int p2) { FastCall<void>(0x11a6cdf34961cc56, statHash, value, p2); }
	void PRESENCE_EVENT_UPDATESTAT_FLOAT(Hash statHash, float value, int p2) { Call<void>(0x432b1e4677f4d503, statHash, value, p2); }
	void PRESENCE_EVENT_UPDATESTAT_FLOAT_f(Hash statHash, float value, int p2) { FastCall<void>(0x432b1e4677f4d503, statHash, value, p2); }
	void PRESENCE_EVENT_UPDATESTAT_INT_WITH_STRING(Hash statHash, int value, int p2, char* string) { Call<void>(0x3ebbbc99f84bb741, statHash, value, p2, string); }
	void PRESENCE_EVENT_UPDATESTAT_INT_WITH_STRING_f(Hash statHash, int value, int p2, char* string) { FastCall<void>(0x3ebbbc99f84bb741, statHash, value, p2, string); }
	BOOL GET_PLAYER_HAS_DRIVEN_ALL_VEHICLES() { return Call<BOOL>(0x61b1d0d78ef40d86); }
	BOOL GET_PLAYER_HAS_DRIVEN_ALL_VEHICLES_f() { return FastCall<BOOL>(0x61b1d0d78ef40d86); }
	void SET_HAS_POSTED_ALL_VEHICLES_DRIVEN() { Call<void>(0x514e7c0cff0d6b60); }
	void SET_HAS_POSTED_ALL_VEHICLES_DRIVEN_f() { FastCall<void>(0x514e7c0cff0d6b60); }
	void SET_PROFILE_SETTING_PROLOGUE_COMPLETE() { Call<void>(0xdc8e23d6df4693ef); }
	void SET_PROFILE_SETTING_PROLOGUE_COMPLETE_f() { FastCall<void>(0xdc8e23d6df4693ef); }
	void SET_PROFILE_SETTING_SP_CHOP_MISSION_COMPLETE() { Call<void>(0xed0969ef7ddf52e5); }
	void SET_PROFILE_SETTING_SP_CHOP_MISSION_COMPLETE_f() { FastCall<void>(0xed0969ef7ddf52e5); }
	void SET_PROFILE_SETTING_CREATOR_RACES_DONE(int value) { Call<void>(0x1beb9faa37bbc014, value); }
	void SET_PROFILE_SETTING_CREATOR_RACES_DONE_f(int value) { FastCall<void>(0x1beb9faa37bbc014, value); }
	void SET_PROFILE_SETTING_CREATOR_DM_DONE(int value) { Call<void>(0xc975bc15144beb83, value); }
	void SET_PROFILE_SETTING_CREATOR_DM_DONE_f(int value) { FastCall<void>(0xc975bc15144beb83, value); }
	void SET_PROFILE_SETTING_CREATOR_CTF_DONE(int value) { Call<void>(0x6541c688566a4ee1, value); }
	void SET_PROFILE_SETTING_CREATOR_CTF_DONE_f(int value) { FastCall<void>(0x6541c688566a4ee1, value); }
	void SET_JOB_ACTIVITY_ID_STARTED(Any p0, int characterSlot) { Call<void>(0xa2a915b3b2204fce, p0, characterSlot); }
	void SET_JOB_ACTIVITY_ID_STARTED_f(Any p0, int characterSlot) { FastCall<void>(0xa2a915b3b2204fce, p0, characterSlot); }
	void SET_FREEMODE_PROLOGUE_DONE(Any p0, int characterSlot) { Call<void>(0xb8d0a7c22f5380e7, p0, characterSlot); }
	void SET_FREEMODE_PROLOGUE_DONE_f(Any p0, int characterSlot) { FastCall<void>(0xb8d0a7c22f5380e7, p0, characterSlot); }
	void SET_FREEMODE_STRAND_PROGRESSION_STATUS(int profileSetting, int settingValue) { Call<void>(0xed3cad6c33a0d3dc, profileSetting, settingValue); }
	void SET_FREEMODE_STRAND_PROGRESSION_STATUS_f(int profileSetting, int settingValue) { FastCall<void>(0xed3cad6c33a0d3dc, profileSetting, settingValue); }
	void STAT_NETWORK_INCREMENT_ON_SUICIDE(Any p0, float p1) { Call<void>(0xbbad7db0507db23a, p0, p1); }
	void STAT_NETWORK_INCREMENT_ON_SUICIDE_f(Any p0, float p1) { FastCall<void>(0xbbad7db0507db23a, p0, p1); }
	void STAT_SET_CHEAT_IS_ACTIVE() { Call<void>(0x2ed68dd4f6a572c7); }
	void STAT_SET_CHEAT_IS_ACTIVE_f() { FastCall<void>(0x2ed68dd4f6a572c7); }
	BOOL LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE(Any* p0, Any* p1) { return Call<BOOL>(0x2636fcf859dd47c7, p0, p1); }
	BOOL LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE_f(Any* p0, Any* p1) { return FastCall<BOOL>(0x2636fcf859dd47c7, p0, p1); }
	void FORCE_CLOUD_MP_STATS_DOWNLOAD_AND_OVERWRITE_LOCAL_SAVE() { Call<void>(0xd5782e29ee9739a6); }
	void FORCE_CLOUD_MP_STATS_DOWNLOAD_AND_OVERWRITE_LOCAL_SAVE_f() { FastCall<void>(0xd5782e29ee9739a6); }
	void STAT_MIGRATE_CLEAR_FOR_RESTART() { Call<void>(0xc098d2e8be145d68); }
	void STAT_MIGRATE_CLEAR_FOR_RESTART_f() { FastCall<void>(0xc098d2e8be145d68); }
	BOOL STAT_MIGRATE_SAVEGAME_START(char* platformName) { return Call<BOOL>(0x96a6d3a5ba725e71, platformName); }
	BOOL STAT_MIGRATE_SAVEGAME_START_f(char* platformName) { return FastCall<BOOL>(0x96a6d3a5ba725e71, platformName); }
	int STAT_MIGRATE_SAVEGAME_GET_STATUS() { return Call<int>(0xca71a8526a29384c); }
	int STAT_MIGRATE_SAVEGAME_GET_STATUS_f() { return FastCall<int>(0xca71a8526a29384c); }
	BOOL STAT_MIGRATE_CHECK_ALREADY_DONE() { return Call<BOOL>(0x5f2c0a72445bc11f); }
	BOOL STAT_MIGRATE_CHECK_ALREADY_DONE_f() { return FastCall<BOOL>(0x5f2c0a72445bc11f); }
	BOOL STAT_MIGRATE_CHECK_START() { return Call<BOOL>(0x7b58155de08eaf0c); }
	BOOL STAT_MIGRATE_CHECK_START_f() { return FastCall<BOOL>(0x7b58155de08eaf0c); }
	int STAT_MIGRATE_CHECK_GET_IS_PLATFORM_AVAILABLE(int p0) { return Call<int>(0xfd98397856370493, p0); }
	int STAT_MIGRATE_CHECK_GET_IS_PLATFORM_AVAILABLE_f(int p0) { return FastCall<int>(0xfd98397856370493, p0); }
	int STAT_MIGRATE_CHECK_GET_PLATFORM_STATUS(int p0, Any* p1) { return Call<int>(0x2a74c9831217077f, p0, p1); }
	int STAT_MIGRATE_CHECK_GET_PLATFORM_STATUS_f(int p0, Any* p1) { return FastCall<int>(0x2a74c9831217077f, p0, p1); }
	int STAT_GET_SAVE_MIGRATION_STATUS(Any* data) { return Call<int>(0x64e56546c1110db1, data); }
	int STAT_GET_SAVE_MIGRATION_STATUS_f(Any* data) { return FastCall<int>(0x64e56546c1110db1, data); }
	BOOL STAT_SAVE_MIGRATION_CANCEL_PENDING_OPERATION() { return Call<BOOL>(0xe697eec06d1cf082); }
	BOOL STAT_SAVE_MIGRATION_CANCEL_PENDING_OPERATION_f() { return FastCall<BOOL>(0xe697eec06d1cf082); }
	int STAT_GET_CANCEL_SAVE_MIGRATION_STATUS() { return Call<int>(0x88bfb94e71d96914); }
	int STAT_GET_CANCEL_SAVE_MIGRATION_STATUS_f() { return FastCall<int>(0x88bfb94e71d96914); }
	BOOL STAT_SAVE_MIGRATION_CONSUME_CONTENT(Hash contentId, char* srcPlatform, char* srcGamerHandle) { return Call<BOOL>(0xb3c544a2d298d76e, contentId, srcPlatform, srcGamerHandle); }
	BOOL STAT_SAVE_MIGRATION_CONSUME_CONTENT_f(Hash contentId, char* srcPlatform, char* srcGamerHandle) { return FastCall<BOOL>(0xb3c544a2d298d76e, contentId, srcPlatform, srcGamerHandle); }
	int STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_STATUS(int* p0) { return Call<int>(0x19525179acbf391a, p0); }
	int STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_STATUS_f(int* p0) { return FastCall<int>(0x19525179acbf391a, p0); }
	void STAT_ENABLE_STATS_TRACKING() { Call<void>(0x23d07ca12fcfd908); }
	void STAT_ENABLE_STATS_TRACKING_f() { FastCall<void>(0x23d07ca12fcfd908); }
	void STAT_DISABLE_STATS_TRACKING() { Call<void>(0xe7796ae4640d6b19); }
	void STAT_DISABLE_STATS_TRACKING_f() { FastCall<void>(0xe7796ae4640d6b19); }
	BOOL STAT_IS_STATS_TRACKING_ENABLED() { return Call<BOOL>(0xc680974b3add65e3); }
	BOOL STAT_IS_STATS_TRACKING_ENABLED_f() { return FastCall<BOOL>(0xc680974b3add65e3); }
	BOOL STAT_START_RECORD_STAT(int statType, int valueType) { return Call<BOOL>(0xf522842d40e633da, statType, valueType); }
	BOOL STAT_START_RECORD_STAT_f(int statType, int valueType) { return FastCall<BOOL>(0xf522842d40e633da, statType, valueType); }
	BOOL STAT_STOP_RECORD_STAT() { return Call<BOOL>(0x7dd53f5e4412a350); }
	BOOL STAT_STOP_RECORD_STAT_f() { return FastCall<BOOL>(0x7dd53f5e4412a350); }
	BOOL STAT_GET_RECORDED_VALUE(float* value) { return Call<BOOL>(0xba554d094498f8f6, value); }
	BOOL STAT_GET_RECORDED_VALUE_f(float* value) { return FastCall<BOOL>(0xba554d094498f8f6, value); }
	BOOL STAT_IS_RECORDING_STAT() { return Call<BOOL>(0x6142391eeedc4a8c); }
	BOOL STAT_IS_RECORDING_STAT_f() { return FastCall<BOOL>(0x6142391eeedc4a8c); }
	int STAT_GET_CURRENT_NEAR_MISS_NOCRASH_PRECISE() { return Call<int>(0xd93b101e0a53bffc); }
	int STAT_GET_CURRENT_NEAR_MISS_NOCRASH_PRECISE_f() { return FastCall<int>(0xd93b101e0a53bffc); }
	float STAT_GET_CURRENT_REAR_WHEEL_DISTANCE() { return ToFloat(Call<_float>(0x12ef50cb37ed111a)); }
	float STAT_GET_CURRENT_REAR_WHEEL_DISTANCE_f() { return ToFloat(FastCall<_float>(0x12ef50cb37ed111a)); }
	float STAT_GET_CURRENT_FRONT_WHEEL_DISTANCE() { return ToFloat(Call<_float>(0x861128754a7f189)); }
	float STAT_GET_CURRENT_FRONT_WHEEL_DISTANCE_f() { return ToFloat(FastCall<_float>(0x861128754a7f189)); }
	float STAT_GET_CURRENT_JUMP_DISTANCE() { return ToFloat(Call<_float>(0xcaf53314f9ab1e0c)); }
	float STAT_GET_CURRENT_JUMP_DISTANCE_f() { return ToFloat(FastCall<_float>(0xcaf53314f9ab1e0c)); }
	float STAT_GET_CURRENT_DRIVE_NOCRASH_DISTANCE() { return ToFloat(Call<_float>(0x46f0beda1ace917d)); }
	float STAT_GET_CURRENT_DRIVE_NOCRASH_DISTANCE_f() { return ToFloat(FastCall<_float>(0x46f0beda1ace917d)); }
	float STAT_GET_CURRENT_SPEED() { return ToFloat(Call<_float>(0x4c3195500e3174d)); }
	float STAT_GET_CURRENT_SPEED_f() { return ToFloat(FastCall<_float>(0x4c3195500e3174d)); }
	float STAT_GET_CURRENT_DRIVING_REVERSE_DISTANCE() { return ToFloat(Call<_float>(0x11b07fd72d0e6984)); }
	float STAT_GET_CURRENT_DRIVING_REVERSE_DISTANCE_f() { return ToFloat(FastCall<_float>(0x11b07fd72d0e6984)); }
	float STAT_GET_CURRENT_SKYDIVING_DISTANCE() { return ToFloat(Call<_float>(0x7ce420bd75534e3c)); }
	float STAT_GET_CURRENT_SKYDIVING_DISTANCE_f() { return ToFloat(FastCall<_float>(0x7ce420bd75534e3c)); }
	float STAT_GET_CHALLENGE_FLYING_DIST() { return ToFloat(Call<_float>(0x8a5ecea34b394e6)); }
	float STAT_GET_CHALLENGE_FLYING_DIST_f() { return ToFloat(FastCall<_float>(0x8a5ecea34b394e6)); }
	BOOL STAT_GET_FLYING_ALTITUDE(float* outValue) { return Call<BOOL>(0x5a31e59306f3ecde, outValue); }
	BOOL STAT_GET_FLYING_ALTITUDE_f(float* outValue) { return FastCall<BOOL>(0x5a31e59306f3ecde, outValue); }
	BOOL STAT_IS_PLAYER_VEHICLE_ABOVE_OCEAN() { return Call<BOOL>(0xd6f6e126eb41ce15); }
	BOOL STAT_IS_PLAYER_VEHICLE_ABOVE_OCEAN_f() { return FastCall<BOOL>(0xd6f6e126eb41ce15); }
	float STAT_GET_VEHICLE_BAIL_DISTANCE() { return ToFloat(Call<_float>(0x7d63df00a21acb8b)); }
	float STAT_GET_VEHICLE_BAIL_DISTANCE_f() { return ToFloat(FastCall<_float>(0x7d63df00a21acb8b)); }
	BOOL STAT_ROLLBACK_SAVE_MIGRATION() { return Call<BOOL>(0xa0bf36981d39a13c); }
	BOOL STAT_ROLLBACK_SAVE_MIGRATION_f() { return FastCall<BOOL>(0xa0bf36981d39a13c); }
	void SET_HAS_SPECIALEDITION_CONTENT(int value) { Call<void>(0x81f25085fb64b681, value); }
	void SET_HAS_SPECIALEDITION_CONTENT_f(int value) { FastCall<void>(0x81f25085fb64b681, value); }
	void SET_SAVE_MIGRATION_TRANSACTION_ID_WARNING(int transactionId) { Call<void>(0xda804a48b452f06f, transactionId); }
	void SET_SAVE_MIGRATION_TRANSACTION_ID_WARNING_f(int transactionId) { FastCall<void>(0xda804a48b452f06f, transactionId); }
	void GET_BOSS_GOON_UUID(int characterSlot, Any p1, Any p2) { Call<void>(0xe30a9925eb24e20a, characterSlot, p1, p2); }
	void GET_BOSS_GOON_UUID_f(int characterSlot, Any p1, Any p2) { FastCall<void>(0xe30a9925eb24e20a, characterSlot, p1, p2); }
	void PLAYSTATS_BW_BOSSONBOSSDEATHMATCH(Any p0) { Call<void>(0xe02c688282490340, p0); }
	void PLAYSTATS_BW_BOSSONBOSSDEATHMATCH_f(Any p0) { FastCall<void>(0xe02c688282490340, p0); }
	void PLAYSTATS_BW_YATCHATTACK(Any p0) { Call<void>(0x8475e598dad63943, p0); }
	void PLAYSTATS_BW_YATCHATTACK_f(Any p0) { FastCall<void>(0x8475e598dad63943, p0); }
	void PLAYSTATS_BW_HUNT_THE_BOSS(Any p0) { Call<void>(0x8bbcad8871fdff51, p0); }
	void PLAYSTATS_BW_HUNT_THE_BOSS_f(Any p0) { FastCall<void>(0x8bbcad8871fdff51, p0); }
	void PLAYSTATS_BW_SIGHTSEER(Any p0) { Call<void>(0xcedb13bfe3c9c006, p0); }
	void PLAYSTATS_BW_SIGHTSEER_f(Any p0) { FastCall<void>(0xcedb13bfe3c9c006, p0); }
	void PLAYSTATS_BW_ASSAULT(Any p0) { Call<void>(0x3ada5b34ad7f3a7, p0); }
	void PLAYSTATS_BW_ASSAULT_f(Any p0) { FastCall<void>(0x3ada5b34ad7f3a7, p0); }
	void PLAYSTATS_BW_BELLY_OF_THE_BEAST(Any p0) { Call<void>(0x78c08a842956008, p0); }
	void PLAYSTATS_BW_BELLY_OF_THE_BEAST_f(Any p0) { FastCall<void>(0x78c08a842956008, p0); }
	void PLAYSTATS_BW_HEAD_HUNTER(Any p0) { Call<void>(0x8444b67afc45f2c9, p0); }
	void PLAYSTATS_BW_HEAD_HUNTER_f(Any p0) { FastCall<void>(0x8444b67afc45f2c9, p0); }
	void PLAYSTATS_BW_FRAGILE_GOODS(Any p0) { Call<void>(0x74aa0bf515ff4011, p0); }
	void PLAYSTATS_BW_FRAGILE_GOODS_f(Any p0) { FastCall<void>(0x74aa0bf515ff4011, p0); }
	void PLAYSTATS_BW_AIR_FREIGHT(Any p0) { Call<void>(0x8430c2606e26ad18, p0); }
	void PLAYSTATS_BW_AIR_FREIGHT_f(Any p0) { FastCall<void>(0x8430c2606e26ad18, p0); }
	void PLAYSTATS_BC_CAR_JACKING(Any p0) { Call<void>(0xa997065409e353ee, p0); }
	void PLAYSTATS_BC_CAR_JACKING_f(Any p0) { FastCall<void>(0xa997065409e353ee, p0); }
	void PLAYSTATS_BC_SMASH_AND_GRAB(Any p0) { Call<void>(0x8bcb5e5baab9141, p0); }
	void PLAYSTATS_BC_SMASH_AND_GRAB_f(Any p0) { FastCall<void>(0x8bcb5e5baab9141, p0); }
	void PLAYSTATS_BC_PROTECTION_RACKET(Any p0) { Call<void>(0x99350df6585c8362, p0); }
	void PLAYSTATS_BC_PROTECTION_RACKET_f(Any p0) { FastCall<void>(0x99350df6585c8362, p0); }
	void PLAYSTATS_BC_MOST_WANTED(Any p0) { Call<void>(0xa9b575f9d0c0d0e1, p0); }
	void PLAYSTATS_BC_MOST_WANTED_f(Any p0) { FastCall<void>(0xa9b575f9d0c0d0e1, p0); }
	void PLAYSTATS_BC_FINDERS_KEEPERS(Any p0) { Call<void>(0xdafc5dc39e953945, p0); }
	void PLAYSTATS_BC_FINDERS_KEEPERS_f(Any p0) { FastCall<void>(0xdafc5dc39e953945, p0); }
	void PLAYSTATS_BC_POINT_TO_POINT(Any p0) { Call<void>(0x28c875fdd27ec6e5, p0); }
	void PLAYSTATS_BC_POINT_TO_POINT_f(Any p0) { FastCall<void>(0x28c875fdd27ec6e5, p0); }
	void PLAYSTATS_BC_CASHING(Any p0) { Call<void>(0x3ad9630009784a5, p0); }
	void PLAYSTATS_BC_CASHING_f(Any p0) { FastCall<void>(0x3ad9630009784a5, p0); }
	void PLAYSTATS_BC_SALVAGE(Any p0) { Call<void>(0x3ad96334e9ed27d, p0); }
	void PLAYSTATS_BC_SALVAGE_f(Any p0) { FastCall<void>(0x3ad96334e9ed27d, p0); }
	void PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT(int amount) { Call<void>(0x10a31f510ce8759b, amount); }
	void PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT_f(int amount) { FastCall<void>(0x10a31f510ce8759b, amount); }
	void PLAYSTATS_BUY_CONTRABAND_MISSION(Any* data) { Call<void>(0x95b8bb7f01bd6030, data); }
	void PLAYSTATS_BUY_CONTRABAND_MISSION_f(Any* data) { FastCall<void>(0x95b8bb7f01bd6030, data); }
	void PLAYSTATS_SELL_CONTRABAND_MISSION(Any* data) { Call<void>(0x159edaf86a2d185c, data); }
	void PLAYSTATS_SELL_CONTRABAND_MISSION_f(Any* data) { FastCall<void>(0x159edaf86a2d185c, data); }
	void PLAYSTATS_DEFEND_CONTRABAND_MISSION(Any* data) { Call<void>(0x9d9610e8a8324b78, data); }
	void PLAYSTATS_DEFEND_CONTRABAND_MISSION_f(Any* data) { FastCall<void>(0x9d9610e8a8324b78, data); }
	void PLAYSTATS_RECOVER_CONTRABAND_MISSION(Any* data) { Call<void>(0x8b90efb36b8a3692, data); }
	void PLAYSTATS_RECOVER_CONTRABAND_MISSION_f(Any* data) { FastCall<void>(0x8b90efb36b8a3692, data); }
	void PLAYSTATS_HIT_CONTRABAND_DESTROY_LIMIT(Any p0) { Call<void>(0xde0ce6d1c2dd0a4d, p0); }
	void PLAYSTATS_HIT_CONTRABAND_DESTROY_LIMIT_f(Any p0) { FastCall<void>(0xde0ce6d1c2dd0a4d, p0); }
	void START_BEING_BOSS(Any p0, Any p1, Any p2) { Call<void>(0x867a22c51f99b2a, p0, p1, p2); }
	void START_BEING_BOSS_f(Any p0, Any p1, Any p2) { FastCall<void>(0x867a22c51f99b2a, p0, p1, p2); }
	void START_BEING_GOON(Any p0, Any p1, Any p2) { Call<void>(0x867a22c51fbe084, p0, p1, p2); }
	void START_BEING_GOON_f(Any p0, Any p1, Any p2) { FastCall<void>(0x867a22c51fbe084, p0, p1, p2); }
	void END_BEING_BOSS(Any p0, Any p1, Any p2) { Call<void>(0xc325e3b806008511, p0, p1, p2); }
	void END_BEING_BOSS_f(Any p0, Any p1, Any p2) { FastCall<void>(0xc325e3b806008511, p0, p1, p2); }
	void END_BEING_GOON(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xc325e3b80602ca6b, p0, p1, p2, p3, p4); }
	void END_BEING_GOON_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xc325e3b80602ca6b, p0, p1, p2, p3, p4); }
	void HIRED_LIMO(Any p0, Any p1) { Call<void>(0x6fe18fdc1baee, p0, p1); }
	void HIRED_LIMO_f(Any p0, Any p1) { FastCall<void>(0x6fe18fdc1baee, p0, p1); }
	void ORDER_BOSS_VEHICLE(Any p0, Any p1, Hash vehicleHash) { Call<void>(0x22044bd47e18adab, p0, p1, vehicleHash); }
	void ORDER_BOSS_VEHICLE_f(Any p0, Any p1, Hash vehicleHash) { FastCall<void>(0x22044bd47e18adab, p0, p1, vehicleHash); }
	void CHANGE_UNIFORM(Any p0, Any p1, Any p2) { Call<void>(0xda96e886e0c06405, p0, p1, p2); }
	void CHANGE_UNIFORM_f(Any p0, Any p1, Any p2) { FastCall<void>(0xda96e886e0c06405, p0, p1, p2); }
	void CHANGE_GOON_LOOKING_FOR_WORK(Any p0) { Call<void>(0xff1189b4df23760c, p0); }
	void CHANGE_GOON_LOOKING_FOR_WORK_f(Any p0) { FastCall<void>(0xff1189b4df23760c, p0); }
	void SEND_METRIC_GHOSTING_TO_PLAYER(Any p0) { Call<void>(0xa9fbda118b2cbbd1, p0); }
	void SEND_METRIC_GHOSTING_TO_PLAYER_f(Any p0) { FastCall<void>(0xa9fbda118b2cbbd1, p0); }
	void SEND_METRIC_VIP_POACH(Any p0, Any p1, Any p2) { Call<void>(0xc6e3d49553d5f4d, p0, p1, p2); }
	void SEND_METRIC_VIP_POACH_f(Any p0, Any p1, Any p2) { FastCall<void>(0xc6e3d49553d5f4d, p0, p1, p2); }
	void SEND_METRIC_PUNISH_BODYGUARD(Any p0) { Call<void>(0xa475d3dac5ce3231, p0); }
	void SEND_METRIC_PUNISH_BODYGUARD_f(Any p0) { FastCall<void>(0xa475d3dac5ce3231, p0); }
	void PLAYSTATS_START_TRACKING_STUNTS() { Call<void>(0x4fc64f72af7b95d0); }
	void PLAYSTATS_START_TRACKING_STUNTS_f() { FastCall<void>(0x4fc64f72af7b95d0); }
	void PLAYSTATS_STOP_TRACKING_STUNTS() { Call<void>(0x58a9b4e2c89a6f8); }
	void PLAYSTATS_STOP_TRACKING_STUNTS_f() { FastCall<void>(0x58a9b4e2c89a6f8); }
	void PLAYSTATS_MISSION_ENDED(Any p0) { Call<void>(0x7fb26d3bfd12fe93, p0); }
	void PLAYSTATS_MISSION_ENDED_f(Any p0) { FastCall<void>(0x7fb26d3bfd12fe93, p0); }
	void PLAYSTATS_IMPEXP_MISSION_ENDED(Any p0) { Call<void>(0x3248e11d2c0b630d, p0); }
	void PLAYSTATS_IMPEXP_MISSION_ENDED_f(Any p0) { FastCall<void>(0x3248e11d2c0b630d, p0); }
	void PLAYSTATS_CHANGE_MC_ROLE(Any p0, Any p1, Any p2, Any p3, int role, int p5, Any p6) { Call<void>(0x28a7c2d3e93bc8e4, p0, p1, p2, p3, role, p5, p6); }
	void PLAYSTATS_CHANGE_MC_ROLE_f(Any p0, Any p1, Any p2, Any p3, int role, int p5, Any p6) { FastCall<void>(0x28a7c2d3e93bc8e4, p0, p1, p2, p3, role, p5, p6); }
	void PLAYSTATS_CHANGE_MC_OUTFIT(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0x9dc25d7e84a6d2f1, p0, p1, p2, p3, p4); }
	void PLAYSTATS_CHANGE_MC_OUTFIT_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0x9dc25d7e84a6d2f1, p0, p1, p2, p3, p4); }
	void PLAYSTATS_SWITCH_MC_EMBLEM(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xd64ca51715fe968c, p0, p1, p2, p3, p4); }
	void PLAYSTATS_SWITCH_MC_EMBLEM_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xd64ca51715fe968c, p0, p1, p2, p3, p4); }
	void PLAYSTATS_MC_REQUEST_BIKE(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xee672006e5ddb146, p0, p1, p2, p3, p4); }
	void PLAYSTATS_MC_REQUEST_BIKE_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xee672006e5ddb146, p0, p1, p2, p3, p4); }
	void PLAYSTATS_MC_KILLED_RIVAL_MC_MEMBER(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xa7ab938b9e116c61, p0, p1, p2, p3, p4); }
	void PLAYSTATS_MC_KILLED_RIVAL_MC_MEMBER_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xa7ab938b9e116c61, p0, p1, p2, p3, p4); }
	void PLAYSTATS_ABANDONED_MC(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xce40d313c89341f5, p0, p1, p2, p3, p4); }
	void PLAYSTATS_ABANDONED_MC_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xce40d313c89341f5, p0, p1, p2, p3, p4); }
	void PLAYSTATS_EARNED_MC_POINTS(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { Call<void>(0xfc9747532f9877d8, p0, p1, p2, p3, p4, p5); }
	void PLAYSTATS_EARNED_MC_POINTS_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { FastCall<void>(0xfc9747532f9877d8, p0, p1, p2, p3, p4, p5); }
	void PLAYSTATS_MC_FORMATION_ENDS(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { Call<void>(0x7c5a9eec1436fa3b, p0, p1, p2, p3, p4, p5, p6); }
	void PLAYSTATS_MC_FORMATION_ENDS_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { FastCall<void>(0x7c5a9eec1436fa3b, p0, p1, p2, p3, p4, p5, p6); }
	void PLAYSTATS_MC_CLUBHOUSE_ACTIVITY(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { Call<void>(0x746979be2b50b579, p0, p1, p2, p3, p4, p5, p6, p7); }
	void PLAYSTATS_MC_CLUBHOUSE_ACTIVITY_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { FastCall<void>(0x746979be2b50b579, p0, p1, p2, p3, p4, p5, p6, p7); }
	void PLAYSTATS_RIVAL_BEHAVIOR(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { Call<void>(0x15c4b4009544de7b, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	void PLAYSTATS_RIVAL_BEHAVIOR_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { FastCall<void>(0x15c4b4009544de7b, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	void PLAYSTATS_COPY_RANK_INTO_NEW_SLOT(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { Call<void>(0xf06d25586904ac1f, p0, p1, p2, p3, p4, p5, p6); }
	void PLAYSTATS_COPY_RANK_INTO_NEW_SLOT_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { FastCall<void>(0xf06d25586904ac1f, p0, p1, p2, p3, p4, p5, p6); }
	void PLAYSTATS_DUPE_DETECTED(Any* data) { Call<void>(0x21829b5d346bb0e7, data); }
	void PLAYSTATS_DUPE_DETECTED_f(Any* data) { FastCall<void>(0x21829b5d346bb0e7, data); }
	void PLAYSTATS_BAN_ALERT(int p0) { Call<void>(0x94c388e9270fa778, p0); }
	void PLAYSTATS_BAN_ALERT_f(int p0) { FastCall<void>(0x94c388e9270fa778, p0); }
	void PLAYSTATS_GUNRUNNING_MISSION_ENDED(Any* data) { Call<void>(0x383e3ee9af6a063b, data); }
	void PLAYSTATS_GUNRUNNING_MISSION_ENDED_f(Any* data) { FastCall<void>(0x383e3ee9af6a063b, data); }
	void PLAYSTATS_GUNRUNNING_RND(Any p0) { Call<void>(0x6d6dfd32f4ab2bc, p0); }
	void PLAYSTATS_GUNRUNNING_RND_f(Any p0) { FastCall<void>(0x6d6dfd32f4ab2bc, p0); }
	void PLAYSTATS_BUSINESS_BATTLE_ENDED(Any p0) { Call<void>(0x297bda3bd82992fe, p0); }
	void PLAYSTATS_BUSINESS_BATTLE_ENDED_f(Any p0) { FastCall<void>(0x297bda3bd82992fe, p0); }
	void PLAYSTATS_WAREHOUSE_MISSION_ENDED(Any p0) { Call<void>(0xc031b8ef0e3a02f7, p0); }
	void PLAYSTATS_WAREHOUSE_MISSION_ENDED_f(Any p0) { FastCall<void>(0xc031b8ef0e3a02f7, p0); }
	void PLAYSTATS_NIGHTCLUB_MISSION_ENDED(Any p0) { Call<void>(0xdfe4fbcd1fbb15c2, p0); }
	void PLAYSTATS_NIGHTCLUB_MISSION_ENDED_f(Any p0) { FastCall<void>(0xdfe4fbcd1fbb15c2, p0); }
	void PLAYSTATS_DJ_USAGE(Any p0, Any p1) { Call<void>(0xa9f5caaaf2e4d07c, p0, p1); }
	void PLAYSTATS_DJ_USAGE_f(Any p0, Any p1) { FastCall<void>(0xa9f5caaaf2e4d07c, p0, p1); }
	void PLAYSTATS_MINIGAME_USAGE(Any p0, Any p1, Any p2) { Call<void>(0x74ba886a0f18df7f, p0, p1, p2); }
	void PLAYSTATS_MINIGAME_USAGE_f(Any p0, Any p1, Any p2) { FastCall<void>(0x74ba886a0f18df7f, p0, p1, p2); }
	void PLAYSTATS_STONE_HATCHET_ENDED(Any* data) { Call<void>(0xb8efec48889f643c, data); }
	void PLAYSTATS_STONE_HATCHET_ENDED_f(Any* data) { FastCall<void>(0xb8efec48889f643c, data); }
	void PLAYSTATS_SMUGGLER_MISSION_ENDED(Any* data) { Call<void>(0xae3c1f2bfe7c4d3a, data); }
	void PLAYSTATS_SMUGGLER_MISSION_ENDED_f(Any* data) { FastCall<void>(0xae3c1f2bfe7c4d3a, data); }
	void PLAYSTATS_FM_HEIST_PREP_ENDED(Any* data) { Call<void>(0x7891e59a590fb3e, data); }
	void PLAYSTATS_FM_HEIST_PREP_ENDED_f(Any* data) { FastCall<void>(0x7891e59a590fb3e, data); }
	void PLAYSTATS_INSTANCED_HEIST_ENDED(Any* data, Any p1, Any p2, Any p3) { Call<void>(0x93e532d435cf3cc4, data, p1, p2, p3); }
	void PLAYSTATS_INSTANCED_HEIST_ENDED_f(Any* data, Any p1, Any p2, Any p3) { FastCall<void>(0x93e532d435cf3cc4, data, p1, p2, p3); }
	void PLAYSTATS_DAR_CHECKPOINT(Any* data) { Call<void>(0x352fa2e2061cd986, data); }
	void PLAYSTATS_DAR_CHECKPOINT_f(Any* data) { FastCall<void>(0x352fa2e2061cd986, data); }
	void PLAYSTATS_ENTER_SESSION_PACK(Any* data) { Call<void>(0x45e2af367eb21f5d, data); }
	void PLAYSTATS_ENTER_SESSION_PACK_f(Any* data) { FastCall<void>(0x45e2af367eb21f5d, data); }
	void PLAYSTATS_DRONE_USAGE(int p0, int p1, int p2) { Call<void>(0x720c5f46a7a4b506, p0, p1, p2); }
	void PLAYSTATS_DRONE_USAGE_f(int p0, int p1, int p2) { FastCall<void>(0x720c5f46a7a4b506, p0, p1, p2); }
	void PLAYSTATS_SPIN_WHEEL(int p0, int p1, int p2, int p3) { Call<void>(0x3af38864ce60bf2, p0, p1, p2, p3); }
	void PLAYSTATS_SPIN_WHEEL_f(int p0, int p1, int p2, int p3) { FastCall<void>(0x3af38864ce60bf2, p0, p1, p2, p3); }
	void PLAYSTATS_ARENA_WARS_SPECTATOR(int p0, int p1, int p2, int p3, int p4) { Call<void>(0x99e3b1bff9ddee67, p0, p1, p2, p3, p4); }
	void PLAYSTATS_ARENA_WARS_SPECTATOR_f(int p0, int p1, int p2, int p3, int p4) { FastCall<void>(0x99e3b1bff9ddee67, p0, p1, p2, p3, p4); }
	void PLAYSTATS_ARENA_WARS_ENDED(Any* data) { Call<void>(0x229a1825dcec1832, data); }
	void PLAYSTATS_ARENA_WARS_ENDED_f(Any* data) { FastCall<void>(0x229a1825dcec1832, data); }
	void PLAYSTATS_SWITCH_PASSIVE_MODE(BOOL p0, int p1, int p2, int p3) { Call<void>(0x42479f7a933f3292, p0, p1, p2, p3); }
	void PLAYSTATS_SWITCH_PASSIVE_MODE_f(BOOL p0, int p1, int p2, int p3) { FastCall<void>(0x42479f7a933f3292, p0, p1, p2, p3); }
	void PLAYSTATS_COLLECTIBLE_PICKED_UP(int p0, Hash objectHash, Any p2, Any p3, int moneyAmount, int rpAmount, int chipsAmount, Any p7, int p8, Any p9, Any p10) { Call<void>(0x2e78b1cb19461323, p0, objectHash, p2, p3, moneyAmount, rpAmount, chipsAmount, p7, p8, p9, p10); }
	void PLAYSTATS_COLLECTIBLE_PICKED_UP_f(int p0, Hash objectHash, Any p2, Any p3, int moneyAmount, int rpAmount, int chipsAmount, Any p7, int p8, Any p9, Any p10) { FastCall<void>(0x2e78b1cb19461323, p0, objectHash, p2, p3, moneyAmount, rpAmount, chipsAmount, p7, p8, p9, p10); }
	void PLAYSTATS_CASINO_STORY_MISSION_ENDED(Any p0, Any p1) { Call<void>(0xb9ff90d4daf783c7, p0, p1); }
	void PLAYSTATS_CASINO_STORY_MISSION_ENDED_f(Any p0, Any p1) { FastCall<void>(0xb9ff90d4daf783c7, p0, p1); }
	void PLAYSTATS_CASINO_CHIP(Any p0) { Call<void>(0x7207e004e4dba5e2, p0); }
	void PLAYSTATS_CASINO_CHIP_f(Any p0) { FastCall<void>(0x7207e004e4dba5e2, p0); }
	void PLAYSTATS_CASINO_ROULETTE(Any p0) { Call<void>(0x6b5cd76bbdd1918a, p0); }
	void PLAYSTATS_CASINO_ROULETTE_f(Any p0) { FastCall<void>(0x6b5cd76bbdd1918a, p0); }
	void PLAYSTATS_CASINO_BLACKJACK(Any p0) { Call<void>(0x3e098b4f6da468, p0); }
	void PLAYSTATS_CASINO_BLACKJACK_f(Any p0) { FastCall<void>(0x3e098b4f6da468, p0); }
	void PLAYSTATS_CASINO_THREE_CARD_POKER(Any p0) { Call<void>(0x992218c6055c03e1, p0); }
	void PLAYSTATS_CASINO_THREE_CARD_POKER_f(Any p0) { FastCall<void>(0x992218c6055c03e1, p0); }
	void PLAYSTATS_CASINO_SLOT_MACHINE(Any p0) { Call<void>(0x39589be89bd49e7c, p0); }
	void PLAYSTATS_CASINO_SLOT_MACHINE_f(Any p0) { FastCall<void>(0x39589be89bd49e7c, p0); }
	void PLAYSTATS_CASINO_INSIDE_TRACK(Any p0) { Call<void>(0x35d81506831656be, p0); }
	void PLAYSTATS_CASINO_INSIDE_TRACK_f(Any p0) { FastCall<void>(0x35d81506831656be, p0); }
	void PLAYSTATS_CASINO_LUCKY_SEVEN(Any p0) { Call<void>(0xe8ffcc9e03182960, p0); }
	void PLAYSTATS_CASINO_LUCKY_SEVEN_f(Any p0) { FastCall<void>(0xe8ffcc9e03182960, p0); }
	void PLAYSTATS_CASINO_ROULETTE_LIGHT(Any p0) { Call<void>(0x1593a2f3ef2a6201, p0); }
	void PLAYSTATS_CASINO_ROULETTE_LIGHT_f(Any p0) { FastCall<void>(0x1593a2f3ef2a6201, p0); }
	void PLAYSTATS_CASINO_BLACKJACK_LIGHT(Any p0) { Call<void>(0x3b3f2994eb98565f, p0); }
	void PLAYSTATS_CASINO_BLACKJACK_LIGHT_f(Any p0) { FastCall<void>(0x3b3f2994eb98565f, p0); }
	void PLAYSTATS_CASINO_THREE_CARD_POKER_LIGHT(Any p0) { Call<void>(0x385d6ef967d57718, p0); }
	void PLAYSTATS_CASINO_THREE_CARD_POKER_LIGHT_f(Any p0) { FastCall<void>(0x385d6ef967d57718, p0); }
	void PLAYSTATS_CASINO_SLOT_MACHINE_LIGHT(Any p0) { Call<void>(0x4e116331cb587173, p0); }
	void PLAYSTATS_CASINO_SLOT_MACHINE_LIGHT_f(Any p0) { FastCall<void>(0x4e116331cb587173, p0); }
	void PLAYSTATS_CASINO_INSIDE_TRACK_LIGHT(Any p0) { Call<void>(0xaf30268e9bcb7035, p0); }
	void PLAYSTATS_CASINO_INSIDE_TRACK_LIGHT_f(Any p0) { FastCall<void>(0xaf30268e9bcb7035, p0); }
	void PLAYSTATS_ARCADE_GAME(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { Call<void>(0x7203994c4e955d4d, p0, p1, p2, p3, p4, p5, p6); }
	void PLAYSTATS_ARCADE_GAME_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { FastCall<void>(0x7203994c4e955d4d, p0, p1, p2, p3, p4, p5, p6); }
	void PLAYSTATS_ARCADE_LOVE_MATCH(Any p0, Any p1) { Call<void>(0x1c3f6f4062b8fb3, p0, p1); }
	void PLAYSTATS_ARCADE_LOVE_MATCH_f(Any p0, Any p1) { FastCall<void>(0x1c3f6f4062b8fb3, p0, p1); }
	void PLAYSTATS_FREEMODE_CASINO_MISSION_ENDED(Any* data) { Call<void>(0xf9af0eeb178747f9, data); }
	void PLAYSTATS_FREEMODE_CASINO_MISSION_ENDED_f(Any* data) { FastCall<void>(0xf9af0eeb178747f9, data); }
	void PLAYSTATS_HEIST3_DRONE(Any p0) { Call<void>(0xd0c2362d169d52f3, p0); }
	void PLAYSTATS_HEIST3_DRONE_f(Any p0) { FastCall<void>(0xd0c2362d169d52f3, p0); }
	void PLAYSTATS_HEIST3_HACK(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { Call<void>(0x7216c7f0f0382fc6, p0, p1, p2, p3, p4, p5); }
	void PLAYSTATS_HEIST3_HACK_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { FastCall<void>(0x7216c7f0f0382fc6, p0, p1, p2, p3, p4, p5); }
	void PLAYSTATS_NPC_PHONE(Any* p0) { Call<void>(0x94c39295eb63a4dc, p0); }
	void PLAYSTATS_NPC_PHONE_f(Any* p0) { FastCall<void>(0x94c39295eb63a4dc, p0); }
	void PLAYSTATS_ARCADE_CABINET(Any p0) { Call<void>(0xf0cc76ec038392fd, p0); }
	void PLAYSTATS_ARCADE_CABINET_f(Any p0) { FastCall<void>(0xf0cc76ec038392fd, p0); }
	void PLAYSTATS_HEIST3_FINALE(Any p0) { Call<void>(0x47848f75bff74514, p0); }
	void PLAYSTATS_HEIST3_FINALE_f(Any p0) { FastCall<void>(0x47848f75bff74514, p0); }
	void PLAYSTATS_HEIST3_PREP(Any p0) { Call<void>(0x7216c7f0f03c12d2, p0); }
	void PLAYSTATS_HEIST3_PREP_f(Any p0) { FastCall<void>(0x7216c7f0f03c12d2, p0); }
	void PLAYSTATS_MASTER_CONTROL(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x1f2b0d39df9e4954, p0, p1, p2, p3); }
	void PLAYSTATS_MASTER_CONTROL_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x1f2b0d39df9e4954, p0, p1, p2, p3); }
	void PLAYSTATS_QUIT_MODE(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0x94c3950adb0c8c1f, p0, p1, p2, p3, p4); }
	void PLAYSTATS_QUIT_MODE_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0x94c3950adb0c8c1f, p0, p1, p2, p3, p4); }
	void PLAYSTATS_MISSION_VOTE(Any p0) { Call<void>(0xd292248e52843bd1, p0); }
	void PLAYSTATS_MISSION_VOTE_f(Any p0) { FastCall<void>(0xd292248e52843bd1, p0); }
	void PLAYSTATS_NJVS_VOTE(Any p0) { Call<void>(0x94c392735592947c, p0); }
	void PLAYSTATS_NJVS_VOTE_f(Any p0) { FastCall<void>(0x94c392735592947c, p0); }
	void PLAYSTATS_FM_MISSION_END(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x627680e3ef0b3ce4, p0, p1, p2, p3); }
	void PLAYSTATS_FM_MISSION_END_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x627680e3ef0b3ce4, p0, p1, p2, p3); }
	void PLAYSTATS_HEIST4_PREP(Any p0) { Call<void>(0x7216c7f0f1f0eb71, p0); }
	void PLAYSTATS_HEIST4_PREP_f(Any p0) { FastCall<void>(0x7216c7f0f1f0eb71, p0); }
	void PLAYSTATS_HEIST4_FINALE(Any p0) { Call<void>(0x47848f7c27d871f3, p0); }
	void PLAYSTATS_HEIST4_FINALE_f(Any p0) { FastCall<void>(0x47848f7c27d871f3, p0); }
	void PLAYSTATS_HEIST4_HACK(Any p0, Any p1, Any p2, Any p3, Any p4) { Call<void>(0x7216c7f0f1ed0865, p0, p1, p2, p3, p4); }
	void PLAYSTATS_HEIST4_HACK_f(Any p0, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0x7216c7f0f1ed0865, p0, p1, p2, p3, p4); }
	void PLAYSTATS_SUB_WEAP(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xa9f5cb0d1e0d3e30, p0, p1, p2, p3); }
	void PLAYSTATS_SUB_WEAP_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xa9f5cb0d1e0d3e30, p0, p1, p2, p3); }
	void PLAYSTATS_FAST_TRVL(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10) { Call<void>(0x94c38c046f85d243, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	void PLAYSTATS_FAST_TRVL_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10) { FastCall<void>(0x94c38c046f85d243, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	void PLAYSTATS_HUB_ENTRY(Any p0) { Call<void>(0x94c38e0e43b07af4, p0); }
	void PLAYSTATS_HUB_ENTRY_f(Any p0) { FastCall<void>(0x94c38e0e43b07af4, p0); }
	void PLAYSTATS_DJ_MISSION_ENDED(Any p0) { Call<void>(0x68e01d2e8879a202, p0); }
	void PLAYSTATS_DJ_MISSION_ENDED_f(Any p0) { FastCall<void>(0x68e01d2e8879a202, p0); }
	void PLAYSTATS_ROBBERY_PREP(Any p0) { Call<void>(0xd4654f89f6dd6171, p0); }
	void PLAYSTATS_ROBBERY_PREP_f(Any p0) { FastCall<void>(0xd4654f89f6dd6171, p0); }
	void PLAYSTATS_ROBBERY_FINALE(Any p0) { Call<void>(0x504f94e7a37f67f3, p0); }
	void PLAYSTATS_ROBBERY_FINALE_f(Any p0) { FastCall<void>(0x504f94e7a37f67f3, p0); }
	void PLAYSTATS_EXTRA_EVENT(Any p0) { Call<void>(0x720fdcfaa6a3f4f7, p0); }
	void PLAYSTATS_EXTRA_EVENT_f(Any p0) { FastCall<void>(0x720fdcfaa6a3f4f7, p0); }
	void PLAYSTATS_CARCLUB_POINTS(Any p0) { Call<void>(0xe2026fd0934c914c, p0); }
	void PLAYSTATS_CARCLUB_POINTS_f(Any p0) { FastCall<void>(0xe2026fd0934c914c, p0); }
	void PLAYSTATS_CARCLUB_CHALLENGE(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xf991f6e1518d073a, p0, p1, p2, p3); }
	void PLAYSTATS_CARCLUB_CHALLENGE_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xf991f6e1518d073a, p0, p1, p2, p3); }
	void PLAYSTATS_CARCLUB_PRIZE(int p0, Hash vehicleModel) { Call<void>(0xf8c773846d24a69, p0, vehicleModel); }
	void PLAYSTATS_CARCLUB_PRIZE_f(int p0, Hash vehicleModel) { FastCall<void>(0xf8c773846d24a69, p0, vehicleModel); }
	void PLAYSTATS_AWARD_NAV(Any p0, Any p1, Any p2, Any p3) { Call<void>(0x94c388acba781a8d, p0, p1, p2, p3); }
	void PLAYSTATS_AWARD_NAV_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0x94c388acba781a8d, p0, p1, p2, p3); }
	void PLAYSTATS_INST_MISSION_END(Any p0) { Call<void>(0x4333fe272ee4dee3, p0); }
	void PLAYSTATS_INST_MISSION_END_f(Any p0) { FastCall<void>(0x4333fe272ee4dee3, p0); }
	void PLAYSTATS_HUB_EXIT(Any p0) { Call<void>(0xa9f5cac6a7586a3c, p0); }
	void PLAYSTATS_HUB_EXIT_f(Any p0) { FastCall<void>(0xa9f5cac6a7586a3c, p0); }
	void PLAYSTATS_VEH_DEL(int bossId1, int bossId2, int bossType, int vehicleID, int reason) { Call<void>(0xbb28f609321cf3b1, bossId1, bossId2, bossType, vehicleID, reason); }
	void PLAYSTATS_VEH_DEL_f(int bossId1, int bossId2, int bossType, int vehicleID, int reason) { FastCall<void>(0xbb28f609321cf3b1, bossId1, bossId2, bossType, vehicleID, reason); }
	void PLAYSTATS_INVENTORY(Any p0) { Call<void>(0x94c38eabf6eccbc8, p0); }
	void PLAYSTATS_INVENTORY_f(Any p0) { FastCall<void>(0x94c38eabf6eccbc8, p0); }
	void _PLAYSTATS_ACID_MISSION_END(Any p0) { Call<void>(0x40b0d61dd0234e79, p0); }
	void _PLAYSTATS_ACID_MISSION_END_f(Any p0) { FastCall<void>(0x40b0d61dd0234e79, p0); }
	void _PLAYSTATS_ACID_RND(Any p0) { Call<void>(0xb9ef30c474bb7999, p0); }
	void _PLAYSTATS_ACID_RND_f(Any p0) { FastCall<void>(0xb9ef30c474bb7999, p0); }
	void _PLAYSTATS_IDLE(Any p0, Any p1, Any p2) { Call<void>(0x76d68a629d399be7, p0, p1, p2); }
	void _PLAYSTATS_IDLE_f(Any p0, Any p1, Any p2) { FastCall<void>(0x76d68a629d399be7, p0, p1, p2); }
	void _PLAYSTATS_PLAYER_STYLE(Any p0) { Call<void>(0xdf0b292818a64bc6, p0); }
	void _PLAYSTATS_PLAYER_STYLE_f(Any p0) { FastCall<void>(0xdf0b292818a64bc6, p0); }
	void _PLAYSTATS_RANDOM_EVENT(Any p0) { Call<void>(0xdfa0d38c05db7911, p0); }
	void _PLAYSTATS_RANDOM_EVENT_f(Any p0) { FastCall<void>(0xdfa0d38c05db7911, p0); }
	void _PLAYSTATS_ALERT(Any* data) { Call<void>(0x63fac1f1098caf89, data); }
	void _PLAYSTATS_ALERT_f(Any* data) { FastCall<void>(0x63fac1f1098caf89, data); }
	void _PLAYSTATS_ATTRITION_STAGE_END(Any p0) { Call<void>(0xb76d31cd133cb274, p0); }
	void _PLAYSTATS_ATTRITION_STAGE_END_f(Any p0) { FastCall<void>(0xb76d31cd133cb274, p0); }
	void _PLAYSTATS_SHOWROOM_NAV(Any p0, Any p1, Hash entity) { Call<void>(0xe00fa16a9bc316af, p0, p1, entity); }
	void _PLAYSTATS_SHOWROOM_NAV_f(Any p0, Any p1, Hash entity) { FastCall<void>(0xe00fa16a9bc316af, p0, p1, entity); }
	void _PLAYSTATS_SHOWROOM_OVERVIEW(Any* data) { Call<void>(0x43787cf0a1c81f4d, data); }
	void _PLAYSTATS_SHOWROOM_OVERVIEW_f(Any* data) { FastCall<void>(0x43787cf0a1c81f4d, data); }
	void _PLAYSTATS_PIMENU_NAV(Any* data) { Call<void>(0xfae77eeeb5466cef, data); }
	void _PLAYSTATS_PIMENU_NAV_f(Any* data) { FastCall<void>(0xfae77eeeb5466cef, data); }
	void _PLAYSTATS_RECOVER_VEHICLE(Any* data) { Call<void>(0xb3b2f71ab0c7591e, data); }
	void _PLAYSTATS_RECOVER_VEHICLE_f(Any* data) { FastCall<void>(0xb3b2f71ab0c7591e, data); }
}
namespace STREAMING
{
	void LOAD_ALL_OBJECTS_NOW() { Call<void>(0x3eb7d41a049cbdd4); }
	void LOAD_ALL_OBJECTS_NOW_f() { FastCall<void>(0x3eb7d41a049cbdd4); }
	void LOAD_SCENE(float x, float y, float z) { Call<void>(0x762835b0d7bd3, x, y, z); }
	void LOAD_SCENE_f(float x, float y, float z) { FastCall<void>(0x762835b0d7bd3, x, y, z); }
	BOOL NETWORK_UPDATE_LOAD_SCENE() { return Call<BOOL>(0xd6c9b9ddfa53a518); }
	BOOL NETWORK_UPDATE_LOAD_SCENE_f() { return FastCall<BOOL>(0xd6c9b9ddfa53a518); }
	BOOL IS_NETWORK_LOADING_SCENE() { return Call<BOOL>(0xaf6c8a91cfa961c3); }
	BOOL IS_NETWORK_LOADING_SCENE_f() { return FastCall<BOOL>(0xaf6c8a91cfa961c3); }
	void SET_INTERIOR_ACTIVE(int interiorID, BOOL toggle) { Call<void>(0x85cbc9a51315d678, interiorID, toggle); }
	void SET_INTERIOR_ACTIVE_f(int interiorID, BOOL toggle) { FastCall<void>(0x85cbc9a51315d678, interiorID, toggle); }
	void REQUEST_MODEL(Hash model) { Call<void>(0x99a089d358161539, model); }
	void REQUEST_MODEL_f(Hash model) { FastCall<void>(0x99a089d358161539, model); }
	void REQUEST_MENU_PED_MODEL(Hash model) { Call<void>(0xa5d84fcd3f966ca9, model); }
	void REQUEST_MENU_PED_MODEL_f(Hash model) { FastCall<void>(0xa5d84fcd3f966ca9, model); }
	BOOL HAS_MODEL_LOADED(Hash model) { return Call<BOOL>(0x28bb7f6f1aab7ba0, model); }
	BOOL HAS_MODEL_LOADED_f(Hash model) { return FastCall<BOOL>(0x28bb7f6f1aab7ba0, model); }
	void REQUEST_MODELS_IN_ROOM(Interior interior, char* roomName) { Call<void>(0xf70a9450a2d76b0, interior, roomName); }
	void REQUEST_MODELS_IN_ROOM_f(Interior interior, char* roomName) { FastCall<void>(0xf70a9450a2d76b0, interior, roomName); }
	void SET_MODEL_AS_NO_LONGER_NEEDED(Hash model) { Call<void>(0x8fe69a1ad90aa707, model); }
	void SET_MODEL_AS_NO_LONGER_NEEDED_f(Hash model) { FastCall<void>(0x8fe69a1ad90aa707, model); }
	BOOL IS_MODEL_IN_CDIMAGE(Hash model) { return Call<BOOL>(0x9afa37fd68254dcb, model); }
	BOOL IS_MODEL_IN_CDIMAGE_f(Hash model) { return FastCall<BOOL>(0x9afa37fd68254dcb, model); }
	BOOL IS_MODEL_VALID(Hash model) { return Call<BOOL>(0x4e91dc9d8048cb91, model); }
	BOOL IS_MODEL_VALID_f(Hash model) { return FastCall<BOOL>(0x4e91dc9d8048cb91, model); }
	BOOL IS_MODEL_A_PED(Hash model) { return Call<BOOL>(0x4e91dc9d7f2e8fa6, model); }
	BOOL IS_MODEL_A_PED_f(Hash model) { return FastCall<BOOL>(0x4e91dc9d7f2e8fa6, model); }
	BOOL IS_MODEL_A_VEHICLE(Hash model) { return Call<BOOL>(0xc2ef46575e324243, model); }
	BOOL IS_MODEL_A_VEHICLE_f(Hash model) { return FastCall<BOOL>(0xc2ef46575e324243, model); }
	void REQUEST_COLLISION_AT_COORD(float x, float y, float z) { Call<void>(0x8835675f3fe2626, x, y, z); }
	void REQUEST_COLLISION_AT_COORD_f(float x, float y, float z) { FastCall<void>(0x8835675f3fe2626, x, y, z); }
	void REQUEST_COLLISION_FOR_MODEL(Hash model) { Call<void>(0x7e77c06e9b13536, model); }
	void REQUEST_COLLISION_FOR_MODEL_f(Hash model) { FastCall<void>(0x7e77c06e9b13536, model); }
	BOOL HAS_COLLISION_FOR_MODEL_LOADED(Hash model) { return Call<BOOL>(0x2c6522764e467c43, model); }
	BOOL HAS_COLLISION_FOR_MODEL_LOADED_f(Hash model) { return FastCall<BOOL>(0x2c6522764e467c43, model); }
	void REQUEST_ADDITIONAL_COLLISION_AT_COORD(float x, float y, float z) { Call<void>(0x1a0f6a41f460379e, x, y, z); }
	void REQUEST_ADDITIONAL_COLLISION_AT_COORD_f(float x, float y, float z) { FastCall<void>(0x1a0f6a41f460379e, x, y, z); }
	BOOL DOES_ANIM_DICT_EXIST(char* animDict) { return Call<BOOL>(0xeb6775c6699c6e36, animDict); }
	BOOL DOES_ANIM_DICT_EXIST_f(char* animDict) { return FastCall<BOOL>(0xeb6775c6699c6e36, animDict); }
	void REQUEST_ANIM_DICT(char* animDict) { Call<void>(0x5fd6384a44621f54, animDict); }
	void REQUEST_ANIM_DICT_f(char* animDict) { FastCall<void>(0x5fd6384a44621f54, animDict); }
	BOOL HAS_ANIM_DICT_LOADED(char* animDict) { return Call<BOOL>(0xa3532c23f0a8faa5, animDict); }
	BOOL HAS_ANIM_DICT_LOADED_f(char* animDict) { return FastCall<BOOL>(0xa3532c23f0a8faa5, animDict); }
	void REMOVE_ANIM_DICT(char* animDict) { Call<void>(0x39d56a7e4bf6b729, animDict); }
	void REMOVE_ANIM_DICT_f(char* animDict) { FastCall<void>(0x39d56a7e4bf6b729, animDict); }
	void REQUEST_ANIM_SET(char* animSet) { Call<void>(0xc106e90aa75e38e4, animSet); }
	void REQUEST_ANIM_SET_f(char* animSet) { FastCall<void>(0xc106e90aa75e38e4, animSet); }
	BOOL HAS_ANIM_SET_LOADED(char* animSet) { return Call<BOOL>(0x91a93e2a3bda01cb, animSet); }
	BOOL HAS_ANIM_SET_LOADED_f(char* animSet) { return FastCall<BOOL>(0x91a93e2a3bda01cb, animSet); }
	void REMOVE_ANIM_SET(char* animSet) { Call<void>(0x85fea056a79cd26f, animSet); }
	void REMOVE_ANIM_SET_f(char* animSet) { FastCall<void>(0x85fea056a79cd26f, animSet); }
	void REQUEST_CLIP_SET(char* clipSet) { Call<void>(0xc106e9170d7e62a3, clipSet); }
	void REQUEST_CLIP_SET_f(char* clipSet) { FastCall<void>(0xc106e9170d7e62a3, clipSet); }
	BOOL HAS_CLIP_SET_LOADED(char* clipSet) { return Call<BOOL>(0xfe69180f42ea332c, clipSet); }
	BOOL HAS_CLIP_SET_LOADED_f(char* clipSet) { return FastCall<BOOL>(0xfe69180f42ea332c, clipSet); }
	void REMOVE_CLIP_SET(char* clipSet) { Call<void>(0x85fea0630dbcfc2e, clipSet); }
	void REMOVE_CLIP_SET_f(char* clipSet) { FastCall<void>(0x85fea0630dbcfc2e, clipSet); }
	void REQUEST_IPL(char* iplName) { Call<void>(0xf582f0c4f3fa35, iplName); }
	void REQUEST_IPL_f(char* iplName) { FastCall<void>(0xf582f0c4f3fa35, iplName); }
	void REMOVE_IPL(char* iplName) { Call<void>(0x7eb585e7855ca, iplName); }
	void REMOVE_IPL_f(char* iplName) { FastCall<void>(0x7eb585e7855ca, iplName); }
	BOOL IS_IPL_ACTIVE(char* iplName) { return Call<BOOL>(0x3c56e9fdac3382b5, iplName); }
	BOOL IS_IPL_ACTIVE_f(char* iplName) { return FastCall<BOOL>(0x3c56e9fdac3382b5, iplName); }
	void SET_STREAMING(BOOL toggle) { Call<void>(0xa49898a57cf07885, toggle); }
	void SET_STREAMING_f(BOOL toggle) { FastCall<void>(0xa49898a57cf07885, toggle); }
	void LOAD_GLOBAL_WATER_FILE(int waterType) { Call<void>(0xb054a8a62f211ec7, waterType); }
	void LOAD_GLOBAL_WATER_FILE_f(int waterType) { FastCall<void>(0xb054a8a62f211ec7, waterType); }
	int GET_GLOBAL_WATER_FILE() { return Call<int>(0x69bd911253d38117); }
	int GET_GLOBAL_WATER_FILE_f() { return FastCall<int>(0x69bd911253d38117); }
	void SET_GAME_PAUSES_FOR_STREAMING(BOOL toggle) { Call<void>(0xbf7ba758fa8cb11a, toggle); }
	void SET_GAME_PAUSES_FOR_STREAMING_f(BOOL toggle) { FastCall<void>(0xbf7ba758fa8cb11a, toggle); }
	void SET_REDUCE_PED_MODEL_BUDGET(BOOL toggle) { Call<void>(0xc223aa6040769347, toggle); }
	void SET_REDUCE_PED_MODEL_BUDGET_f(BOOL toggle) { FastCall<void>(0xc223aa6040769347, toggle); }
	void SET_REDUCE_VEHICLE_MODEL_BUDGET(BOOL toggle) { Call<void>(0x954954068d9f864a, toggle); }
	void SET_REDUCE_VEHICLE_MODEL_BUDGET_f(BOOL toggle) { FastCall<void>(0x954954068d9f864a, toggle); }
	void SET_DITCH_POLICE_MODELS(BOOL toggle) { Call<void>(0xb232a9ea6aab0d43, toggle); }
	void SET_DITCH_POLICE_MODELS_f(BOOL toggle) { FastCall<void>(0xb232a9ea6aab0d43, toggle); }
	int GET_NUMBER_OF_STREAMING_REQUESTS() { return Call<int>(0xdf5ee3e856667a7c); }
	int GET_NUMBER_OF_STREAMING_REQUESTS_f() { return FastCall<int>(0xdf5ee3e856667a7c); }
	void REQUEST_PTFX_ASSET() { Call<void>(0x9af23e481fe58af7); }
	void REQUEST_PTFX_ASSET_f() { FastCall<void>(0x9af23e481fe58af7); }
	BOOL HAS_PTFX_ASSET_LOADED() { return Call<BOOL>(0xdb0016a98f486d98); }
	BOOL HAS_PTFX_ASSET_LOADED_f() { return FastCall<BOOL>(0xdb0016a98f486d98); }
	void REMOVE_PTFX_ASSET() { Call<void>(0xd952950ae3edc2); }
	void REMOVE_PTFX_ASSET_f() { FastCall<void>(0xd952950ae3edc2); }
	void REQUEST_NAMED_PTFX_ASSET(char* fxName) { Call<void>(0x710207a34cedabdd, fxName); }
	void REQUEST_NAMED_PTFX_ASSET_f(char* fxName) { FastCall<void>(0x710207a34cedabdd, fxName); }
	BOOL HAS_NAMED_PTFX_ASSET_LOADED(char* fxName) { return Call<BOOL>(0x35c6a83f1a19b9b2, fxName); }
	BOOL HAS_NAMED_PTFX_ASSET_LOADED_f(char* fxName) { return FastCall<BOOL>(0x35c6a83f1a19b9b2, fxName); }
	void REMOVE_NAMED_PTFX_ASSET(char* fxName) { Call<void>(0x6f32b5f196ab8a68, fxName); }
	void REMOVE_NAMED_PTFX_ASSET_f(char* fxName) { FastCall<void>(0x6f32b5f196ab8a68, fxName); }
	void SET_VEHICLE_POPULATION_BUDGET(int p0) { Call<void>(0xb4771a95753da447, p0); }
	void SET_VEHICLE_POPULATION_BUDGET_f(int p0) { FastCall<void>(0xb4771a95753da447, p0); }
	void SET_PED_POPULATION_BUDGET(int p0) { Call<void>(0x6b543fa9a7adc4ea, p0); }
	void SET_PED_POPULATION_BUDGET_f(int p0) { FastCall<void>(0x6b543fa9a7adc4ea, p0); }
	void CLEAR_FOCUS() { Call<void>(0xca73c16c216826); }
	void CLEAR_FOCUS_f() { FastCall<void>(0xca73c16c216826); }
	void SET_FOCUS_POS_AND_VEL(float x, float y, float z, float offsetX, float offsetY, float offsetZ) { Call<void>(0xed31ebc1cf8af226, x, y, z, offsetX, offsetY, offsetZ); }
	void SET_FOCUS_POS_AND_VEL_f(float x, float y, float z, float offsetX, float offsetY, float offsetZ) { FastCall<void>(0xed31ebc1cf8af226, x, y, z, offsetX, offsetY, offsetZ); }
	void SET_FOCUS_ENTITY(Entity entity) { Call<void>(0x35263795fa8e5e27, entity); }
	void SET_FOCUS_ENTITY_f(Entity entity) { FastCall<void>(0x35263795fa8e5e27, entity); }
	BOOL IS_ENTITY_FOCUS(Entity entity) { return Call<BOOL>(0x80d62aab5d4ef651, entity); }
	BOOL IS_ENTITY_FOCUS_f(Entity entity) { return FastCall<BOOL>(0x80d62aab5d4ef651, entity); }
	void SET_RESTORE_FOCUS_ENTITY(Entity p0) { Call<void>(0xfd0a57b820bc9f58, p0); }
	void SET_RESTORE_FOCUS_ENTITY_f(Entity p0) { FastCall<void>(0xfd0a57b820bc9f58, p0); }
	void SET_MAPDATACULLBOX_ENABLED(char* name, BOOL toggle) { Call<void>(0xc6058d1e765f24d2, name, toggle); }
	void SET_MAPDATACULLBOX_ENABLED_f(char* name, BOOL toggle) { FastCall<void>(0xc6058d1e765f24d2, name, toggle); }
	void SET_ALL_MAPDATA_CULLED(Any p0) { Call<void>(0xdedeff791a3716a5, p0); }
	void SET_ALL_MAPDATA_CULLED_f(Any p0) { FastCall<void>(0xdedeff791a3716a5, p0); }
	int STREAMVOL_CREATE_SPHERE(float x, float y, float z, float rad, Any p4, Any p5) { return Call<int>(0x3627209d1a790664, x, y, z, rad, p4, p5); }
	int STREAMVOL_CREATE_SPHERE_f(float x, float y, float z, float rad, Any p4, Any p5) { return FastCall<int>(0x3627209d1a790664, x, y, z, rad, p4, p5); }
	int STREAMVOL_CREATE_FRUSTUM(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, Any p8) { return Call<int>(0x8ebcf303891e0d8b, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	int STREAMVOL_CREATE_FRUSTUM_f(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, Any p8) { return FastCall<int>(0x8ebcf303891e0d8b, p0, p1, p2, p3, p4, p5, p6, p7, p8); }
	int STREAMVOL_CREATE_LINE(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) { return Call<int>(0xbc208a4a38390c4b, p0, p1, p2, p3, p4, p5, p6); }
	int STREAMVOL_CREATE_LINE_f(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) { return FastCall<int>(0xbc208a4a38390c4b, p0, p1, p2, p3, p4, p5, p6); }
	void STREAMVOL_DELETE(Any unused) { Call<void>(0xf40cf463bf96ee37, unused); }
	void STREAMVOL_DELETE_f(Any unused) { FastCall<void>(0xf40cf463bf96ee37, unused); }
	BOOL STREAMVOL_HAS_LOADED(Any unused) { return Call<BOOL>(0x81f0f402cb19fbf6, unused); }
	BOOL STREAMVOL_HAS_LOADED_f(Any unused) { return FastCall<BOOL>(0x81f0f402cb19fbf6, unused); }
	BOOL STREAMVOL_IS_VALID(Any unused) { return Call<BOOL>(0x24a16a9542e47e13, unused); }
	BOOL STREAMVOL_IS_VALID_f(Any unused) { return FastCall<BOOL>(0x24a16a9542e47e13, unused); }
	BOOL IS_STREAMVOL_ACTIVE() { return Call<BOOL>(0x9e0eabf50a4b7a07); }
	BOOL IS_STREAMVOL_ACTIVE_f() { return FastCall<BOOL>(0x9e0eabf50a4b7a07); }
	BOOL NEW_LOAD_SCENE_START(float posX, float posY, float posZ, float offsetX, float offsetY, float offsetZ, float radius, int p7) { return Call<BOOL>(0x8a9af78abb3625b5, posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7); }
	BOOL NEW_LOAD_SCENE_START_f(float posX, float posY, float posZ, float offsetX, float offsetY, float offsetZ, float radius, int p7) { return FastCall<BOOL>(0x8a9af78abb3625b5, posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7); }
	BOOL NEW_LOAD_SCENE_START_SPHERE(float x, float y, float z, float radius, Any p4) { return Call<BOOL>(0x250fb01b8d564d97, x, y, z, radius, p4); }
	BOOL NEW_LOAD_SCENE_START_SPHERE_f(float x, float y, float z, float radius, Any p4) { return FastCall<BOOL>(0x250fb01b8d564d97, x, y, z, radius, p4); }
	void NEW_LOAD_SCENE_STOP() { Call<void>(0xd2ec39889aaf2c2f); }
	void NEW_LOAD_SCENE_STOP_f() { FastCall<void>(0xd2ec39889aaf2c2f); }
	BOOL IS_NEW_LOAD_SCENE_ACTIVE() { return Call<BOOL>(0x7633b5b16216f69e); }
	BOOL IS_NEW_LOAD_SCENE_ACTIVE_f() { return FastCall<BOOL>(0x7633b5b16216f69e); }
	BOOL IS_NEW_LOAD_SCENE_LOADED() { return Call<BOOL>(0x7633b5b1757ca79d); }
	BOOL IS_NEW_LOAD_SCENE_LOADED_f() { return FastCall<BOOL>(0x7633b5b1757ca79d); }
	BOOL IS_SAFE_TO_START_PLAYER_SWITCH() { return Call<BOOL>(0xcef84e00cc7514ae); }
	BOOL IS_SAFE_TO_START_PLAYER_SWITCH_f() { return FastCall<BOOL>(0xcef84e00cc7514ae); }
	void START_PLAYER_SWITCH(Ped from, Ped to, int flags, int switchType) { Call<void>(0xaf5ba499351ccd15, from, to, flags, switchType); }
	void START_PLAYER_SWITCH_f(Ped from, Ped to, int flags, int switchType) { FastCall<void>(0xaf5ba499351ccd15, from, to, flags, switchType); }
	void STOP_PLAYER_SWITCH() { Call<void>(0x2d96ae37b2c570d5); }
	void STOP_PLAYER_SWITCH_f() { FastCall<void>(0x2d96ae37b2c570d5); }
	BOOL IS_PLAYER_SWITCH_IN_PROGRESS() { return Call<BOOL>(0x55a555270dff2c5); }
	BOOL IS_PLAYER_SWITCH_IN_PROGRESS_f() { return FastCall<BOOL>(0x55a555270dff2c5); }
	int GET_PLAYER_SWITCH_TYPE() { return Call<int>(0xe4f159d50da9a4b0); }
	int GET_PLAYER_SWITCH_TYPE_f() { return FastCall<int>(0xe4f159d50da9a4b0); }
	int GET_IDEAL_PLAYER_SWITCH_TYPE(float x1, float y1, float z1, float x2, float y2, float z2) { return Call<int>(0x3eb97f208d8823a, x1, y1, z1, x2, y2, z2); }
	int GET_IDEAL_PLAYER_SWITCH_TYPE_f(float x1, float y1, float z1, float x2, float y2, float z2) { return FastCall<int>(0x3eb97f208d8823a, x1, y1, z1, x2, y2, z2); }
	int GET_PLAYER_SWITCH_STATE() { return Call<int>(0xb939e0cca77a5dbb); }
	int GET_PLAYER_SWITCH_STATE_f() { return FastCall<int>(0xb939e0cca77a5dbb); }
	int GET_PLAYER_SHORT_SWITCH_STATE() { return Call<int>(0x5674fb160dad8cfe); }
	int GET_PLAYER_SHORT_SWITCH_STATE_f() { return FastCall<int>(0x5674fb160dad8cfe); }
	void SET_PLAYER_SHORT_SWITCH_STYLE(int p0) { Call<void>(0x41de133ffd6c9c2a, p0); }
	void SET_PLAYER_SHORT_SWITCH_STYLE_f(int p0) { FastCall<void>(0x41de133ffd6c9c2a, p0); }
	int GET_PLAYER_SWITCH_JUMP_CUT_INDEX() { return Call<int>(0xf4a41f4e64ef3f7a); }
	int GET_PLAYER_SWITCH_JUMP_CUT_INDEX_f() { return FastCall<int>(0xf4a41f4e64ef3f7a); }
	void SET_PLAYER_SWITCH_OUTRO(float cameraCoordX, float cameraCoordY, float cameraCoordZ, float camRotationX, float camRotationY, float camRotationZ, float camFov, float camFarClip, int rotationOrder) { Call<void>(0x1e5ea79c2195ea41, cameraCoordX, cameraCoordY, cameraCoordZ, camRotationX, camRotationY, camRotationZ, camFov, camFarClip, rotationOrder); }
	void SET_PLAYER_SWITCH_OUTRO_f(float cameraCoordX, float cameraCoordY, float cameraCoordZ, float camRotationX, float camRotationY, float camRotationZ, float camFov, float camFarClip, int rotationOrder) { FastCall<void>(0x1e5ea79c2195ea41, cameraCoordX, cameraCoordY, cameraCoordZ, camRotationX, camRotationY, camRotationZ, camFov, camFarClip, rotationOrder); }
	void SET_PLAYER_SWITCH_ESTABLISHING_SHOT(char* name) { Call<void>(0xfd47b8f0980be0c6, name); }
	void SET_PLAYER_SWITCH_ESTABLISHING_SHOT_f(char* name) { FastCall<void>(0xfd47b8f0980be0c6, name); }
	void ALLOW_PLAYER_SWITCH_PAN() { Call<void>(0xec1a8dbb6244317a); }
	void ALLOW_PLAYER_SWITCH_PAN_f() { FastCall<void>(0xec1a8dbb6244317a); }
	void ALLOW_PLAYER_SWITCH_OUTRO() { Call<void>(0x4fae0c6be1f8dba8); }
	void ALLOW_PLAYER_SWITCH_OUTRO_f() { FastCall<void>(0x4fae0c6be1f8dba8); }
	void ALLOW_PLAYER_SWITCH_ASCENT() { Call<void>(0xa6138110451aa6bd); }
	void ALLOW_PLAYER_SWITCH_ASCENT_f() { FastCall<void>(0xa6138110451aa6bd); }
	void ALLOW_PLAYER_SWITCH_DESCENT() { Call<void>(0x1c5ca0f8e5e97717); }
	void ALLOW_PLAYER_SWITCH_DESCENT_f() { FastCall<void>(0x1c5ca0f8e5e97717); }
	BOOL IS_SWITCH_READY_FOR_DESCENT() { return Call<BOOL>(0x26268cdeb6b14f72); }
	BOOL IS_SWITCH_READY_FOR_DESCENT_f() { return FastCall<BOOL>(0x26268cdeb6b14f72); }
	void ENABLE_SWITCH_PAUSE_BEFORE_DESCENT() { Call<void>(0x5db58b78098dc0d2); }
	void ENABLE_SWITCH_PAUSE_BEFORE_DESCENT_f() { FastCall<void>(0x5db58b78098dc0d2); }
	void DISABLE_SWITCH_OUTRO_FX() { Call<void>(0x28c378321e24ccda); }
	void DISABLE_SWITCH_OUTRO_FX_f() { FastCall<void>(0x28c378321e24ccda); }
	void SWITCH_TO_MULTI_FIRSTPART(Ped ped, int flags, int switchType) { Call<void>(0x2f717ce7cec5cc04, ped, flags, switchType); }
	void SWITCH_TO_MULTI_FIRSTPART_f(Ped ped, int flags, int switchType) { FastCall<void>(0x2f717ce7cec5cc04, ped, flags, switchType); }
	void SWITCH_TO_MULTI_SECONDPART(Ped ped) { Call<void>(0xbebf55322bf28d06, ped); }
	void SWITCH_TO_MULTI_SECONDPART_f(Ped ped) { FastCall<void>(0xbebf55322bf28d06, ped); }
	BOOL IS_SWITCH_TO_MULTI_FIRSTPART_FINISHED() { return Call<BOOL>(0x71ee1161d7d31982); }
	BOOL IS_SWITCH_TO_MULTI_FIRSTPART_FINISHED_f() { return FastCall<BOOL>(0x71ee1161d7d31982); }
	int GET_PLAYER_SWITCH_INTERP_OUT_DURATION() { return Call<int>(0x8028d7f4e113569a); }
	int GET_PLAYER_SWITCH_INTERP_OUT_DURATION_f() { return FastCall<int>(0x8028d7f4e113569a); }
	int GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME() { return Call<int>(0xf05e99db0b8cff9); }
	int GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME_f() { return FastCall<int>(0xf05e99db0b8cff9); }
	BOOL IS_SWITCH_SKIPPING_DESCENT() { return Call<BOOL>(0x17faf5e6361e1b62); }
	BOOL IS_SWITCH_SKIPPING_DESCENT_f() { return FastCall<BOOL>(0x17faf5e6361e1b62); }
	void SET_SCENE_STREAMING_TRACKS_CAM_POS_THIS_FRAME() { Call<void>(0x48e09978cc9b331); }
	void SET_SCENE_STREAMING_TRACKS_CAM_POS_THIS_FRAME_f() { FastCall<void>(0x48e09978cc9b331); }
	float GET_LODSCALE() { return ToFloat(Call<_float>(0x19da359914079192)); }
	float GET_LODSCALE_f() { return ToFloat(FastCall<_float>(0x19da359914079192)); }
	void OVERRIDE_LODSCALE_THIS_FRAME(float scaling) { Call<void>(0xd57f899fedf2b2cf, scaling); }
	void OVERRIDE_LODSCALE_THIS_FRAME_f(float scaling) { FastCall<void>(0xd57f899fedf2b2cf, scaling); }
	void REMAP_LODSCALE_RANGE_THIS_FRAME(float p0, float p1, float p2, float p3) { Call<void>(0xe91c73f1b03e50e, p0, p1, p2, p3); }
	void REMAP_LODSCALE_RANGE_THIS_FRAME_f(float p0, float p1, float p2, float p3) { FastCall<void>(0xe91c73f1b03e50e, p0, p1, p2, p3); }
	void SUPPRESS_HD_MAP_STREAMING_THIS_FRAME() { Call<void>(0x3f639f1eda10cb05); }
	void SUPPRESS_HD_MAP_STREAMING_THIS_FRAME_f() { FastCall<void>(0x3f639f1eda10cb05); }
	void SET_RENDER_HD_ONLY(BOOL toggle) { Call<void>(0xfd2bf97f990a4d03, toggle); }
	void SET_RENDER_HD_ONLY_f(BOOL toggle) { FastCall<void>(0xfd2bf97f990a4d03, toggle); }
	void FORCE_ALLOW_TIME_BASED_FADING_THIS_FRAME() { Call<void>(0x28daed385f58025e); }
	void FORCE_ALLOW_TIME_BASED_FADING_THIS_FRAME_f() { FastCall<void>(0x28daed385f58025e); }
	void IPL_GROUP_SWAP_START(char* iplName1, char* iplName2) { Call<void>(0x6cf610e5a7d3a570, iplName1, iplName2); }
	void IPL_GROUP_SWAP_START_f(char* iplName1, char* iplName2) { FastCall<void>(0x6cf610e5a7d3a570, iplName1, iplName2); }
	void IPL_GROUP_SWAP_CANCEL() { Call<void>(0x31cc0bcf364d6f0c); }
	void IPL_GROUP_SWAP_CANCEL_f() { FastCall<void>(0x31cc0bcf364d6f0c); }
	BOOL IPL_GROUP_SWAP_IS_READY() { return Call<BOOL>(0xeef855051dfab640); }
	BOOL IPL_GROUP_SWAP_IS_READY_f() { return FastCall<BOOL>(0xeef855051dfab640); }
	void IPL_GROUP_SWAP_FINISH() { Call<void>(0x31cc0bcf3bdccd25); }
	void IPL_GROUP_SWAP_FINISH_f() { FastCall<void>(0x31cc0bcf3bdccd25); }
	BOOL IPL_GROUP_SWAP_IS_ACTIVE() { return Call<BOOL>(0xf0124b9e844635e9); }
	BOOL IPL_GROUP_SWAP_IS_ACTIVE_f() { return FastCall<BOOL>(0xf0124b9e844635e9); }
	void PREFETCH_SRL(char* srl) { Call<void>(0x1d2b00074cfb0f85, srl); }
	void PREFETCH_SRL_f(char* srl) { FastCall<void>(0x1d2b00074cfb0f85, srl); }
	BOOL IS_SRL_LOADED() { return Call<BOOL>(0x3c57dc0273007cec); }
	BOOL IS_SRL_LOADED_f() { return FastCall<BOOL>(0x3c57dc0273007cec); }
	void BEGIN_SRL() { Call<void>(0x34fb66398517); }
	void BEGIN_SRL_f() { FastCall<void>(0x34fb66398517); }
	void END_SRL() { Call<void>(0xecb12a849); }
	void END_SRL_f() { FastCall<void>(0xecb12a849); }
	void SET_SRL_TIME(float p0) { Call<void>(0x1e157046f48df55c, p0); }
	void SET_SRL_TIME_f(float p0) { FastCall<void>(0x1e157046f48df55c, p0); }
	void SET_SRL_POST_CUTSCENE_CAMERA(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { Call<void>(0xbbb695045f5cb86a, p0, p1, p2, p3, p4, p5); }
	void SET_SRL_POST_CUTSCENE_CAMERA_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { FastCall<void>(0xbbb695045f5cb86a, p0, p1, p2, p3, p4, p5); }
	void SET_SRL_READAHEAD_TIMES(Any p0, Any p1, Any p2, Any p3) { Call<void>(0xa12e0b5c84c81dc3, p0, p1, p2, p3); }
	void SET_SRL_READAHEAD_TIMES_f(Any p0, Any p1, Any p2, Any p3) { FastCall<void>(0xa12e0b5c84c81dc3, p0, p1, p2, p3); }
	void SET_SRL_LONG_JUMP_MODE(BOOL p0) { Call<void>(0x4c29bd73fb1e3ce0, p0); }
	void SET_SRL_LONG_JUMP_MODE_f(BOOL p0) { FastCall<void>(0x4c29bd73fb1e3ce0, p0); }
	void SET_SRL_FORCE_PRESTREAM(Any p0) { Call<void>(0x2ed609e79bab8d60, p0); }
	void SET_SRL_FORCE_PRESTREAM_f(Any p0) { FastCall<void>(0x2ed609e79bab8d60, p0); }
	void SET_HD_AREA(float x, float y, float z, float radius) { Call<void>(0xf86ef7ab193af3, x, y, z, radius); }
	void SET_HD_AREA_f(float x, float y, float z, float radius) { FastCall<void>(0xf86ef7ab193af3, x, y, z, radius); }
	void CLEAR_HD_AREA() { Call<void>(0xf7fc891741f09dde); }
	void CLEAR_HD_AREA_f() { FastCall<void>(0xf7fc891741f09dde); }
	void INIT_CREATOR_BUDGET() { Call<void>(0x3ffd4cbc90ee7de7); }
	void INIT_CREATOR_BUDGET_f() { FastCall<void>(0x3ffd4cbc90ee7de7); }
	void SHUTDOWN_CREATOR_BUDGET() { Call<void>(0xcc005ff484a06fe1); }
	void SHUTDOWN_CREATOR_BUDGET_f() { FastCall<void>(0xcc005ff484a06fe1); }
	BOOL ADD_MODEL_TO_CREATOR_BUDGET(Hash modelHash) { return Call<BOOL>(0xa69687f05f3857a8, modelHash); }
	BOOL ADD_MODEL_TO_CREATOR_BUDGET_f(Hash modelHash) { return FastCall<BOOL>(0xa69687f05f3857a8, modelHash); }
	void REMOVE_MODEL_FROM_CREATOR_BUDGET(Hash modelHash) { Call<void>(0x6efabe2d62681ddc, modelHash); }
	void REMOVE_MODEL_FROM_CREATOR_BUDGET_f(Hash modelHash) { FastCall<void>(0x6efabe2d62681ddc, modelHash); }
	float GET_USED_CREATOR_BUDGET() { return ToFloat(Call<_float>(0x1c746fc29d0b1111)); }
	float GET_USED_CREATOR_BUDGET_f() { return ToFloat(FastCall<_float>(0x1c746fc29d0b1111)); }
	void SET_ISLAND_ENABLED(char* name, BOOL toggle) { Call<void>(0xabb74fdfd0df2894, name, toggle); }
	void SET_ISLAND_ENABLED_f(char* name, BOOL toggle) { FastCall<void>(0xabb74fdfd0df2894, name, toggle); }
}
namespace TASK
{
	void TASK_PAUSE(Ped ped, int ms) { Call<void>(0x8187ba190c69c, ped, ms); }
	void TASK_PAUSE_f(Ped ped, int ms) { FastCall<void>(0x8187ba190c69c, ped, ms); }
	void TASK_STAND_STILL(Ped ped, int time) { Call<void>(0xfba1bba239026405, ped, time); }
	void TASK_STAND_STILL_f(Ped ped, int time) { FastCall<void>(0xfba1bba239026405, ped, time); }
	void TASK_JUMP(Ped ped, BOOL usePlayerLaunchForce, BOOL doSuperJump, BOOL useFullSuperJumpForce) { Call<void>(0x42dab29f22a8, ped, usePlayerLaunchForce, doSuperJump, useFullSuperJumpForce); }
	void TASK_JUMP_f(Ped ped, BOOL usePlayerLaunchForce, BOOL doSuperJump, BOOL useFullSuperJumpForce) { FastCall<void>(0x42dab29f22a8, ped, usePlayerLaunchForce, doSuperJump, useFullSuperJumpForce); }
	void TASK_COWER(Ped ped, int duration) { Call<void>(0x8187ba0dff81e, ped, duration); }
	void TASK_COWER_f(Ped ped, int duration) { FastCall<void>(0x8187ba0dff81e, ped, duration); }
	void TASK_HANDS_UP(Ped ped, int duration, Ped facingPed, int timeToFacePed, int flags) { Call<void>(0xae191ae342f17c70, ped, duration, facingPed, timeToFacePed, flags); }
	void TASK_HANDS_UP_f(Ped ped, int duration, Ped facingPed, int timeToFacePed, int flags) { FastCall<void>(0xae191ae342f17c70, ped, duration, facingPed, timeToFacePed, flags); }
	void UPDATE_TASK_HANDS_UP_DURATION(Ped ped, int duration) { Call<void>(0x1b041a6c2ba750b9, ped, duration); }
	void UPDATE_TASK_HANDS_UP_DURATION_f(Ped ped, int duration) { FastCall<void>(0x1b041a6c2ba750b9, ped, duration); }
	void TASK_OPEN_VEHICLE_DOOR(Ped ped, Vehicle vehicle, int timeOut, int seat, float speed) { Call<void>(0x1a33fe3a473b49c, ped, vehicle, timeOut, seat, speed); }
	void TASK_OPEN_VEHICLE_DOOR_f(Ped ped, Vehicle vehicle, int timeOut, int seat, float speed) { FastCall<void>(0x1a33fe3a473b49c, ped, vehicle, timeOut, seat, speed); }
	void TASK_ENTER_VEHICLE(Ped ped, Vehicle vehicle, int timeout, int seat, float speed, int flag, char* overrideEntryClipsetName, Any p7) { Call<void>(0xff3180dcdfd20b4b, ped, vehicle, timeout, seat, speed, flag, overrideEntryClipsetName, p7); }
	void TASK_ENTER_VEHICLE_f(Ped ped, Vehicle vehicle, int timeout, int seat, float speed, int flag, char* overrideEntryClipsetName, Any p7) { FastCall<void>(0xff3180dcdfd20b4b, ped, vehicle, timeout, seat, speed, flag, overrideEntryClipsetName, p7); }
	void TASK_LEAVE_VEHICLE(Ped ped, Vehicle vehicle, int flags) { Call<void>(0x4853b217c496042a, ped, vehicle, flags); }
	void TASK_LEAVE_VEHICLE_f(Ped ped, Vehicle vehicle, int flags) { FastCall<void>(0x4853b217c496042a, ped, vehicle, flags); }
	void TASK_GET_OFF_BOAT(Ped ped, Vehicle boat) { Call<void>(0x7430a6c20228a993, ped, boat); }
	void TASK_GET_OFF_BOAT_f(Ped ped, Vehicle boat) { FastCall<void>(0x7430a6c20228a993, ped, boat); }
	void TASK_SKY_DIVE(Ped ped, BOOL instant) { Call<void>(0xae191b2bded75fec, ped, instant); }
	void TASK_SKY_DIVE_f(Ped ped, BOOL instant) { FastCall<void>(0xae191b2bded75fec, ped, instant); }
	void TASK_PARACHUTE(Ped ped, BOOL giveParachuteItem, BOOL instant) { Call<void>(0x150a47ba8af000e7, ped, giveParachuteItem, instant); }
	void TASK_PARACHUTE_f(Ped ped, BOOL giveParachuteItem, BOOL instant) { FastCall<void>(0x150a47ba8af000e7, ped, giveParachuteItem, instant); }
	void TASK_PARACHUTE_TO_TARGET(Ped ped, float x, float y, float z) { Call<void>(0xea01c088a00ee7d, ped, x, y, z); }
	void TASK_PARACHUTE_TO_TARGET_f(Ped ped, float x, float y, float z) { FastCall<void>(0xea01c088a00ee7d, ped, x, y, z); }
	void SET_PARACHUTE_TASK_TARGET(Ped ped, float x, float y, float z) { Call<void>(0x21a45102d12fd930, ped, x, y, z); }
	void SET_PARACHUTE_TASK_TARGET_f(Ped ped, float x, float y, float z) { FastCall<void>(0x21a45102d12fd930, ped, x, y, z); }
	void SET_PARACHUTE_TASK_THRUST(Ped ped, float thrust) { Call<void>(0x21a45102d192b3f7, ped, thrust); }
	void SET_PARACHUTE_TASK_THRUST_f(Ped ped, float thrust) { FastCall<void>(0x21a45102d192b3f7, ped, thrust); }
	void TASK_RAPPEL_FROM_HELI(Ped ped, float minHeightAboveGround) { Call<void>(0x8d9cd72df0a8ae80, ped, minHeightAboveGround); }
	void TASK_RAPPEL_FROM_HELI_f(Ped ped, float minHeightAboveGround) { FastCall<void>(0x8d9cd72df0a8ae80, ped, minHeightAboveGround); }
	void TASK_VEHICLE_DRIVE_TO_COORD(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, Any p6, Hash vehicleModel, int drivingMode, float stopRange, float straightLineDistance) { Call<void>(0x9d012b21f156d4d3, ped, vehicle, x, y, z, speed, p6, vehicleModel, drivingMode, stopRange, straightLineDistance); }
	void TASK_VEHICLE_DRIVE_TO_COORD_f(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, Any p6, Hash vehicleModel, int drivingMode, float stopRange, float straightLineDistance) { FastCall<void>(0x9d012b21f156d4d3, ped, vehicle, x, y, z, speed, p6, vehicleModel, drivingMode, stopRange, straightLineDistance); }
	void TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int driveMode, float stopRange) { Call<void>(0x61ae3d29305c53b5, ped, vehicle, x, y, z, speed, driveMode, stopRange); }
	void TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE_f(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int driveMode, float stopRange) { FastCall<void>(0x61ae3d29305c53b5, ped, vehicle, x, y, z, speed, driveMode, stopRange); }
	void TASK_VEHICLE_DRIVE_WANDER(Ped ped, Vehicle vehicle, float speed, int drivingStyle) { Call<void>(0x3a05e14906c87ef, ped, vehicle, speed, drivingStyle); }
	void TASK_VEHICLE_DRIVE_WANDER_f(Ped ped, Vehicle vehicle, float speed, int drivingStyle) { FastCall<void>(0x3a05e14906c87ef, ped, vehicle, speed, drivingStyle); }
	void TASK_FOLLOW_TO_OFFSET_OF_ENTITY(Ped ped, Entity entity, float offsetX, float offsetY, float offsetZ, float movementSpeed, int timeout, float stoppingRange, BOOL persistFollowing) { Call<void>(0x505127f955dd494f, ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing); }
	void TASK_FOLLOW_TO_OFFSET_OF_ENTITY_f(Ped ped, Entity entity, float offsetX, float offsetY, float offsetZ, float movementSpeed, int timeout, float stoppingRange, BOOL persistFollowing) { FastCall<void>(0x505127f955dd494f, ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing); }
	void TASK_GO_STRAIGHT_TO_COORD(Ped ped, float x, float y, float z, float speed, int timeout, float targetHeading, float distanceToSlide) { Call<void>(0x63444008b6b88299, ped, x, y, z, speed, timeout, targetHeading, distanceToSlide); }
	void TASK_GO_STRAIGHT_TO_COORD_f(Ped ped, float x, float y, float z, float speed, int timeout, float targetHeading, float distanceToSlide) { FastCall<void>(0x63444008b6b88299, ped, x, y, z, speed, timeout, targetHeading, distanceToSlide); }
	void TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY(Ped ped, Entity entity, float x, float y, float z, float moveBlendRatio, int time) { Call<void>(0xe0b610e15ae693da, ped, entity, x, y, z, moveBlendRatio, time); }
	void TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY_f(Ped ped, Entity entity, float x, float y, float z, float moveBlendRatio, int time) { FastCall<void>(0xe0b610e15ae693da, ped, entity, x, y, z, moveBlendRatio, time); }
	void TASK_ACHIEVE_HEADING(Ped ped, float heading, int timeout) { Call<void>(0xc49ca1f78f575f1a, ped, heading, timeout); }
	void TASK_ACHIEVE_HEADING_f(Ped ped, float heading, int timeout) { FastCall<void>(0xc49ca1f78f575f1a, ped, heading, timeout); }
	void TASK_FLUSH_ROUTE() { Call<void>(0xfb7b301577611154); }
	void TASK_FLUSH_ROUTE_f() { FastCall<void>(0xfb7b301577611154); }
	void TASK_EXTEND_ROUTE(float x, float y, float z) { Call<void>(0x73b35c514915b13e, x, y, z); }
	void TASK_EXTEND_ROUTE_f(float x, float y, float z) { FastCall<void>(0x73b35c514915b13e, x, y, z); }
	void TASK_FOLLOW_POINT_ROUTE(Ped ped, float speed, int mode) { Call<void>(0x34d1d23484ad8c06, ped, speed, mode); }
	void TASK_FOLLOW_POINT_ROUTE_f(Ped ped, float speed, int mode) { FastCall<void>(0x34d1d23484ad8c06, ped, speed, mode); }
	void TASK_GO_TO_ENTITY(Entity entity, Entity target, int duration, float distance, float moveBlendRatio, float slowDownDistance, int flags) { Call<void>(0x744ec53c1b2e380a, entity, target, duration, distance, moveBlendRatio, slowDownDistance, flags); }
	void TASK_GO_TO_ENTITY_f(Entity entity, Entity target, int duration, float distance, float moveBlendRatio, float slowDownDistance, int flags) { FastCall<void>(0x744ec53c1b2e380a, entity, target, duration, distance, moveBlendRatio, slowDownDistance, flags); }
	void TASK_SMART_FLEE_COORD(Ped ped, float x, float y, float z, float distance, int time, BOOL preferPavements, BOOL quitIfOutOfRange) { Call<void>(0x44766b2b8e1dad0c, ped, x, y, z, distance, time, preferPavements, quitIfOutOfRange); }
	void TASK_SMART_FLEE_COORD_f(Ped ped, float x, float y, float z, float distance, int time, BOOL preferPavements, BOOL quitIfOutOfRange) { FastCall<void>(0x44766b2b8e1dad0c, ped, x, y, z, distance, time, preferPavements, quitIfOutOfRange); }
	void TASK_SMART_FLEE_PED(Ped ped, Ped fleeTarget, float safeDistance, int fleeTime, BOOL preferPavements, BOOL updateToNearestHatedPed) { Call<void>(0x5d92e7565afcc0e6, ped, fleeTarget, safeDistance, fleeTime, preferPavements, updateToNearestHatedPed); }
	void TASK_SMART_FLEE_PED_f(Ped ped, Ped fleeTarget, float safeDistance, int fleeTime, BOOL preferPavements, BOOL updateToNearestHatedPed) { FastCall<void>(0x5d92e7565afcc0e6, ped, fleeTarget, safeDistance, fleeTime, preferPavements, updateToNearestHatedPed); }
	void TASK_REACT_AND_FLEE_PED(Ped ped, Ped fleeTarget) { Call<void>(0xb6b54dd3b328fe78, ped, fleeTarget); }
	void TASK_REACT_AND_FLEE_PED_f(Ped ped, Ped fleeTarget) { FastCall<void>(0xb6b54dd3b328fe78, ped, fleeTarget); }
	void TASK_SHOCKING_EVENT_REACT(Ped ped, int eventHandle) { Call<void>(0x6bf09b5390ef4615, ped, eventHandle); }
	void TASK_SHOCKING_EVENT_REACT_f(Ped ped, int eventHandle) { FastCall<void>(0x6bf09b5390ef4615, ped, eventHandle); }
	void TASK_WANDER_IN_AREA(Ped ped, float x, float y, float z, float radius, float minimalLength, float timeBetweenWalks) { Call<void>(0x2a444eb1b31309cf, ped, x, y, z, radius, minimalLength, timeBetweenWalks); }
	void TASK_WANDER_IN_AREA_f(Ped ped, float x, float y, float z, float radius, float minimalLength, float timeBetweenWalks) { FastCall<void>(0x2a444eb1b31309cf, ped, x, y, z, radius, minimalLength, timeBetweenWalks); }
	void TASK_WANDER_STANDARD(Ped ped, float heading, int flags) { Call<void>(0x1e4587c5c8feb955, ped, heading, flags); }
	void TASK_WANDER_STANDARD_f(Ped ped, float heading, int flags) { FastCall<void>(0x1e4587c5c8feb955, ped, heading, flags); }
	void TASK_WANDER_SPECIFIC(Ped ped, char* conditionalAnimGroupStr, char* conditionalAnimStr, float heading) { Call<void>(0x1e4587c4fba083ca, ped, conditionalAnimGroupStr, conditionalAnimStr, heading); }
	void TASK_WANDER_SPECIFIC_f(Ped ped, char* conditionalAnimGroupStr, char* conditionalAnimStr, float heading) { FastCall<void>(0x1e4587c4fba083ca, ped, conditionalAnimGroupStr, conditionalAnimStr, heading); }
	void TASK_VEHICLE_PARK(Ped ped, Vehicle vehicle, float x, float y, float z, float heading, int mode, float radius, BOOL keepEngineOn) { Call<void>(0x79797df6a1671db7, ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn); }
	void TASK_VEHICLE_PARK_f(Ped ped, Vehicle vehicle, float x, float y, float z, float heading, int mode, float radius, BOOL keepEngineOn) { FastCall<void>(0x79797df6a1671db7, ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn); }
	void TASK_STEALTH_KILL(Ped killer, Ped target, Hash stealthKillActionResultHash, float desiredMoveBlendRatio, int stealthFlags) { Call<void>(0x78960ef017f1aab4, killer, target, stealthKillActionResultHash, desiredMoveBlendRatio, stealthFlags); }
	void TASK_STEALTH_KILL_f(Ped killer, Ped target, Hash stealthKillActionResultHash, float desiredMoveBlendRatio, int stealthFlags) { FastCall<void>(0x78960ef017f1aab4, killer, target, stealthKillActionResultHash, desiredMoveBlendRatio, stealthFlags); }
	void TASK_PLANT_BOMB(Ped ped, float x, float y, float z, float heading) { Call<void>(0x8c3eb7b519fbb310, ped, x, y, z, heading); }
	void TASK_PLANT_BOMB_f(Ped ped, float x, float y, float z, float heading) { FastCall<void>(0x8c3eb7b519fbb310, ped, x, y, z, heading); }
	void TASK_FOLLOW_NAV_MESH_TO_COORD(Ped ped, float x, float y, float z, float moveBlendRatio, int time, float targetRadius, int flags, float targetHeading) { Call<void>(0xc495c2de6829c853, ped, x, y, z, moveBlendRatio, time, targetRadius, flags, targetHeading); }
	void TASK_FOLLOW_NAV_MESH_TO_COORD_f(Ped ped, float x, float y, float z, float moveBlendRatio, int time, float targetRadius, int flags, float targetHeading) { FastCall<void>(0xc495c2de6829c853, ped, x, y, z, moveBlendRatio, time, targetRadius, flags, targetHeading); }
	void TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED(Ped ped, float x, float y, float z, float moveBlendRatio, int time, float targetRadius, int flags, float slideToCoordHeading, float maxSlopeNavigable, float clampMaxSearchDistance, float targetHeading) { Call<void>(0xda6dfab353596e8e, ped, x, y, z, moveBlendRatio, time, targetRadius, flags, slideToCoordHeading, maxSlopeNavigable, clampMaxSearchDistance, targetHeading); }
	void TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED_f(Ped ped, float x, float y, float z, float moveBlendRatio, int time, float targetRadius, int flags, float slideToCoordHeading, float maxSlopeNavigable, float clampMaxSearchDistance, float targetHeading) { FastCall<void>(0xda6dfab353596e8e, ped, x, y, z, moveBlendRatio, time, targetRadius, flags, slideToCoordHeading, maxSlopeNavigable, clampMaxSearchDistance, targetHeading); }
	void SET_PED_PATH_CAN_USE_CLIMBOVERS(Ped ped, BOOL Toggle) { Call<void>(0x854a3ae675ad5f5e, ped, Toggle); }
	void SET_PED_PATH_CAN_USE_CLIMBOVERS_f(Ped ped, BOOL Toggle) { FastCall<void>(0x854a3ae675ad5f5e, ped, Toggle); }
	void SET_PED_PATH_CAN_USE_LADDERS(Ped ped, BOOL Toggle) { Call<void>(0xf2575e9c8a12ea1d, ped, Toggle); }
	void SET_PED_PATH_CAN_USE_LADDERS_f(Ped ped, BOOL Toggle) { FastCall<void>(0xf2575e9c8a12ea1d, ped, Toggle); }
	void SET_PED_PATH_CAN_DROP_FROM_HEIGHT(Ped ped, BOOL Toggle) { Call<void>(0x8a6037d0a9ca408, ped, Toggle); }
	void SET_PED_PATH_CAN_DROP_FROM_HEIGHT_f(Ped ped, BOOL Toggle) { FastCall<void>(0x8a6037d0a9ca408, ped, Toggle); }
	void SET_PED_PATH_CLIMB_COST_MODIFIER(Ped ped, float modifier) { Call<void>(0xf033f05d205993f2, ped, modifier); }
	void SET_PED_PATH_CLIMB_COST_MODIFIER_f(Ped ped, float modifier) { FastCall<void>(0xf033f05d205993f2, ped, modifier); }
	void SET_PED_PATH_MAY_ENTER_WATER(Ped ped, BOOL mayEnterWater) { Call<void>(0xc178d2d8cd514749, ped, mayEnterWater); }
	void SET_PED_PATH_MAY_ENTER_WATER_f(Ped ped, BOOL mayEnterWater) { FastCall<void>(0xc178d2d8cd514749, ped, mayEnterWater); }
	void SET_PED_PATH_PREFER_TO_AVOID_WATER(Ped ped, BOOL avoidWater) { Call<void>(0xc76f71d18ec87c2b, ped, avoidWater); }
	void SET_PED_PATH_PREFER_TO_AVOID_WATER_f(Ped ped, BOOL avoidWater) { FastCall<void>(0xc76f71d18ec87c2b, ped, avoidWater); }
	void SET_PED_PATH_AVOID_FIRE(Ped ped, BOOL avoidFire) { Call<void>(0xeeca60125910386d, ped, avoidFire); }
	void SET_PED_PATH_AVOID_FIRE_f(Ped ped, BOOL avoidFire) { FastCall<void>(0xeeca60125910386d, ped, avoidFire); }
	void SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT(float height) { Call<void>(0x5c59c39bd60caedc, height); }
	void SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT_f(float height) { FastCall<void>(0x5c59c39bd60caedc, height); }
	int GET_NAVMESH_ROUTE_DISTANCE_REMAINING(Ped ped, float* distanceRemaining, BOOL* isPathReady) { return Call<int>(0xde28e187e93ba7ba, ped, distanceRemaining, isPathReady); }
	int GET_NAVMESH_ROUTE_DISTANCE_REMAINING_f(Ped ped, float* distanceRemaining, BOOL* isPathReady) { return FastCall<int>(0xde28e187e93ba7ba, ped, distanceRemaining, isPathReady); }
	int GET_NAVMESH_ROUTE_RESULT(Ped ped) { return Call<int>(0xefd4ac4320e472cb, ped); }
	int GET_NAVMESH_ROUTE_RESULT_f(Ped ped) { return FastCall<int>(0xefd4ac4320e472cb, ped); }
	BOOL IS_CONTROLLED_VEHICLE_UNABLE_TO_GET_TO_ROAD(Ped ped) { return Call<BOOL>(0x180c756a33191e74, ped); }
	BOOL IS_CONTROLLED_VEHICLE_UNABLE_TO_GET_TO_ROAD_f(Ped ped) { return FastCall<BOOL>(0x180c756a33191e74, ped); }
	void TASK_GO_TO_COORD_ANY_MEANS(Ped ped, float x, float y, float z, float moveBlendRatio, Vehicle vehicle, BOOL useLongRangeVehiclePathing, int drivingFlags, float maxRangeToShootTargets) { Call<void>(0xf0abddd6c0f397ca, ped, x, y, z, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets); }
	void TASK_GO_TO_COORD_ANY_MEANS_f(Ped ped, float x, float y, float z, float moveBlendRatio, Vehicle vehicle, BOOL useLongRangeVehiclePathing, int drivingFlags, float maxRangeToShootTargets) { FastCall<void>(0xf0abddd6c0f397ca, ped, x, y, z, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets); }
	void TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS(Ped ped, float x, float y, float z, float moveBlendRatio, Vehicle vehicle, BOOL useLongRangeVehiclePathing, int drivingFlags, float maxRangeToShootTargets, float extraVehToTargetDistToPreferVehicle, float driveStraightLineDistance, int extraFlags, float warpTimerMS) { Call<void>(0x221a3da5a4d84b0a, ped, x, y, z, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets, extraVehToTargetDistToPreferVehicle, driveStraightLineDistance, extraFlags, warpTimerMS); }
	void TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_f(Ped ped, float x, float y, float z, float moveBlendRatio, Vehicle vehicle, BOOL useLongRangeVehiclePathing, int drivingFlags, float maxRangeToShootTargets, float extraVehToTargetDistToPreferVehicle, float driveStraightLineDistance, int extraFlags, float warpTimerMS) { FastCall<void>(0x221a3da5a4d84b0a, ped, x, y, z, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets, extraVehToTargetDistToPreferVehicle, driveStraightLineDistance, extraFlags, warpTimerMS); }
	void TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED(Ped ped, float x, float y, float z, float moveBlendRatio, Vehicle vehicle, BOOL useLongRangeVehiclePathing, int drivingFlags, float maxRangeToShootTargets, float extraVehToTargetDistToPreferVehicle, float driveStraightLineDistance, int extraFlags, float cruiseSpeed, float targetArriveDist) { Call<void>(0xe9b0504cf520a921, ped, x, y, z, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets, extraVehToTargetDistToPreferVehicle, driveStraightLineDistance, extraFlags, cruiseSpeed, targetArriveDist); }
	void TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED_f(Ped ped, float x, float y, float z, float moveBlendRatio, Vehicle vehicle, BOOL useLongRangeVehiclePathing, int drivingFlags, float maxRangeToShootTargets, float extraVehToTargetDistToPreferVehicle, float driveStraightLineDistance, int extraFlags, float cruiseSpeed, float targetArriveDist) { FastCall<void>(0xe9b0504cf520a921, ped, x, y, z, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets, extraVehToTargetDistToPreferVehicle, driveStraightLineDistance, extraFlags, cruiseSpeed, targetArriveDist); }
	void TASK_PLAY_ANIM(Ped ped, char* animDictionary, char* animationName, float blendInSpeed, float blendOutSpeed, int duration, int flag, float playbackRate, BOOL lockX, BOOL lockY, BOOL lockZ) { Call<void>(0x150a47fda8ce9602, ped, animDictionary, animationName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ); }
	void TASK_PLAY_ANIM_f(Ped ped, char* animDictionary, char* animationName, float blendInSpeed, float blendOutSpeed, int duration, int flag, float playbackRate, BOOL lockX, BOOL lockY, BOOL lockZ) { FastCall<void>(0x150a47fda8ce9602, ped, animDictionary, animationName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ); }
	void TASK_PLAY_ANIM_ADVANCED(Ped ped, char* animDict, char* animName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float animEnterSpeed, float animExitSpeed, int duration, Any flag, float animTime, int rotOrder, int ikFlags) { Call<void>(0x130a69358ff95bf, ped, animDict, animName, posX, posY, posZ, rotX, rotY, rotZ, animEnterSpeed, animExitSpeed, duration, flag, animTime, rotOrder, ikFlags); }
	void TASK_PLAY_ANIM_ADVANCED_f(Ped ped, char* animDict, char* animName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float animEnterSpeed, float animExitSpeed, int duration, Any flag, float animTime, int rotOrder, int ikFlags) { FastCall<void>(0x130a69358ff95bf, ped, animDict, animName, posX, posY, posZ, rotX, rotY, rotZ, animEnterSpeed, animExitSpeed, duration, flag, animTime, rotOrder, ikFlags); }
	void STOP_ANIM_TASK(Entity entity, char* animDictionary, char* animationName, float blendDelta) { Call<void>(0x9083a29af6db2ef6, entity, animDictionary, animationName, blendDelta); }
	void STOP_ANIM_TASK_f(Entity entity, char* animDictionary, char* animationName, float blendDelta) { FastCall<void>(0x9083a29af6db2ef6, entity, animDictionary, animationName, blendDelta); }
	void TASK_SCRIPTED_ANIMATION(Ped ped, int* priorityLowData, int* priorityMidData, int* priorityHighData, float blendInDelta, float blendOutDelta) { Call<void>(0xfd7fd5eb84747909, ped, priorityLowData, priorityMidData, priorityHighData, blendInDelta, blendOutDelta); }
	void TASK_SCRIPTED_ANIMATION_f(Ped ped, int* priorityLowData, int* priorityMidData, int* priorityHighData, float blendInDelta, float blendOutDelta) { FastCall<void>(0xfd7fd5eb84747909, ped, priorityLowData, priorityMidData, priorityHighData, blendInDelta, blendOutDelta); }
	void PLAY_ENTITY_SCRIPTED_ANIM(Entity entity, int* priorityLowData, int* priorityMidData, int* priorityHighData, float blendInDelta, float blendOutDelta) { Call<void>(0x1b16b279eb934755, entity, priorityLowData, priorityMidData, priorityHighData, blendInDelta, blendOutDelta); }
	void PLAY_ENTITY_SCRIPTED_ANIM_f(Entity entity, int* priorityLowData, int* priorityMidData, int* priorityHighData, float blendInDelta, float blendOutDelta) { FastCall<void>(0x1b16b279eb934755, entity, priorityLowData, priorityMidData, priorityHighData, blendInDelta, blendOutDelta); }
	void STOP_ANIM_PLAYBACK(Entity entity, int priority, BOOL secondary) { Call<void>(0x8a6a5c292faba70c, entity, priority, secondary); }
	void STOP_ANIM_PLAYBACK_f(Entity entity, int priority, BOOL secondary) { FastCall<void>(0x8a6a5c292faba70c, entity, priority, secondary); }
	void SET_ANIM_WEIGHT(Entity entity, float weight, int priority, int index, BOOL secondary) { Call<void>(0xe0a004221d597fe9, entity, weight, priority, index, secondary); }
	void SET_ANIM_WEIGHT_f(Entity entity, float weight, int priority, int index, BOOL secondary) { FastCall<void>(0xe0a004221d597fe9, entity, weight, priority, index, secondary); }
	void SET_ANIM_PHASE(Entity entity, float phase, int priority, BOOL secondary) { Call<void>(0xee78c653adfc55ca, entity, phase, priority, secondary); }
	void SET_ANIM_PHASE_f(Entity entity, float phase, int priority, BOOL secondary) { FastCall<void>(0xee78c653adfc55ca, entity, phase, priority, secondary); }
	void SET_ANIM_RATE(Entity entity, float rate, int priority, BOOL secondary) { Call<void>(0xa4988a86d4113691, entity, rate, priority, secondary); }
	void SET_ANIM_RATE_f(Entity entity, float rate, int priority, BOOL secondary) { FastCall<void>(0xa4988a86d4113691, entity, rate, priority, secondary); }
	void SET_ANIM_LOOPED(Entity entity, BOOL looped, int priority, BOOL secondary) { Call<void>(0xe0a004220b23f7b4, entity, looped, priority, secondary); }
	void SET_ANIM_LOOPED_f(Entity entity, BOOL looped, int priority, BOOL secondary) { FastCall<void>(0xe0a004220b23f7b4, entity, looped, priority, secondary); }
	void TASK_PLAY_PHONE_GESTURE_ANIMATION(Ped ped, char* animDict, char* animation, char* boneMaskType, float blendInDuration, float blendOutDuration, BOOL isLooping, BOOL holdLastFrame) { Call<void>(0x29842ad605c53b8c, ped, animDict, animation, boneMaskType, blendInDuration, blendOutDuration, isLooping, holdLastFrame); }
	void TASK_PLAY_PHONE_GESTURE_ANIMATION_f(Ped ped, char* animDict, char* animation, char* boneMaskType, float blendInDuration, float blendOutDuration, BOOL isLooping, BOOL holdLastFrame) { FastCall<void>(0x29842ad605c53b8c, ped, animDict, animation, boneMaskType, blendInDuration, blendOutDuration, isLooping, holdLastFrame); }
	void TASK_STOP_PHONE_GESTURE_ANIMATION(Ped ped, float blendOutOverride) { Call<void>(0x14f945a16f0ae5a, ped, blendOutOverride); }
	void TASK_STOP_PHONE_GESTURE_ANIMATION_f(Ped ped, float blendOutOverride) { FastCall<void>(0x14f945a16f0ae5a, ped, blendOutOverride); }
	BOOL IS_PLAYING_PHONE_GESTURE_ANIM(Ped ped) { return Call<BOOL>(0x85cb0df703ca76be, ped); }
	BOOL IS_PLAYING_PHONE_GESTURE_ANIM_f(Ped ped) { return FastCall<BOOL>(0x85cb0df703ca76be, ped); }
	float GET_PHONE_GESTURE_ANIM_CURRENT_TIME(Ped ped) { return ToFloat(Call<_float>(0x64e22acd83e39f11, ped)); }
	float GET_PHONE_GESTURE_ANIM_CURRENT_TIME_f(Ped ped) { return ToFloat(FastCall<_float>(0x64e22acd83e39f11, ped)); }
	float GET_PHONE_GESTURE_ANIM_TOTAL_TIME(Ped ped) { return ToFloat(Call<_float>(0x810b23458d2c1ba6, ped)); }
	float GET_PHONE_GESTURE_ANIM_TOTAL_TIME_f(Ped ped) { return ToFloat(FastCall<_float>(0x810b23458d2c1ba6, ped)); }
	void TASK_VEHICLE_PLAY_ANIM(Vehicle vehicle, char* animationSet, char* animationName) { Call<void>(0x7cc8383eec6a268f, vehicle, animationSet, animationName); }
	void TASK_VEHICLE_PLAY_ANIM_f(Vehicle vehicle, char* animationSet, char* animationName) { FastCall<void>(0x7cc8383eec6a268f, vehicle, animationSet, animationName); }
	void TASK_LOOK_AT_COORD(Entity entity, float x, float y, float z, int duration, int flags, int priority) { Call<void>(0x4c0232035bbe642f, entity, x, y, z, duration, flags, priority); }
	void TASK_LOOK_AT_COORD_f(Entity entity, float x, float y, float z, int duration, int flags, int priority) { FastCall<void>(0x4c0232035bbe642f, entity, x, y, z, duration, flags, priority); }
	void TASK_LOOK_AT_ENTITY(Ped ped, Entity lookAt, int duration, int flags, int priority) { Call<void>(0x34440e681f6be1c9, ped, lookAt, duration, flags, priority); }
	void TASK_LOOK_AT_ENTITY_f(Ped ped, Entity lookAt, int duration, int flags, int priority) { FastCall<void>(0x34440e681f6be1c9, ped, lookAt, duration, flags, priority); }
	void TASK_CLEAR_LOOK_AT(Ped ped) { Call<void>(0xe8743af269529087, ped); }
	void TASK_CLEAR_LOOK_AT_f(Ped ped) { FastCall<void>(0xe8743af269529087, ped); }
	void OPEN_SEQUENCE_TASK(int* taskSequenceId) { Call<void>(0xd1f53df66d1e560e, taskSequenceId); }
	void OPEN_SEQUENCE_TASK_f(int* taskSequenceId) { FastCall<void>(0xd1f53df66d1e560e, taskSequenceId); }
	void CLOSE_SEQUENCE_TASK(int taskSequenceId) { Call<void>(0xee3c1694cf99cd1c, taskSequenceId); }
	void CLOSE_SEQUENCE_TASK_f(int taskSequenceId) { FastCall<void>(0xee3c1694cf99cd1c, taskSequenceId); }
	void TASK_PERFORM_SEQUENCE(Ped ped, int taskSequenceId) { Call<void>(0xd096ddc57c898e79, ped, taskSequenceId); }
	void TASK_PERFORM_SEQUENCE_f(Ped ped, int taskSequenceId) { FastCall<void>(0xd096ddc57c898e79, ped, taskSequenceId); }
	void TASK_PERFORM_SEQUENCE_LOCALLY(Ped ped, int taskSequenceId) { Call<void>(0xa1984db3b8faf652, ped, taskSequenceId); }
	void TASK_PERFORM_SEQUENCE_LOCALLY_f(Ped ped, int taskSequenceId) { FastCall<void>(0xa1984db3b8faf652, ped, taskSequenceId); }
	void CLEAR_SEQUENCE_TASK(int* taskSequenceId) { Call<void>(0x87725f735cd9ecb1, taskSequenceId); }
	void CLEAR_SEQUENCE_TASK_f(int* taskSequenceId) { FastCall<void>(0x87725f735cd9ecb1, taskSequenceId); }
	void SET_SEQUENCE_TO_REPEAT(int taskSequenceId, BOOL repeat) { Call<void>(0xfb5e8c50435813fe, taskSequenceId, repeat); }
	void SET_SEQUENCE_TO_REPEAT_f(int taskSequenceId, BOOL repeat) { FastCall<void>(0xfb5e8c50435813fe, taskSequenceId, repeat); }
	int GET_SEQUENCE_PROGRESS(Ped ped) { return Call<int>(0xa8e70a5925018022, ped); }
	int GET_SEQUENCE_PROGRESS_f(Ped ped) { return FastCall<int>(0xa8e70a5925018022, ped); }
	BOOL GET_IS_TASK_ACTIVE(Ped ped, int taskIndex) { return Call<BOOL>(0x57072c58ad38b394, ped, taskIndex); }
	BOOL GET_IS_TASK_ACTIVE_f(Ped ped, int taskIndex) { return FastCall<BOOL>(0x57072c58ad38b394, ped, taskIndex); }
	int GET_SCRIPT_TASK_STATUS(Ped ped, Hash taskHash) { return Call<int>(0x950d52dd09941a21, ped, taskHash); }
	int GET_SCRIPT_TASK_STATUS_f(Ped ped, Hash taskHash) { return FastCall<int>(0x950d52dd09941a21, ped, taskHash); }
	int GET_ACTIVE_VEHICLE_MISSION_TYPE(Vehicle vehicle) { return Call<int>(0x42a3116732f8c290, vehicle); }
	int GET_ACTIVE_VEHICLE_MISSION_TYPE_f(Vehicle vehicle) { return FastCall<int>(0x42a3116732f8c290, vehicle); }
	void TASK_LEAVE_ANY_VEHICLE(Ped ped, int delayTime, int flags) { Call<void>(0xb43d609dcb6c5db7, ped, delayTime, flags); }
	void TASK_LEAVE_ANY_VEHICLE_f(Ped ped, int delayTime, int flags) { FastCall<void>(0xb43d609dcb6c5db7, ped, delayTime, flags); }
	void TASK_AIM_GUN_SCRIPTED(Ped ped, Hash scriptTask, BOOL disableBlockingClip, BOOL instantBlendToAim) { Call<void>(0x92b2c37a9a90a73d, ped, scriptTask, disableBlockingClip, instantBlendToAim); }
	void TASK_AIM_GUN_SCRIPTED_f(Ped ped, Hash scriptTask, BOOL disableBlockingClip, BOOL instantBlendToAim) { FastCall<void>(0x92b2c37a9a90a73d, ped, scriptTask, disableBlockingClip, instantBlendToAim); }
	void TASK_AIM_GUN_SCRIPTED_WITH_TARGET(Ped ped, Ped target, float x, float y, float z, int gunTaskType, BOOL disableBlockingClip, BOOL forceAim) { Call<void>(0x9a3d9a0dc0e78128, ped, target, x, y, z, gunTaskType, disableBlockingClip, forceAim); }
	void TASK_AIM_GUN_SCRIPTED_WITH_TARGET_f(Ped ped, Ped target, float x, float y, float z, int gunTaskType, BOOL disableBlockingClip, BOOL forceAim) { FastCall<void>(0x9a3d9a0dc0e78128, ped, target, x, y, z, gunTaskType, disableBlockingClip, forceAim); }
	void UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET(Ped ped, Ped target, float x, float y, float z, BOOL disableBlockingClip) { Call<void>(0xaf90c124dde36c89, ped, target, x, y, z, disableBlockingClip); }
	void UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET_f(Ped ped, Ped target, float x, float y, float z, BOOL disableBlockingClip) { FastCall<void>(0xaf90c124dde36c89, ped, target, x, y, z, disableBlockingClip); }
	const char* GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK(int gunTaskType) { return Call<char*>(0xb5cd481037101ae0, gunTaskType); }
	const char* GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK_f(int gunTaskType) { return FastCall<char*>(0xb5cd481037101ae0, gunTaskType); }
	void TASK_AIM_GUN_AT_ENTITY(Ped ped, Entity entity, int duration, BOOL instantBlendToAim) { Call<void>(0xc3a59e51d969ef3c, ped, entity, duration, instantBlendToAim); }
	void TASK_AIM_GUN_AT_ENTITY_f(Ped ped, Entity entity, int duration, BOOL instantBlendToAim) { FastCall<void>(0xc3a59e51d969ef3c, ped, entity, duration, instantBlendToAim); }
	void TASK_TURN_PED_TO_FACE_ENTITY(Ped ped, Entity entity, int duration) { Call<void>(0xca9ffbfc02a7a7d9, ped, entity, duration); }
	void TASK_TURN_PED_TO_FACE_ENTITY_f(Ped ped, Entity entity, int duration) { FastCall<void>(0xca9ffbfc02a7a7d9, ped, entity, duration); }
	void TASK_AIM_GUN_AT_COORD(Ped ped, float x, float y, float z, int time, BOOL instantBlendToAim, BOOL playAnimIntro) { Call<void>(0x92b2c30ae5df5c5c, ped, x, y, z, time, instantBlendToAim, playAnimIntro); }
	void TASK_AIM_GUN_AT_COORD_f(Ped ped, float x, float y, float z, int time, BOOL instantBlendToAim, BOOL playAnimIntro) { FastCall<void>(0x92b2c30ae5df5c5c, ped, x, y, z, time, instantBlendToAim, playAnimIntro); }
	void TASK_SHOOT_AT_COORD(Ped ped, float x, float y, float z, int duration, Hash firingPattern) { Call<void>(0x2bd23b7c2b7d1603, ped, x, y, z, duration, firingPattern); }
	void TASK_SHOOT_AT_COORD_f(Ped ped, float x, float y, float z, int duration, Hash firingPattern) { FastCall<void>(0x2bd23b7c2b7d1603, ped, x, y, z, duration, firingPattern); }
	void TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT(Ped ped, Vehicle vehicle, BOOL useAlternateShuffle) { Call<void>(0x60c24fd613f0280, ped, vehicle, useAlternateShuffle); }
	void TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT_f(Ped ped, Vehicle vehicle, BOOL useAlternateShuffle) { FastCall<void>(0x60c24fd613f0280, ped, vehicle, useAlternateShuffle); }
	void CLEAR_PED_TASKS(Ped ped) { Call<void>(0xeafea6843149108c, ped); }
	void CLEAR_PED_TASKS_f(Ped ped) { FastCall<void>(0xeafea6843149108c, ped); }
	void CLEAR_PED_SECONDARY_TASK(Ped ped) { Call<void>(0x21f6f0e89ca46e32, ped); }
	void CLEAR_PED_SECONDARY_TASK_f(Ped ped) { FastCall<void>(0x21f6f0e89ca46e32, ped); }
	void TASK_EVERYONE_LEAVE_VEHICLE(Vehicle vehicle) { Call<void>(0xf9f2155ccda8e98a, vehicle); }
	void TASK_EVERYONE_LEAVE_VEHICLE_f(Vehicle vehicle) { FastCall<void>(0xf9f2155ccda8e98a, vehicle); }
	void TASK_GOTO_ENTITY_OFFSET(Ped ped, Entity entity, int time, float seekRadius, float seekAngleDeg, float moveBlendRatio, int gotoEntityOffsetFlags) { Call<void>(0x69106d3bd29c638d, ped, entity, time, seekRadius, seekAngleDeg, moveBlendRatio, gotoEntityOffsetFlags); }
	void TASK_GOTO_ENTITY_OFFSET_f(Ped ped, Entity entity, int time, float seekRadius, float seekAngleDeg, float moveBlendRatio, int gotoEntityOffsetFlags) { FastCall<void>(0x69106d3bd29c638d, ped, entity, time, seekRadius, seekAngleDeg, moveBlendRatio, gotoEntityOffsetFlags); }
	void TASK_GOTO_ENTITY_OFFSET_XY(Ped ped, Entity entity, int duration, float targetRadius, float offsetX, float offsetY, float moveBlendRatio, int gotoEntityOffsetFlags) { Call<void>(0x6e97a4a2052644f3, ped, entity, duration, targetRadius, offsetX, offsetY, moveBlendRatio, gotoEntityOffsetFlags); }
	void TASK_GOTO_ENTITY_OFFSET_XY_f(Ped ped, Entity entity, int duration, float targetRadius, float offsetX, float offsetY, float moveBlendRatio, int gotoEntityOffsetFlags) { FastCall<void>(0x6e97a4a2052644f3, ped, entity, duration, targetRadius, offsetX, offsetY, moveBlendRatio, gotoEntityOffsetFlags); }
	void TASK_TURN_PED_TO_FACE_COORD(Ped ped, float x, float y, float z, int duration) { Call<void>(0x9b2e737bbde99c1f, ped, x, y, z, duration); }
	void TASK_TURN_PED_TO_FACE_COORD_f(Ped ped, float x, float y, float z, int duration) { FastCall<void>(0x9b2e737bbde99c1f, ped, x, y, z, duration); }
	void TASK_VEHICLE_TEMP_ACTION(Ped driver, Vehicle vehicle, int action, int time) { Call<void>(0x6ba62ac16bc00a94, driver, vehicle, action, time); }
	void TASK_VEHICLE_TEMP_ACTION_f(Ped driver, Vehicle vehicle, int action, int time) { FastCall<void>(0x6ba62ac16bc00a94, driver, vehicle, action, time); }
	void TASK_VEHICLE_MISSION(Ped driver, Vehicle vehicle, Vehicle vehicleTarget, int missionType, float cruiseSpeed, int drivingStyle, float targetReached, float straightLineDistance, BOOL DriveAgainstTraffic) { Call<void>(0x21297fa80dc1dc7f, driver, vehicle, vehicleTarget, missionType, cruiseSpeed, drivingStyle, targetReached, straightLineDistance, DriveAgainstTraffic); }
	void TASK_VEHICLE_MISSION_f(Ped driver, Vehicle vehicle, Vehicle vehicleTarget, int missionType, float cruiseSpeed, int drivingStyle, float targetReached, float straightLineDistance, BOOL DriveAgainstTraffic) { FastCall<void>(0x21297fa80dc1dc7f, driver, vehicle, vehicleTarget, missionType, cruiseSpeed, drivingStyle, targetReached, straightLineDistance, DriveAgainstTraffic); }
	void TASK_VEHICLE_MISSION_PED_TARGET(Ped ped, Vehicle vehicle, Ped pedTarget, int missionType, float maxSpeed, int drivingStyle, float minDistance, float straightLineDistance, BOOL DriveAgainstTraffic) { Call<void>(0xf73487fb557296a1, ped, vehicle, pedTarget, missionType, maxSpeed, drivingStyle, minDistance, straightLineDistance, DriveAgainstTraffic); }
	void TASK_VEHICLE_MISSION_PED_TARGET_f(Ped ped, Vehicle vehicle, Ped pedTarget, int missionType, float maxSpeed, int drivingStyle, float minDistance, float straightLineDistance, BOOL DriveAgainstTraffic) { FastCall<void>(0xf73487fb557296a1, ped, vehicle, pedTarget, missionType, maxSpeed, drivingStyle, minDistance, straightLineDistance, DriveAgainstTraffic); }
	void TASK_VEHICLE_MISSION_COORS_TARGET(Ped ped, Vehicle vehicle, float x, float y, float z, int mission, float cruiseSpeed, int drivingStyle, float targetReached, float straightLineDistance, BOOL DriveAgainstTraffic) { Call<void>(0xf7bb1402f5f3eb0c, ped, vehicle, x, y, z, mission, cruiseSpeed, drivingStyle, targetReached, straightLineDistance, DriveAgainstTraffic); }
	void TASK_VEHICLE_MISSION_COORS_TARGET_f(Ped ped, Vehicle vehicle, float x, float y, float z, int mission, float cruiseSpeed, int drivingStyle, float targetReached, float straightLineDistance, BOOL DriveAgainstTraffic) { FastCall<void>(0xf7bb1402f5f3eb0c, ped, vehicle, x, y, z, mission, cruiseSpeed, drivingStyle, targetReached, straightLineDistance, DriveAgainstTraffic); }
	void TASK_VEHICLE_ESCORT(Ped ped, Vehicle vehicle, Vehicle targetVehicle, int mode, float speed, int drivingStyle, float minDistance, int minHeightAboveTerrain, float noRoadsDistance) { Call<void>(0x111dad3d2482be9, ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, minHeightAboveTerrain, noRoadsDistance); }
	void TASK_VEHICLE_ESCORT_f(Ped ped, Vehicle vehicle, Vehicle targetVehicle, int mode, float speed, int drivingStyle, float minDistance, int minHeightAboveTerrain, float noRoadsDistance) { FastCall<void>(0x111dad3d2482be9, ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, minHeightAboveTerrain, noRoadsDistance); }
	void TASK_VEHICLE_FOLLOW(Ped driver, Vehicle vehicle, Entity targetEntity, float speed, int drivingStyle, int minDistance) { Call<void>(0x111dad3d3c8b23e, driver, vehicle, targetEntity, speed, drivingStyle, minDistance); }
	void TASK_VEHICLE_FOLLOW_f(Ped driver, Vehicle vehicle, Entity targetEntity, float speed, int drivingStyle, int minDistance) { FastCall<void>(0x111dad3d3c8b23e, driver, vehicle, targetEntity, speed, drivingStyle, minDistance); }
	void TASK_VEHICLE_CHASE(Ped driver, Entity targetEnt) { Call<void>(0xb5b640dd8ac857a1, driver, targetEnt); }
	void TASK_VEHICLE_CHASE_f(Ped driver, Entity targetEnt) { FastCall<void>(0xb5b640dd8ac857a1, driver, targetEnt); }
	void TASK_VEHICLE_HELI_PROTECT(Ped pilot, Vehicle vehicle, Entity entityToFollow, float targetSpeed, int drivingFlags, float radius, int altitude, int heliFlags) { Call<void>(0x4e3d574e0999b77, pilot, vehicle, entityToFollow, targetSpeed, drivingFlags, radius, altitude, heliFlags); }
	void TASK_VEHICLE_HELI_PROTECT_f(Ped pilot, Vehicle vehicle, Entity entityToFollow, float targetSpeed, int drivingFlags, float radius, int altitude, int heliFlags) { FastCall<void>(0x4e3d574e0999b77, pilot, vehicle, entityToFollow, targetSpeed, drivingFlags, radius, altitude, heliFlags); }
	void SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG(Ped ped, int flag, BOOL set) { Call<void>(0x6f8e28c3e6bf8178, ped, flag, set); }
	void SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG_f(Ped ped, int flag, BOOL set) { FastCall<void>(0x6f8e28c3e6bf8178, ped, flag, set); }
	void SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE(Ped ped, float distance) { Call<void>(0x97e6e2301c828c85, ped, distance); }
	void SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE_f(Ped ped, float distance) { FastCall<void>(0x97e6e2301c828c85, ped, distance); }
	void TASK_HELI_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z) { Call<void>(0x8c3df22ce93c2983, pilot, entityToFollow, x, y, z); }
	void TASK_HELI_CHASE_f(Ped pilot, Entity entityToFollow, float x, float y, float z) { FastCall<void>(0x8c3df22ce93c2983, pilot, entityToFollow, x, y, z); }
	void TASK_PLANE_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z) { Call<void>(0xfb983eeb0c07f451, pilot, entityToFollow, x, y, z); }
	void TASK_PLANE_CHASE_f(Ped pilot, Entity entityToFollow, float x, float y, float z) { FastCall<void>(0xfb983eeb0c07f451, pilot, entityToFollow, x, y, z); }
	void TASK_PLANE_LAND(Ped pilot, Vehicle plane, float runwayStartX, float runwayStartY, float runwayStartZ, float runwayEndX, float runwayEndY, float runwayEndZ) { Call<void>(0x8c3eb7b500675908, pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ); }
	void TASK_PLANE_LAND_f(Ped pilot, Vehicle plane, float runwayStartX, float runwayStartY, float runwayStartZ, float runwayEndX, float runwayEndY, float runwayEndZ) { FastCall<void>(0x8c3eb7b500675908, pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ); }
	void CLEAR_DEFAULT_PRIMARY_TASK(Ped ped) { Call<void>(0x25b98f2eed3259f2, ped); }
	void CLEAR_DEFAULT_PRIMARY_TASK_f(Ped ped) { FastCall<void>(0x25b98f2eed3259f2, ped); }
	void CLEAR_PRIMARY_VEHICLE_TASK(Vehicle vehicle) { Call<void>(0x966c34a5fe9d2ce7, vehicle); }
	void CLEAR_PRIMARY_VEHICLE_TASK_f(Vehicle vehicle) { FastCall<void>(0x966c34a5fe9d2ce7, vehicle); }
	void CLEAR_VEHICLE_CRASH_TASK(Vehicle vehicle) { Call<void>(0x6786c4db7f5d29a2, vehicle); }
	void CLEAR_VEHICLE_CRASH_TASK_f(Vehicle vehicle) { FastCall<void>(0x6786c4db7f5d29a2, vehicle); }
	void TASK_PLANE_GOTO_PRECISE_VTOL(Ped ped, Vehicle vehicle, float x, float y, float z, int flightHeight, int minHeightAboveTerrain, BOOL useDesiredOrientation, float desiredOrientation, BOOL autopilot) { Call<void>(0x46c243e85d69e5fe, ped, vehicle, x, y, z, flightHeight, minHeightAboveTerrain, useDesiredOrientation, desiredOrientation, autopilot); }
	void TASK_PLANE_GOTO_PRECISE_VTOL_f(Ped ped, Vehicle vehicle, float x, float y, float z, int flightHeight, int minHeightAboveTerrain, BOOL useDesiredOrientation, float desiredOrientation, BOOL autopilot) { FastCall<void>(0x46c243e85d69e5fe, ped, vehicle, x, y, z, flightHeight, minHeightAboveTerrain, useDesiredOrientation, desiredOrientation, autopilot); }
	void TASK_SUBMARINE_GOTO_AND_STOP(Ped ped, Vehicle submarine, float x, float y, float z, BOOL autopilot) { Call<void>(0x8fc154bc2458a8f, ped, submarine, x, y, z, autopilot); }
	void TASK_SUBMARINE_GOTO_AND_STOP_f(Ped ped, Vehicle submarine, float x, float y, float z, BOOL autopilot) { FastCall<void>(0x8fc154bc2458a8f, ped, submarine, x, y, z, autopilot); }
	void TASK_HELI_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float maxSpeed, float radius, float targetHeading, int maxHeight, int minHeight, float slowDownDistance, int behaviorFlags) { Call<void>(0x748a1a999e88bde1, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, radius, targetHeading, maxHeight, minHeight, slowDownDistance, behaviorFlags); }
	void TASK_HELI_MISSION_f(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float maxSpeed, float radius, float targetHeading, int maxHeight, int minHeight, float slowDownDistance, int behaviorFlags) { FastCall<void>(0x748a1a999e88bde1, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, radius, targetHeading, maxHeight, minHeight, slowDownDistance, behaviorFlags); }
	void TASK_HELI_ESCORT_HELI(Ped pilot, Vehicle heli1, Vehicle heli2, float offsetX, float offsetY, float offsetZ) { Call<void>(0x964b788373e3be32, pilot, heli1, heli2, offsetX, offsetY, offsetZ); }
	void TASK_HELI_ESCORT_HELI_f(Ped pilot, Vehicle heli1, Vehicle heli2, float offsetX, float offsetY, float offsetZ) { FastCall<void>(0x964b788373e3be32, pilot, heli1, heli2, offsetX, offsetY, offsetZ); }
	void TASK_PLANE_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float angularDrag, float targetReached, float targetHeading, float maxZ, float minZ, BOOL precise) { Call<void>(0x7684305a3d8d0d2f, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, targetReached, targetHeading, maxZ, minZ, precise); }
	void TASK_PLANE_MISSION_f(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float angularDrag, float targetReached, float targetHeading, float maxZ, float minZ, BOOL precise) { FastCall<void>(0x7684305a3d8d0d2f, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, targetReached, targetHeading, maxZ, minZ, precise); }
	void TASK_PLANE_TAXI(Ped pilot, Vehicle aircraft, float x, float y, float z, float cruiseSpeed, float targetReached) { Call<void>(0x8c3eb7b5006afd3b, pilot, aircraft, x, y, z, cruiseSpeed, targetReached); }
	void TASK_PLANE_TAXI_f(Ped pilot, Vehicle aircraft, float x, float y, float z, float cruiseSpeed, float targetReached) { FastCall<void>(0x8c3eb7b5006afd3b, pilot, aircraft, x, y, z, cruiseSpeed, targetReached); }
	void TASK_BOAT_MISSION(Ped pedDriver, Vehicle vehicle, Vehicle targetVehicle, Ped targetPed, float x, float y, float z, int mission, float maxSpeed, int drivingStyle, float targetReached, Any boatFlags) { Call<void>(0x72889bd82116c1e7, pedDriver, vehicle, targetVehicle, targetPed, x, y, z, mission, maxSpeed, drivingStyle, targetReached, boatFlags); }
	void TASK_BOAT_MISSION_f(Ped pedDriver, Vehicle vehicle, Vehicle targetVehicle, Ped targetPed, float x, float y, float z, int mission, float maxSpeed, int drivingStyle, float targetReached, Any boatFlags) { FastCall<void>(0x72889bd82116c1e7, pedDriver, vehicle, targetVehicle, targetPed, x, y, z, mission, maxSpeed, drivingStyle, targetReached, boatFlags); }
	void TASK_DRIVE_BY(Ped driverPed, Ped targetPed, Vehicle targetVehicle, float targetX, float targetY, float targetZ, float distanceToShoot, int pedAccuracy, BOOL pushUnderneathDrivingTaskIfDriving, Hash firingPattern) { Call<void>(0xae191acd1f25c4c6, driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, pushUnderneathDrivingTaskIfDriving, firingPattern); }
	void TASK_DRIVE_BY_f(Ped driverPed, Ped targetPed, Vehicle targetVehicle, float targetX, float targetY, float targetZ, float distanceToShoot, int pedAccuracy, BOOL pushUnderneathDrivingTaskIfDriving, Hash firingPattern) { FastCall<void>(0xae191acd1f25c4c6, driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, pushUnderneathDrivingTaskIfDriving, firingPattern); }
	void SET_DRIVEBY_TASK_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z) { Call<void>(0x9d7a5a8a97f17a10, shootingPed, targetPed, targetVehicle, x, y, z); }
	void SET_DRIVEBY_TASK_TARGET_f(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z) { FastCall<void>(0x9d7a5a8a97f17a10, shootingPed, targetPed, targetVehicle, x, y, z); }
	void CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) { Call<void>(0xb62a85dc6a7aab6c, ped); }
	void CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK_f(Ped ped) { FastCall<void>(0xb62a85dc6a7aab6c, ped); }
	BOOL IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) { return Call<BOOL>(0x86db8bcbe9b96a8f, ped); }
	BOOL IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK_f(Ped ped) { return FastCall<BOOL>(0x86db8bcbe9b96a8f, ped); }
	BOOL CONTROL_MOUNTED_WEAPON(Ped ped) { return Call<BOOL>(0x28b86462b845e925, ped); }
	BOOL CONTROL_MOUNTED_WEAPON_f(Ped ped) { return FastCall<BOOL>(0x28b86462b845e925, ped); }
	void SET_MOUNTED_WEAPON_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z, int taskMode, BOOL ignoreTargetVehDeadCheck) { Call<void>(0x8d28e296553fe330, shootingPed, targetPed, targetVehicle, x, y, z, taskMode, ignoreTargetVehDeadCheck); }
	void SET_MOUNTED_WEAPON_TARGET_f(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z, int taskMode, BOOL ignoreTargetVehDeadCheck) { FastCall<void>(0x8d28e296553fe330, shootingPed, targetPed, targetVehicle, x, y, z, taskMode, ignoreTargetVehDeadCheck); }
	BOOL IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) { return Call<BOOL>(0x938b296fdbe3d5a3, ped); }
	BOOL IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK_f(Ped ped) { return FastCall<BOOL>(0x938b296fdbe3d5a3, ped); }
	void TASK_USE_MOBILE_PHONE(Ped ped, BOOL usePhone, int desiredPhoneMode) { Call<void>(0x6b75227ed646dac3, ped, usePhone, desiredPhoneMode); }
	void TASK_USE_MOBILE_PHONE_f(Ped ped, BOOL usePhone, int desiredPhoneMode) { FastCall<void>(0x6b75227ed646dac3, ped, usePhone, desiredPhoneMode); }
	void TASK_USE_MOBILE_PHONE_TIMED(Ped ped, int duration) { Call<void>(0x92be5af8a78ee9b, ped, duration); }
	void TASK_USE_MOBILE_PHONE_TIMED_f(Ped ped, int duration) { FastCall<void>(0x92be5af8a78ee9b, ped, duration); }
	void TASK_CHAT_TO_PED(Ped ped, Ped target, int flags, float goToLocationX, float goToLocationY, float goToLocationZ, float headingDegs, float idleTime) { Call<void>(0xfb72041567dca438, ped, target, flags, goToLocationX, goToLocationY, goToLocationZ, headingDegs, idleTime); }
	void TASK_CHAT_TO_PED_f(Ped ped, Ped target, int flags, float goToLocationX, float goToLocationY, float goToLocationZ, float headingDegs, float idleTime) { FastCall<void>(0xfb72041567dca438, ped, target, flags, goToLocationX, goToLocationY, goToLocationZ, headingDegs, idleTime); }
	void TASK_WARP_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seat) { Call<void>(0x677a99685911371a, ped, vehicle, seat); }
	void TASK_WARP_PED_INTO_VEHICLE_f(Ped ped, Vehicle vehicle, int seat) { FastCall<void>(0x677a99685911371a, ped, vehicle, seat); }
	void TASK_SHOOT_AT_ENTITY(Entity entity, Entity target, int duration, Hash firingPattern) { Call<void>(0x4e75340947836a75, entity, target, duration, firingPattern); }
	void TASK_SHOOT_AT_ENTITY_f(Entity entity, Entity target, int duration, Hash firingPattern) { FastCall<void>(0x4e75340947836a75, entity, target, duration, firingPattern); }
	void TASK_CLIMB(Ped ped, BOOL usePlayerLaunchForce) { Call<void>(0x8187ba0de675b, ped, usePlayerLaunchForce); }
	void TASK_CLIMB_f(Ped ped, BOOL usePlayerLaunchForce) { FastCall<void>(0x8187ba0de675b, ped, usePlayerLaunchForce); }
	void TASK_CLIMB_LADDER(Ped ped, BOOL fast) { Call<void>(0x72dade9bf64ee186, ped, fast); }
	void TASK_CLIMB_LADDER_f(Ped ped, BOOL fast) { FastCall<void>(0x72dade9bf64ee186, ped, fast); }
	void TASK_RAPPEL_DOWN_WALL_USING_CLIPSET_OVERRIDE(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, float minZ, int ropeHandle, char* clipSet, Any p10, Any p11) { Call<void>(0x2f17a23740a381fb, ped, x1, y1, z1, x2, y2, z2, minZ, ropeHandle, clipSet, p10, p11); }
	void TASK_RAPPEL_DOWN_WALL_USING_CLIPSET_OVERRIDE_f(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, float minZ, int ropeHandle, char* clipSet, Any p10, Any p11) { FastCall<void>(0x2f17a23740a381fb, ped, x1, y1, z1, x2, y2, z2, minZ, ropeHandle, clipSet, p10, p11); }
	int GET_TASK_RAPPEL_DOWN_WALL_STATE(Ped ped) { return Call<int>(0xff7c0f34102bbf01, ped); }
	int GET_TASK_RAPPEL_DOWN_WALL_STATE_f(Ped ped) { return FastCall<int>(0xff7c0f34102bbf01, ped); }
	void CLEAR_PED_TASKS_IMMEDIATELY(Ped ped) { Call<void>(0x77f566f51bce2dab, ped); }
	void CLEAR_PED_TASKS_IMMEDIATELY_f(Ped ped) { FastCall<void>(0x77f566f51bce2dab, ped); }
	void TASK_PERFORM_SEQUENCE_FROM_PROGRESS(Ped ped, int taskIndex, int progress1, int progress2) { Call<void>(0x323c36646b80ebdc, ped, taskIndex, progress1, progress2); }
	void TASK_PERFORM_SEQUENCE_FROM_PROGRESS_f(Ped ped, int taskIndex, int progress1, int progress2) { FastCall<void>(0x323c36646b80ebdc, ped, taskIndex, progress1, progress2); }
	void SET_NEXT_DESIRED_MOVE_STATE(float nextMoveState) { Call<void>(0xafc9e5742ce65d37, nextMoveState); }
	void SET_NEXT_DESIRED_MOVE_STATE_f(float nextMoveState) { FastCall<void>(0xafc9e5742ce65d37, nextMoveState); }
	void SET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped, float newMoveBlendRatio) { Call<void>(0xfdcaad3154dd9a41, ped, newMoveBlendRatio); }
	void SET_PED_DESIRED_MOVE_BLEND_RATIO_f(Ped ped, float newMoveBlendRatio) { FastCall<void>(0xfdcaad3154dd9a41, ped, newMoveBlendRatio); }
	float GET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped) { return ToFloat(Call<_float>(0x2d7b4fef29a9bcd, ped)); }
	float GET_PED_DESIRED_MOVE_BLEND_RATIO_f(Ped ped) { return ToFloat(FastCall<_float>(0x2d7b4fef29a9bcd, ped)); }
	void TASK_GOTO_ENTITY_AIMING(Ped ped, Entity target, float distanceToStopAt, float StartAimingDist) { Call<void>(0x69106d3bbae5db77, ped, target, distanceToStopAt, StartAimingDist); }
	void TASK_GOTO_ENTITY_AIMING_f(Ped ped, Entity target, float distanceToStopAt, float StartAimingDist) { FastCall<void>(0x69106d3bbae5db77, ped, target, distanceToStopAt, StartAimingDist); }
	void TASK_SET_DECISION_MAKER(Ped ped, Hash decisionMakerId) { Call<void>(0xb16af6f6a932a898, ped, decisionMakerId); }
	void TASK_SET_DECISION_MAKER_f(Ped ped, Hash decisionMakerId) { FastCall<void>(0xb16af6f6a932a898, ped, decisionMakerId); }
	void TASK_SET_SPHERE_DEFENSIVE_AREA(Ped ped, float x, float y, float z, float radius) { Call<void>(0x4f8310b67b4d9db4, ped, x, y, z, radius); }
	void TASK_SET_SPHERE_DEFENSIVE_AREA_f(Ped ped, float x, float y, float z, float radius) { FastCall<void>(0x4f8310b67b4d9db4, ped, x, y, z, radius); }
	void TASK_CLEAR_DEFENSIVE_AREA(Ped ped) { Call<void>(0x3f4bf15c2274b445, ped); }
	void TASK_CLEAR_DEFENSIVE_AREA_f(Ped ped) { FastCall<void>(0x3f4bf15c2274b445, ped); }
	void TASK_PED_SLIDE_TO_COORD(Ped ped, float x, float y, float z, float heading, float speed) { Call<void>(0x252efbefe7487d49, ped, x, y, z, heading, speed); }
	void TASK_PED_SLIDE_TO_COORD_f(Ped ped, float x, float y, float z, float heading, float speed) { FastCall<void>(0x252efbefe7487d49, ped, x, y, z, heading, speed); }
	void TASK_PED_SLIDE_TO_COORD_HDG_RATE(Ped ped, float x, float y, float z, float heading, float speed, float headingChangeRate) { Call<void>(0x799bf7e91750040a, ped, x, y, z, heading, speed, headingChangeRate); }
	void TASK_PED_SLIDE_TO_COORD_HDG_RATE_f(Ped ped, float x, float y, float z, float heading, float speed, float headingChangeRate) { FastCall<void>(0x799bf7e91750040a, ped, x, y, z, heading, speed, headingChangeRate); }
	ScrHandle ADD_COVER_POINT(float x, float y, float z, float direction, int usage, int height, int arc, BOOL isPriority) { return Call<ScrHandle>(0x4228aab2c6f4700a, x, y, z, direction, usage, height, arc, isPriority); }
	ScrHandle ADD_COVER_POINT_f(float x, float y, float z, float direction, int usage, int height, int arc, BOOL isPriority) { return FastCall<ScrHandle>(0x4228aab2c6f4700a, x, y, z, direction, usage, height, arc, isPriority); }
	void REMOVE_COVER_POINT(ScrHandle coverpoint) { Call<void>(0x1a2ab8ec0e72738d, coverpoint); }
	void REMOVE_COVER_POINT_f(ScrHandle coverpoint) { FastCall<void>(0x1a2ab8ec0e72738d, coverpoint); }
	BOOL DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS(float x, float y, float z) { return Call<BOOL>(0x8fb098bab20e88bc, x, y, z); }
	BOOL DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS_f(float x, float y, float z) { return FastCall<BOOL>(0x8fb098bab20e88bc, x, y, z); }
	Vector3* GET_SCRIPTED_COVER_POINT_COORDS(ScrHandle coverpoint) { Call<Vector3*>(0x2264f8b24d3833a1, coverpoint); return GetVector(); }
	void ADD_SCRIPTED_COVER_AREA(float x, float y, float z, float radius) { Call<void>(0x4242f20f5941ac2c, x, y, z, radius); }
	void ADD_SCRIPTED_COVER_AREA_f(float x, float y, float z, float radius) { FastCall<void>(0x4242f20f5941ac2c, x, y, z, radius); }
	void TASK_COMBAT_PED(Ped ped, Ped targetPed, int combatFlags, int threatResponseFlags) { Call<void>(0x8c3d81b7b1d7b01e, ped, targetPed, combatFlags, threatResponseFlags); }
	void TASK_COMBAT_PED_f(Ped ped, Ped targetPed, int combatFlags, int threatResponseFlags) { FastCall<void>(0x8c3d81b7b1d7b01e, ped, targetPed, combatFlags, threatResponseFlags); }
	void TASK_COMBAT_PED_TIMED(Ped ped, Ped target, int time, int flags) { Call<void>(0xa3acdd2fd72d13b6, ped, target, time, flags); }
	void TASK_COMBAT_PED_TIMED_f(Ped ped, Ped target, int time, int flags) { FastCall<void>(0xa3acdd2fd72d13b6, ped, target, time, flags); }
	void TASK_SEEK_COVER_FROM_POS(Ped ped, float x, float y, float z, int duration, BOOL allowPeekingAndFiring) { Call<void>(0xe670c53738172eb4, ped, x, y, z, duration, allowPeekingAndFiring); }
	void TASK_SEEK_COVER_FROM_POS_f(Ped ped, float x, float y, float z, int duration, BOOL allowPeekingAndFiring) { FastCall<void>(0xe670c53738172eb4, ped, x, y, z, duration, allowPeekingAndFiring); }
	void TASK_SEEK_COVER_FROM_PED(Ped ped, Ped target, int duration, BOOL allowPeekingAndFiring) { Call<void>(0xe670c53738172d6f, ped, target, duration, allowPeekingAndFiring); }
	void TASK_SEEK_COVER_FROM_PED_f(Ped ped, Ped target, int duration, BOOL allowPeekingAndFiring) { FastCall<void>(0xe670c53738172d6f, ped, target, duration, allowPeekingAndFiring); }
	void TASK_SEEK_COVER_TO_COVER_POINT(Ped ped, ScrHandle coverpoint, float x, float y, float z, int time, BOOL allowPeekingAndFiring) { Call<void>(0x53e14ae3ec1bf1d9, ped, coverpoint, x, y, z, time, allowPeekingAndFiring); }
	void TASK_SEEK_COVER_TO_COVER_POINT_f(Ped ped, ScrHandle coverpoint, float x, float y, float z, int time, BOOL allowPeekingAndFiring) { FastCall<void>(0x53e14ae3ec1bf1d9, ped, coverpoint, x, y, z, time, allowPeekingAndFiring); }
	void TASK_SEEK_COVER_TO_COORDS(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, int timeout, BOOL shortRoute) { Call<void>(0xe7a7ec7beb5a8e6d, ped, x1, y1, z1, x2, y2, z2, timeout, shortRoute); }
	void TASK_SEEK_COVER_TO_COORDS_f(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, int timeout, BOOL shortRoute) { FastCall<void>(0xe7a7ec7beb5a8e6d, ped, x1, y1, z1, x2, y2, z2, timeout, shortRoute); }
	void TASK_PUT_PED_DIRECTLY_INTO_COVER(Ped ped, float x, float y, float z, int time, BOOL allowPeekingAndFiring, float blendInDuration, BOOL forceInitialFacingDirection, BOOL forceFaceLeft, int identifier, BOOL doEntry) { Call<void>(0x7b2291a76d061d47, ped, x, y, z, time, allowPeekingAndFiring, blendInDuration, forceInitialFacingDirection, forceFaceLeft, identifier, doEntry); }
	void TASK_PUT_PED_DIRECTLY_INTO_COVER_f(Ped ped, float x, float y, float z, int time, BOOL allowPeekingAndFiring, float blendInDuration, BOOL forceInitialFacingDirection, BOOL forceFaceLeft, int identifier, BOOL doEntry) { FastCall<void>(0x7b2291a76d061d47, ped, x, y, z, time, allowPeekingAndFiring, blendInDuration, forceInitialFacingDirection, forceFaceLeft, identifier, doEntry); }
	void TASK_WARP_PED_DIRECTLY_INTO_COVER(Ped ped, int time, BOOL allowPeekingAndFiring, BOOL forceInitialFacingDirection, BOOL forceFaceLeft, int identifier) { Call<void>(0x264c7f2950dc3e14, ped, time, allowPeekingAndFiring, forceInitialFacingDirection, forceFaceLeft, identifier); }
	void TASK_WARP_PED_DIRECTLY_INTO_COVER_f(Ped ped, int time, BOOL allowPeekingAndFiring, BOOL forceInitialFacingDirection, BOOL forceFaceLeft, int identifier) { FastCall<void>(0x264c7f2950dc3e14, ped, time, allowPeekingAndFiring, forceInitialFacingDirection, forceFaceLeft, identifier); }
	void TASK_EXIT_COVER(Ped ped, int exitType, float x, float y, float z) { Call<void>(0x8c3db8b51bb89430, ped, exitType, x, y, z); }
	void TASK_EXIT_COVER_f(Ped ped, int exitType, float x, float y, float z) { FastCall<void>(0x8c3db8b51bb89430, ped, exitType, x, y, z); }
	void TASK_PUT_PED_DIRECTLY_INTO_MELEE(Ped ped, Ped meleeTarget, float blendInDuration, float timeInMelee, float strafePhaseSync, int aiCombatFlags) { Call<void>(0x7b2291a76d8e5704, ped, meleeTarget, blendInDuration, timeInMelee, strafePhaseSync, aiCombatFlags); }
	void TASK_PUT_PED_DIRECTLY_INTO_MELEE_f(Ped ped, Ped meleeTarget, float blendInDuration, float timeInMelee, float strafePhaseSync, int aiCombatFlags) { FastCall<void>(0x7b2291a76d8e5704, ped, meleeTarget, blendInDuration, timeInMelee, strafePhaseSync, aiCombatFlags); }
	void TASK_TOGGLE_DUCK(Ped ped, int toggleType) { Call<void>(0xfba4315526601b0a, ped, toggleType); }
	void TASK_TOGGLE_DUCK_f(Ped ped, int toggleType) { FastCall<void>(0xfba4315526601b0a, ped, toggleType); }
	void TASK_GUARD_CURRENT_POSITION(Ped ped, float maxPatrolProximity, float defensiveAreaRadius, BOOL setDefensiveArea) { Call<void>(0x194dd9a6af2a7c3, ped, maxPatrolProximity, defensiveAreaRadius, setDefensiveArea); }
	void TASK_GUARD_CURRENT_POSITION_f(Ped ped, float maxPatrolProximity, float defensiveAreaRadius, BOOL setDefensiveArea) { FastCall<void>(0x194dd9a6af2a7c3, ped, maxPatrolProximity, defensiveAreaRadius, setDefensiveArea); }
	void TASK_GUARD_ASSIGNED_DEFENSIVE_AREA(Ped ped, float x, float y, float z, float heading, float maxPatrolProximity, int timer) { Call<void>(0x60d28a6f26496f16, ped, x, y, z, heading, maxPatrolProximity, timer); }
	void TASK_GUARD_ASSIGNED_DEFENSIVE_AREA_f(Ped ped, float x, float y, float z, float heading, float maxPatrolProximity, int timer) { FastCall<void>(0x60d28a6f26496f16, ped, x, y, z, heading, maxPatrolProximity, timer); }
	void TASK_GUARD_SPHERE_DEFENSIVE_AREA(Ped ped, float defendPositionX, float defendPositionY, float defendPositionZ, float heading, float maxPatrolProximity, int time, float x, float y, float z, float defensiveAreaRadius) { Call<void>(0x5b1d2440464fc637, ped, defendPositionX, defendPositionY, defendPositionZ, heading, maxPatrolProximity, time, x, y, z, defensiveAreaRadius); }
	void TASK_GUARD_SPHERE_DEFENSIVE_AREA_f(Ped ped, float defendPositionX, float defendPositionY, float defendPositionZ, float heading, float maxPatrolProximity, int time, float x, float y, float z, float defensiveAreaRadius) { FastCall<void>(0x5b1d2440464fc637, ped, defendPositionX, defendPositionY, defendPositionZ, heading, maxPatrolProximity, time, x, y, z, defensiveAreaRadius); }
	void TASK_STAND_GUARD(Ped ped, float x, float y, float z, float heading, char* scenarioName) { Call<void>(0xfba1bba23859a102, ped, x, y, z, heading, scenarioName); }
	void TASK_STAND_GUARD_f(Ped ped, float x, float y, float z, float heading, char* scenarioName) { FastCall<void>(0xfba1bba23859a102, ped, x, y, z, heading, scenarioName); }
	void SET_DRIVE_TASK_CRUISE_SPEED(Ped driver, float cruiseSpeed) { Call<void>(0xd6435c8cc62b025, driver, cruiseSpeed); }
	void SET_DRIVE_TASK_CRUISE_SPEED_f(Ped driver, float cruiseSpeed) { FastCall<void>(0xd6435c8cc62b025, driver, cruiseSpeed); }
	void SET_DRIVE_TASK_MAX_CRUISE_SPEED(Ped ped, float speed) { Call<void>(0x8c1f5ac99e82eb40, ped, speed); }
	void SET_DRIVE_TASK_MAX_CRUISE_SPEED_f(Ped ped, float speed) { FastCall<void>(0x8c1f5ac99e82eb40, ped, speed); }
	void SET_DRIVE_TASK_DRIVING_STYLE(Ped ped, int drivingStyle) { Call<void>(0xa9ef1a2116ccf411, ped, drivingStyle); }
	void SET_DRIVE_TASK_DRIVING_STYLE_f(Ped ped, int drivingStyle) { FastCall<void>(0xa9ef1a2116ccf411, ped, drivingStyle); }
	void ADD_COVER_BLOCKING_AREA(float startX, float startY, float startZ, float endX, float endY, float endZ, BOOL blockObjects, BOOL blockVehicles, BOOL blockMap, BOOL blockPlayer) { Call<void>(0xddb5d90e2f9b56f1, startX, startY, startZ, endX, endY, endZ, blockObjects, blockVehicles, blockMap, blockPlayer); }
	void ADD_COVER_BLOCKING_AREA_f(float startX, float startY, float startZ, float endX, float endY, float endZ, BOOL blockObjects, BOOL blockVehicles, BOOL blockMap, BOOL blockPlayer) { FastCall<void>(0xddb5d90e2f9b56f1, startX, startY, startZ, endX, endY, endZ, blockObjects, blockVehicles, blockMap, blockPlayer); }
	void REMOVE_ALL_COVER_BLOCKING_AREAS() { Call<void>(0xd3d4fc0cb6e929dd); }
	void REMOVE_ALL_COVER_BLOCKING_AREAS_f() { FastCall<void>(0xd3d4fc0cb6e929dd); }
	void REMOVE_COVER_BLOCKING_AREAS_AT_POSITION(float x, float y, float z) { Call<void>(0x7336a5f748db4ad5, x, y, z); }
	void REMOVE_COVER_BLOCKING_AREAS_AT_POSITION_f(float x, float y, float z) { FastCall<void>(0x7336a5f748db4ad5, x, y, z); }
	void REMOVE_SPECIFIC_COVER_BLOCKING_AREAS(float startX, float startY, float startZ, float endX, float endY, float endZ, BOOL blockObjects, BOOL blockVehicles, BOOL blockMap, BOOL blockPlayer) { Call<void>(0xd235ca0bb2d710f6, startX, startY, startZ, endX, endY, endZ, blockObjects, blockVehicles, blockMap, blockPlayer); }
	void REMOVE_SPECIFIC_COVER_BLOCKING_AREAS_f(float startX, float startY, float startZ, float endX, float endY, float endZ, BOOL blockObjects, BOOL blockVehicles, BOOL blockMap, BOOL blockPlayer) { FastCall<void>(0xd235ca0bb2d710f6, startX, startY, startZ, endX, endY, endZ, blockObjects, blockVehicles, blockMap, blockPlayer); }
	void TASK_START_SCENARIO_IN_PLACE(Ped ped, char* scenarioName, int unkDelay, BOOL playEnterAnim) { Call<void>(0x2ee7167ff07609a5, ped, scenarioName, unkDelay, playEnterAnim); }
	void TASK_START_SCENARIO_IN_PLACE_f(Ped ped, char* scenarioName, int unkDelay, BOOL playEnterAnim) { FastCall<void>(0x2ee7167ff07609a5, ped, scenarioName, unkDelay, playEnterAnim); }
	void TASK_START_SCENARIO_AT_POSITION(Ped ped, char* scenarioName, float x, float y, float z, float heading, int duration, BOOL sittingScenario, BOOL teleport) { Call<void>(0x1ddc97238885d05d, ped, scenarioName, x, y, z, heading, duration, sittingScenario, teleport); }
	void TASK_START_SCENARIO_AT_POSITION_f(Ped ped, char* scenarioName, float x, float y, float z, float heading, int duration, BOOL sittingScenario, BOOL teleport) { FastCall<void>(0x1ddc97238885d05d, ped, scenarioName, x, y, z, heading, duration, sittingScenario, teleport); }
	void TASK_USE_NEAREST_SCENARIO_TO_COORD(Ped ped, float x, float y, float z, float distance, int duration) { Call<void>(0xddc5b90bb181900d, ped, x, y, z, distance, duration); }
	void TASK_USE_NEAREST_SCENARIO_TO_COORD_f(Ped ped, float x, float y, float z, float distance, int duration) { FastCall<void>(0xddc5b90bb181900d, ped, x, y, z, distance, duration); }
	void TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP(Ped ped, float x, float y, float z, float radius, int timeToLeave) { Call<void>(0xb9da1cb1ec8ab37a, ped, x, y, z, radius, timeToLeave); }
	void TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP_f(Ped ped, float x, float y, float z, float radius, int timeToLeave) { FastCall<void>(0xb9da1cb1ec8ab37a, ped, x, y, z, radius, timeToLeave); }
	void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD(Ped ped, float x, float y, float z, float maxRange, int timeToLeave) { Call<void>(0xa9bd15b51a97daeb, ped, x, y, z, maxRange, timeToLeave); }
	void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_f(Ped ped, float x, float y, float z, float maxRange, int timeToLeave) { FastCall<void>(0xa9bd15b51a97daeb, ped, x, y, z, maxRange, timeToLeave); }
	void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP(Ped ped, float x, float y, float z, float radius, int timeToLeave) { Call<void>(0xef32948c82a6835c, ped, x, y, z, radius, timeToLeave); }
	void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP_f(Ped ped, float x, float y, float z, float radius, int timeToLeave) { FastCall<void>(0xef32948c82a6835c, ped, x, y, z, radius, timeToLeave); }
	BOOL DOES_SCENARIO_EXIST_IN_AREA(float x, float y, float z, float radius, BOOL mustBeFree) { return Call<BOOL>(0xa64f3924b4098016, x, y, z, radius, mustBeFree); }
	BOOL DOES_SCENARIO_EXIST_IN_AREA_f(float x, float y, float z, float radius, BOOL mustBeFree) { return FastCall<BOOL>(0xa64f3924b4098016, x, y, z, radius, mustBeFree); }
	BOOL DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA(float x, float y, float z, char* scenarioName, float radius, BOOL mustBeFree) { return Call<BOOL>(0xccc1f85defab4c39, x, y, z, scenarioName, radius, mustBeFree); }
	BOOL DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA_f(float x, float y, float z, char* scenarioName, float radius, BOOL mustBeFree) { return FastCall<BOOL>(0xccc1f85defab4c39, x, y, z, scenarioName, radius, mustBeFree); }
	BOOL IS_SCENARIO_OCCUPIED(float x, float y, float z, float maxRange, BOOL onlyUsersActuallyAtScenario) { return Call<BOOL>(0xb1320b5428d5de98, x, y, z, maxRange, onlyUsersActuallyAtScenario); }
	BOOL IS_SCENARIO_OCCUPIED_f(float x, float y, float z, float maxRange, BOOL onlyUsersActuallyAtScenario) { return FastCall<BOOL>(0xb1320b5428d5de98, x, y, z, maxRange, onlyUsersActuallyAtScenario); }
	BOOL PED_HAS_USE_SCENARIO_TASK(Ped ped) { return Call<BOOL>(0x5d50887e4146f627, ped); }
	BOOL PED_HAS_USE_SCENARIO_TASK_f(Ped ped) { return FastCall<BOOL>(0x5d50887e4146f627, ped); }
	void PLAY_ANIM_ON_RUNNING_SCENARIO(Ped ped, char* animDict, char* animName) { Call<void>(0x16f1dc118e72b00d, ped, animDict, animName); }
	void PLAY_ANIM_ON_RUNNING_SCENARIO_f(Ped ped, char* animDict, char* animName) { FastCall<void>(0x16f1dc118e72b00d, ped, animDict, animName); }
	BOOL DOES_SCENARIO_GROUP_EXIST(char* scenarioGroup) { return Call<BOOL>(0xe3f4d84a8ab5b0ce, scenarioGroup); }
	BOOL DOES_SCENARIO_GROUP_EXIST_f(char* scenarioGroup) { return FastCall<BOOL>(0xe3f4d84a8ab5b0ce, scenarioGroup); }
	BOOL IS_SCENARIO_GROUP_ENABLED(char* scenarioGroup) { return Call<BOOL>(0x40f3d9fde7abcd87, scenarioGroup); }
	BOOL IS_SCENARIO_GROUP_ENABLED_f(char* scenarioGroup) { return FastCall<BOOL>(0x40f3d9fde7abcd87, scenarioGroup); }
	void SET_SCENARIO_GROUP_ENABLED(char* scenarioGroup, BOOL enabled) { Call<void>(0xeacba3636c621b6f, scenarioGroup, enabled); }
	void SET_SCENARIO_GROUP_ENABLED_f(char* scenarioGroup, BOOL enabled) { FastCall<void>(0xeacba3636c621b6f, scenarioGroup, enabled); }
	void RESET_SCENARIO_GROUPS_ENABLED() { Call<void>(0xe19616b5177d3d35); }
	void RESET_SCENARIO_GROUPS_ENABLED_f() { FastCall<void>(0xe19616b5177d3d35); }
	void SET_EXCLUSIVE_SCENARIO_GROUP(char* scenarioGroup) { Call<void>(0x79da29f6a6deae2e, scenarioGroup); }
	void SET_EXCLUSIVE_SCENARIO_GROUP_f(char* scenarioGroup) { FastCall<void>(0x79da29f6a6deae2e, scenarioGroup); }
	void RESET_EXCLUSIVE_SCENARIO_GROUP() { Call<void>(0x64979e4600b63de1); }
	void RESET_EXCLUSIVE_SCENARIO_GROUP_f() { FastCall<void>(0x64979e4600b63de1); }
	BOOL IS_SCENARIO_TYPE_ENABLED(char* scenarioType) { return Call<BOOL>(0x69db15905e916a16, scenarioType); }
	BOOL IS_SCENARIO_TYPE_ENABLED_f(char* scenarioType) { return FastCall<BOOL>(0x69db15905e916a16, scenarioType); }
	void SET_SCENARIO_TYPE_ENABLED(char* scenarioType, BOOL toggle) { Call<void>(0x2d4524519465bf2e, scenarioType, toggle); }
	void SET_SCENARIO_TYPE_ENABLED_f(char* scenarioType, BOOL toggle) { FastCall<void>(0x2d4524519465bf2e, scenarioType, toggle); }
	void RESET_SCENARIO_TYPES_ENABLED() { Call<void>(0xa01cb29461cdc3dc); }
	void RESET_SCENARIO_TYPES_ENABLED_f() { FastCall<void>(0xa01cb29461cdc3dc); }
	BOOL IS_PED_ACTIVE_IN_SCENARIO(Ped ped) { return Call<BOOL>(0x218938b2cdff59b6, ped); }
	BOOL IS_PED_ACTIVE_IN_SCENARIO_f(Ped ped) { return FastCall<BOOL>(0x218938b2cdff59b6, ped); }
	BOOL IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO(Ped ped) { return Call<BOOL>(0x47dfe4c1aa2b2413, ped); }
	BOOL IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO_f(Ped ped) { return FastCall<BOOL>(0x47dfe4c1aa2b2413, ped); }
	void SET_PED_CAN_PLAY_AMBIENT_IDLES(Ped ped, BOOL blockIdleClips, BOOL removeIdleClipIfPlaying) { Call<void>(0x7a794aebde68c509, ped, blockIdleClips, removeIdleClipIfPlaying); }
	void SET_PED_CAN_PLAY_AMBIENT_IDLES_f(Ped ped, BOOL blockIdleClips, BOOL removeIdleClipIfPlaying) { FastCall<void>(0x7a794aebde68c509, ped, blockIdleClips, removeIdleClipIfPlaying); }
	void TASK_COMBAT_HATED_TARGETS_IN_AREA(Ped ped, float x, float y, float z, float radius, int combatFlags) { Call<void>(0x4250ce95a24fd494, ped, x, y, z, radius, combatFlags); }
	void TASK_COMBAT_HATED_TARGETS_IN_AREA_f(Ped ped, float x, float y, float z, float radius, int combatFlags) { FastCall<void>(0x4250ce95a24fd494, ped, x, y, z, radius, combatFlags); }
	void TASK_COMBAT_HATED_TARGETS_AROUND_PED(Ped ped, float radius, int combatFlags) { Call<void>(0x3997b96bb3d05730, ped, radius, combatFlags); }
	void TASK_COMBAT_HATED_TARGETS_AROUND_PED_f(Ped ped, float radius, int combatFlags) { FastCall<void>(0x3997b96bb3d05730, ped, radius, combatFlags); }
	void TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED(Ped ped, float radius, int time, int combatFlags) { Call<void>(0xe8bc5ae67fca548, ped, radius, time, combatFlags); }
	void TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED_f(Ped ped, float radius, int time, int combatFlags) { FastCall<void>(0xe8bc5ae67fca548, ped, radius, time, combatFlags); }
	void TASK_THROW_PROJECTILE(Ped ped, float x, float y, float z, int ignoreCollisionEntityIndex, BOOL createInvincibleProjectile) { Call<void>(0x87c46ac2e914d47c, ped, x, y, z, ignoreCollisionEntityIndex, createInvincibleProjectile); }
	void TASK_THROW_PROJECTILE_f(Ped ped, float x, float y, float z, int ignoreCollisionEntityIndex, BOOL createInvincibleProjectile) { FastCall<void>(0x87c46ac2e914d47c, ped, x, y, z, ignoreCollisionEntityIndex, createInvincibleProjectile); }
	void TASK_SWAP_WEAPON(Ped ped, BOOL drawWeapon) { Call<void>(0xfba203d86b74ba8e, ped, drawWeapon); }
	void TASK_SWAP_WEAPON_f(Ped ped, BOOL drawWeapon) { FastCall<void>(0xfba203d86b74ba8e, ped, drawWeapon); }
	void TASK_RELOAD_WEAPON(Ped ped, BOOL drawWeapon) { Call<void>(0x8a0918b0c849e248, ped, drawWeapon); }
	void TASK_RELOAD_WEAPON_f(Ped ped, BOOL drawWeapon) { FastCall<void>(0x8a0918b0c849e248, ped, drawWeapon); }
	BOOL IS_PED_GETTING_UP(Ped ped) { return Call<BOOL>(0xcba9a5744f12ca9b, ped); }
	BOOL IS_PED_GETTING_UP_f(Ped ped) { return FastCall<BOOL>(0xcba9a5744f12ca9b, ped); }
	void TASK_WRITHE(Ped ped, Ped target, int minFireLoops, int startState, BOOL forceShootOnGround, int shootFromGroundTimer) { Call<void>(0xfaf6f89d6418bd, ped, target, minFireLoops, startState, forceShootOnGround, shootFromGroundTimer); }
	void TASK_WRITHE_f(Ped ped, Ped target, int minFireLoops, int startState, BOOL forceShootOnGround, int shootFromGroundTimer) { FastCall<void>(0xfaf6f89d6418bd, ped, target, minFireLoops, startState, forceShootOnGround, shootFromGroundTimer); }
	BOOL IS_PED_IN_WRITHE(Ped ped) { return Call<BOOL>(0xed3ee593e888378, ped); }
	BOOL IS_PED_IN_WRITHE_f(Ped ped) { return FastCall<BOOL>(0xed3ee593e888378, ped); }
	void OPEN_PATROL_ROUTE(char* patrolRoute) { Call<void>(0x58404f84338c9e4b, patrolRoute); }
	void OPEN_PATROL_ROUTE_f(char* patrolRoute) { FastCall<void>(0x58404f84338c9e4b, patrolRoute); }
	void CLOSE_PATROL_ROUTE() { Call<void>(0x8ab63578cb5f0d7d); }
	void CLOSE_PATROL_ROUTE_f() { FastCall<void>(0x8ab63578cb5f0d7d); }
	void ADD_PATROL_ROUTE_NODE(int nodeId, char* nodeType, float posX, float posY, float posZ, float headingX, float headingY, float headingZ, int duration) { Call<void>(0xfeae0630167c55ed, nodeId, nodeType, posX, posY, posZ, headingX, headingY, headingZ, duration); }
	void ADD_PATROL_ROUTE_NODE_f(int nodeId, char* nodeType, float posX, float posY, float posZ, float headingX, float headingY, float headingZ, int duration) { FastCall<void>(0xfeae0630167c55ed, nodeId, nodeType, posX, posY, posZ, headingX, headingY, headingZ, duration); }
	void ADD_PATROL_ROUTE_LINK(int nodeId1, int nodeId2) { Call<void>(0xfeae0630167b57e5, nodeId1, nodeId2); }
	void ADD_PATROL_ROUTE_LINK_f(int nodeId1, int nodeId2) { FastCall<void>(0xfeae0630167b57e5, nodeId1, nodeId2); }
	void CREATE_PATROL_ROUTE() { Call<void>(0x63214c31f2bf18d9); }
	void CREATE_PATROL_ROUTE_f() { FastCall<void>(0x63214c31f2bf18d9); }
	void DELETE_PATROL_ROUTE(char* patrolRoute) { Call<void>(0x7258c4037fed888a, patrolRoute); }
	void DELETE_PATROL_ROUTE_f(char* patrolRoute) { FastCall<void>(0x7258c4037fed888a, patrolRoute); }
	BOOL GET_PATROL_TASK_INFO(Ped ped, int* timeLeftAtNode, int* nodeId) { return Call<BOOL>(0xd6357029da5696de, ped, timeLeftAtNode, nodeId); }
	BOOL GET_PATROL_TASK_INFO_f(Ped ped, int* timeLeftAtNode, int* nodeId) { return FastCall<BOOL>(0xd6357029da5696de, ped, timeLeftAtNode, nodeId); }
	void TASK_PATROL(Ped ped, char* patrolRouteName, int alertState, BOOL canChatToPeds, BOOL useHeadLookAt) { Call<void>(0xfaf6f890879646, ped, patrolRouteName, alertState, canChatToPeds, useHeadLookAt); }
	void TASK_PATROL_f(Ped ped, char* patrolRouteName, int alertState, BOOL canChatToPeds, BOOL useHeadLookAt) { FastCall<void>(0xfaf6f890879646, ped, patrolRouteName, alertState, canChatToPeds, useHeadLookAt); }
	void TASK_STAY_IN_COVER(Ped ped) { Call<void>(0x9a2278df40f251e9, ped); }
	void TASK_STAY_IN_COVER_f(Ped ped) { FastCall<void>(0x9a2278df40f251e9, ped); }
	void ADD_VEHICLE_SUBTASK_ATTACK_COORD(Ped ped, float x, float y, float z) { Call<void>(0xd3b09c37af9d7ac9, ped, x, y, z); }
	void ADD_VEHICLE_SUBTASK_ATTACK_COORD_f(Ped ped, float x, float y, float z) { FastCall<void>(0xd3b09c37af9d7ac9, ped, x, y, z); }
	void ADD_VEHICLE_SUBTASK_ATTACK_PED(Ped ped, Ped target) { Call<void>(0xf191a1dc5c9ed9e3, ped, target); }
	void ADD_VEHICLE_SUBTASK_ATTACK_PED_f(Ped ped, Ped target) { FastCall<void>(0xf191a1dc5c9ed9e3, ped, target); }
	void TASK_VEHICLE_SHOOT_AT_PED(Ped ped, Ped target, float fireTolerance) { Call<void>(0x8cdd3f4d07a83f0, ped, target, fireTolerance); }
	void TASK_VEHICLE_SHOOT_AT_PED_f(Ped ped, Ped target, float fireTolerance) { FastCall<void>(0x8cdd3f4d07a83f0, ped, target, fireTolerance); }
	void TASK_VEHICLE_AIM_AT_PED(Ped ped, Ped target) { Call<void>(0x1c3d64e57d956b4a, ped, target); }
	void TASK_VEHICLE_AIM_AT_PED_f(Ped ped, Ped target) { FastCall<void>(0x1c3d64e57d956b4a, ped, target); }
	void TASK_VEHICLE_SHOOT_AT_COORD(Ped ped, float x, float y, float z, float fireTolerance) { Call<void>(0xca8aa029b36d596, ped, x, y, z, fireTolerance); }
	void TASK_VEHICLE_SHOOT_AT_COORD_f(Ped ped, float x, float y, float z, float fireTolerance) { FastCall<void>(0xca8aa029b36d596, ped, x, y, z, fireTolerance); }
	void TASK_VEHICLE_AIM_AT_COORD(Ped ped, float x, float y, float z) { Call<void>(0x277c17c6d354e70, ped, x, y, z); }
	void TASK_VEHICLE_AIM_AT_COORD_f(Ped ped, float x, float y, float z) { FastCall<void>(0x277c17c6d354e70, ped, x, y, z); }
	void TASK_VEHICLE_GOTO_NAVMESH(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int behaviorFlag, float stoppingRange) { Call<void>(0x4a774153f4db361, ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange); }
	void TASK_VEHICLE_GOTO_NAVMESH_f(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int behaviorFlag, float stoppingRange) { FastCall<void>(0x4a774153f4db361, ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange); }
	void TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(Ped ped, float x, float y, float z, float aimAtX, float aimAtY, float aimAtZ, float moveBlendRatio, BOOL shoot, float targetRadius, float slowDistance, BOOL useNavMesh, int navFlags, BOOL instantBlendToAim, Hash firingPattern) { Call<void>(0xec7a2432b86a946c, ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, navFlags, instantBlendToAim, firingPattern); }
	void TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD_f(Ped ped, float x, float y, float z, float aimAtX, float aimAtY, float aimAtZ, float moveBlendRatio, BOOL shoot, float targetRadius, float slowDistance, BOOL useNavMesh, int navFlags, BOOL instantBlendToAim, Hash firingPattern) { FastCall<void>(0xec7a2432b86a946c, ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, navFlags, instantBlendToAim, firingPattern); }
	void TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY(Ped ped, float x, float y, float z, Entity aimAtID, float moveBlendRatio, BOOL shoot, float targetRadius, float slowDistance, BOOL useNavMesh, int navFlags, BOOL instantBlendToAim, Hash firingPattern, int time) { Call<void>(0xa2ca62245845b92c, ped, x, y, z, aimAtID, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, navFlags, instantBlendToAim, firingPattern, time); }
	void TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY_f(Ped ped, float x, float y, float z, Entity aimAtID, float moveBlendRatio, BOOL shoot, float targetRadius, float slowDistance, BOOL useNavMesh, int navFlags, BOOL instantBlendToAim, Hash firingPattern, int time) { FastCall<void>(0xa2ca62245845b92c, ped, x, y, z, aimAtID, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, navFlags, instantBlendToAim, firingPattern, time); }
	void TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(Ped pedHandle, float goToLocationX, float goToLocationY, float goToLocationZ, float focusLocationX, float focusLocationY, float focusLocationZ, float speed, BOOL shootAtEnemies, float distanceToStopAt, float noRoadsDistance, BOOL useNavMesh, int navFlags, int taskFlags, Hash firingPattern) { Call<void>(0x70585c624c930cfe, pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, useNavMesh, navFlags, taskFlags, firingPattern); }
	void TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD_f(Ped pedHandle, float goToLocationX, float goToLocationY, float goToLocationZ, float focusLocationX, float focusLocationY, float focusLocationZ, float speed, BOOL shootAtEnemies, float distanceToStopAt, float noRoadsDistance, BOOL useNavMesh, int navFlags, int taskFlags, Hash firingPattern) { FastCall<void>(0x70585c624c930cfe, pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, useNavMesh, navFlags, taskFlags, firingPattern); }
	void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD(Ped ped, Entity entity, float aimX, float aimY, float aimZ, float moveBlendRatio, BOOL shoot, float targetRadius, float slowDistance, BOOL useNavMesh, BOOL instantBlendToAim, Hash firingPattern) { Call<void>(0xcb0ae1e49e3475a8, ped, entity, aimX, aimY, aimZ, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, instantBlendToAim, firingPattern); }
	void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD_f(Ped ped, Entity entity, float aimX, float aimY, float aimZ, float moveBlendRatio, BOOL shoot, float targetRadius, float slowDistance, BOOL useNavMesh, BOOL instantBlendToAim, Hash firingPattern) { FastCall<void>(0xcb0ae1e49e3475a8, ped, entity, aimX, aimY, aimZ, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, instantBlendToAim, firingPattern); }
	void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY(Ped ped, Entity entityToWalkTo, Entity entityToAimAt, float speed, BOOL shootatEntity, float targetRadius, float slowDistance, BOOL useNavMesh, BOOL instantBlendToAim, Hash firingPattern) { Call<void>(0x96515aaf2bb7ff70, ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, targetRadius, slowDistance, useNavMesh, instantBlendToAim, firingPattern); }
	void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY_f(Ped ped, Entity entityToWalkTo, Entity entityToAimAt, float speed, BOOL shootatEntity, float targetRadius, float slowDistance, BOOL useNavMesh, BOOL instantBlendToAim, Hash firingPattern) { FastCall<void>(0x96515aaf2bb7ff70, ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, targetRadius, slowDistance, useNavMesh, instantBlendToAim, firingPattern); }
	void SET_HIGH_FALL_TASK(Ped ped, int minTime, int maxTime, int entryType) { Call<void>(0xe9ddfef52f429b09, ped, minTime, maxTime, entryType); }
	void SET_HIGH_FALL_TASK_f(Ped ped, int minTime, int maxTime, int entryType) { FastCall<void>(0xe9ddfef52f429b09, ped, minTime, maxTime, entryType); }
	void REQUEST_WAYPOINT_RECORDING(char* name) { Call<void>(0x6284f1397e162ee3, name); }
	void REQUEST_WAYPOINT_RECORDING_f(char* name) { FastCall<void>(0x6284f1397e162ee3, name); }
	BOOL GET_IS_WAYPOINT_RECORDING_LOADED(char* name) { return Call<BOOL>(0x625d9ea5adcf1045, name); }
	BOOL GET_IS_WAYPOINT_RECORDING_LOADED_f(char* name) { return FastCall<BOOL>(0x625d9ea5adcf1045, name); }
	void REMOVE_WAYPOINT_RECORDING(char* name) { Call<void>(0x9743451c4fd696ae, name); }
	void REMOVE_WAYPOINT_RECORDING_f(char* name) { FastCall<void>(0x9743451c4fd696ae, name); }
	BOOL WAYPOINT_RECORDING_GET_NUM_POINTS(char* name, int* points) { return Call<BOOL>(0x236d6bd2564bb731, name, points); }
	BOOL WAYPOINT_RECORDING_GET_NUM_POINTS_f(char* name, int* points) { return FastCall<BOOL>(0x236d6bd2564bb731, name, points); }
	BOOL WAYPOINT_RECORDING_GET_COORD(char* name, int point, Vector3* coord) { return Call<BOOL>(0xcfccced622c6aa60, name, point, coord); }
	BOOL WAYPOINT_RECORDING_GET_COORD_f(char* name, int point, Vector3* coord) { return FastCall<BOOL>(0xcfccced622c6aa60, name, point, coord); }
	float WAYPOINT_RECORDING_GET_SPEED_AT_POINT(char* name, int point) { return ToFloat(Call<_float>(0xf8dc0f32943ae051, name, point)); }
	float WAYPOINT_RECORDING_GET_SPEED_AT_POINT_f(char* name, int point) { return ToFloat(FastCall<_float>(0xf8dc0f32943ae051, name, point)); }
	BOOL WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT(char* name, float x, float y, float z, int* point) { return Call<BOOL>(0x64c18071496c2dc, name, x, y, z, point); }
	BOOL WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT_f(char* name, float x, float y, float z, int* point) { return FastCall<BOOL>(0x64c18071496c2dc, name, x, y, z, point); }
	void TASK_FOLLOW_WAYPOINT_RECORDING(Ped ped, char* name, int p2, int p3, int p4) { Call<void>(0xc9d35fcd4d2e9c27, ped, name, p2, p3, p4); }
	void TASK_FOLLOW_WAYPOINT_RECORDING_f(Ped ped, char* name, int p2, int p3, int p4) { FastCall<void>(0xc9d35fcd4d2e9c27, ped, name, p2, p3, p4); }
	BOOL IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED(Ped ped) { return Call<BOOL>(0x93c7763fef692f99, ped); }
	BOOL IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED_f(Ped ped) { return FastCall<BOOL>(0x93c7763fef692f99, ped); }
	int GET_PED_WAYPOINT_PROGRESS(Ped ped) { return Call<int>(0x9b04654f98212512, ped); }
	int GET_PED_WAYPOINT_PROGRESS_f(Ped ped) { return FastCall<int>(0x9b04654f98212512, ped); }
	float GET_PED_WAYPOINT_DISTANCE(Any p0) { return ToFloat(Call<_float>(0x9b046500e4fdeeda, p0)); }
	float GET_PED_WAYPOINT_DISTANCE_f(Any p0) { return ToFloat(FastCall<_float>(0x9b046500e4fdeeda, p0)); }
	BOOL SET_PED_WAYPOINT_ROUTE_OFFSET(Ped ped, float x, float y, float z) { return Call<BOOL>(0xf8c105383d33b9da, ped, x, y, z); }
	BOOL SET_PED_WAYPOINT_ROUTE_OFFSET_f(Ped ped, float x, float y, float z) { return FastCall<BOOL>(0xf8c105383d33b9da, ped, x, y, z); }
	float GET_WAYPOINT_DISTANCE_ALONG_ROUTE(char* name, int point) { return ToFloat(Call<_float>(0xcd7cae27d1b9a292, name, point)); }
	float GET_WAYPOINT_DISTANCE_ALONG_ROUTE_f(char* name, int point) { return ToFloat(FastCall<_float>(0xcd7cae27d1b9a292, name, point)); }
	BOOL WAYPOINT_PLAYBACK_GET_IS_PAUSED(Any p0) { return Call<BOOL>(0x54ef3405e86b82f4, p0); }
	BOOL WAYPOINT_PLAYBACK_GET_IS_PAUSED_f(Any p0) { return FastCall<BOOL>(0x54ef3405e86b82f4, p0); }
	void WAYPOINT_PLAYBACK_PAUSE(Any p0, BOOL p1, BOOL p2) { Call<void>(0x96238b7ea9ee6ab0, p0, p1, p2); }
	void WAYPOINT_PLAYBACK_PAUSE_f(Any p0, BOOL p1, BOOL p2) { FastCall<void>(0x96238b7ea9ee6ab0, p0, p1, p2); }
	void WAYPOINT_PLAYBACK_RESUME(Any p0, BOOL p1, Any p2, Any p3) { Call<void>(0x2e4de45697801a93, p0, p1, p2, p3); }
	void WAYPOINT_PLAYBACK_RESUME_f(Any p0, BOOL p1, Any p2, Any p3) { FastCall<void>(0x2e4de45697801a93, p0, p1, p2, p3); }
	void WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Any p0, float p1, BOOL p2) { Call<void>(0x944069d6cbf9065a, p0, p1, p2); }
	void WAYPOINT_PLAYBACK_OVERRIDE_SPEED_f(Any p0, float p1, BOOL p2) { FastCall<void>(0x944069d6cbf9065a, p0, p1, p2); }
	void WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Any p0) { Call<void>(0xc33d04b2cd73d18b, p0); }
	void WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED_f(Any p0) { FastCall<void>(0xc33d04b2cd73d18b, p0); }
	void USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE(char* name, BOOL p1, float p2, float p3) { Call<void>(0x9308256a9cee0db7, name, p1, p2, p3); }
	void USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE_f(char* name, BOOL p1, float p2, float p3) { FastCall<void>(0x9308256a9cee0db7, name, p1, p2, p3); }
	void WAYPOINT_PLAYBACK_START_AIMING_AT_PED(Ped ped, Ped target, BOOL p2) { Call<void>(0x243feabe7c86eb02, ped, target, p2); }
	void WAYPOINT_PLAYBACK_START_AIMING_AT_PED_f(Ped ped, Ped target, BOOL p2) { FastCall<void>(0x243feabe7c86eb02, ped, target, p2); }
	void WAYPOINT_PLAYBACK_START_AIMING_AT_COORD(Ped ped, float x, float y, float z, BOOL p4) { Call<void>(0x13f0351175c5c028, ped, x, y, z, p4); }
	void WAYPOINT_PLAYBACK_START_AIMING_AT_COORD_f(Ped ped, float x, float y, float z, BOOL p4) { FastCall<void>(0x13f0351175c5c028, ped, x, y, z, p4); }
	void WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED(Ped ped, Ped ped2, BOOL p2, BOOL p3) { Call<void>(0x75dade8b00da1e1c, ped, ped2, p2, p3); }
	void WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED_f(Ped ped, Ped ped2, BOOL p2, BOOL p3) { FastCall<void>(0x75dade8b00da1e1c, ped, ped2, p2, p3); }
	void WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD(Ped ped, float x, float y, float z, BOOL p4, Hash firingPattern) { Call<void>(0x6a9d67ce321894c2, ped, x, y, z, p4, firingPattern); }
	void WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD_f(Ped ped, float x, float y, float z, BOOL p4, Hash firingPattern) { FastCall<void>(0x6a9d67ce321894c2, ped, x, y, z, p4, firingPattern); }
	void WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING(Ped ped) { Call<void>(0x91edc39d7db1fb34, ped); }
	void WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING_f(Ped ped) { FastCall<void>(0x91edc39d7db1fb34, ped); }
	void ASSISTED_MOVEMENT_REQUEST_ROUTE(char* route) { Call<void>(0x680fb8e0b8832620, route); }
	void ASSISTED_MOVEMENT_REQUEST_ROUTE_f(char* route) { FastCall<void>(0x680fb8e0b8832620, route); }
	void ASSISTED_MOVEMENT_REMOVE_ROUTE(char* route) { Call<void>(0x1c2125aa8c8c6807, route); }
	void ASSISTED_MOVEMENT_REMOVE_ROUTE_f(char* route) { FastCall<void>(0x1c2125aa8c8c6807, route); }
	BOOL ASSISTED_MOVEMENT_IS_ROUTE_LOADED(char* route) { return Call<BOOL>(0x74ce54e9a0aa6fd7, route); }
	BOOL ASSISTED_MOVEMENT_IS_ROUTE_LOADED_f(char* route) { return FastCall<BOOL>(0x74ce54e9a0aa6fd7, route); }
	void ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES(char* route, int props) { Call<void>(0x987f6cfebf9227bf, route, props); }
	void ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES_f(char* route, int props) { FastCall<void>(0x987f6cfebf9227bf, route, props); }
	void ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME(float dist) { Call<void>(0x6c81930f964f5b77, dist); }
	void ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME_f(float dist) { FastCall<void>(0x6c81930f964f5b77, dist); }
	void TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING(Ped ped, Vehicle vehicle, char* WPRecording, int p3, int p4, int p5, int p6, float p7, BOOL p8, float p9) { Call<void>(0xf9bd09fdf53972b4, ped, vehicle, WPRecording, p3, p4, p5, p6, p7, p8, p9); }
	void TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING_f(Ped ped, Vehicle vehicle, char* WPRecording, int p3, int p4, int p5, int p6, float p7, BOOL p8, float p9) { FastCall<void>(0xf9bd09fdf53972b4, ped, vehicle, WPRecording, p3, p4, p5, p6, p7, p8, p9); }
	BOOL IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE(Vehicle vehicle) { return Call<BOOL>(0xdaa16c7bef65b0b6, vehicle); }
	BOOL IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE_f(Vehicle vehicle) { return FastCall<BOOL>(0xdaa16c7bef65b0b6, vehicle); }
	int GET_VEHICLE_WAYPOINT_PROGRESS(Vehicle vehicle) { return Call<int>(0xa7cc78eba835ea6f, vehicle); }
	int GET_VEHICLE_WAYPOINT_PROGRESS_f(Vehicle vehicle) { return FastCall<int>(0xa7cc78eba835ea6f, vehicle); }
	int GET_VEHICLE_WAYPOINT_TARGET_POINT(Vehicle vehicle) { return Call<int>(0x8b0128876d433c84, vehicle); }
	int GET_VEHICLE_WAYPOINT_TARGET_POINT_f(Vehicle vehicle) { return FastCall<int>(0x8b0128876d433c84, vehicle); }
	void VEHICLE_WAYPOINT_PLAYBACK_PAUSE(Vehicle vehicle) { Call<void>(0x5d57f093db14267d, vehicle); }
	void VEHICLE_WAYPOINT_PLAYBACK_PAUSE_f(Vehicle vehicle) { FastCall<void>(0x5d57f093db14267d, vehicle); }
	void VEHICLE_WAYPOINT_PLAYBACK_RESUME(Vehicle vehicle) { Call<void>(0x4da621e78b11d866, vehicle); }
	void VEHICLE_WAYPOINT_PLAYBACK_RESUME_f(Vehicle vehicle) { FastCall<void>(0x4da621e78b11d866, vehicle); }
	void VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Vehicle vehicle) { Call<void>(0x5eabd30f23c541d8, vehicle); }
	void VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED_f(Vehicle vehicle) { FastCall<void>(0x5eabd30f23c541d8, vehicle); }
	void VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Vehicle vehicle, float speed) { Call<void>(0x805446aa58e5412d, vehicle, speed); }
	void VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED_f(Vehicle vehicle, float speed) { FastCall<void>(0x805446aa58e5412d, vehicle, speed); }
	void TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, BOOL toggle) { Call<void>(0x4d268a991e45806e, ped, toggle); }
	void TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS_f(Ped ped, BOOL toggle) { FastCall<void>(0x4d268a991e45806e, ped, toggle); }
	void TASK_FORCE_MOTION_STATE(Ped ped, Hash state, BOOL forceRestart) { Call<void>(0x4e7da09617691496, ped, state, forceRestart); }
	void TASK_FORCE_MOTION_STATE_f(Ped ped, Hash state, BOOL forceRestart) { FastCall<void>(0x4e7da09617691496, ped, state, forceRestart); }
	void TASK_MOVE_NETWORK_BY_NAME(Ped ped, char* task, float multiplier, BOOL allowOverrideCloneUpdate, char* animDict, int flags) { Call<void>(0xef8abe8bb0c02a4e, ped, task, multiplier, allowOverrideCloneUpdate, animDict, flags); }
	void TASK_MOVE_NETWORK_BY_NAME_f(Ped ped, char* task, float multiplier, BOOL allowOverrideCloneUpdate, char* animDict, int flags) { FastCall<void>(0xef8abe8bb0c02a4e, ped, task, multiplier, allowOverrideCloneUpdate, animDict, flags); }
	void TASK_MOVE_NETWORK_ADVANCED_BY_NAME(Ped ped, char* network, float x, float y, float z, float rotX, float rotY, float rotZ, int rotOrder, float blendDuration, BOOL allowOverrideCloneUpdate, char* animDict, int flags) { Call<void>(0x1e43da8e1697dbdb, ped, network, x, y, z, rotX, rotY, rotZ, rotOrder, blendDuration, allowOverrideCloneUpdate, animDict, flags); }
	void TASK_MOVE_NETWORK_ADVANCED_BY_NAME_f(Ped ped, char* network, float x, float y, float z, float rotX, float rotY, float rotZ, int rotOrder, float blendDuration, BOOL allowOverrideCloneUpdate, char* animDict, int flags) { FastCall<void>(0x1e43da8e1697dbdb, ped, network, x, y, z, rotX, rotY, rotZ, rotOrder, blendDuration, allowOverrideCloneUpdate, animDict, flags); }
	void TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS(Ped ped, char* network, int* initialParameters, float blendDuration, BOOL allowOverrideCloneUpdate, char* animDict, int flags) { Call<void>(0x30e371f56d31276d, ped, network, initialParameters, blendDuration, allowOverrideCloneUpdate, animDict, flags); }
	void TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS_f(Ped ped, char* network, int* initialParameters, float blendDuration, BOOL allowOverrideCloneUpdate, char* animDict, int flags) { FastCall<void>(0x30e371f56d31276d, ped, network, initialParameters, blendDuration, allowOverrideCloneUpdate, animDict, flags); }
	void TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS(Ped ped, char* network, int* initialParameters, float x, float y, float z, float rotX, float rotY, float rotZ, int rotOrder, float blendDuration, BOOL allowOverrideCloneUpdate, char* dictionary, int flags) { Call<void>(0x308940c8b1eb2180, ped, network, initialParameters, x, y, z, rotX, rotY, rotZ, rotOrder, blendDuration, allowOverrideCloneUpdate, dictionary, flags); }
	void TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS_f(Ped ped, char* network, int* initialParameters, float x, float y, float z, float rotX, float rotY, float rotZ, int rotOrder, float blendDuration, BOOL allowOverrideCloneUpdate, char* dictionary, int flags) { FastCall<void>(0x308940c8b1eb2180, ped, network, initialParameters, x, y, z, rotX, rotY, rotZ, rotOrder, blendDuration, allowOverrideCloneUpdate, dictionary, flags); }
	BOOL IS_TASK_MOVE_NETWORK_ACTIVE(Ped ped) { return Call<BOOL>(0x1e1ac3af2b8e5040, ped); }
	BOOL IS_TASK_MOVE_NETWORK_ACTIVE_f(Ped ped) { return FastCall<BOOL>(0x1e1ac3af2b8e5040, ped); }
	BOOL IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION(Ped ped) { return Call<BOOL>(0xff6eab964608f0a1, ped); }
	BOOL IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION_f(Ped ped) { return FastCall<BOOL>(0xff6eab964608f0a1, ped); }
	BOOL REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION(Ped ped, char* name) { return Call<BOOL>(0xdcbc647ced1d1b38, ped, name); }
	BOOL REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION_f(Ped ped, char* name) { return FastCall<BOOL>(0xdcbc647ced1d1b38, ped, name); }
	BOOL SET_EXPECTED_CLONE_NEXT_TASK_MOVE_NETWORK_STATE(Ped ped, char* state) { return Call<BOOL>(0x14237a8cce3f70ec, ped, state); }
	BOOL SET_EXPECTED_CLONE_NEXT_TASK_MOVE_NETWORK_STATE_f(Ped ped, char* state) { return FastCall<BOOL>(0x14237a8cce3f70ec, ped, state); }
	const char* GET_TASK_MOVE_NETWORK_STATE(Ped ped) { return Call<char*>(0xb7af0fceaf060603, ped); }
	const char* GET_TASK_MOVE_NETWORK_STATE_f(Ped ped) { return FastCall<char*>(0xb7af0fceaf060603, ped); }
	void SET_TASK_MOVE_NETWORK_ANIM_SET(Ped ped, Hash clipSet, Hash variableClipSet) { Call<void>(0xfeda71a1382449b6, ped, clipSet, variableClipSet); }
	void SET_TASK_MOVE_NETWORK_ANIM_SET_f(Ped ped, Hash clipSet, Hash variableClipSet) { FastCall<void>(0xfeda71a1382449b6, ped, clipSet, variableClipSet); }
	void SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(Ped ped, char* signalName, float value) { Call<void>(0x4963e8b56fa1c187, ped, signalName, value); }
	void SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_f(Ped ped, char* signalName, float value) { FastCall<void>(0x4963e8b56fa1c187, ped, signalName, value); }
	void SET_TASK_MOVE_NETWORK_SIGNAL_LOCAL_FLOAT(Ped ped, char* signalName, float value) { Call<void>(0x96c0c4f250e24353, ped, signalName, value); }
	void SET_TASK_MOVE_NETWORK_SIGNAL_LOCAL_FLOAT_f(Ped ped, char* signalName, float value) { FastCall<void>(0x96c0c4f250e24353, ped, signalName, value); }
	void SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_LERP_RATE(Ped ped, char* signalName, float value) { Call<void>(0x6484bea734a575f0, ped, signalName, value); }
	void SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_LERP_RATE_f(Ped ped, char* signalName, float value) { FastCall<void>(0x6484bea734a575f0, ped, signalName, value); }
	void SET_TASK_MOVE_NETWORK_SIGNAL_BOOL(Ped ped, char* signalName, BOOL value) { Call<void>(0x8ec12889fb56063f, ped, signalName, value); }
	void SET_TASK_MOVE_NETWORK_SIGNAL_BOOL_f(Ped ped, char* signalName, BOOL value) { FastCall<void>(0x8ec12889fb56063f, ped, signalName, value); }
	float GET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(Ped ped, char* signalName) { return ToFloat(Call<_float>(0x3f4e339292249013, ped, signalName)); }
	float GET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_f(Ped ped, char* signalName) { return ToFloat(FastCall<_float>(0x3f4e339292249013, ped, signalName)); }
	BOOL GET_TASK_MOVE_NETWORK_SIGNAL_BOOL(Ped ped, char* signalName) { return Call<BOOL>(0x2b551a7015393633, ped, signalName); }
	BOOL GET_TASK_MOVE_NETWORK_SIGNAL_BOOL_f(Ped ped, char* signalName) { return FastCall<BOOL>(0x2b551a7015393633, ped, signalName); }
	BOOL GET_TASK_MOVE_NETWORK_EVENT(Ped ped, char* eventName) { return Call<BOOL>(0xb7af0fceae41b40c, ped, eventName); }
	BOOL GET_TASK_MOVE_NETWORK_EVENT_f(Ped ped, char* eventName) { return FastCall<BOOL>(0xb7af0fceae41b40c, ped, eventName); }
	BOOL SET_TASK_MOVE_NETWORK_ENABLE_COLLISION_ON_NETWORK_CLONE_WHEN_FIXED(Ped ped, BOOL enable) { return Call<BOOL>(0x832422adaf2390fb, ped, enable); }
	BOOL SET_TASK_MOVE_NETWORK_ENABLE_COLLISION_ON_NETWORK_CLONE_WHEN_FIXED_f(Ped ped, BOOL enable) { return FastCall<BOOL>(0x832422adaf2390fb, ped, enable); }
	void _SET_SCRIPT_TASK_ENABLE_COLLISION_ON_NETWORK_CLONE_WHEN_FIXED(Ped ped, BOOL enable) { Call<void>(0x9b92cae9ff257c9b, ped, enable); }
	void _SET_SCRIPT_TASK_ENABLE_COLLISION_ON_NETWORK_CLONE_WHEN_FIXED_f(Ped ped, BOOL enable) { FastCall<void>(0x9b92cae9ff257c9b, ped, enable); }
	BOOL IS_MOVE_BLEND_RATIO_STILL(Ped ped) { return Call<BOOL>(0xebb52f8273865eed, ped); }
	BOOL IS_MOVE_BLEND_RATIO_STILL_f(Ped ped) { return FastCall<BOOL>(0xebb52f8273865eed, ped); }
	BOOL IS_MOVE_BLEND_RATIO_WALKING(Ped ped) { return Call<BOOL>(0xd32758b45ec1017e, ped); }
	BOOL IS_MOVE_BLEND_RATIO_WALKING_f(Ped ped) { return FastCall<BOOL>(0xd32758b45ec1017e, ped); }
	BOOL IS_MOVE_BLEND_RATIO_RUNNING(Ped ped) { return Call<BOOL>(0xd32758b3788051c4, ped); }
	BOOL IS_MOVE_BLEND_RATIO_RUNNING_f(Ped ped) { return FastCall<BOOL>(0xd32758b3788051c4, ped); }
	BOOL IS_MOVE_BLEND_RATIO_SPRINTING(Ped ped) { return Call<BOOL>(0xa6b3fa5eb1eb724d, ped); }
	BOOL IS_MOVE_BLEND_RATIO_SPRINTING_f(Ped ped) { return FastCall<BOOL>(0xa6b3fa5eb1eb724d, ped); }
	BOOL IS_PED_STILL(Ped ped) { return Call<BOOL>(0x1ab8804f281fe963, ped); }
	BOOL IS_PED_STILL_f(Ped ped) { return FastCall<BOOL>(0x1ab8804f281fe963, ped); }
	BOOL IS_PED_WALKING(Ped ped) { return Call<BOOL>(0x4e99a9265321c674, ped); }
	BOOL IS_PED_WALKING_f(Ped ped) { return FastCall<BOOL>(0x4e99a9265321c674, ped); }
	BOOL IS_PED_RUNNING(Ped ped) { return Call<BOOL>(0x4e99a9256ce116ba, ped); }
	BOOL IS_PED_RUNNING_f(Ped ped) { return FastCall<BOOL>(0x4e99a9256ce116ba, ped); }
	BOOL IS_PED_SPRINTING(Ped ped) { return Call<BOOL>(0xed3f625112ed1c3, ped); }
	BOOL IS_PED_SPRINTING_f(Ped ped) { return FastCall<BOOL>(0xed3f625112ed1c3, ped); }
	BOOL IS_PED_STRAFING(Ped ped) { return Call<BOOL>(0x849b7b8e68577451, ped); }
	BOOL IS_PED_STRAFING_f(Ped ped) { return FastCall<BOOL>(0x849b7b8e68577451, ped); }
	void TASK_SYNCHRONIZED_SCENE(Ped ped, int scene, char* animDictionary, char* animationName, float blendIn, float blendOut, int flags, int ragdollBlockingFlags, float moverBlendDelta, int ikFlags) { Call<void>(0x27d105af02f2a7b, ped, scene, animDictionary, animationName, blendIn, blendOut, flags, ragdollBlockingFlags, moverBlendDelta, ikFlags); }
	void TASK_SYNCHRONIZED_SCENE_f(Ped ped, int scene, char* animDictionary, char* animationName, float blendIn, float blendOut, int flags, int ragdollBlockingFlags, float moverBlendDelta, int ikFlags) { FastCall<void>(0x27d105af02f2a7b, ped, scene, animDictionary, animationName, blendIn, blendOut, flags, ragdollBlockingFlags, moverBlendDelta, ikFlags); }
	void TASK_AGITATED_ACTION_CONFRONT_RESPONSE(Ped ped, Ped ped2) { Call<void>(0x4ff0440b573c42f2, ped, ped2); }
	void TASK_AGITATED_ACTION_CONFRONT_RESPONSE_f(Ped ped, Ped ped2) { FastCall<void>(0x4ff0440b573c42f2, ped, ped2); }
	void TASK_SWEEP_AIM_ENTITY(Ped ped, char* animDict, char* lowAnimName, char* medAnimName, char* hiAnimName, int runtime, Entity targetEntity, float turnRate, float blendInDuration) { Call<void>(0x57775ed54d272b0a, ped, animDict, lowAnimName, medAnimName, hiAnimName, runtime, targetEntity, turnRate, blendInDuration); }
	void TASK_SWEEP_AIM_ENTITY_f(Ped ped, char* animDict, char* lowAnimName, char* medAnimName, char* hiAnimName, int runtime, Entity targetEntity, float turnRate, float blendInDuration) { FastCall<void>(0x57775ed54d272b0a, ped, animDict, lowAnimName, medAnimName, hiAnimName, runtime, targetEntity, turnRate, blendInDuration); }
	void UPDATE_TASK_SWEEP_AIM_ENTITY(Ped ped, Entity entity) { Call<void>(0x3feebac9d562ec14, ped, entity); }
	void UPDATE_TASK_SWEEP_AIM_ENTITY_f(Ped ped, Entity entity) { FastCall<void>(0x3feebac9d562ec14, ped, entity); }
	void TASK_SWEEP_AIM_POSITION(Ped ped, char* animDict, char* lowAnimName, char* medAnimName, char* hiAnimName, int runtime, float x, float y, float z, float turnRate, float blendInDuration) { Call<void>(0x571afefd49e6ae90, ped, animDict, lowAnimName, medAnimName, hiAnimName, runtime, x, y, z, turnRate, blendInDuration); }
	void TASK_SWEEP_AIM_POSITION_f(Ped ped, char* animDict, char* lowAnimName, char* medAnimName, char* hiAnimName, int runtime, float x, float y, float z, float turnRate, float blendInDuration) { FastCall<void>(0x571afefd49e6ae90, ped, animDict, lowAnimName, medAnimName, hiAnimName, runtime, x, y, z, turnRate, blendInDuration); }
	void UPDATE_TASK_SWEEP_AIM_POSITION(Ped ped, float x, float y, float z) { Call<void>(0xff2b2ff0b236551a, ped, x, y, z); }
	void UPDATE_TASK_SWEEP_AIM_POSITION_f(Ped ped, float x, float y, float z) { FastCall<void>(0xff2b2ff0b236551a, ped, x, y, z); }
	void TASK_ARREST_PED(Ped ped, Ped target) { Call<void>(0x8c3d54144ae1e82f, ped, target); }
	void TASK_ARREST_PED_f(Ped ped, Ped target) { FastCall<void>(0x8c3d54144ae1e82f, ped, target); }
	BOOL IS_PED_RUNNING_ARREST_TASK(Ped ped) { return Call<BOOL>(0x30d1ee6ed2a1a3fa, ped); }
	BOOL IS_PED_RUNNING_ARREST_TASK_f(Ped ped) { return FastCall<BOOL>(0x30d1ee6ed2a1a3fa, ped); }
	BOOL IS_PED_BEING_ARRESTED(Ped ped) { return Call<BOOL>(0x4874d36c2d40a909, ped); }
	BOOL IS_PED_BEING_ARRESTED_f(Ped ped) { return FastCall<BOOL>(0x4874d36c2d40a909, ped); }
	void UNCUFF_PED(Ped ped) { Call<void>(0x83a388516d97b, ped); }
	void UNCUFF_PED_f(Ped ped) { FastCall<void>(0x83a388516d97b, ped); }
	BOOL IS_PED_CUFFED(Ped ped) { return Call<BOOL>(0x3c578995c09c5c56, ped); }
	BOOL IS_PED_CUFFED_f(Ped ped) { return FastCall<BOOL>(0x3c578995c09c5c56, ped); }
}
namespace VEHICLE
{
	Vehicle CREATE_VEHICLE(Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOOL bScriptHostVeh, BOOL p7) { return Call<Vehicle>(0x492ac11a4e409ac9, modelHash, x, y, z, heading, isNetwork, bScriptHostVeh, p7); }
	Vehicle CREATE_VEHICLE_f(Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOOL bScriptHostVeh, BOOL p7) { return FastCall<Vehicle>(0x492ac11a4e409ac9, modelHash, x, y, z, heading, isNetwork, bScriptHostVeh, p7); }
	void DELETE_VEHICLE(Vehicle* vehicle) { Call<void>(0x107069559ce56078, vehicle); }
	void DELETE_VEHICLE_f(Vehicle* vehicle) { FastCall<void>(0x107069559ce56078, vehicle); }
	void SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON(Vehicle vehicle, BOOL toggle, BOOL p2) { Call<void>(0xcb42d481970d4b7, vehicle, toggle, p2); }
	void SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_f(Vehicle vehicle, BOOL toggle, BOOL p2) { FastCall<void>(0xcb42d481970d4b7, vehicle, toggle, p2); }
	void SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_SYNCED(Vehicle vehicle, BOOL canBeLockedOn, BOOL p2) { Call<void>(0x6ffb944c57cc9d02, vehicle, canBeLockedOn, p2); }
	void SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_SYNCED_f(Vehicle vehicle, BOOL canBeLockedOn, BOOL p2) { FastCall<void>(0x6ffb944c57cc9d02, vehicle, canBeLockedOn, p2); }
	void SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON(Vehicle veh, BOOL toggle) { Call<void>(0xcce94be23d2c9ab8, veh, toggle); }
	void SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON_f(Vehicle veh, BOOL toggle) { FastCall<void>(0xcce94be23d2c9ab8, veh, toggle); }
	int GET_VEHICLE_HOMING_LOCKON_STATE(Vehicle vehicle) { return Call<int>(0x1e1b4b0b735aaa83, vehicle); }
	int GET_VEHICLE_HOMING_LOCKON_STATE_f(Vehicle vehicle) { return FastCall<int>(0x1e1b4b0b735aaa83, vehicle); }
	int GET_VEHICLE_HOMING_LOCKEDONTO_STATE(Any p0) { return Call<int>(0xb679d34049a805dd, p0); }
	int GET_VEHICLE_HOMING_LOCKEDONTO_STATE_f(Any p0) { return FastCall<int>(0xb679d34049a805dd, p0); }
	void SET_VEHICLE_HOMING_LOCKEDONTO_STATE(Any p0, Any p1) { Call<void>(0xef1ac2791bd102e9, p0, p1); }
	void SET_VEHICLE_HOMING_LOCKEDONTO_STATE_f(Any p0, Any p1) { FastCall<void>(0xef1ac2791bd102e9, p0, p1); }
	BOOL IS_VEHICLE_MODEL(Vehicle vehicle, Hash model) { return Call<BOOL>(0x507389288f8191c1, vehicle, model); }
	BOOL IS_VEHICLE_MODEL_f(Vehicle vehicle, Hash model) { return FastCall<BOOL>(0x507389288f8191c1, vehicle, model); }
	BOOL DOES_SCRIPT_VEHICLE_GENERATOR_EXIST(int vehicleGenerator) { return Call<BOOL>(0x3178f348f7a4462a, vehicleGenerator); }
	BOOL DOES_SCRIPT_VEHICLE_GENERATOR_EXIST_f(int vehicleGenerator) { return FastCall<BOOL>(0x3178f348f7a4462a, vehicleGenerator); }
	int CREATE_SCRIPT_VEHICLE_GENERATOR(float x, float y, float z, float heading, float p4, float p5, Hash modelHash, int p7, int p8, int p9, int p10, BOOL p11, BOOL p12, BOOL p13, BOOL p14, BOOL p15, int p16) { return Call<int>(0x9fe0d4cebaf3e4af, x, y, z, heading, p4, p5, modelHash, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16); }
	int CREATE_SCRIPT_VEHICLE_GENERATOR_f(float x, float y, float z, float heading, float p4, float p5, Hash modelHash, int p7, int p8, int p9, int p10, BOOL p11, BOOL p12, BOOL p13, BOOL p14, BOOL p15, int p16) { return FastCall<int>(0x9fe0d4cebaf3e4af, x, y, z, heading, p4, p5, modelHash, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16); }
	void DELETE_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator) { Call<void>(0xe770a66fab8b52e0, vehicleGenerator); }
	void DELETE_SCRIPT_VEHICLE_GENERATOR_f(int vehicleGenerator) { FastCall<void>(0xe770a66fab8b52e0, vehicleGenerator); }
	void SET_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator, BOOL enabled) { Call<void>(0x12ee29a896de5429, vehicleGenerator, enabled); }
	void SET_SCRIPT_VEHICLE_GENERATOR_f(int vehicleGenerator, BOOL enabled) { FastCall<void>(0x12ee29a896de5429, vehicleGenerator, enabled); }
	void SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL toggle, BOOL p7) { Call<void>(0xaa93251f12239c5f, x1, y1, z1, x2, y2, z2, toggle, p7); }
	void SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, BOOL toggle, BOOL p7) { FastCall<void>(0xaa93251f12239c5f, x1, y1, z1, x2, y2, z2, toggle, p7); }
	void SET_ALL_VEHICLE_GENERATORS_ACTIVE() { Call<void>(0x2905681a924ab537); }
	void SET_ALL_VEHICLE_GENERATORS_ACTIVE_f() { FastCall<void>(0x2905681a924ab537); }
	void SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE(BOOL active) { Call<void>(0x9b0263d125a2785d, active); }
	void SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE_f(BOOL active) { FastCall<void>(0x9b0263d125a2785d, active); }
	void SET_VEHICLE_GENERATOR_AREA_OF_INTEREST(float x, float y, float z, float radius) { Call<void>(0x7d81a6e8189b61c, x, y, z, radius); }
	void SET_VEHICLE_GENERATOR_AREA_OF_INTEREST_f(float x, float y, float z, float radius) { FastCall<void>(0x7d81a6e8189b61c, x, y, z, radius); }
	void CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST() { Call<void>(0xd22e41607106d851); }
	void CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST_f() { FastCall<void>(0xd22e41607106d851); }
	BOOL SET_VEHICLE_ON_GROUND_PROPERLY(Vehicle vehicle, float p1) { return Call<BOOL>(0xc4aaeaf1394e7065, vehicle, p1); }
	BOOL SET_VEHICLE_ON_GROUND_PROPERLY_f(Vehicle vehicle, float p1) { return FastCall<BOOL>(0xc4aaeaf1394e7065, vehicle, p1); }
	BOOL SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION(Vehicle p0, BOOL p1, BOOL p2, BOOL p3) { return Call<BOOL>(0xa7184e713c6c3cd5, p0, p1, p2, p3); }
	BOOL SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION_f(Vehicle p0, BOOL p1, BOOL p2, BOOL p3) { return FastCall<BOOL>(0xa7184e713c6c3cd5, p0, p1, p2, p3); }
	BOOL IS_VEHICLE_STUCK_ON_ROOF(Vehicle vehicle) { return Call<BOOL>(0x8c6a96aa96f25229, vehicle); }
	BOOL IS_VEHICLE_STUCK_ON_ROOF_f(Vehicle vehicle) { return FastCall<BOOL>(0x8c6a96aa96f25229, vehicle); }
	void ADD_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle) { Call<void>(0x4864736b30059ce, vehicle); }
	void ADD_VEHICLE_UPSIDEDOWN_CHECK_f(Vehicle vehicle) { FastCall<void>(0x4864736b30059ce, vehicle); }
	void REMOVE_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle) { Call<void>(0xaecba7bf361d632b, vehicle); }
	void REMOVE_VEHICLE_UPSIDEDOWN_CHECK_f(Vehicle vehicle) { FastCall<void>(0xaecba7bf361d632b, vehicle); }
	BOOL IS_VEHICLE_STOPPED(Vehicle vehicle) { return Call<BOOL>(0x1b5e143fbf1de65, vehicle); }
	BOOL IS_VEHICLE_STOPPED_f(Vehicle vehicle) { return FastCall<BOOL>(0x1b5e143fbf1de65, vehicle); }
	int GET_VEHICLE_NUMBER_OF_PASSENGERS(Vehicle vehicle, BOOL includeDriver, BOOL includeDeadOccupants) { return Call<int>(0x50c8d4e0decfd3c7, vehicle, includeDriver, includeDeadOccupants); }
	int GET_VEHICLE_NUMBER_OF_PASSENGERS_f(Vehicle vehicle, BOOL includeDriver, BOOL includeDeadOccupants) { return FastCall<int>(0x50c8d4e0decfd3c7, vehicle, includeDriver, includeDeadOccupants); }
	int GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(Vehicle vehicle) { return Call<int>(0xd4fdd18a846b9e2, vehicle); }
	int GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS_f(Vehicle vehicle) { return FastCall<int>(0xd4fdd18a846b9e2, vehicle); }
	int GET_VEHICLE_MODEL_NUMBER_OF_SEATS(Hash modelHash) { return Call<int>(0x37e76aceaff1214a, modelHash); }
	int GET_VEHICLE_MODEL_NUMBER_OF_SEATS_f(Hash modelHash) { return FastCall<int>(0x37e76aceaff1214a, modelHash); }
	BOOL IS_SEAT_WARP_ONLY(Vehicle vehicle, int seatIndex) { return Call<BOOL>(0xc312c479b8d804fe, vehicle, seatIndex); }
	BOOL IS_SEAT_WARP_ONLY_f(Vehicle vehicle, int seatIndex) { return FastCall<BOOL>(0xc312c479b8d804fe, vehicle, seatIndex); }
	BOOL IS_TURRET_SEAT(Vehicle vehicle, int seatIndex) { return Call<BOOL>(0x4ea6da3529e5a85f, vehicle, seatIndex); }
	BOOL IS_TURRET_SEAT_f(Vehicle vehicle, int seatIndex) { return FastCall<BOOL>(0x4ea6da3529e5a85f, vehicle, seatIndex); }
	BOOL DOES_VEHICLE_ALLOW_RAPPEL(Vehicle vehicle) { return Call<BOOL>(0x9cb74ccfbacf2785, vehicle); }
	BOOL DOES_VEHICLE_ALLOW_RAPPEL_f(Vehicle vehicle) { return FastCall<BOOL>(0x9cb74ccfbacf2785, vehicle); }
	void SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) { Call<void>(0xdb4f606d7e38d43, multiplier); }
	void SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME_f(float multiplier) { FastCall<void>(0xdb4f606d7e38d43, multiplier); }
	void SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) { Call<void>(0x4947f7380c542de1, multiplier); }
	void SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME_f(float multiplier) { FastCall<void>(0x4947f7380c542de1, multiplier); }
	void SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) { Call<void>(0x61e63c2043d42a7, multiplier); }
	void SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME_f(float multiplier) { FastCall<void>(0x61e63c2043d42a7, multiplier); }
	void SET_DISABLE_RANDOM_TRAINS_THIS_FRAME(BOOL toggle) { Call<void>(0xe9239bd57c3a9f38, toggle); }
	void SET_DISABLE_RANDOM_TRAINS_THIS_FRAME_f(BOOL toggle) { FastCall<void>(0xe9239bd57c3a9f38, toggle); }
	void SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME(float value) { Call<void>(0xe921e9008d899e91, value); }
	void SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME_f(float value) { FastCall<void>(0xe921e9008d899e91, value); }
	void SET_FAR_DRAW_VEHICLES(BOOL toggle) { Call<void>(0x40ba74433128415d, toggle); }
	void SET_FAR_DRAW_VEHICLES_f(BOOL toggle) { FastCall<void>(0x40ba74433128415d, toggle); }
	void SET_NUMBER_OF_PARKED_VEHICLES(int value) { Call<void>(0x78831400da2714ce, value); }
	void SET_NUMBER_OF_PARKED_VEHICLES_f(int value) { FastCall<void>(0x78831400da2714ce, value); }
	void SET_VEHICLE_DOORS_LOCKED(Vehicle vehicle, int doorLockStatus) { Call<void>(0x1e426465daf0d854, vehicle, doorLockStatus); }
	void SET_VEHICLE_DOORS_LOCKED_f(Vehicle vehicle, int doorLockStatus) { FastCall<void>(0x1e426465daf0d854, vehicle, doorLockStatus); }
	void SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED(Vehicle vehicle, int doorId, int doorLockStatus) { Call<void>(0x949829d7eedc81da, vehicle, doorId, doorLockStatus); }
	void SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED_f(Vehicle vehicle, int doorId, int doorLockStatus) { FastCall<void>(0x949829d7eedc81da, vehicle, doorId, doorLockStatus); }
	void SET_VEHICLE_HAS_MUTED_SIRENS(Vehicle vehicle, BOOL toggle) { Call<void>(0x492c5531867f77d7, vehicle, toggle); }
	void SET_VEHICLE_HAS_MUTED_SIRENS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x492c5531867f77d7, vehicle, toggle); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player, BOOL toggle) { Call<void>(0xd398ec0c9b55dc02, vehicle, player, toggle); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER_f(Vehicle vehicle, Player player, BOOL toggle) { FastCall<void>(0xd398ec0c9b55dc02, vehicle, player, toggle); }
	BOOL GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player) { return Call<BOOL>(0x9af7fcd3c92cdef6, vehicle, player); }
	BOOL GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER_f(Vehicle vehicle, Player player) { return FastCall<BOOL>(0x9af7fcd3c92cdef6, vehicle, player); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Vehicle vehicle, BOOL toggle) { Call<void>(0x78722819f393a053, vehicle, toggle); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x78722819f393a053, vehicle, toggle); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(Vehicle vehicle, BOOL toggle) { Call<void>(0x59e6fcd796c1d191, vehicle, toggle); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x59e6fcd796c1d191, vehicle, toggle); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_TEAM(Vehicle vehicle, int team, BOOL toggle) { Call<void>(0xaab591f5e3ee5bbe, vehicle, team, toggle); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_TEAM_f(Vehicle vehicle, int team, BOOL toggle) { FastCall<void>(0xaab591f5e3ee5bbe, vehicle, team, toggle); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_ALL_TEAMS(Vehicle vehicle, BOOL toggle) { Call<void>(0xd0b543702d7b2097, vehicle, toggle); }
	void SET_VEHICLE_DOORS_LOCKED_FOR_ALL_TEAMS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xd0b543702d7b2097, vehicle, toggle); }
	void SET_VEHICLE_DONT_TERMINATE_TASK_WHEN_ACHIEVED(Vehicle vehicle) { Call<void>(0xc06116bd303ec2da, vehicle); }
	void SET_VEHICLE_DONT_TERMINATE_TASK_WHEN_ACHIEVED_f(Vehicle vehicle) { FastCall<void>(0xc06116bd303ec2da, vehicle); }
	void _SET_VEHICLE_MAX_LAUNCH_ENGINE_REVS(Vehicle vehicle, float modifier) { Call<void>(0xf43fb9d1a3876f2b, vehicle, modifier); }
	void _SET_VEHICLE_MAX_LAUNCH_ENGINE_REVS_f(Vehicle vehicle, float modifier) { FastCall<void>(0xf43fb9d1a3876f2b, vehicle, modifier); }
	float _GET_VEHICLE_THROTTLE(Vehicle vehicle) { return ToFloat(Call<_float>(0xfadc8796ed00bbc5, vehicle)); }
	float _GET_VEHICLE_THROTTLE_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xfadc8796ed00bbc5, vehicle)); }
	void EXPLODE_VEHICLE(Vehicle vehicle, BOOL isAudible, BOOL isInvisible) { Call<void>(0x5ad2ce2f4655f58e, vehicle, isAudible, isInvisible); }
	void EXPLODE_VEHICLE_f(Vehicle vehicle, BOOL isAudible, BOOL isInvisible) { FastCall<void>(0x5ad2ce2f4655f58e, vehicle, isAudible, isInvisible); }
	void SET_VEHICLE_OUT_OF_CONTROL(Vehicle vehicle, BOOL killDriver, BOOL explodeOnImpact) { Call<void>(0x6a33bc12e78da2b6, vehicle, killDriver, explodeOnImpact); }
	void SET_VEHICLE_OUT_OF_CONTROL_f(Vehicle vehicle, BOOL killDriver, BOOL explodeOnImpact) { FastCall<void>(0x6a33bc12e78da2b6, vehicle, killDriver, explodeOnImpact); }
	void SET_VEHICLE_TIMED_EXPLOSION(Vehicle vehicle, Ped ped, BOOL toggle) { Call<void>(0xcfa9647f047e939d, vehicle, ped, toggle); }
	void SET_VEHICLE_TIMED_EXPLOSION_f(Vehicle vehicle, Ped ped, BOOL toggle) { FastCall<void>(0xcfa9647f047e939d, vehicle, ped, toggle); }
	void ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE(Vehicle vehicle) { Call<void>(0x40891ea56f0cb0f2, vehicle); }
	void ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE_f(Vehicle vehicle) { FastCall<void>(0x40891ea56f0cb0f2, vehicle); }
	void CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE() { Call<void>(0xbff076cd518cb9c6); }
	void CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE_f() { FastCall<void>(0xbff076cd518cb9c6); }
	BOOL HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE() { return Call<BOOL>(0x11ea7b079c3797d9); }
	BOOL HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE_f() { return FastCall<BOOL>(0x11ea7b079c3797d9); }
	void DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE() { Call<void>(0xe59ea5e61cdccd73); }
	void DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE_f() { FastCall<void>(0xe59ea5e61cdccd73); }
	BOOL HAVE_VEHICLE_REAR_DOORS_BEEN_BLOWN_OPEN_BY_STICKYBOMB(Vehicle vehicle) { return Call<BOOL>(0x56420596ee0faf09, vehicle); }
	BOOL HAVE_VEHICLE_REAR_DOORS_BEEN_BLOWN_OPEN_BY_STICKYBOMB_f(Vehicle vehicle) { return FastCall<BOOL>(0x56420596ee0faf09, vehicle); }
	void SET_TAXI_LIGHTS(Vehicle vehicle, BOOL state) { Call<void>(0xe0d62a90c087fee1, vehicle, state); }
	void SET_TAXI_LIGHTS_f(Vehicle vehicle, BOOL state) { FastCall<void>(0xe0d62a90c087fee1, vehicle, state); }
	BOOL IS_TAXI_LIGHT_ON(Vehicle vehicle) { return Call<BOOL>(0x395c7448c3dd1474, vehicle); }
	BOOL IS_TAXI_LIGHT_ON_f(Vehicle vehicle) { return FastCall<BOOL>(0x395c7448c3dd1474, vehicle); }
	BOOL IS_VEHICLE_IN_GARAGE_AREA(char* garageName, Vehicle vehicle) { return Call<BOOL>(0x86460da41f7dead3, garageName, vehicle); }
	BOOL IS_VEHICLE_IN_GARAGE_AREA_f(char* garageName, Vehicle vehicle) { return FastCall<BOOL>(0x86460da41f7dead3, garageName, vehicle); }
	void SET_VEHICLE_COLOURS(Vehicle vehicle, int colorPrimary, int colorSecondary) { Call<void>(0x8b4e57c6917b4fd7, vehicle, colorPrimary, colorSecondary); }
	void SET_VEHICLE_COLOURS_f(Vehicle vehicle, int colorPrimary, int colorSecondary) { FastCall<void>(0x8b4e57c6917b4fd7, vehicle, colorPrimary, colorSecondary); }
	void SET_VEHICLE_FULLBEAM(Vehicle vehicle, BOOL toggle) { Call<void>(0xde7ca12012c478ee, vehicle, toggle); }
	void SET_VEHICLE_FULLBEAM_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xde7ca12012c478ee, vehicle, toggle); }
	void SET_VEHICLE_IS_RACING(Vehicle vehicle, BOOL toggle) { Call<void>(0xf117852d2a1a2fd3, vehicle, toggle); }
	void SET_VEHICLE_IS_RACING_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xf117852d2a1a2fd3, vehicle, toggle); }
	void SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int r, int g, int b) { Call<void>(0x31491ae389e16d27, vehicle, r, g, b); }
	void SET_VEHICLE_CUSTOM_PRIMARY_COLOUR_f(Vehicle vehicle, int r, int g, int b) { FastCall<void>(0x31491ae389e16d27, vehicle, r, g, b); }
	void GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b) { Call<void>(0xcddd0cc9a3c49d1b, vehicle, r, g, b); }
	void GET_VEHICLE_CUSTOM_PRIMARY_COLOUR_f(Vehicle vehicle, int* r, int* g, int* b) { FastCall<void>(0xcddd0cc9a3c49d1b, vehicle, r, g, b); }
	void CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle) { Call<void>(0x5cc576fc6daafdd2, vehicle); }
	void CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR_f(Vehicle vehicle) { FastCall<void>(0x5cc576fc6daafdd2, vehicle); }
	BOOL GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(Vehicle vehicle) { return Call<BOOL>(0x86c7e15c05737448, vehicle); }
	BOOL GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM_f(Vehicle vehicle) { return FastCall<BOOL>(0x86c7e15c05737448, vehicle); }
	void SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int r, int g, int b) { Call<void>(0xe51f92c13b2481f5, vehicle, r, g, b); }
	void SET_VEHICLE_CUSTOM_SECONDARY_COLOUR_f(Vehicle vehicle, int r, int g, int b) { FastCall<void>(0xe51f92c13b2481f5, vehicle, r, g, b); }
	void GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b) { Call<void>(0xac7ea38868fb84e9, vehicle, r, g, b); }
	void GET_VEHICLE_CUSTOM_SECONDARY_COLOUR_f(Vehicle vehicle, int* r, int* g, int* b) { FastCall<void>(0xac7ea38868fb84e9, vehicle, r, g, b); }
	void CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle) { Call<void>(0x22f54c3052cc93e0, vehicle); }
	void CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR_f(Vehicle vehicle) { FastCall<void>(0x22f54c3052cc93e0, vehicle); }
	BOOL GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(Vehicle vehicle) { return Call<BOOL>(0x3f993b464db347fa, vehicle); }
	BOOL GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM_f(Vehicle vehicle) { return FastCall<BOOL>(0x3f993b464db347fa, vehicle); }
	void SET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle, float fade) { Call<void>(0x1e9a5db923ff7c33, vehicle, fade); }
	void SET_VEHICLE_ENVEFF_SCALE_f(Vehicle vehicle, float fade) { FastCall<void>(0x1e9a5db923ff7c33, vehicle, fade); }
	float GET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle) { return ToFloat(Call<_float>(0xdf264a9953ecc9bf, vehicle)); }
	float GET_VEHICLE_ENVEFF_SCALE_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xdf264a9953ecc9bf, vehicle)); }
	void SET_CAN_RESPRAY_VEHICLE(Vehicle vehicle, BOOL state) { Call<void>(0x3df44dbae1628ffb, vehicle, state); }
	void SET_CAN_RESPRAY_VEHICLE_f(Vehicle vehicle, BOOL state) { FastCall<void>(0x3df44dbae1628ffb, vehicle, state); }
	void SET_GOON_BOSS_VEHICLE(Vehicle vehicle, BOOL toggle) { Call<void>(0x3a51976bfc6841f5, vehicle, toggle); }
	void SET_GOON_BOSS_VEHICLE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x3a51976bfc6841f5, vehicle, toggle); }
	void SET_OPEN_REAR_DOORS_ON_EXPLOSION(Vehicle vehicle, BOOL toggle) { Call<void>(0xcbd8ff1ff4f87292, vehicle, toggle); }
	void SET_OPEN_REAR_DOORS_ON_EXPLOSION_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xcbd8ff1ff4f87292, vehicle, toggle); }
	void FORCE_SUBMARINE_SURFACE_MODE(Vehicle vehicle, BOOL toggle) { Call<void>(0xe5d23570d0fab746, vehicle, toggle); }
	void FORCE_SUBMARINE_SURFACE_MODE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xe5d23570d0fab746, vehicle, toggle); }
	void FORCE_SUBMARINE_NEURTAL_BUOYANCY(Any p0, Any p1) { Call<void>(0x4f61bc3099eda265, p0, p1); }
	void FORCE_SUBMARINE_NEURTAL_BUOYANCY_f(Any p0, Any p1) { FastCall<void>(0x4f61bc3099eda265, p0, p1); }
	void SET_SUBMARINE_CRUSH_DEPTHS(Vehicle vehicle, BOOL p1, float depth1, float depth2, float depth3) { Call<void>(0xd5cae63ddde2460e, vehicle, p1, depth1, depth2, depth3); }
	void SET_SUBMARINE_CRUSH_DEPTHS_f(Vehicle vehicle, BOOL p1, float depth1, float depth2, float depth3) { FastCall<void>(0xd5cae63ddde2460e, vehicle, p1, depth1, depth2, depth3); }
	BOOL GET_SUBMARINE_IS_UNDER_DESIGN_DEPTH(Vehicle submarine) { return Call<BOOL>(0x90cf8def8adf9e98, submarine); }
	BOOL GET_SUBMARINE_IS_UNDER_DESIGN_DEPTH_f(Vehicle submarine) { return FastCall<BOOL>(0x90cf8def8adf9e98, submarine); }
	int GET_SUBMARINE_NUMBER_OF_AIR_LEAKS(Vehicle submarine) { return Call<int>(0xde53c05537053fa3, submarine); }
	int GET_SUBMARINE_NUMBER_OF_AIR_LEAKS_f(Vehicle submarine) { return FastCall<int>(0xde53c05537053fa3, submarine); }
	void SET_BOAT_IGNORE_LAND_PROBES(Any p0, Any p1) { Call<void>(0x337b94eb077f90c, p0, p1); }
	void SET_BOAT_IGNORE_LAND_PROBES_f(Any p0, Any p1) { FastCall<void>(0x337b94eb077f90c, p0, p1); }
	void _SET_BOUNDS_AFFECT_WATER_PROBES(Vehicle vehicle, BOOL toggle) { Call<void>(0x9e3b61a0aec2e1a7, vehicle, toggle); }
	void _SET_BOUNDS_AFFECT_WATER_PROBES_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x9e3b61a0aec2e1a7, vehicle, toggle); }
	void SET_BOAT_ANCHOR(Vehicle vehicle, BOOL toggle) { Call<void>(0xe0a2ff98b67de617, vehicle, toggle); }
	void SET_BOAT_ANCHOR_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xe0a2ff98b67de617, vehicle, toggle); }
	BOOL CAN_ANCHOR_BOAT_HERE(Vehicle vehicle) { return Call<BOOL>(0x8a01d3488781df34, vehicle); }
	BOOL CAN_ANCHOR_BOAT_HERE_f(Vehicle vehicle) { return FastCall<BOOL>(0x8a01d3488781df34, vehicle); }
	BOOL CAN_ANCHOR_BOAT_HERE_IGNORE_PLAYERS(Vehicle vehicle) { return Call<BOOL>(0x2aa660ec49e2b490, vehicle); }
	BOOL CAN_ANCHOR_BOAT_HERE_IGNORE_PLAYERS_f(Vehicle vehicle) { return FastCall<BOOL>(0x2aa660ec49e2b490, vehicle); }
	void SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER(Vehicle vehicle, BOOL toggle) { Call<void>(0x826980a6f5826afe, vehicle, toggle); }
	void SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x826980a6f5826afe, vehicle, toggle); }
	void SET_FORCE_LOW_LOD_ANCHOR_MODE(Vehicle vehicle, BOOL p1) { Call<void>(0x5fe1e47c9b25c493, vehicle, p1); }
	void SET_FORCE_LOW_LOD_ANCHOR_MODE_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x5fe1e47c9b25c493, vehicle, p1); }
	void SET_BOAT_LOW_LOD_ANCHOR_DISTANCE(Vehicle vehicle, float value) { Call<void>(0x583936fecaf72074, vehicle, value); }
	void SET_BOAT_LOW_LOD_ANCHOR_DISTANCE_f(Vehicle vehicle, float value) { FastCall<void>(0x583936fecaf72074, vehicle, value); }
	BOOL IS_BOAT_ANCHORED(Vehicle vehicle) { return Call<BOOL>(0x7948272b13f5d7de, vehicle); }
	BOOL IS_BOAT_ANCHORED_f(Vehicle vehicle) { return FastCall<BOOL>(0x7948272b13f5d7de, vehicle); }
	void SET_BOAT_SINKS_WHEN_WRECKED(Vehicle vehicle, BOOL toggle) { Call<void>(0x78626419437e30ed, vehicle, toggle); }
	void SET_BOAT_SINKS_WHEN_WRECKED_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x78626419437e30ed, vehicle, toggle); }
	void SET_BOAT_WRECKED(Vehicle vehicle) { Call<void>(0x33bcf382abf52faf, vehicle); }
	void SET_BOAT_WRECKED_f(Vehicle vehicle) { FastCall<void>(0x33bcf382abf52faf, vehicle); }
	void SET_VEHICLE_SIREN(Vehicle vehicle, BOOL toggle) { Call<void>(0x1b0cde428a7a8635, vehicle, toggle); }
	void SET_VEHICLE_SIREN_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1b0cde428a7a8635, vehicle, toggle); }
	BOOL IS_VEHICLE_SIREN_ON(Vehicle vehicle) { return Call<BOOL>(0x3506473940e86441, vehicle); }
	BOOL IS_VEHICLE_SIREN_ON_f(Vehicle vehicle) { return FastCall<BOOL>(0x3506473940e86441, vehicle); }
	BOOL IS_VEHICLE_SIREN_AUDIO_ON(Vehicle vehicle) { return Call<BOOL>(0x87a1cc4e8cb12fea, vehicle); }
	BOOL IS_VEHICLE_SIREN_AUDIO_ON_f(Vehicle vehicle) { return FastCall<BOOL>(0x87a1cc4e8cb12fea, vehicle); }
	void SET_VEHICLE_STRONG(Vehicle vehicle, BOOL toggle) { Call<void>(0x468eea0ec57168c7, vehicle, toggle); }
	void SET_VEHICLE_STRONG_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x468eea0ec57168c7, vehicle, toggle); }
	void REMOVE_VEHICLE_STUCK_CHECK(Vehicle vehicle) { Call<void>(0xe79bfc453f54af77, vehicle); }
	void REMOVE_VEHICLE_STUCK_CHECK_f(Vehicle vehicle) { FastCall<void>(0xe79bfc453f54af77, vehicle); }
	void GET_VEHICLE_COLOURS(Vehicle vehicle, int* colorPrimary, int* colorSecondary) { Call<void>(0x73baf754ed7ebacb, vehicle, colorPrimary, colorSecondary); }
	void GET_VEHICLE_COLOURS_f(Vehicle vehicle, int* colorPrimary, int* colorSecondary) { FastCall<void>(0x73baf754ed7ebacb, vehicle, colorPrimary, colorSecondary); }
	BOOL IS_VEHICLE_SEAT_FREE(Vehicle vehicle, int seatIndex, BOOL isTaskRunning) { return Call<BOOL>(0x6bc29fd1d3d26f1e, vehicle, seatIndex, isTaskRunning); }
	BOOL IS_VEHICLE_SEAT_FREE_f(Vehicle vehicle, int seatIndex, BOOL isTaskRunning) { return FastCall<BOOL>(0x6bc29fd1d3d26f1e, vehicle, seatIndex, isTaskRunning); }
	Ped GET_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int seatIndex, BOOL p2) { return Call<Ped>(0xfec7aab856864659, vehicle, seatIndex, p2); }
	Ped GET_PED_IN_VEHICLE_SEAT_f(Vehicle vehicle, int seatIndex, BOOL p2) { return FastCall<Ped>(0xfec7aab856864659, vehicle, seatIndex, p2); }
	Ped GET_LAST_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int seatIndex) { return Call<Ped>(0x6f1150f5ab31b6a2, vehicle, seatIndex); }
	Ped GET_LAST_PED_IN_VEHICLE_SEAT_f(Vehicle vehicle, int seatIndex) { return FastCall<Ped>(0x6f1150f5ab31b6a2, vehicle, seatIndex); }
	BOOL GET_VEHICLE_LIGHTS_STATE(Vehicle vehicle, BOOL* lightsOn, BOOL* highbeamsOn) { return Call<BOOL>(0xe18e37796bd9af8b, vehicle, lightsOn, highbeamsOn); }
	BOOL GET_VEHICLE_LIGHTS_STATE_f(Vehicle vehicle, BOOL* lightsOn, BOOL* highbeamsOn) { return FastCall<BOOL>(0xe18e37796bd9af8b, vehicle, lightsOn, highbeamsOn); }
	BOOL IS_VEHICLE_TYRE_BURST(Vehicle vehicle, int wheelID, BOOL completely) { return Call<BOOL>(0xc918261fc5d45c1, vehicle, wheelID, completely); }
	BOOL IS_VEHICLE_TYRE_BURST_f(Vehicle vehicle, int wheelID, BOOL completely) { return FastCall<BOOL>(0xc918261fc5d45c1, vehicle, wheelID, completely); }
	void SET_VEHICLE_FORWARD_SPEED(Vehicle vehicle, float speed) { Call<void>(0xbfeffcdfa60de5dd, vehicle, speed); }
	void SET_VEHICLE_FORWARD_SPEED_f(Vehicle vehicle, float speed) { FastCall<void>(0xbfeffcdfa60de5dd, vehicle, speed); }
	void SET_VEHICLE_FORWARD_SPEED_XY(Vehicle vehicle, float speed) { Call<void>(0xf8a42e3ceb51e0a3, vehicle, speed); }
	void SET_VEHICLE_FORWARD_SPEED_XY_f(Vehicle vehicle, float speed) { FastCall<void>(0xf8a42e3ceb51e0a3, vehicle, speed); }
	void BRING_VEHICLE_TO_HALT(Vehicle vehicle, float distance, int duration, BOOL p3) { Call<void>(0x534bd1ef4eec5485, vehicle, distance, duration, p3); }
	void BRING_VEHICLE_TO_HALT_f(Vehicle vehicle, float distance, int duration, BOOL p3) { FastCall<void>(0x534bd1ef4eec5485, vehicle, distance, duration, p3); }
	void SET_VEHICLE_STEER_FOR_BUILDINGS(Vehicle vehicle, Any p1) { Call<void>(0xc6843785f62d51cb, vehicle, p1); }
	void SET_VEHICLE_STEER_FOR_BUILDINGS_f(Vehicle vehicle, Any p1) { FastCall<void>(0xc6843785f62d51cb, vehicle, p1); }
	void SET_VEHICLE_CAUSES_SWERVING(Vehicle vehicle, BOOL toggle) { Call<void>(0x1231a3a6d539882, vehicle, toggle); }
	void SET_VEHICLE_CAUSES_SWERVING_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1231a3a6d539882, vehicle, toggle); }
	void SET_IGNORE_PLANES_SMALL_PITCH_CHANGE(Any p0, Any p1) { Call<void>(0x8e0094c46e3541df, p0, p1); }
	void SET_IGNORE_PLANES_SMALL_PITCH_CHANGE_f(Any p0, Any p1) { FastCall<void>(0x8e0094c46e3541df, p0, p1); }
	void STOP_BRINGING_VEHICLE_TO_HALT(Vehicle vehicle) { Call<void>(0xac3897cdc5e7fdc0, vehicle); }
	void STOP_BRINGING_VEHICLE_TO_HALT_f(Vehicle vehicle) { FastCall<void>(0xac3897cdc5e7fdc0, vehicle); }
	BOOL IS_VEHICLE_BEING_BROUGHT_TO_HALT(Vehicle vehicle) { return Call<BOOL>(0x4a4da076b386f5fb, vehicle); }
	BOOL IS_VEHICLE_BEING_BROUGHT_TO_HALT_f(Vehicle vehicle) { return FastCall<BOOL>(0x4a4da076b386f5fb, vehicle); }
	void LOWER_FORKLIFT_FORKS(Vehicle forklift) { Call<void>(0x918cacd909a860fd, forklift); }
	void LOWER_FORKLIFT_FORKS_f(Vehicle forklift) { FastCall<void>(0x918cacd909a860fd, forklift); }
	void SET_FORKLIFT_FORK_HEIGHT(Vehicle vehicle, float height) { Call<void>(0xd67e8e13889804af, vehicle, height); }
	void SET_FORKLIFT_FORK_HEIGHT_f(Vehicle vehicle, float height) { FastCall<void>(0xd67e8e13889804af, vehicle, height); }
	BOOL IS_ENTITY_ATTACHED_TO_HANDLER_FRAME(Vehicle vehicle, Entity entity) { return Call<BOOL>(0x4b579961cb1b1d88, vehicle, entity); }
	BOOL IS_ENTITY_ATTACHED_TO_HANDLER_FRAME_f(Vehicle vehicle, Entity entity) { return FastCall<BOOL>(0x4b579961cb1b1d88, vehicle, entity); }
	BOOL IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME(Vehicle vehicle) { return Call<BOOL>(0x963bdcb6ea798b1b, vehicle); }
	BOOL IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME_f(Vehicle vehicle) { return FastCall<BOOL>(0x963bdcb6ea798b1b, vehicle); }
	Vehicle FIND_HANDLER_VEHICLE_CONTAINER_IS_ATTACHED_TO(Entity entity) { return Call<Vehicle>(0xf386b35f523a430d, entity); }
	Vehicle FIND_HANDLER_VEHICLE_CONTAINER_IS_ATTACHED_TO_f(Entity entity) { return FastCall<Vehicle>(0xf386b35f523a430d, entity); }
	BOOL IS_HANDLER_FRAME_LINED_UP_WITH_CONTAINER(Vehicle vehicle, Entity entity) { return Call<BOOL>(0x253baa48ad5cec01, vehicle, entity); }
	BOOL IS_HANDLER_FRAME_LINED_UP_WITH_CONTAINER_f(Vehicle vehicle, Entity entity) { return FastCall<BOOL>(0x253baa48ad5cec01, vehicle, entity); }
	void ATTACH_CONTAINER_TO_HANDLER_FRAME_WHEN_LINED_UP(Vehicle vehicle, Entity entity) { Call<void>(0xaaf85f451ff3425c, vehicle, entity); }
	void ATTACH_CONTAINER_TO_HANDLER_FRAME_WHEN_LINED_UP_f(Vehicle vehicle, Entity entity) { FastCall<void>(0xaaf85f451ff3425c, vehicle, entity); }
	void DETACH_CONTAINER_FROM_HANDLER_FRAME(Vehicle vehicle) { Call<void>(0xe88c60624a4d71ed, vehicle); }
	void DETACH_CONTAINER_FROM_HANDLER_FRAME_f(Vehicle vehicle) { FastCall<void>(0xe88c60624a4d71ed, vehicle); }
	void SET_VEHICLE_DISABLE_HEIGHT_MAP_AVOIDANCE(Vehicle vehicle, BOOL p1) { Call<void>(0x4465ac4241e60b10, vehicle, p1); }
	void SET_VEHICLE_DISABLE_HEIGHT_MAP_AVOIDANCE_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x4465ac4241e60b10, vehicle, p1); }
	void SET_BOAT_DISABLE_AVOIDANCE(Vehicle vehicle, BOOL p1) { Call<void>(0xd59d19eb6c4ad6cb, vehicle, p1); }
	void SET_BOAT_DISABLE_AVOIDANCE_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xd59d19eb6c4ad6cb, vehicle, p1); }
	BOOL IS_HELI_LANDING_AREA_BLOCKED(Vehicle vehicle) { return Call<BOOL>(0x986988f41b3aaa72, vehicle); }
	BOOL IS_HELI_LANDING_AREA_BLOCKED_f(Vehicle vehicle) { return FastCall<BOOL>(0x986988f41b3aaa72, vehicle); }
	void SET_SHORT_SLOWDOWN_FOR_LANDING(Vehicle vehicle) { Call<void>(0x20d1551339151a65, vehicle); }
	void SET_SHORT_SLOWDOWN_FOR_LANDING_f(Vehicle vehicle) { FastCall<void>(0x20d1551339151a65, vehicle); }
	void SET_HELI_TURBULENCE_SCALAR(Vehicle vehicle, float p1) { Call<void>(0x736a7e4475602ef0, vehicle, p1); }
	void SET_HELI_TURBULENCE_SCALAR_f(Vehicle vehicle, float p1) { FastCall<void>(0x736a7e4475602ef0, vehicle, p1); }
	void SET_CAR_BOOT_OPEN(Vehicle vehicle) { Call<void>(0x4a128220297d0f6f, vehicle); }
	void SET_CAR_BOOT_OPEN_f(Vehicle vehicle) { FastCall<void>(0x4a128220297d0f6f, vehicle); }
	void SET_VEHICLE_TYRE_BURST(Vehicle vehicle, int index, BOOL onRim, float p3) { Call<void>(0x31da2d4d4ef6c7a9, vehicle, index, onRim, p3); }
	void SET_VEHICLE_TYRE_BURST_f(Vehicle vehicle, int index, BOOL onRim, float p3) { FastCall<void>(0x31da2d4d4ef6c7a9, vehicle, index, onRim, p3); }
	void SET_VEHICLE_DOORS_SHUT(Vehicle vehicle, BOOL closeInstantly) { Call<void>(0x31d8a4bba4de4f7e, vehicle, closeInstantly); }
	void SET_VEHICLE_DOORS_SHUT_f(Vehicle vehicle, BOOL closeInstantly) { FastCall<void>(0x31d8a4bba4de4f7e, vehicle, closeInstantly); }
	void SET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle, BOOL toggle) { Call<void>(0x34459387bc76581d, vehicle, toggle); }
	void SET_VEHICLE_TYRES_CAN_BURST_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x34459387bc76581d, vehicle, toggle); }
	BOOL GET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle) { return Call<BOOL>(0xf8810710ca98f11, vehicle); }
	BOOL GET_VEHICLE_TYRES_CAN_BURST_f(Vehicle vehicle) { return FastCall<BOOL>(0xf8810710ca98f11, vehicle); }
	void SET_VEHICLE_WHEELS_CAN_BREAK(Vehicle vehicle, BOOL enabled) { Call<void>(0xb2630aed1de9aeb9, vehicle, enabled); }
	void SET_VEHICLE_WHEELS_CAN_BREAK_f(Vehicle vehicle, BOOL enabled) { FastCall<void>(0xb2630aed1de9aeb9, vehicle, enabled); }
	void SET_VEHICLE_DOOR_OPEN(Vehicle vehicle, int doorId, BOOL loose, BOOL openInstantly) { Call<void>(0xf117812f5887ec0b, vehicle, doorId, loose, openInstantly); }
	void SET_VEHICLE_DOOR_OPEN_f(Vehicle vehicle, int doorId, BOOL loose, BOOL openInstantly) { FastCall<void>(0xf117812f5887ec0b, vehicle, doorId, loose, openInstantly); }
	void SET_VEHICLE_DOOR_AUTO_LOCK(Vehicle vehicle, int doorId, BOOL toggle) { Call<void>(0x973bebdfba89789a, vehicle, doorId, toggle); }
	void SET_VEHICLE_DOOR_AUTO_LOCK_f(Vehicle vehicle, int doorId, BOOL toggle) { FastCall<void>(0x973bebdfba89789a, vehicle, doorId, toggle); }
	void SET_FLEEING_VEHICLES_USE_SWITCHED_OFF_NODES(Any p0) { Call<void>(0x10ebfd5fc85b9265, p0); }
	void SET_FLEEING_VEHICLES_USE_SWITCHED_OFF_NODES_f(Any p0) { FastCall<void>(0x10ebfd5fc85b9265, p0); }
	void REMOVE_VEHICLE_WINDOW(Vehicle vehicle, int windowIndex) { Call<void>(0xc5cf0f7730f8d59e, vehicle, windowIndex); }
	void REMOVE_VEHICLE_WINDOW_f(Vehicle vehicle, int windowIndex) { FastCall<void>(0xc5cf0f7730f8d59e, vehicle, windowIndex); }
	void ROLL_DOWN_WINDOWS(Vehicle vehicle) { Call<void>(0xecabfe60e7649448, vehicle); }
	void ROLL_DOWN_WINDOWS_f(Vehicle vehicle) { FastCall<void>(0xecabfe60e7649448, vehicle); }
	void ROLL_DOWN_WINDOW(Vehicle vehicle, int windowIndex) { Call<void>(0x2068a51be66e996b, vehicle, windowIndex); }
	void ROLL_DOWN_WINDOW_f(Vehicle vehicle, int windowIndex) { FastCall<void>(0x2068a51be66e996b, vehicle, windowIndex); }
	void ROLL_UP_WINDOW(Vehicle vehicle, int windowIndex) { Call<void>(0x5e4fd24028268d2, vehicle, windowIndex); }
	void ROLL_UP_WINDOW_f(Vehicle vehicle, int windowIndex) { FastCall<void>(0x5e4fd24028268d2, vehicle, windowIndex); }
	void SMASH_VEHICLE_WINDOW(Vehicle vehicle, int windowIndex) { Call<void>(0x33397b31c5918d66, vehicle, windowIndex); }
	void SMASH_VEHICLE_WINDOW_f(Vehicle vehicle, int windowIndex) { FastCall<void>(0x33397b31c5918d66, vehicle, windowIndex); }
	void FIX_VEHICLE_WINDOW(Vehicle vehicle, int windowIndex) { Call<void>(0x99f40bf0992e420d, vehicle, windowIndex); }
	void FIX_VEHICLE_WINDOW_f(Vehicle vehicle, int windowIndex) { FastCall<void>(0x99f40bf0992e420d, vehicle, windowIndex); }
	void POP_OUT_VEHICLE_WINDSCREEN(Vehicle vehicle) { Call<void>(0xdf7588bc55e24c06, vehicle); }
	void POP_OUT_VEHICLE_WINDSCREEN_f(Vehicle vehicle) { FastCall<void>(0xdf7588bc55e24c06, vehicle); }
	void POP_OFF_VEHICLE_ROOF_WITH_IMPULSE(Vehicle vehicle, float x, float y, float z) { Call<void>(0x9fdb9e73a21eccf6, vehicle, x, y, z); }
	void POP_OFF_VEHICLE_ROOF_WITH_IMPULSE_f(Vehicle vehicle, float x, float y, float z) { FastCall<void>(0x9fdb9e73a21eccf6, vehicle, x, y, z); }
	void SET_VEHICLE_LIGHTS(Vehicle vehicle, int state) { Call<void>(0x468eea0eb8df604d, vehicle, state); }
	void SET_VEHICLE_LIGHTS_f(Vehicle vehicle, int state) { FastCall<void>(0x468eea0eb8df604d, vehicle, state); }
	void SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS(Vehicle vehicle, BOOL toggle) { Call<void>(0xd6ef50683bfdd62, vehicle, toggle); }
	void SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xd6ef50683bfdd62, vehicle, toggle); }
	void SET_VEHICLE_HEADLIGHT_SHADOWS(Vehicle vehicle, int p1) { Call<void>(0xaac61068efefceda, vehicle, p1); }
	void SET_VEHICLE_HEADLIGHT_SHADOWS_f(Vehicle vehicle, int p1) { FastCall<void>(0xaac61068efefceda, vehicle, p1); }
	void SET_VEHICLE_ALARM(Vehicle vehicle, BOOL state) { Call<void>(0x1b0cde42897dfe01, vehicle, state); }
	void SET_VEHICLE_ALARM_f(Vehicle vehicle, BOOL state) { FastCall<void>(0x1b0cde42897dfe01, vehicle, state); }
	void START_VEHICLE_ALARM(Vehicle vehicle) { Call<void>(0xee8cace880108a01, vehicle); }
	void START_VEHICLE_ALARM_f(Vehicle vehicle) { FastCall<void>(0xee8cace880108a01, vehicle); }
	BOOL IS_VEHICLE_ALARM_ACTIVATED(Vehicle vehicle) { return Call<BOOL>(0x1330e19356f195db, vehicle); }
	BOOL IS_VEHICLE_ALARM_ACTIVATED_f(Vehicle vehicle) { return FastCall<BOOL>(0x1330e19356f195db, vehicle); }
	void SET_VEHICLE_INTERIORLIGHT(Vehicle vehicle, BOOL toggle) { Call<void>(0xe064ec68c7755116, vehicle, toggle); }
	void SET_VEHICLE_INTERIORLIGHT_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xe064ec68c7755116, vehicle, toggle); }
	void SET_VEHICLE_FORCE_INTERIORLIGHT(Vehicle vehicle, BOOL toggle) { Call<void>(0x1c0a28883efc5aa2, vehicle, toggle); }
	void SET_VEHICLE_FORCE_INTERIORLIGHT_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1c0a28883efc5aa2, vehicle, toggle); }
	void SET_VEHICLE_LIGHT_MULTIPLIER(Vehicle vehicle, float multiplier) { Call<void>(0xeb5de46c5cfaeeda, vehicle, multiplier); }
	void SET_VEHICLE_LIGHT_MULTIPLIER_f(Vehicle vehicle, float multiplier) { FastCall<void>(0xeb5de46c5cfaeeda, vehicle, multiplier); }
	void ATTACH_VEHICLE_TO_TRAILER(Vehicle vehicle, Vehicle trailer, float radius) { Call<void>(0x80470a76fcd22e9c, vehicle, trailer, radius); }
	void ATTACH_VEHICLE_TO_TRAILER_f(Vehicle vehicle, Vehicle trailer, float radius) { FastCall<void>(0x80470a76fcd22e9c, vehicle, trailer, radius); }
	void ATTACH_VEHICLE_ON_TO_TRAILER(Vehicle vehicle, Vehicle trailer, float offsetX, float offsetY, float offsetZ, float coordsX, float coordsY, float coordsZ, float rotationX, float rotationY, float rotationZ, float disableCollisions) { Call<void>(0x9418d2a11e597b42, vehicle, trailer, offsetX, offsetY, offsetZ, coordsX, coordsY, coordsZ, rotationX, rotationY, rotationZ, disableCollisions); }
	void ATTACH_VEHICLE_ON_TO_TRAILER_f(Vehicle vehicle, Vehicle trailer, float offsetX, float offsetY, float offsetZ, float coordsX, float coordsY, float coordsZ, float rotationX, float rotationY, float rotationZ, float disableCollisions) { FastCall<void>(0x9418d2a11e597b42, vehicle, trailer, offsetX, offsetY, offsetZ, coordsX, coordsY, coordsZ, rotationX, rotationY, rotationZ, disableCollisions); }
	void STABILISE_ENTITY_ATTACHED_TO_HELI(Vehicle vehicle, Entity entity, float p2) { Call<void>(0xa1ca0ede42a8c1d6, vehicle, entity, p2); }
	void STABILISE_ENTITY_ATTACHED_TO_HELI_f(Vehicle vehicle, Entity entity, float p2) { FastCall<void>(0xa1ca0ede42a8c1d6, vehicle, entity, p2); }
	void DETACH_VEHICLE_FROM_TRAILER(Vehicle vehicle) { Call<void>(0x4f8a5eaae40148fd, vehicle); }
	void DETACH_VEHICLE_FROM_TRAILER_f(Vehicle vehicle) { FastCall<void>(0x4f8a5eaae40148fd, vehicle); }
	BOOL IS_VEHICLE_ATTACHED_TO_TRAILER(Vehicle vehicle) { return Call<BOOL>(0x2474c5d2ea8d4d82, vehicle); }
	BOOL IS_VEHICLE_ATTACHED_TO_TRAILER_f(Vehicle vehicle) { return FastCall<BOOL>(0x2474c5d2ea8d4d82, vehicle); }
	void SET_TRAILER_INVERSE_MASS_SCALE(Vehicle vehicle, float p1) { Call<void>(0x1bb843b8d1309d77, vehicle, p1); }
	void SET_TRAILER_INVERSE_MASS_SCALE_f(Vehicle vehicle, float p1) { FastCall<void>(0x1bb843b8d1309d77, vehicle, p1); }
	void SET_TRAILER_LEGS_RAISED(Vehicle vehicle) { Call<void>(0x1d9e7105804b3ea9, vehicle); }
	void SET_TRAILER_LEGS_RAISED_f(Vehicle vehicle) { FastCall<void>(0x1d9e7105804b3ea9, vehicle); }
	void SET_TRAILER_LEGS_LOWERED(Vehicle vehicle) { Call<void>(0x962fafa9645a28af, vehicle); }
	void SET_TRAILER_LEGS_LOWERED_f(Vehicle vehicle) { FastCall<void>(0x962fafa9645a28af, vehicle); }
	void SET_VEHICLE_TYRE_FIXED(Vehicle vehicle, int tyreIndex) { Call<void>(0x31da2d4d4f29c5fd, vehicle, tyreIndex); }
	void SET_VEHICLE_TYRE_FIXED_f(Vehicle vehicle, int tyreIndex) { FastCall<void>(0x31da2d4d4f29c5fd, vehicle, tyreIndex); }
	void SET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle, char* plateText) { Call<void>(0x21ae01ea19eb0f5c, vehicle, plateText); }
	void SET_VEHICLE_NUMBER_PLATE_TEXT_f(Vehicle vehicle, char* plateText) { FastCall<void>(0x21ae01ea19eb0f5c, vehicle, plateText); }
	const char* GET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle) { return Call<char*>(0x3644e9c02a2c5950, vehicle); }
	const char* GET_VEHICLE_NUMBER_PLATE_TEXT_f(Vehicle vehicle) { return FastCall<char*>(0x3644e9c02a2c5950, vehicle); }
	int GET_NUMBER_OF_VEHICLE_NUMBER_PLATES() { return Call<int>(0xca7d074f16c944a5); }
	int GET_NUMBER_OF_VEHICLE_NUMBER_PLATES_f() { return FastCall<int>(0xca7d074f16c944a5); }
	void SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle vehicle, int plateIndex) { Call<void>(0xed3678b8e426ae0f, vehicle, plateIndex); }
	void SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX_f(Vehicle vehicle, int plateIndex) { FastCall<void>(0xed3678b8e426ae0f, vehicle, plateIndex); }
	int GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle vehicle) { return Call<int>(0xb495898011fdb103, vehicle); }
	int GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX_f(Vehicle vehicle) { return FastCall<int>(0xb495898011fdb103, vehicle); }
	void SET_RANDOM_TRAINS(BOOL toggle) { Call<void>(0xedfb780d11360d2a, toggle); }
	void SET_RANDOM_TRAINS_f(BOOL toggle) { FastCall<void>(0xedfb780d11360d2a, toggle); }
	Vehicle CREATE_MISSION_TRAIN(int variation, float x, float y, float z, BOOL direction, Any p5, Any p6) { return Call<Vehicle>(0xe30c85ab87bfa752, variation, x, y, z, direction, p5, p6); }
	Vehicle CREATE_MISSION_TRAIN_f(int variation, float x, float y, float z, BOOL direction, Any p5, Any p6) { return FastCall<Vehicle>(0xe30c85ab87bfa752, variation, x, y, z, direction, p5, p6); }
	void SWITCH_TRAIN_TRACK(int trackId, BOOL state) { Call<void>(0xab63c945249f2389, trackId, state); }
	void SWITCH_TRAIN_TRACK_f(int trackId, BOOL state) { FastCall<void>(0xab63c945249f2389, trackId, state); }
	void SET_TRAIN_TRACK_SPAWN_FREQUENCY(int trackIndex, int frequency) { Call<void>(0xd4ca6eea1bc330b0, trackIndex, frequency); }
	void SET_TRAIN_TRACK_SPAWN_FREQUENCY_f(int trackIndex, int frequency) { FastCall<void>(0xd4ca6eea1bc330b0, trackIndex, frequency); }
	void ALLOW_TRAIN_TO_BE_REMOVED_BY_POPULATION(Any p0) { Call<void>(0x29adec2697973751, p0); }
	void ALLOW_TRAIN_TO_BE_REMOVED_BY_POPULATION_f(Any p0) { FastCall<void>(0x29adec2697973751, p0); }
	void DELETE_ALL_TRAINS() { Call<void>(0x96fee6e7551f2fd); }
	void DELETE_ALL_TRAINS_f() { FastCall<void>(0x96fee6e7551f2fd); }
	void SET_TRAIN_SPEED(Vehicle train, float speed) { Call<void>(0xe0d7b18144f5a293, train, speed); }
	void SET_TRAIN_SPEED_f(Vehicle train, float speed) { FastCall<void>(0xe0d7b18144f5a293, train, speed); }
	void SET_TRAIN_CRUISE_SPEED(Vehicle train, float speed) { Call<void>(0x8be720619587c451, train, speed); }
	void SET_TRAIN_CRUISE_SPEED_f(Vehicle train, float speed) { FastCall<void>(0x8be720619587c451, train, speed); }
	void SET_RANDOM_BOATS(BOOL toggle) { Call<void>(0x3939a908acfa7974, toggle); }
	void SET_RANDOM_BOATS_f(BOOL toggle) { FastCall<void>(0x3939a908acfa7974, toggle); }
	void SET_RANDOM_BOATS_MP(BOOL toggle) { Call<void>(0x5cfda899affd104e, toggle); }
	void SET_RANDOM_BOATS_MP_f(BOOL toggle) { FastCall<void>(0x5cfda899affd104e, toggle); }
	void SET_GARBAGE_TRUCKS(BOOL toggle) { Call<void>(0x435b655f3dc6dcfb, toggle); }
	void SET_GARBAGE_TRUCKS_f(BOOL toggle) { FastCall<void>(0x435b655f3dc6dcfb, toggle); }
	BOOL DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK(Vehicle vehicle) { return Call<BOOL>(0x5a330b10f7da6df4, vehicle); }
	BOOL DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK_f(Vehicle vehicle) { return FastCall<BOOL>(0x5a330b10f7da6df4, vehicle); }
	int GET_VEHICLE_RECORDING_ID(int recording, char* script) { return Call<int>(0xe39fd41d7413aa05, recording, script); }
	int GET_VEHICLE_RECORDING_ID_f(int recording, char* script) { return FastCall<int>(0xe39fd41d7413aa05, recording, script); }
	void REQUEST_VEHICLE_RECORDING(int recording, char* script) { Call<void>(0x72f39ff4474d8e8e, recording, script); }
	void REQUEST_VEHICLE_RECORDING_f(int recording, char* script) { FastCall<void>(0x72f39ff4474d8e8e, recording, script); }
	BOOL HAS_VEHICLE_RECORDING_BEEN_LOADED(int recording, char* script) { return Call<BOOL>(0x3b90efcceab70612, recording, script); }
	BOOL HAS_VEHICLE_RECORDING_BEEN_LOADED_f(int recording, char* script) { return FastCall<BOOL>(0x3b90efcceab70612, recording, script); }
	void REMOVE_VEHICLE_RECORDING(int recording, char* script) { Call<void>(0x3ad8bb6f354b8163, recording, script); }
	void REMOVE_VEHICLE_RECORDING_f(int recording, char* script) { FastCall<void>(0x3ad8bb6f354b8163, recording, script); }
	Vector3* GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME(int id, float time) { Call<Vector3*>(0x8af5c3fbb14527f1, id, time); return GetVector(); }
	Vector3* GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME(int recording, float time, char* script) { Call<Vector3*>(0x80d114acffa3fd1d, recording, time, script); return GetVector(); }
	Vector3* GET_ROTATION_OF_VEHICLE_RECORDING_ID_AT_TIME(int id, float time) { Call<Vector3*>(0xa1fa0a2123950a46, id, time); return GetVector(); }
	Vector3* GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME(int recording, float time, char* script) { Call<Vector3*>(0x57805b3ca4ce42e8, recording, time, script); return GetVector(); }
	float GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID(int id) { return ToFloat(Call<_float>(0x11663e61e29e8b3d, id)); }
	float GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID_f(int id) { return ToFloat(FastCall<_float>(0x11663e61e29e8b3d, id)); }
	float GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(int recording, char* script) { return ToFloat(Call<_float>(0xaf53df80ab54895d, recording, script)); }
	float GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_f(int recording, char* script) { return ToFloat(FastCall<_float>(0xaf53df80ab54895d, recording, script)); }
	float GET_POSITION_IN_RECORDING(Vehicle vehicle) { return ToFloat(Call<_float>(0xae968bc1f1725a44, vehicle)); }
	float GET_POSITION_IN_RECORDING_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xae968bc1f1725a44, vehicle)); }
	float GET_TIME_POSITION_IN_RECORDING(Vehicle vehicle) { return ToFloat(Call<_float>(0x1618fd6db85e8944, vehicle)); }
	float GET_TIME_POSITION_IN_RECORDING_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0x1618fd6db85e8944, vehicle)); }
	void START_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle, int recording, char* script, BOOL p3) { Call<void>(0x58ef80d77bdcd664, vehicle, recording, script, p3); }
	void START_PLAYBACK_RECORDED_VEHICLE_f(Vehicle vehicle, int recording, char* script, BOOL p3) { FastCall<void>(0x58ef80d77bdcd664, vehicle, recording, script, p3); }
	void START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(Vehicle vehicle, int recording, char* script, int flags, int time, int drivingStyle) { Call<void>(0xc2be90386e5b2e69, vehicle, recording, script, flags, time, drivingStyle); }
	void START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS_f(Vehicle vehicle, int recording, char* script, int flags, int time, int drivingStyle) { FastCall<void>(0xc2be90386e5b2e69, vehicle, recording, script, flags, time, drivingStyle); }
	void FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE(Vehicle vehicle, BOOL p1) { Call<void>(0xb1352cf08449099b, vehicle, p1); }
	void FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xb1352cf08449099b, vehicle, p1); }
	void STOP_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) { Call<void>(0x5d10de2f0cedda24, vehicle); }
	void STOP_PLAYBACK_RECORDED_VEHICLE_f(Vehicle vehicle) { FastCall<void>(0x5d10de2f0cedda24, vehicle); }
	void PAUSE_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) { Call<void>(0x2295dd5ffa0a6f8, vehicle); }
	void PAUSE_PLAYBACK_RECORDED_VEHICLE_f(Vehicle vehicle) { FastCall<void>(0x2295dd5ffa0a6f8, vehicle); }
	void UNPAUSE_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) { Call<void>(0x4c3cb9aa46f5893f, vehicle); }
	void UNPAUSE_PLAYBACK_RECORDED_VEHICLE_f(Vehicle vehicle) { FastCall<void>(0x4c3cb9aa46f5893f, vehicle); }
	BOOL IS_PLAYBACK_GOING_ON_FOR_VEHICLE(Vehicle vehicle) { return Call<BOOL>(0x71a7933ee415f76a, vehicle); }
	BOOL IS_PLAYBACK_GOING_ON_FOR_VEHICLE_f(Vehicle vehicle) { return FastCall<BOOL>(0x71a7933ee415f76a, vehicle); }
	BOOL IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE(Vehicle vehicle) { return Call<BOOL>(0x9dbed124cc988a88, vehicle); }
	BOOL IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE_f(Vehicle vehicle) { return FastCall<BOOL>(0x9dbed124cc988a88, vehicle); }
	int GET_CURRENT_PLAYBACK_FOR_VEHICLE(Vehicle vehicle) { return Call<int>(0xa335d58de4190ce1, vehicle); }
	int GET_CURRENT_PLAYBACK_FOR_VEHICLE_f(Vehicle vehicle) { return FastCall<int>(0xa335d58de4190ce1, vehicle); }
	void SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) { Call<void>(0x9316f6b321fc7734, vehicle); }
	void SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE_f(Vehicle vehicle) { FastCall<void>(0x9316f6b321fc7734, vehicle); }
	void SET_PLAYBACK_SPEED(Vehicle vehicle, float speed) { Call<void>(0x9f9e926be7b552a0, vehicle, speed); }
	void SET_PLAYBACK_SPEED_f(Vehicle vehicle, float speed) { FastCall<void>(0x9f9e926be7b552a0, vehicle, speed); }
	void START_PLAYBACK_RECORDED_VEHICLE_USING_AI(Vehicle vehicle, int recording, char* script, float speed, int drivingStyle) { Call<void>(0xa2f7684417b1095e, vehicle, recording, script, speed, drivingStyle); }
	void START_PLAYBACK_RECORDED_VEHICLE_USING_AI_f(Vehicle vehicle, int recording, char* script, float speed, int drivingStyle) { FastCall<void>(0xa2f7684417b1095e, vehicle, recording, script, speed, drivingStyle); }
	void SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle, float time) { Call<void>(0xf46e31cb6573a2f9, vehicle, time); }
	void SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE_f(Vehicle vehicle, float time) { FastCall<void>(0xf46e31cb6573a2f9, vehicle, time); }
	void SET_PLAYBACK_TO_USE_AI(Vehicle vehicle, int drivingStyle) { Call<void>(0xaff626e13991fe3d, vehicle, drivingStyle); }
	void SET_PLAYBACK_TO_USE_AI_f(Vehicle vehicle, int drivingStyle) { FastCall<void>(0xaff626e13991fe3d, vehicle, drivingStyle); }
	void SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER(Vehicle vehicle, int time, int drivingStyle, BOOL p3) { Call<void>(0x759fa31541a8c571, vehicle, time, drivingStyle, p3); }
	void SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER_f(Vehicle vehicle, int time, int drivingStyle, BOOL p3) { FastCall<void>(0x759fa31541a8c571, vehicle, time, drivingStyle, p3); }
	void SET_ADDITIONAL_ROTATION_FOR_RECORDED_VEHICLE_PLAYBACK(Vehicle vehicle, float x, float y, float z, Any p4) { Call<void>(0x591632991c3260e1, vehicle, x, y, z, p4); }
	void SET_ADDITIONAL_ROTATION_FOR_RECORDED_VEHICLE_PLAYBACK_f(Vehicle vehicle, float x, float y, float z, Any p4) { FastCall<void>(0x591632991c3260e1, vehicle, x, y, z, p4); }
	void SET_POSITION_OFFSET_FOR_RECORDED_VEHICLE_PLAYBACK(Vehicle vehicle, float x, float y, float z) { Call<void>(0xe79762f33a911af4, vehicle, x, y, z); }
	void SET_POSITION_OFFSET_FOR_RECORDED_VEHICLE_PLAYBACK_f(Vehicle vehicle, float x, float y, float z) { FastCall<void>(0xe79762f33a911af4, vehicle, x, y, z); }
	void SET_GLOBAL_POSITION_OFFSET_FOR_RECORDED_VEHICLE_PLAYBACK(Vehicle vehicle, float x, float y, float z) { Call<void>(0xd2afe9eb89515472, vehicle, x, y, z); }
	void SET_GLOBAL_POSITION_OFFSET_FOR_RECORDED_VEHICLE_PLAYBACK_f(Vehicle vehicle, float x, float y, float z) { FastCall<void>(0xd2afe9eb89515472, vehicle, x, y, z); }
	void SET_SHOULD_LERP_FROM_AI_TO_FULL_RECORDING(Vehicle vehicle, BOOL p1) { Call<void>(0xaca5ce4a4eea348a, vehicle, p1); }
	void SET_SHOULD_LERP_FROM_AI_TO_FULL_RECORDING_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xaca5ce4a4eea348a, vehicle, p1); }
	void EXPLODE_VEHICLE_IN_CUTSCENE(Vehicle vehicle, BOOL p1) { Call<void>(0x24359d63390db033, vehicle, p1); }
	void EXPLODE_VEHICLE_IN_CUTSCENE_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x24359d63390db033, vehicle, p1); }
	void ADD_VEHICLE_STUCK_CHECK_WITH_WARP(Any p0, float p1, Any p2, BOOL p3, BOOL p4, BOOL p5, Any p6) { Call<void>(0xbba1e60c5705ded6, p0, p1, p2, p3, p4, p5, p6); }
	void ADD_VEHICLE_STUCK_CHECK_WITH_WARP_f(Any p0, float p1, Any p2, BOOL p3, BOOL p4, BOOL p5, Any p6) { FastCall<void>(0xbba1e60c5705ded6, p0, p1, p2, p3, p4, p5, p6); }
	void SET_VEHICLE_MODEL_IS_SUPPRESSED(Hash model, BOOL suppressed) { Call<void>(0x92ef7be35e4c7563, model, suppressed); }
	void SET_VEHICLE_MODEL_IS_SUPPRESSED_f(Hash model, BOOL suppressed) { FastCall<void>(0x92ef7be35e4c7563, model, suppressed); }
	Vehicle GET_RANDOM_VEHICLE_IN_SPHERE(float x, float y, float z, float radius, Hash modelHash, int flags) { return Call<Vehicle>(0xc7489afe46d70321, x, y, z, radius, modelHash, flags); }
	Vehicle GET_RANDOM_VEHICLE_IN_SPHERE_f(float x, float y, float z, float radius, Hash modelHash, int flags) { return FastCall<Vehicle>(0xc7489afe46d70321, x, y, z, radius, modelHash, flags); }
	Vehicle GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6) { return Call<Vehicle>(0x93d0a5f85442207, p0, p1, p2, p3, p4, p5, p6); }
	Vehicle GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE_f(float p0, float p1, float p2, float p3, int p4, int p5, int p6) { return FastCall<Vehicle>(0x93d0a5f85442207, p0, p1, p2, p3, p4, p5, p6); }
	Vehicle GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6) { return Call<Vehicle>(0x3fca60ebb760439d, p0, p1, p2, p3, p4, p5, p6); }
	Vehicle GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE_f(float p0, float p1, float p2, float p3, int p4, int p5, int p6) { return FastCall<Vehicle>(0x3fca60ebb760439d, p0, p1, p2, p3, p4, p5, p6); }
	Vehicle GET_CLOSEST_VEHICLE(float x, float y, float z, float radius, Hash modelHash, int flags) { return Call<Vehicle>(0x626409f1a5648ffd, x, y, z, radius, modelHash, flags); }
	Vehicle GET_CLOSEST_VEHICLE_f(float x, float y, float z, float radius, Hash modelHash, int flags) { return FastCall<Vehicle>(0x626409f1a5648ffd, x, y, z, radius, modelHash, flags); }
	Vehicle GET_TRAIN_CARRIAGE(Vehicle train, int trailerNumber) { return Call<Vehicle>(0xd0e00b992d5484b4, train, trailerNumber); }
	Vehicle GET_TRAIN_CARRIAGE_f(Vehicle train, int trailerNumber) { return FastCall<Vehicle>(0xd0e00b992d5484b4, train, trailerNumber); }
	BOOL IS_MISSION_TRAIN(Vehicle train) { return Call<BOOL>(0xef9c89a0ca193300, train); }
	BOOL IS_MISSION_TRAIN_f(Vehicle train) { return FastCall<BOOL>(0xef9c89a0ca193300, train); }
	void DELETE_MISSION_TRAIN(Vehicle* train) { Call<void>(0xbac4080ba05f2dc1, train); }
	void DELETE_MISSION_TRAIN_f(Vehicle* train) { FastCall<void>(0xbac4080ba05f2dc1, train); }
	void SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED(Vehicle* train, BOOL p1) { Call<void>(0x4b34685203b13c53, train, p1); }
	void SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED_f(Vehicle* train, BOOL p1) { FastCall<void>(0x4b34685203b13c53, train, p1); }
	void SET_MISSION_TRAIN_COORDS(Vehicle train, float x, float y, float z) { Call<void>(0xfb0618ec5e3b2a25, train, x, y, z); }
	void SET_MISSION_TRAIN_COORDS_f(Vehicle train, float x, float y, float z) { FastCall<void>(0xfb0618ec5e3b2a25, train, x, y, z); }
	BOOL IS_THIS_MODEL_A_BOAT(Hash model) { return Call<BOOL>(0xaded7edcfce728a0, model); }
	BOOL IS_THIS_MODEL_A_BOAT_f(Hash model) { return FastCall<BOOL>(0xaded7edcfce728a0, model); }
	BOOL IS_THIS_MODEL_A_JETSKI(Hash model) { return Call<BOOL>(0xe8893b916ce20338, model); }
	BOOL IS_THIS_MODEL_A_JETSKI_f(Hash model) { return FastCall<BOOL>(0xe8893b916ce20338, model); }
	BOOL IS_THIS_MODEL_A_PLANE(Hash model) { return Call<BOOL>(0xfc25cc2a0c1d6dc, model); }
	BOOL IS_THIS_MODEL_A_PLANE_f(Hash model) { return FastCall<BOOL>(0xfc25cc2a0c1d6dc, model); }
	BOOL IS_THIS_MODEL_A_HELI(Hash model) { return Call<BOOL>(0xaded7edcfce9be9a, model); }
	BOOL IS_THIS_MODEL_A_HELI_f(Hash model) { return FastCall<BOOL>(0xaded7edcfce9be9a, model); }
	BOOL IS_THIS_MODEL_A_CAR(Hash model) { return Call<BOOL>(0xfd5a3de618aca054, model); }
	BOOL IS_THIS_MODEL_A_CAR_f(Hash model) { return FastCall<BOOL>(0xfd5a3de618aca054, model); }
	BOOL IS_THIS_MODEL_A_TRAIN(Hash model) { return Call<BOOL>(0xfc25cc2a0fcee88, model); }
	BOOL IS_THIS_MODEL_A_TRAIN_f(Hash model) { return FastCall<BOOL>(0xfc25cc2a0fcee88, model); }
	BOOL IS_THIS_MODEL_A_BIKE(Hash model) { return Call<BOOL>(0xaded7edcfce71341, model); }
	BOOL IS_THIS_MODEL_A_BIKE_f(Hash model) { return FastCall<BOOL>(0xaded7edcfce71341, model); }
	BOOL IS_THIS_MODEL_A_BICYCLE(Hash model) { return Call<BOOL>(0x289e369a8e12f97f, model); }
	BOOL IS_THIS_MODEL_A_BICYCLE_f(Hash model) { return FastCall<BOOL>(0x289e369a8e12f97f, model); }
	BOOL IS_THIS_MODEL_A_QUADBIKE(Hash model) { return Call<BOOL>(0xeb289d19c0b68108, model); }
	BOOL IS_THIS_MODEL_A_QUADBIKE_f(Hash model) { return FastCall<BOOL>(0xeb289d19c0b68108, model); }
	BOOL IS_THIS_MODEL_AN_AMPHIBIOUS_CAR(Hash model) { return Call<BOOL>(0x633787e580f32c66, model); }
	BOOL IS_THIS_MODEL_AN_AMPHIBIOUS_CAR_f(Hash model) { return FastCall<BOOL>(0x633787e580f32c66, model); }
	BOOL IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE(Hash model) { return Call<BOOL>(0xed06aadd995eb036, model); }
	BOOL IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE_f(Hash model) { return FastCall<BOOL>(0xed06aadd995eb036, model); }
	void SET_HELI_BLADES_FULL_SPEED(Vehicle vehicle) { Call<void>(0x7f300cde5500b3, vehicle); }
	void SET_HELI_BLADES_FULL_SPEED_f(Vehicle vehicle) { FastCall<void>(0x7f300cde5500b3, vehicle); }
	void SET_HELI_BLADES_SPEED(Vehicle vehicle, float speed) { Call<void>(0xa64f805e6c08b06b, vehicle, speed); }
	void SET_HELI_BLADES_SPEED_f(Vehicle vehicle, float speed) { FastCall<void>(0xa64f805e6c08b06b, vehicle, speed); }
	void FORCE_SUB_THROTTLE_FOR_TIME(Vehicle vehicle, float p1, float p2) { Call<void>(0x13b5addcf6475745, vehicle, p1, p2); }
	void FORCE_SUB_THROTTLE_FOR_TIME_f(Vehicle vehicle, float p1, float p2) { FastCall<void>(0x13b5addcf6475745, vehicle, p1, p2); }
	void SET_VEHICLE_CAN_BE_TARGETTED(Vehicle vehicle, BOOL state) { Call<void>(0x612cd50c45885a25, vehicle, state); }
	void SET_VEHICLE_CAN_BE_TARGETTED_f(Vehicle vehicle, BOOL state) { FastCall<void>(0x612cd50c45885a25, vehicle, state); }
	void SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER(Vehicle vehicle, BOOL p1) { Call<void>(0xee673496d73df191, vehicle, p1); }
	void SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xee673496d73df191, vehicle, p1); }
	void SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(Vehicle vehicle, BOOL state) { Call<void>(0x9c8a0ccbdab0a6ff, vehicle, state); }
	void SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED_f(Vehicle vehicle, BOOL state) { FastCall<void>(0x9c8a0ccbdab0a6ff, vehicle, state); }
	void SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS(Vehicle vehicle, BOOL toggle) { Call<void>(0x53301fb1aec19711, vehicle, toggle); }
	void SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x53301fb1aec19711, vehicle, toggle); }
	void SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER(Vehicle vehicle, BOOL p1) { Call<void>(0xf99daebdfd2c8cd9, vehicle, p1); }
	void SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xf99daebdfd2c8cd9, vehicle, p1); }
	void SET_VEHICLE_CAN_EJECT_PASSENGERS_IF_LOCKED(Any p0, Any p1) { Call<void>(0xa73a1ed250825db3, p0, p1); }
	void SET_VEHICLE_CAN_EJECT_PASSENGERS_IF_LOCKED_f(Any p0, Any p1) { FastCall<void>(0xa73a1ed250825db3, p0, p1); }
	float GET_VEHICLE_DIRT_LEVEL(Vehicle vehicle) { return ToFloat(Call<_float>(0xaa7457ad91d73168, vehicle)); }
	float GET_VEHICLE_DIRT_LEVEL_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xaa7457ad91d73168, vehicle)); }
	void SET_VEHICLE_DIRT_LEVEL(Vehicle vehicle, float dirtLevel) { Call<void>(0x31d8a027e01bf0dc, vehicle, dirtLevel); }
	void SET_VEHICLE_DIRT_LEVEL_f(Vehicle vehicle, float dirtLevel) { FastCall<void>(0x31d8a027e01bf0dc, vehicle, dirtLevel); }
	BOOL GET_DOES_VEHICLE_HAVE_DAMAGE_DECALS(Vehicle vehicle) { return Call<BOOL>(0xdd5158adf9c17b2f, vehicle); }
	BOOL GET_DOES_VEHICLE_HAVE_DAMAGE_DECALS_f(Vehicle vehicle) { return FastCall<BOOL>(0xdd5158adf9c17b2f, vehicle); }
	BOOL IS_VEHICLE_DOOR_FULLY_OPEN(Vehicle vehicle, int doorId) { return Call<BOOL>(0xbf20a4d4631423a8, vehicle, doorId); }
	BOOL IS_VEHICLE_DOOR_FULLY_OPEN_f(Vehicle vehicle, int doorId) { return FastCall<BOOL>(0xbf20a4d4631423a8, vehicle, doorId); }
	void SET_VEHICLE_ENGINE_ON(Vehicle vehicle, BOOL value, BOOL instantly, BOOL disableAutoStart) { Call<void>(0xf11781edcd69d4cc, vehicle, value, instantly, disableAutoStart); }
	void SET_VEHICLE_ENGINE_ON_f(Vehicle vehicle, BOOL value, BOOL instantly, BOOL disableAutoStart) { FastCall<void>(0xf11781edcd69d4cc, vehicle, value, instantly, disableAutoStart); }
	void SET_VEHICLE_UNDRIVEABLE(Vehicle vehicle, BOOL toggle) { Call<void>(0x96d52be65be9b1b, vehicle, toggle); }
	void SET_VEHICLE_UNDRIVEABLE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x96d52be65be9b1b, vehicle, toggle); }
	void SET_VEHICLE_PROVIDES_COVER(Vehicle vehicle, BOOL toggle) { Call<void>(0x9a6723cd9553c53a, vehicle, toggle); }
	void SET_VEHICLE_PROVIDES_COVER_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x9a6723cd9553c53a, vehicle, toggle); }
	void SET_VEHICLE_DOOR_CONTROL(Vehicle vehicle, int doorId, int speed, float angle) { Call<void>(0x1e4264acf568bfdc, vehicle, doorId, speed, angle); }
	void SET_VEHICLE_DOOR_CONTROL_f(Vehicle vehicle, int doorId, int speed, float angle) { FastCall<void>(0x1e4264acf568bfdc, vehicle, doorId, speed, angle); }
	void SET_VEHICLE_DOOR_LATCHED(Vehicle vehicle, int doorId, BOOL p2, BOOL p3, BOOL p4) { Call<void>(0x1e4264aeb9e9a862, vehicle, doorId, p2, p3, p4); }
	void SET_VEHICLE_DOOR_LATCHED_f(Vehicle vehicle, int doorId, BOOL p2, BOOL p3, BOOL p4) { FastCall<void>(0x1e4264aeb9e9a862, vehicle, doorId, p2, p3, p4); }
	float GET_VEHICLE_DOOR_ANGLE_RATIO(Vehicle vehicle, int doorId) { return ToFloat(Call<_float>(0x44fce09a4855b80a, vehicle, doorId)); }
	float GET_VEHICLE_DOOR_ANGLE_RATIO_f(Vehicle vehicle, int doorId) { return ToFloat(FastCall<_float>(0x44fce09a4855b80a, vehicle, doorId)); }
	Ped GET_PED_USING_VEHICLE_DOOR(Vehicle vehicle, int doord) { return Call<Ped>(0xfd6581adfe680d75, vehicle, doord); }
	Ped GET_PED_USING_VEHICLE_DOOR_f(Vehicle vehicle, int doord) { return FastCall<Ped>(0xfd6581adfe680d75, vehicle, doord); }
	void SET_VEHICLE_DOOR_SHUT(Vehicle vehicle, int doorId, BOOL closeInstantly) { Call<void>(0xf117812f5889a175, vehicle, doorId, closeInstantly); }
	void SET_VEHICLE_DOOR_SHUT_f(Vehicle vehicle, int doorId, BOOL closeInstantly) { FastCall<void>(0xf117812f5889a175, vehicle, doorId, closeInstantly); }
	void SET_VEHICLE_DOOR_BROKEN(Vehicle vehicle, int doorId, BOOL deleteDoor) { Call<void>(0x93bf2bb402ecd56, vehicle, doorId, deleteDoor); }
	void SET_VEHICLE_DOOR_BROKEN_f(Vehicle vehicle, int doorId, BOOL deleteDoor) { FastCall<void>(0x93bf2bb402ecd56, vehicle, doorId, deleteDoor); }
	void SET_VEHICLE_CAN_BREAK(Vehicle vehicle, BOOL toggle) { Call<void>(0xf117800ef5a45760, vehicle, toggle); }
	void SET_VEHICLE_CAN_BREAK_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xf117800ef5a45760, vehicle, toggle); }
	BOOL DOES_VEHICLE_HAVE_ROOF(Vehicle vehicle) { return Call<BOOL>(0x18ef286a12de8792, vehicle); }
	BOOL DOES_VEHICLE_HAVE_ROOF_f(Vehicle vehicle) { return FastCall<BOOL>(0x18ef286a12de8792, vehicle); }
	void SET_VEHICLE_REMOVE_AGGRESSIVE_CARJACK_MISSION(Any p0) { Call<void>(0x74d901884426ecf0, p0); }
	void SET_VEHICLE_REMOVE_AGGRESSIVE_CARJACK_MISSION_f(Any p0) { FastCall<void>(0x74d901884426ecf0, p0); }
	void SET_VEHICLE_AVOID_PLAYER_VEHICLE_RIOT_VAN_MISSION(Any p0) { Call<void>(0xb086f91d9a3b1424, p0); }
	void SET_VEHICLE_AVOID_PLAYER_VEHICLE_RIOT_VAN_MISSION_f(Any p0) { FastCall<void>(0xb086f91d9a3b1424, p0); }
	void SET_CARJACK_MISSION_REMOVAL_PARAMETERS(Any p0, Any p1) { Call<void>(0xb4002e6e36706d39, p0, p1); }
	void SET_CARJACK_MISSION_REMOVAL_PARAMETERS_f(Any p0, Any p1) { FastCall<void>(0xb4002e6e36706d39, p0, p1); }
	BOOL IS_BIG_VEHICLE(Vehicle vehicle) { return Call<BOOL>(0x4e7147658e46db18, vehicle); }
	BOOL IS_BIG_VEHICLE_f(Vehicle vehicle) { return FastCall<BOOL>(0x4e7147658e46db18, vehicle); }
	int GET_NUMBER_OF_VEHICLE_COLOURS(Vehicle vehicle) { return Call<int>(0x9ec18805df513c59, vehicle); }
	int GET_NUMBER_OF_VEHICLE_COLOURS_f(Vehicle vehicle) { return FastCall<int>(0x9ec18805df513c59, vehicle); }
	void SET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle, int colorCombination) { Call<void>(0x72a178a441d6c2ec, vehicle, colorCombination); }
	void SET_VEHICLE_COLOUR_COMBINATION_f(Vehicle vehicle, int colorCombination) { FastCall<void>(0x72a178a441d6c2ec, vehicle, colorCombination); }
	int GET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle) { return Call<int>(0xf0e78b9039beb778, vehicle); }
	int GET_VEHICLE_COLOUR_COMBINATION_f(Vehicle vehicle) { return FastCall<int>(0xf0e78b9039beb778, vehicle); }
	void SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(Vehicle vehicle, int colorIndex) { Call<void>(0x994f6e4662e0b0de, vehicle, colorIndex); }
	void SET_VEHICLE_XENON_LIGHT_COLOR_INDEX_f(Vehicle vehicle, int colorIndex) { FastCall<void>(0x994f6e4662e0b0de, vehicle, colorIndex); }
	int GET_VEHICLE_XENON_LIGHT_COLOR_INDEX(Vehicle vehicle) { return Call<int>(0x60ae7f0d90b7b3d2, vehicle); }
	int GET_VEHICLE_XENON_LIGHT_COLOR_INDEX_f(Vehicle vehicle) { return FastCall<int>(0x60ae7f0d90b7b3d2, vehicle); }
	void SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(Vehicle vehicle, BOOL toggle) { Call<void>(0x5aeb6852b0165427, vehicle, toggle); }
	void SET_VEHICLE_IS_CONSIDERED_BY_PLAYER_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x5aeb6852b0165427, vehicle, toggle); }
	void SET_VEHICLE_WILL_FORCE_OTHER_VEHICLES_TO_STOP(Vehicle vehicle, BOOL toggle) { Call<void>(0x3f93b98878071c4e, vehicle, toggle); }
	void SET_VEHICLE_WILL_FORCE_OTHER_VEHICLES_TO_STOP_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x3f93b98878071c4e, vehicle, toggle); }
	void SET_VEHICLE_ACT_AS_IF_HAS_SIREN_ON(Vehicle vehicle, BOOL p1) { Call<void>(0xf663be56c3504310, vehicle, p1); }
	void SET_VEHICLE_ACT_AS_IF_HAS_SIREN_ON_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xf663be56c3504310, vehicle, p1); }
	void SET_VEHICLE_USE_MORE_RESTRICTIVE_SPAWN_CHECKS(Vehicle vehicle, BOOL p1) { Call<void>(0xf56b110b7b777954, vehicle, p1); }
	void SET_VEHICLE_USE_MORE_RESTRICTIVE_SPAWN_CHECKS_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xf56b110b7b777954, vehicle, p1); }
	void SET_VEHICLE_MAY_BE_USED_BY_GOTO_POINT_ANY_MEANS(Vehicle vehicle, BOOL p1) { Call<void>(0xa3770e052ae1a1c8, vehicle, p1); }
	void SET_VEHICLE_MAY_BE_USED_BY_GOTO_POINT_ANY_MEANS_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xa3770e052ae1a1c8, vehicle, p1); }
	void GET_RANDOM_VEHICLE_MODEL_IN_MEMORY(BOOL p0, Hash* modelHash, int* successIndicator) { Call<void>(0x8593afc2fb043b1f, p0, modelHash, successIndicator); }
	void GET_RANDOM_VEHICLE_MODEL_IN_MEMORY_f(BOOL p0, Hash* modelHash, int* successIndicator) { FastCall<void>(0x8593afc2fb043b1f, p0, modelHash, successIndicator); }
	int GET_VEHICLE_DOOR_LOCK_STATUS(Vehicle vehicle) { return Call<int>(0x451cfd773483fc31, vehicle); }
	int GET_VEHICLE_DOOR_LOCK_STATUS_f(Vehicle vehicle) { return FastCall<int>(0x451cfd773483fc31, vehicle); }
	int GET_VEHICLE_INDIVIDUAL_DOOR_LOCK_STATUS(Vehicle vehicle, int doorId) { return Call<int>(0xc6908d9e8d94341f, vehicle, doorId); }
	int GET_VEHICLE_INDIVIDUAL_DOOR_LOCK_STATUS_f(Vehicle vehicle, int doorId) { return FastCall<int>(0xc6908d9e8d94341f, vehicle, doorId); }
	BOOL IS_VEHICLE_DOOR_DAMAGED(Vehicle veh, int doorID) { return Call<BOOL>(0x2878c74c0013956c, veh, doorID); }
	BOOL IS_VEHICLE_DOOR_DAMAGED_f(Vehicle veh, int doorID) { return FastCall<BOOL>(0x2878c74c0013956c, veh, doorID); }
	void SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(Vehicle vehicle, int doorId, BOOL isBreakable) { Call<void>(0xcf73fc6242d456a8, vehicle, doorId, isBreakable); }
	void SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF_f(Vehicle vehicle, int doorId, BOOL isBreakable) { FastCall<void>(0xcf73fc6242d456a8, vehicle, doorId, isBreakable); }
	BOOL IS_VEHICLE_BUMPER_BOUNCING(Vehicle vehicle, BOOL frontBumper) { return Call<BOOL>(0x880607efb5289e59, vehicle, frontBumper); }
	BOOL IS_VEHICLE_BUMPER_BOUNCING_f(Vehicle vehicle, BOOL frontBumper) { return FastCall<BOOL>(0x880607efb5289e59, vehicle, frontBumper); }
	BOOL IS_VEHICLE_BUMPER_BROKEN_OFF(Vehicle vehicle, BOOL frontBumper) { return Call<BOOL>(0x9ea3cd03c00601f9, vehicle, frontBumper); }
	BOOL IS_VEHICLE_BUMPER_BROKEN_OFF_f(Vehicle vehicle, BOOL frontBumper) { return FastCall<BOOL>(0x9ea3cd03c00601f9, vehicle, frontBumper); }
	BOOL IS_COP_VEHICLE_IN_AREA_3D(float x1, float x2, float y1, float y2, float z1, float z2) { return Call<BOOL>(0x4a70763a336c96cc, x1, x2, y1, y2, z1, z2); }
	BOOL IS_COP_VEHICLE_IN_AREA_3D_f(float x1, float x2, float y1, float y2, float z1, float z2) { return FastCall<BOOL>(0x4a70763a336c96cc, x1, x2, y1, y2, z1, z2); }
	BOOL IS_VEHICLE_ON_ALL_WHEELS(Vehicle vehicle) { return Call<BOOL>(0x5eb08b98d21bb20e, vehicle); }
	BOOL IS_VEHICLE_ON_ALL_WHEELS_f(Vehicle vehicle) { return FastCall<BOOL>(0x5eb08b98d21bb20e, vehicle); }
	int GET_VEHICLE_MODEL_VALUE(Hash vehicleModel) { return Call<int>(0xa4315813a11e055f, vehicleModel); }
	int GET_VEHICLE_MODEL_VALUE_f(Hash vehicleModel) { return FastCall<int>(0xa4315813a11e055f, vehicleModel); }
	Hash GET_VEHICLE_LAYOUT_HASH(Vehicle vehicle) { return Call<Hash>(0xa42d2e85b2729dc7, vehicle); }
	Hash GET_VEHICLE_LAYOUT_HASH_f(Vehicle vehicle) { return FastCall<Hash>(0xa42d2e85b2729dc7, vehicle); }
	Hash GET_IN_VEHICLE_CLIPSET_HASH_FOR_SEAT(Vehicle vehicle, int p1) { return Call<Hash>(0xb0b88db2a844c2bb, vehicle, p1); }
	Hash GET_IN_VEHICLE_CLIPSET_HASH_FOR_SEAT_f(Vehicle vehicle, int p1) { return FastCall<Hash>(0xb0b88db2a844c2bb, vehicle, p1); }
	void SET_RENDER_TRAIN_AS_DERAILED(Vehicle train, BOOL toggle) { Call<void>(0x9c4262aa677877fc, train, toggle); }
	void SET_RENDER_TRAIN_AS_DERAILED_f(Vehicle train, BOOL toggle) { FastCall<void>(0x9c4262aa677877fc, train, toggle); }
	void SET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int pearlescentColor, int wheelColor) { Call<void>(0xb8336c9b56fc8688, vehicle, pearlescentColor, wheelColor); }
	void SET_VEHICLE_EXTRA_COLOURS_f(Vehicle vehicle, int pearlescentColor, int wheelColor) { FastCall<void>(0xb8336c9b56fc8688, vehicle, pearlescentColor, wheelColor); }
	void GET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int* pearlescentColor, int* wheelColor) { Call<void>(0x9251bc124b8ea7c, vehicle, pearlescentColor, wheelColor); }
	void GET_VEHICLE_EXTRA_COLOURS_f(Vehicle vehicle, int* pearlescentColor, int* wheelColor) { FastCall<void>(0x9251bc124b8ea7c, vehicle, pearlescentColor, wheelColor); }
	void SET_VEHICLE_EXTRA_COLOUR_5(Vehicle vehicle, int color) { Call<void>(0x4e3a26cf88944c21, vehicle, color); }
	void SET_VEHICLE_EXTRA_COLOUR_5_f(Vehicle vehicle, int color) { FastCall<void>(0x4e3a26cf88944c21, vehicle, color); }
	void GET_VEHICLE_EXTRA_COLOUR_5(Vehicle vehicle, int* color) { Call<void>(0x1b7e5c63726466ad, vehicle, color); }
	void GET_VEHICLE_EXTRA_COLOUR_5_f(Vehicle vehicle, int* color) { FastCall<void>(0x1b7e5c63726466ad, vehicle, color); }
	void SET_VEHICLE_EXTRA_COLOUR_6(Vehicle vehicle, int color) { Call<void>(0x4e3a26cf88944c22, vehicle, color); }
	void SET_VEHICLE_EXTRA_COLOUR_6_f(Vehicle vehicle, int color) { FastCall<void>(0x4e3a26cf88944c22, vehicle, color); }
	void GET_VEHICLE_EXTRA_COLOUR_6(Vehicle vehicle, int* color) { Call<void>(0x1b7e5c63726466ae, vehicle, color); }
	void GET_VEHICLE_EXTRA_COLOUR_6_f(Vehicle vehicle, int* color) { FastCall<void>(0x1b7e5c63726466ae, vehicle, color); }
	void STOP_ALL_GARAGE_ACTIVITY() { Call<void>(0xe305a91c43d68aac); }
	void STOP_ALL_GARAGE_ACTIVITY_f() { FastCall<void>(0xe305a91c43d68aac); }
	void SET_VEHICLE_FIXED(Vehicle vehicle) { Call<void>(0x1b0cde4289c36b24, vehicle); }
	void SET_VEHICLE_FIXED_f(Vehicle vehicle) { FastCall<void>(0x1b0cde4289c36b24, vehicle); }
	void SET_VEHICLE_DEFORMATION_FIXED(Vehicle vehicle) { Call<void>(0xe9cc98d8110c8355, vehicle); }
	void SET_VEHICLE_DEFORMATION_FIXED_f(Vehicle vehicle) { FastCall<void>(0xe9cc98d8110c8355, vehicle); }
	void SET_VEHICLE_CAN_ENGINE_MISSFIRE(Vehicle vehicle, BOOL toggle) { Call<void>(0x59f8601fea69e3d0, vehicle, toggle); }
	void SET_VEHICLE_CAN_ENGINE_MISSFIRE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x59f8601fea69e3d0, vehicle, toggle); }
	void SET_VEHICLE_CAN_LEAK_OIL(Vehicle vehicle, BOOL toggle) { Call<void>(0x1dbf4d18f8727cb5, vehicle, toggle); }
	void SET_VEHICLE_CAN_LEAK_OIL_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1dbf4d18f8727cb5, vehicle, toggle); }
	void SET_VEHICLE_CAN_LEAK_PETROL(Vehicle vehicle, BOOL toggle) { Call<void>(0xb8ececd8147fa66d, vehicle, toggle); }
	void SET_VEHICLE_CAN_LEAK_PETROL_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xb8ececd8147fa66d, vehicle, toggle); }
	void SET_DISABLE_VEHICLE_PETROL_TANK_FIRES(Vehicle vehicle, BOOL toggle) { Call<void>(0xc594228f33dd0eb0, vehicle, toggle); }
	void SET_DISABLE_VEHICLE_PETROL_TANK_FIRES_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xc594228f33dd0eb0, vehicle, toggle); }
	void SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE(Vehicle vehicle, BOOL toggle) { Call<void>(0xecf02f5743e803fc, vehicle, toggle); }
	void SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xecf02f5743e803fc, vehicle, toggle); }
	void SET_DISABLE_VEHICLE_ENGINE_FIRES(Vehicle vehicle, BOOL toggle) { Call<void>(0x3a98e1268ab56e7, vehicle, toggle); }
	void SET_DISABLE_VEHICLE_ENGINE_FIRES_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x3a98e1268ab56e7, vehicle, toggle); }
	void SET_VEHICLE_LIMIT_SPEED_WHEN_PLAYER_INACTIVE(Vehicle vehicle, BOOL toggle) { Call<void>(0xa7811a12d6d0ff70, vehicle, toggle); }
	void SET_VEHICLE_LIMIT_SPEED_WHEN_PLAYER_INACTIVE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xa7811a12d6d0ff70, vehicle, toggle); }
	void SET_VEHICLE_STOP_INSTANTLY_WHEN_PLAYER_INACTIVE(Vehicle vehicle, BOOL toggle) { Call<void>(0xdf6c77f164f08142, vehicle, toggle); }
	void SET_VEHICLE_STOP_INSTANTLY_WHEN_PLAYER_INACTIVE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xdf6c77f164f08142, vehicle, toggle); }
	void SET_DISABLE_PRETEND_OCCUPANTS(Vehicle vehicle, BOOL toggle) { Call<void>(0x29d4c3275e6139ad, vehicle, toggle); }
	void SET_DISABLE_PRETEND_OCCUPANTS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x29d4c3275e6139ad, vehicle, toggle); }
	void REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, Any p6) { Call<void>(0xab6fa981bbc38bc0, x1, y1, z1, x2, y2, z2, p6); }
	void REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA_f(float x1, float y1, float z1, float x2, float y2, float z2, Any p6) { FastCall<void>(0xab6fa981bbc38bc0, x1, y1, z1, x2, y2, z2, p6); }
	void SET_VEHICLE_STEER_BIAS(Vehicle vehicle, float value) { Call<void>(0x31da110d1a48c6b7, vehicle, value); }
	void SET_VEHICLE_STEER_BIAS_f(Vehicle vehicle, float value) { FastCall<void>(0x31da110d1a48c6b7, vehicle, value); }
	BOOL IS_VEHICLE_EXTRA_TURNED_ON(Vehicle vehicle, int extraId) { return Call<BOOL>(0xe7e95d2dfa7cee4b, vehicle, extraId); }
	BOOL IS_VEHICLE_EXTRA_TURNED_ON_f(Vehicle vehicle, int extraId) { return FastCall<BOOL>(0xe7e95d2dfa7cee4b, vehicle, extraId); }
	void SET_VEHICLE_EXTRA(Vehicle vehicle, int extraId, BOOL disable) { Call<void>(0x1b0cde4289bc17c0, vehicle, extraId, disable); }
	void SET_VEHICLE_EXTRA_f(Vehicle vehicle, int extraId, BOOL disable) { FastCall<void>(0x1b0cde4289bc17c0, vehicle, extraId, disable); }
	BOOL DOES_EXTRA_EXIST(Vehicle vehicle, int extraId) { return Call<BOOL>(0x65ef598fd1a24902, vehicle, extraId); }
	BOOL DOES_EXTRA_EXIST_f(Vehicle vehicle, int extraId) { return FastCall<BOOL>(0x65ef598fd1a24902, vehicle, extraId); }
	BOOL IS_EXTRA_BROKEN_OFF(Vehicle vehicle, int extraId) { return Call<BOOL>(0x31ef767438615009, vehicle, extraId); }
	BOOL IS_EXTRA_BROKEN_OFF_f(Vehicle vehicle, int extraId) { return FastCall<BOOL>(0x31ef767438615009, vehicle, extraId); }
	void SET_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL p1) { Call<void>(0xad009747d80d3ecb, vehicle, p1); }
	void SET_CONVERTIBLE_ROOF_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xad009747d80d3ecb, vehicle, p1); }
	void LOWER_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL instantlyLower) { Call<void>(0x61bc3b9dc057fe0c, vehicle, instantlyLower); }
	void LOWER_CONVERTIBLE_ROOF_f(Vehicle vehicle, BOOL instantlyLower) { FastCall<void>(0x61bc3b9dc057fe0c, vehicle, instantlyLower); }
	void RAISE_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL instantlyRaise) { Call<void>(0xb3701fe5d02c1481, vehicle, instantlyRaise); }
	void RAISE_CONVERTIBLE_ROOF_f(Vehicle vehicle, BOOL instantlyRaise) { FastCall<void>(0xb3701fe5d02c1481, vehicle, instantlyRaise); }
	int GET_CONVERTIBLE_ROOF_STATE(Vehicle vehicle) { return Call<int>(0x5fb6fa451fdd0489, vehicle); }
	int GET_CONVERTIBLE_ROOF_STATE_f(Vehicle vehicle) { return FastCall<int>(0x5fb6fa451fdd0489, vehicle); }
	BOOL IS_VEHICLE_A_CONVERTIBLE(Vehicle vehicle, BOOL p1) { return Call<BOOL>(0xcb5624932cd3341f, vehicle, p1); }
	BOOL IS_VEHICLE_A_CONVERTIBLE_f(Vehicle vehicle, BOOL p1) { return FastCall<BOOL>(0xcb5624932cd3341f, vehicle, p1); }
	BOOL TRANSFORM_TO_SUBMARINE(Vehicle vehicle, BOOL noAnimation) { return Call<BOOL>(0xfb963c4521cdbd31, vehicle, noAnimation); }
	BOOL TRANSFORM_TO_SUBMARINE_f(Vehicle vehicle, BOOL noAnimation) { return FastCall<BOOL>(0xfb963c4521cdbd31, vehicle, noAnimation); }
	void TRANSFORM_TO_CAR(Vehicle vehicle, BOOL noAnimation) { Call<void>(0xd88f93735b1efc43, vehicle, noAnimation); }
	void TRANSFORM_TO_CAR_f(Vehicle vehicle, BOOL noAnimation) { FastCall<void>(0xd88f93735b1efc43, vehicle, noAnimation); }
	BOOL IS_VEHICLE_IN_SUBMARINE_MODE(Vehicle vehicle) { return Call<BOOL>(0x49a0f53bf1bfecf2, vehicle); }
	BOOL IS_VEHICLE_IN_SUBMARINE_MODE_f(Vehicle vehicle) { return FastCall<BOOL>(0x49a0f53bf1bfecf2, vehicle); }
	BOOL IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS(Vehicle vehicle) { return Call<BOOL>(0x9735d802886c40f1, vehicle); }
	BOOL IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS_f(Vehicle vehicle) { return FastCall<BOOL>(0x9735d802886c40f1, vehicle); }
	void SET_VEHICLE_DAMAGE(Vehicle vehicle, float xOffset, float yOffset, float zOffset, float damage, float radius, BOOL focusOnModel) { Call<void>(0x468eea0eaaca7d9f, vehicle, xOffset, yOffset, zOffset, damage, radius, focusOnModel); }
	void SET_VEHICLE_DAMAGE_f(Vehicle vehicle, float xOffset, float yOffset, float zOffset, float damage, float radius, BOOL focusOnModel) { FastCall<void>(0x468eea0eaaca7d9f, vehicle, xOffset, yOffset, zOffset, damage, radius, focusOnModel); }
	void SET_VEHICLE_OCCUPANTS_TAKE_EXPLOSIVE_DAMAGE(Vehicle vehicle, BOOL toggle) { Call<void>(0x1025b6cae0434468, vehicle, toggle); }
	void SET_VEHICLE_OCCUPANTS_TAKE_EXPLOSIVE_DAMAGE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1025b6cae0434468, vehicle, toggle); }
	float GET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle) { return ToFloat(Call<_float>(0x577c1386904e6bd, vehicle)); }
	float GET_VEHICLE_ENGINE_HEALTH_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0x577c1386904e6bd, vehicle)); }
	void SET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle, float health) { Call<void>(0xb48612129b4882c9, vehicle, health); }
	void SET_VEHICLE_ENGINE_HEALTH_f(Vehicle vehicle, float health) { FastCall<void>(0xb48612129b4882c9, vehicle, health); }
	void SET_PLANE_ENGINE_HEALTH(Vehicle vehicle, float health) { Call<void>(0x9c3934b929840ab9, vehicle, health); }
	void SET_PLANE_ENGINE_HEALTH_f(Vehicle vehicle, float health) { FastCall<void>(0x9c3934b929840ab9, vehicle, health); }
	float GET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle) { return ToFloat(Call<_float>(0xdce183f8a77509e, vehicle)); }
	float GET_VEHICLE_PETROL_TANK_HEALTH_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xdce183f8a77509e, vehicle)); }
	void SET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle, float health) { Call<void>(0x8f880553928f5c12, vehicle, health); }
	void SET_VEHICLE_PETROL_TANK_HEALTH_f(Vehicle vehicle, float health) { FastCall<void>(0x8f880553928f5c12, vehicle, health); }
	BOOL IS_VEHICLE_STUCK_TIMER_UP(Vehicle vehicle, int p1, int ms) { return Call<BOOL>(0xe83ec726d1d9a0, vehicle, p1, ms); }
	BOOL IS_VEHICLE_STUCK_TIMER_UP_f(Vehicle vehicle, int p1, int ms) { return FastCall<BOOL>(0xe83ec726d1d9a0, vehicle, p1, ms); }
	void RESET_VEHICLE_STUCK_TIMER(Vehicle vehicle, int nullAttributes) { Call<void>(0xd255e1075eb06df, vehicle, nullAttributes); }
	void RESET_VEHICLE_STUCK_TIMER_f(Vehicle vehicle, int nullAttributes) { FastCall<void>(0xd255e1075eb06df, vehicle, nullAttributes); }
	BOOL IS_VEHICLE_DRIVEABLE(Vehicle vehicle, BOOL isOnFireCheck) { return Call<BOOL>(0x6bc294841369dc7c, vehicle, isOnFireCheck); }
	BOOL IS_VEHICLE_DRIVEABLE_f(Vehicle vehicle, BOOL isOnFireCheck) { return FastCall<BOOL>(0x6bc294841369dc7c, vehicle, isOnFireCheck); }
	void SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(Vehicle vehicle, BOOL owned) { Call<void>(0x7386a4667f0b2751, vehicle, owned); }
	void SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER_f(Vehicle vehicle, BOOL owned) { FastCall<void>(0x7386a4667f0b2751, vehicle, owned); }
	void SET_VEHICLE_NEEDS_TO_BE_HOTWIRED(Vehicle vehicle, BOOL toggle) { Call<void>(0x5133a479a7e90d3c, vehicle, toggle); }
	void SET_VEHICLE_NEEDS_TO_BE_HOTWIRED_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x5133a479a7e90d3c, vehicle, toggle); }
	void SET_VEHICLE_BLIP_THROTTLE_RANDOMLY(Vehicle vehicle, BOOL p1) { Call<void>(0x29bf6387f9fe9767, vehicle, p1); }
	void SET_VEHICLE_BLIP_THROTTLE_RANDOMLY_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x29bf6387f9fe9767, vehicle, p1); }
	void SET_POLICE_FOCUS_WILL_TRACK_VEHICLE(Vehicle vehicle, BOOL toggle) { Call<void>(0x5b9f35cb758e8536, vehicle, toggle); }
	void SET_POLICE_FOCUS_WILL_TRACK_VEHICLE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x5b9f35cb758e8536, vehicle, toggle); }
	void START_VEHICLE_HORN(Vehicle vehicle, int duration, Hash mode, BOOL forever) { Call<void>(0x94150dd5f3a0abb3, vehicle, duration, mode, forever); }
	void START_VEHICLE_HORN_f(Vehicle vehicle, int duration, Hash mode, BOOL forever) { FastCall<void>(0x94150dd5f3a0abb3, vehicle, duration, mode, forever); }
	void SET_VEHICLE_IN_CAR_MOD_SHOP(Vehicle vehicle, BOOL toggle) { Call<void>(0xd2340e18776b1308, vehicle, toggle); }
	void SET_VEHICLE_IN_CAR_MOD_SHOP_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xd2340e18776b1308, vehicle, toggle); }
	void SET_VEHICLE_HAS_STRONG_AXLES(Vehicle vehicle, BOOL toggle) { Call<void>(0x4b46e0e42f208a90, vehicle, toggle); }
	void SET_VEHICLE_HAS_STRONG_AXLES_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x4b46e0e42f208a90, vehicle, toggle); }
	const char* GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(Hash modelHash) { return Call<char*>(0x6c25fa65d14904cf, modelHash); }
	const char* GET_DISPLAY_NAME_FROM_VEHICLE_MODEL_f(Hash modelHash) { return FastCall<char*>(0x6c25fa65d14904cf, modelHash); }
	const char* GET_MAKE_NAME_FROM_VEHICLE_MODEL(Hash modelHash) { return Call<char*>(0xeecf56224427978d, modelHash); }
	const char* GET_MAKE_NAME_FROM_VEHICLE_MODEL_f(Hash modelHash) { return FastCall<char*>(0xeecf56224427978d, modelHash); }
	Vector3* GET_VEHICLE_DEFORMATION_AT_POS(Vehicle vehicle, float offsetX, float offsetY, float offsetZ) { Call<Vector3*>(0xce0c95160081fcd3, vehicle, offsetX, offsetY, offsetZ); return GetVector(); }
	void SET_VEHICLE_LIVERY(Vehicle vehicle, int livery) { Call<void>(0x468eea0eb8e62663, vehicle, livery); }
	void SET_VEHICLE_LIVERY_f(Vehicle vehicle, int livery) { FastCall<void>(0x468eea0eb8e62663, vehicle, livery); }
	int GET_VEHICLE_LIVERY(Vehicle vehicle) { return Call<int>(0xeaf583d9820f8cef, vehicle); }
	int GET_VEHICLE_LIVERY_f(Vehicle vehicle) { return FastCall<int>(0xeaf583d9820f8cef, vehicle); }
	int GET_VEHICLE_LIVERY_COUNT(Vehicle vehicle) { return Call<int>(0xe18f9dcd6c19999f, vehicle); }
	int GET_VEHICLE_LIVERY_COUNT_f(Vehicle vehicle) { return FastCall<int>(0xe18f9dcd6c19999f, vehicle); }
	void SET_VEHICLE_LIVERY2(Vehicle vehicle, int livery) { Call<void>(0x8b4e57c863dea62f, vehicle, livery); }
	void SET_VEHICLE_LIVERY2_f(Vehicle vehicle, int livery) { FastCall<void>(0x8b4e57c863dea62f, vehicle, livery); }
	int GET_VEHICLE_LIVERY2(Vehicle vehicle) { return Call<int>(0x73baf756bfe21123, vehicle); }
	int GET_VEHICLE_LIVERY2_f(Vehicle vehicle) { return FastCall<int>(0x73baf756bfe21123, vehicle); }
	int GET_VEHICLE_LIVERY2_COUNT(Vehicle vehicle) { return Call<int>(0x50641bd6f9bd26d3, vehicle); }
	int GET_VEHICLE_LIVERY2_COUNT_f(Vehicle vehicle) { return FastCall<int>(0x50641bd6f9bd26d3, vehicle); }
	BOOL IS_VEHICLE_WINDOW_INTACT(Vehicle vehicle, int windowIndex) { return Call<BOOL>(0xb42eb6623559d02a, vehicle, windowIndex); }
	BOOL IS_VEHICLE_WINDOW_INTACT_f(Vehicle vehicle, int windowIndex) { return FastCall<BOOL>(0xb42eb6623559d02a, vehicle, windowIndex); }
	BOOL ARE_ALL_VEHICLE_WINDOWS_INTACT(Vehicle vehicle) { return Call<BOOL>(0xaa59e4becfd6169b, vehicle); }
	BOOL ARE_ALL_VEHICLE_WINDOWS_INTACT_f(Vehicle vehicle) { return FastCall<BOOL>(0xaa59e4becfd6169b, vehicle); }
	BOOL ARE_ANY_VEHICLE_SEATS_FREE(Vehicle vehicle) { return Call<BOOL>(0x40fedc8ac92afee, vehicle); }
	BOOL ARE_ANY_VEHICLE_SEATS_FREE_f(Vehicle vehicle) { return FastCall<BOOL>(0x40fedc8ac92afee, vehicle); }
	void RESET_VEHICLE_WHEELS(Vehicle vehicle, BOOL toggle) { Call<void>(0xfae6f7fa6c58a61b, vehicle, toggle); }
	void RESET_VEHICLE_WHEELS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xfae6f7fa6c58a61b, vehicle, toggle); }
	BOOL IS_HELI_PART_BROKEN(Vehicle vehicle, BOOL p1, BOOL p2, BOOL p3) { return Call<BOOL>(0xc769ad171ddaf691, vehicle, p1, p2, p3); }
	BOOL IS_HELI_PART_BROKEN_f(Vehicle vehicle, BOOL p1, BOOL p2, BOOL p3) { return FastCall<BOOL>(0xc769ad171ddaf691, vehicle, p1, p2, p3); }
	float GET_HELI_MAIN_ROTOR_HEALTH(Vehicle vehicle) { return ToFloat(Call<_float>(0x5f8cf1c629bfba8b, vehicle)); }
	float GET_HELI_MAIN_ROTOR_HEALTH_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0x5f8cf1c629bfba8b, vehicle)); }
	float GET_HELI_TAIL_ROTOR_HEALTH(Vehicle vehicle) { return ToFloat(Call<_float>(0x87f0311e9aa93954, vehicle)); }
	float GET_HELI_TAIL_ROTOR_HEALTH_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0x87f0311e9aa93954, vehicle)); }
	float GET_HELI_TAIL_BOOM_HEALTH(Vehicle vehicle) { return ToFloat(Call<_float>(0xdae9a891aae762dd, vehicle)); }
	float GET_HELI_TAIL_BOOM_HEALTH_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xdae9a891aae762dd, vehicle)); }
	void SET_HELI_MAIN_ROTOR_HEALTH(Vehicle vehicle, float health) { Call<void>(0x9248bc323fef9fff, vehicle, health); }
	void SET_HELI_MAIN_ROTOR_HEALTH_f(Vehicle vehicle, float health) { FastCall<void>(0x9248bc323fef9fff, vehicle, health); }
	void SET_HELI_TAIL_ROTOR_HEALTH(Vehicle vehicle, float health) { Call<void>(0xbaabfb8ab0d91ec8, vehicle, health); }
	void SET_HELI_TAIL_ROTOR_HEALTH_f(Vehicle vehicle, float health) { FastCall<void>(0xbaabfb8ab0d91ec8, vehicle, health); }
	BOOL SET_HELI_TAIL_BOOM_CAN_BREAK_OFF(Vehicle vehicle, BOOL toggle) { return Call<BOOL>(0x62c346b1170a0af3, vehicle, toggle); }
	BOOL SET_HELI_TAIL_BOOM_CAN_BREAK_OFF_f(Vehicle vehicle, BOOL toggle) { return FastCall<BOOL>(0x62c346b1170a0af3, vehicle, toggle); }
	void SET_VEHICLE_NAME_DEBUG(Vehicle vehicle, char* name) { Call<void>(0x31d98a47a78285af, vehicle, name); }
	void SET_VEHICLE_NAME_DEBUG_f(Vehicle vehicle, char* name) { FastCall<void>(0x31d98a47a78285af, vehicle, name); }
	void SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(Vehicle vehicle, BOOL toggle) { Call<void>(0x3f64f9f7071c8a53, vehicle, toggle); }
	void SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x3f64f9f7071c8a53, vehicle, toggle); }
	void SET_VEHICLE_EXPLODES_ON_EXPLOSION_DAMAGE_AT_ZERO_BODY_HEALTH(Vehicle vehicle, BOOL toggle) { Call<void>(0x8233749cd88aeacb, vehicle, toggle); }
	void SET_VEHICLE_EXPLODES_ON_EXPLOSION_DAMAGE_AT_ZERO_BODY_HEALTH_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x8233749cd88aeacb, vehicle, toggle); }
	void SET_ALLOW_VEHICLE_EXPLODES_ON_CONTACT(Vehicle vehicle, BOOL toggle) { Call<void>(0xc4789b5c45d311c7, vehicle, toggle); }
	void SET_ALLOW_VEHICLE_EXPLODES_ON_CONTACT_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xc4789b5c45d311c7, vehicle, toggle); }
	void SET_VEHICLE_DISABLE_TOWING(Vehicle vehicle, BOOL toggle) { Call<void>(0x56dac2c7e12a688d, vehicle, toggle); }
	void SET_VEHICLE_DISABLE_TOWING_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x56dac2c7e12a688d, vehicle, toggle); }
	BOOL GET_VEHICLE_HAS_LANDING_GEAR(Vehicle vehicle) { return Call<BOOL>(0xd5a462acb5f93a38, vehicle); }
	BOOL GET_VEHICLE_HAS_LANDING_GEAR_f(Vehicle vehicle) { return FastCall<BOOL>(0xd5a462acb5f93a38, vehicle); }
	void CONTROL_LANDING_GEAR(Vehicle vehicle, int state) { Call<void>(0x472fbf4922418a99, vehicle, state); }
	void CONTROL_LANDING_GEAR_f(Vehicle vehicle, int state) { FastCall<void>(0x472fbf4922418a99, vehicle, state); }
	int GET_LANDING_GEAR_STATE(Vehicle vehicle) { return Call<int>(0x4ef681a09dae64b2, vehicle); }
	int GET_LANDING_GEAR_STATE_f(Vehicle vehicle) { return FastCall<int>(0x4ef681a09dae64b2, vehicle); }
	BOOL IS_ANY_VEHICLE_NEAR_POINT(float x, float y, float z, float radius) { return Call<BOOL>(0xcd52f16f3b36c1b4, x, y, z, radius); }
	BOOL IS_ANY_VEHICLE_NEAR_POINT_f(float x, float y, float z, float radius) { return FastCall<BOOL>(0xcd52f16f3b36c1b4, x, y, z, radius); }
	void REQUEST_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle) { Call<void>(0xb8aa4afc7b1770d5, vehicle); }
	void REQUEST_VEHICLE_HIGH_DETAIL_MODEL_f(Vehicle vehicle) { FastCall<void>(0xb8aa4afc7b1770d5, vehicle); }
	int _GET_VEHICLE_MODEL_NUM_DRIVE_GEARS(Hash vehicleModel) { return Call<int>(0x674a17d78cad4c45, vehicleModel); }
	int _GET_VEHICLE_MODEL_NUM_DRIVE_GEARS_f(Hash vehicleModel) { return FastCall<int>(0x674a17d78cad4c45, vehicleModel); }
	int _GET_VEHICLE_MAX_DRIVE_GEAR_COUNT(Vehicle vehicle) { return Call<int>(0xf06ebe04c53a8dea, vehicle); }
	int _GET_VEHICLE_MAX_DRIVE_GEAR_COUNT_f(Vehicle vehicle) { return FastCall<int>(0xf06ebe04c53a8dea, vehicle); }
	BOOL _GET_IS_VEHICLE_ELECTRIC(Hash vehicleModel) { return Call<BOOL>(0x9280c1198ca1e99d, vehicleModel); }
	BOOL _GET_IS_VEHICLE_ELECTRIC_f(Hash vehicleModel) { return FastCall<BOOL>(0x9280c1198ca1e99d, vehicleModel); }
	int _GET_VEHICLE_DRIVETRAIN_TYPE(Hash vehicleModel) { return Call<int>(0x31a58dcda8148720, vehicleModel); }
	int _GET_VEHICLE_DRIVETRAIN_TYPE_f(Hash vehicleModel) { return FastCall<int>(0x31a58dcda8148720, vehicleModel); }
	int _GET_VEHICLE_CURRENT_DRIVE_GEAR(Vehicle vehicle) { return Call<int>(0x5237d01932df20c5, vehicle); }
	int _GET_VEHICLE_CURRENT_DRIVE_GEAR_f(Vehicle vehicle) { return FastCall<int>(0x5237d01932df20c5, vehicle); }
	float _GET_VEHICLE_CURRENT_REV_RATIO(Vehicle vehicle) { return ToFloat(Call<_float>(0xd95cae294c56af8e, vehicle)); }
	float _GET_VEHICLE_CURRENT_REV_RATIO_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xd95cae294c56af8e, vehicle)); }
	void REMOVE_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle) { Call<void>(0x48218c3e29f3beaa, vehicle); }
	void REMOVE_VEHICLE_HIGH_DETAIL_MODEL_f(Vehicle vehicle) { FastCall<void>(0x48218c3e29f3beaa, vehicle); }
	BOOL IS_VEHICLE_HIGH_DETAIL(Vehicle vehicle) { return Call<BOOL>(0x857a4f4a2b379e46, vehicle); }
	BOOL IS_VEHICLE_HIGH_DETAIL_f(Vehicle vehicle) { return FastCall<BOOL>(0x857a4f4a2b379e46, vehicle); }
	void REQUEST_VEHICLE_ASSET(Hash vehicleHash, int vehicleAsset) { Call<void>(0x806e219a4527da0d, vehicleHash, vehicleAsset); }
	void REQUEST_VEHICLE_ASSET_f(Hash vehicleHash, int vehicleAsset) { FastCall<void>(0x806e219a4527da0d, vehicleHash, vehicleAsset); }
	BOOL HAS_VEHICLE_ASSET_LOADED(int vehicleAsset) { return Call<BOOL>(0xb615e284459dbb4c, vehicleAsset); }
	BOOL HAS_VEHICLE_ASSET_LOADED_f(int vehicleAsset) { return FastCall<BOOL>(0xb615e284459dbb4c, vehicleAsset); }
	void REMOVE_VEHICLE_ASSET(int vehicleAsset) { Call<void>(0x66184a0be527f62, vehicleAsset); }
	void REMOVE_VEHICLE_ASSET_f(int vehicleAsset) { FastCall<void>(0x66184a0be527f62, vehicleAsset); }
	void SET_VEHICLE_TOW_TRUCK_ARM_POSITION(Vehicle vehicle, float position) { Call<void>(0x4187ddcfcd4301df, vehicle, position); }
	void SET_VEHICLE_TOW_TRUCK_ARM_POSITION_f(Vehicle vehicle, float position) { FastCall<void>(0x4187ddcfcd4301df, vehicle, position); }
	void _SET_ATTACHED_VEHICLE_TO_TOW_TRUCK_ARM(Vehicle towTruck, Vehicle vehicle) { Call<void>(0x995826e289c96587, towTruck, vehicle); }
	void _SET_ATTACHED_VEHICLE_TO_TOW_TRUCK_ARM_f(Vehicle towTruck, Vehicle vehicle) { FastCall<void>(0x995826e289c96587, towTruck, vehicle); }
	void ATTACH_VEHICLE_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle, BOOL rear, float hookOffsetX, float hookOffsetY, float hookOffsetZ) { Call<void>(0x8aae489c8b27dec5, towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ); }
	void ATTACH_VEHICLE_TO_TOW_TRUCK_f(Vehicle towTruck, Vehicle vehicle, BOOL rear, float hookOffsetX, float hookOffsetY, float hookOffsetZ) { FastCall<void>(0x8aae489c8b27dec5, towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ); }
	void DETACH_VEHICLE_FROM_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle) { Call<void>(0x966d5f7362f9e4e6, towTruck, vehicle); }
	void DETACH_VEHICLE_FROM_TOW_TRUCK_f(Vehicle towTruck, Vehicle vehicle) { FastCall<void>(0x966d5f7362f9e4e6, towTruck, vehicle); }
	BOOL DETACH_VEHICLE_FROM_ANY_TOW_TRUCK(Vehicle vehicle) { return Call<BOOL>(0x8faf734a9054933, vehicle); }
	BOOL DETACH_VEHICLE_FROM_ANY_TOW_TRUCK_f(Vehicle vehicle) { return FastCall<BOOL>(0x8faf734a9054933, vehicle); }
	BOOL IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle) { return Call<BOOL>(0xda5a9cb3f696dc2b, towTruck, vehicle); }
	BOOL IS_VEHICLE_ATTACHED_TO_TOW_TRUCK_f(Vehicle towTruck, Vehicle vehicle) { return FastCall<BOOL>(0xda5a9cb3f696dc2b, towTruck, vehicle); }
	Entity GET_ENTITY_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck) { return Call<Entity>(0x6c5994195f2a4680, towTruck); }
	Entity GET_ENTITY_ATTACHED_TO_TOW_TRUCK_f(Vehicle towTruck) { return FastCall<Entity>(0x6c5994195f2a4680, towTruck); }
	Entity SET_VEHICLE_AUTOMATICALLY_ATTACHES(Vehicle vehicle, BOOL p1, Any p2) { return Call<Entity>(0x14ee8b4c45a6091f, vehicle, p1, p2); }
	Entity SET_VEHICLE_AUTOMATICALLY_ATTACHES_f(Vehicle vehicle, BOOL p1, Any p2) { return FastCall<Entity>(0x14ee8b4c45a6091f, vehicle, p1, p2); }
	void SET_VEHICLE_BULLDOZER_ARM_POSITION(Vehicle vehicle, float position, BOOL p2) { Call<void>(0x850c598a795d1d92, vehicle, position, p2); }
	void SET_VEHICLE_BULLDOZER_ARM_POSITION_f(Vehicle vehicle, float position, BOOL p2) { FastCall<void>(0x850c598a795d1d92, vehicle, position, p2); }
	void SET_VEHICLE_TANK_TURRET_POSITION(Vehicle vehicle, float position, BOOL p2) { Call<void>(0x155c66cd482abc73, vehicle, position, p2); }
	void SET_VEHICLE_TANK_TURRET_POSITION_f(Vehicle vehicle, float position, BOOL p2) { FastCall<void>(0x155c66cd482abc73, vehicle, position, p2); }
	void SET_VEHICLE_TURRET_TARGET(Vehicle vehicle, BOOL p1, float x, float y, float z, BOOL p5) { Call<void>(0x5b15e8ddbb4d3b90, vehicle, p1, x, y, z, p5); }
	void SET_VEHICLE_TURRET_TARGET_f(Vehicle vehicle, BOOL p1, float x, float y, float z, BOOL p5) { FastCall<void>(0x5b15e8ddbb4d3b90, vehicle, p1, x, y, z, p5); }
	void SET_VEHICLE_TANK_STATIONARY(Vehicle vehicle, BOOL p1) { Call<void>(0x461e7a8f7c2a32f9, vehicle, p1); }
	void SET_VEHICLE_TANK_STATIONARY_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x461e7a8f7c2a32f9, vehicle, p1); }
	void SET_VEHICLE_TURRET_SPEED_THIS_FRAME(Vehicle vehicle, float speed) { Call<void>(0xd159a866e7568ec3, vehicle, speed); }
	void SET_VEHICLE_TURRET_SPEED_THIS_FRAME_f(Vehicle vehicle, float speed) { FastCall<void>(0xd159a866e7568ec3, vehicle, speed); }
	void DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME(Vehicle vehicle) { Call<void>(0x5cd41ab07d0b5217, vehicle); }
	void DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME_f(Vehicle vehicle) { FastCall<void>(0x5cd41ab07d0b5217, vehicle); }
	void SET_VEHICLE_FLIGHT_NOZZLE_POSITION(Vehicle vehicle, float angleRatio) { Call<void>(0x36d1d56fef8bda2f, vehicle, angleRatio); }
	void SET_VEHICLE_FLIGHT_NOZZLE_POSITION_f(Vehicle vehicle, float angleRatio) { FastCall<void>(0x36d1d56fef8bda2f, vehicle, angleRatio); }
	void SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE(Vehicle vehicle, float angle) { Call<void>(0xb30b079fe45ded81, vehicle, angle); }
	void SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE_f(Vehicle vehicle, float angle) { FastCall<void>(0xb30b079fe45ded81, vehicle, angle); }
	float GET_VEHICLE_FLIGHT_NOZZLE_POSITION(Vehicle plane) { return ToFloat(Call<_float>(0x2cbc204d120ea8bb, plane)); }
	float GET_VEHICLE_FLIGHT_NOZZLE_POSITION_f(Vehicle plane) { return ToFloat(FastCall<_float>(0x2cbc204d120ea8bb, plane)); }
	void SET_DISABLE_VERTICAL_FLIGHT_MODE_TRANSITION(Vehicle vehicle, BOOL toggle) { Call<void>(0x80c44ab256429617, vehicle, toggle); }
	void SET_DISABLE_VERTICAL_FLIGHT_MODE_TRANSITION_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x80c44ab256429617, vehicle, toggle); }
	BOOL GENERATE_VEHICLE_CREATION_POS_FROM_PATHS(Vector3* outVec, Any p1, Vector3* outVec1, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) { return Call<BOOL>(0x285b463b6762a147, outVec, p1, outVec1, p3, p4, p5, p6, p7, p8); }
	BOOL GENERATE_VEHICLE_CREATION_POS_FROM_PATHS_f(Vector3* outVec, Any p1, Vector3* outVec1, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) { return FastCall<BOOL>(0x285b463b6762a147, outVec, p1, outVec1, p3, p4, p5, p6, p7, p8); }
	void SET_VEHICLE_BURNOUT(Vehicle vehicle, BOOL toggle) { Call<void>(0x8b4e57c667262acf, vehicle, toggle); }
	void SET_VEHICLE_BURNOUT_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x8b4e57c667262acf, vehicle, toggle); }
	BOOL IS_VEHICLE_IN_BURNOUT(Vehicle vehicle) { return Call<BOOL>(0xc9071a8b5cf022d, vehicle); }
	BOOL IS_VEHICLE_IN_BURNOUT_f(Vehicle vehicle) { return FastCall<BOOL>(0xc9071a8b5cf022d, vehicle); }
	void SET_VEHICLE_REDUCE_GRIP(Vehicle vehicle, BOOL toggle) { Call<void>(0x963be0cef28a25b, vehicle, toggle); }
	void SET_VEHICLE_REDUCE_GRIP_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x963be0cef28a25b, vehicle, toggle); }
	void SET_VEHICLE_REDUCE_GRIP_LEVEL(Vehicle vehicle, int val) { Call<void>(0xbf535be416ea3880, vehicle, val); }
	void SET_VEHICLE_REDUCE_GRIP_LEVEL_f(Vehicle vehicle, int val) { FastCall<void>(0xbf535be416ea3880, vehicle, val); }
	void SET_VEHICLE_INDICATOR_LIGHTS(Vehicle vehicle, int turnSignal, BOOL toggle) { Call<void>(0xf922e356bb2bd89d, vehicle, turnSignal, toggle); }
	void SET_VEHICLE_INDICATOR_LIGHTS_f(Vehicle vehicle, int turnSignal, BOOL toggle) { FastCall<void>(0xf922e356bb2bd89d, vehicle, turnSignal, toggle); }
	void SET_VEHICLE_BRAKE_LIGHTS(Vehicle vehicle, BOOL toggle) { Call<void>(0x1d95408e71b53401, vehicle, toggle); }
	void SET_VEHICLE_BRAKE_LIGHTS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1d95408e71b53401, vehicle, toggle); }
	void SET_VEHICLE_TAIL_LIGHTS(Vehicle vehicle, BOOL toggle) { Call<void>(0x969346f5a2218bc, vehicle, toggle); }
	void SET_VEHICLE_TAIL_LIGHTS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x969346f5a2218bc, vehicle, toggle); }
	void SET_VEHICLE_HANDBRAKE(Vehicle vehicle, BOOL toggle) { Call<void>(0xf11783eface79bcc, vehicle, toggle); }
	void SET_VEHICLE_HANDBRAKE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xf11783eface79bcc, vehicle, toggle); }
	void SET_VEHICLE_BRAKE(Vehicle vehicle, BOOL toggle) { Call<void>(0x1b0cde42898ecedb, vehicle, toggle); }
	void SET_VEHICLE_BRAKE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1b0cde42898ecedb, vehicle, toggle); }
	void INSTANTLY_FILL_VEHICLE_POPULATION() { Call<void>(0xa8f4a0634791706b); }
	void INSTANTLY_FILL_VEHICLE_POPULATION_f() { FastCall<void>(0xa8f4a0634791706b); }
	BOOL HAS_INSTANT_FILL_VEHICLE_POPULATION_FINISHED() { return Call<BOOL>(0xf76fc5cec842a998); }
	BOOL HAS_INSTANT_FILL_VEHICLE_POPULATION_FINISHED_f() { return FastCall<BOOL>(0xf76fc5cec842a998); }
	void NETWORK_ENABLE_EMPTY_CROWDING_VEHICLES_REMOVAL(BOOL toggle) { Call<void>(0xbaaaf49fcee11541, toggle); }
	void NETWORK_ENABLE_EMPTY_CROWDING_VEHICLES_REMOVAL_f(BOOL toggle) { FastCall<void>(0xbaaaf49fcee11541, toggle); }
	void NETWORK_CAP_EMPTY_CROWDING_VEHICLES_REMOVAL(int p0) { Call<void>(0x9bd8116573479e6e, p0); }
	void NETWORK_CAP_EMPTY_CROWDING_VEHICLES_REMOVAL_f(int p0) { FastCall<void>(0x9bd8116573479e6e, p0); }
	BOOL GET_VEHICLE_TRAILER_VEHICLE(Vehicle vehicle, Vehicle* trailer) { return Call<BOOL>(0x12feb8e29d7e4ea4, vehicle, trailer); }
	BOOL GET_VEHICLE_TRAILER_VEHICLE_f(Vehicle vehicle, Vehicle* trailer) { return FastCall<BOOL>(0x12feb8e29d7e4ea4, vehicle, trailer); }
	Vehicle _GET_VEHICLE_TRAILER_PARENT_VEHICLE(Vehicle trailer) { return Call<Vehicle>(0x1810ebc50c95ae7e, trailer); }
	Vehicle _GET_VEHICLE_TRAILER_PARENT_VEHICLE_f(Vehicle trailer) { return FastCall<Vehicle>(0x1810ebc50c95ae7e, trailer); }
	void SET_VEHICLE_USES_LARGE_REAR_RAMP(Vehicle vehicle, BOOL toggle) { Call<void>(0x56ac2a95150e7566, vehicle, toggle); }
	void SET_VEHICLE_USES_LARGE_REAR_RAMP_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x56ac2a95150e7566, vehicle, toggle); }
	void SET_VEHICLE_RUDDER_BROKEN(Vehicle vehicle, BOOL toggle) { Call<void>(0x450f25a37035e4d4, vehicle, toggle); }
	void SET_VEHICLE_RUDDER_BROKEN_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x450f25a37035e4d4, vehicle, toggle); }
	void SET_CONVERTIBLE_ROOF_LATCH_STATE(Vehicle vehicle, BOOL state) { Call<void>(0x5893dae17d769322, vehicle, state); }
	void SET_CONVERTIBLE_ROOF_LATCH_STATE_f(Vehicle vehicle, BOOL state) { FastCall<void>(0x5893dae17d769322, vehicle, state); }
	float GET_VEHICLE_ESTIMATED_MAX_SPEED(Vehicle vehicle) { return ToFloat(Call<_float>(0x9027dd291426d5cd, vehicle)); }
	float GET_VEHICLE_ESTIMATED_MAX_SPEED_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0x9027dd291426d5cd, vehicle)); }
	float GET_VEHICLE_MAX_BRAKING(Vehicle vehicle) { return ToFloat(Call<_float>(0xa43017943f0051d1, vehicle)); }
	float GET_VEHICLE_MAX_BRAKING_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xa43017943f0051d1, vehicle)); }
	float GET_VEHICLE_MAX_TRACTION(Vehicle vehicle) { return ToFloat(Call<_float>(0xe1d2db66ee73428b, vehicle)); }
	float GET_VEHICLE_MAX_TRACTION_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xe1d2db66ee73428b, vehicle)); }
	float GET_VEHICLE_ACCELERATION(Vehicle vehicle) { return ToFloat(Call<_float>(0xdd9b666fd11b243c, vehicle)); }
	float GET_VEHICLE_ACCELERATION_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xdd9b666fd11b243c, vehicle)); }
	float GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED(Hash modelHash) { return ToFloat(Call<_float>(0xa56252e5934ce497, modelHash)); }
	float GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED_f(Hash modelHash) { return ToFloat(FastCall<_float>(0xa56252e5934ce497, modelHash)); }
	float GET_VEHICLE_MODEL_MAX_BRAKING(Hash modelHash) { return ToFloat(Call<_float>(0x2e1691b5aa1eca9b, modelHash)); }
	float GET_VEHICLE_MODEL_MAX_BRAKING_f(Hash modelHash) { return ToFloat(FastCall<_float>(0x2e1691b5aa1eca9b, modelHash)); }
	float GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS(Hash modelHash) { return ToFloat(Call<_float>(0x70513950017a10f0, modelHash)); }
	float GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS_f(Hash modelHash) { return ToFloat(FastCall<_float>(0x70513950017a10f0, modelHash)); }
	float GET_VEHICLE_MODEL_MAX_TRACTION(Hash modelHash) { return ToFloat(Call<_float>(0x94bba572e723e301, modelHash)); }
	float GET_VEHICLE_MODEL_MAX_TRACTION_f(Hash modelHash) { return ToFloat(FastCall<_float>(0x94bba572e723e301, modelHash)); }
	float GET_VEHICLE_MODEL_ACCELERATION(Hash modelHash) { return ToFloat(Call<_float>(0x9084307bc9cbc4b2, modelHash)); }
	float GET_VEHICLE_MODEL_ACCELERATION_f(Hash modelHash) { return ToFloat(FastCall<_float>(0x9084307bc9cbc4b2, modelHash)); }
	float GET_VEHICLE_MODEL_ACCELERATION_MAX_MODS(Hash modelHash) { return ToFloat(Call<_float>(0x6f3db4f76e5f80b9, modelHash)); }
	float GET_VEHICLE_MODEL_ACCELERATION_MAX_MODS_f(Hash modelHash) { return ToFloat(FastCall<_float>(0x6f3db4f76e5f80b9, modelHash)); }
	float GET_FLYING_VEHICLE_MODEL_AGILITY(Hash modelHash) { return ToFloat(Call<_float>(0xf02a10091bfca3b5, modelHash)); }
	float GET_FLYING_VEHICLE_MODEL_AGILITY_f(Hash modelHash) { return ToFloat(FastCall<_float>(0xf02a10091bfca3b5, modelHash)); }
	float GET_BOAT_VEHICLE_MODEL_AGILITY(Hash modelHash) { return ToFloat(Call<_float>(0xcf257185cc7989e6, modelHash)); }
	float GET_BOAT_VEHICLE_MODEL_AGILITY_f(Hash modelHash) { return ToFloat(FastCall<_float>(0xcf257185cc7989e6, modelHash)); }
	float GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED(int vehicleClass) { return ToFloat(Call<_float>(0xa87373c64a4f5566, vehicleClass)); }
	float GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED_f(int vehicleClass) { return ToFloat(FastCall<_float>(0xa87373c64a4f5566, vehicleClass)); }
	float GET_VEHICLE_CLASS_MAX_TRACTION(int vehicleClass) { return ToFloat(Call<_float>(0x4d5cde1db9ce2d12, vehicleClass)); }
	float GET_VEHICLE_CLASS_MAX_TRACTION_f(int vehicleClass) { return ToFloat(FastCall<_float>(0x4d5cde1db9ce2d12, vehicleClass)); }
	float GET_VEHICLE_CLASS_MAX_AGILITY(int vehicleClass) { return ToFloat(Call<_float>(0xe1769bcb69b02187, vehicleClass)); }
	float GET_VEHICLE_CLASS_MAX_AGILITY_f(int vehicleClass) { return ToFloat(FastCall<_float>(0xe1769bcb69b02187, vehicleClass)); }
	float GET_VEHICLE_CLASS_MAX_ACCELERATION(int vehicleClass) { return ToFloat(Call<_float>(0x7282290c555fa45e, vehicleClass)); }
	float GET_VEHICLE_CLASS_MAX_ACCELERATION_f(int vehicleClass) { return ToFloat(FastCall<_float>(0x7282290c555fa45e, vehicleClass)); }
	float GET_VEHICLE_CLASS_MAX_BRAKING(int vehicleClass) { return ToFloat(Call<_float>(0xe1769bcbb0ea7a6a, vehicleClass)); }
	float GET_VEHICLE_CLASS_MAX_BRAKING_f(int vehicleClass) { return ToFloat(FastCall<_float>(0xe1769bcbb0ea7a6a, vehicleClass)); }
	int ADD_ROAD_NODE_SPEED_ZONE(float x, float y, float z, float radius, float speed, BOOL p5) { return Call<int>(0xd61ee84ed5c93d00, x, y, z, radius, speed, p5); }
	int ADD_ROAD_NODE_SPEED_ZONE_f(float x, float y, float z, float radius, float speed, BOOL p5) { return FastCall<int>(0xd61ee84ed5c93d00, x, y, z, radius, speed, p5); }
	BOOL REMOVE_ROAD_NODE_SPEED_ZONE(int speedzone) { return Call<BOOL>(0x6fddd6b5f9f37cdd, speedzone); }
	BOOL REMOVE_ROAD_NODE_SPEED_ZONE_f(int speedzone) { return FastCall<BOOL>(0x6fddd6b5f9f37cdd, speedzone); }
	void OPEN_BOMB_BAY_DOORS(Vehicle vehicle) { Call<void>(0x57be8c3389efd718, vehicle); }
	void OPEN_BOMB_BAY_DOORS_f(Vehicle vehicle) { FastCall<void>(0x57be8c3389efd718, vehicle); }
	void CLOSE_BOMB_BAY_DOORS(Vehicle vehicle) { Call<void>(0xc452c76176e341ca, vehicle); }
	void CLOSE_BOMB_BAY_DOORS_f(Vehicle vehicle) { FastCall<void>(0xc452c76176e341ca, vehicle); }
	BOOL GET_ARE_BOMB_BAY_DOORS_OPEN(Vehicle aircraft) { return Call<BOOL>(0x873f1898f335cbf2, aircraft); }
	BOOL GET_ARE_BOMB_BAY_DOORS_OPEN_f(Vehicle aircraft) { return FastCall<BOOL>(0x873f1898f335cbf2, aircraft); }
	BOOL IS_VEHICLE_SEARCHLIGHT_ON(Vehicle vehicle) { return Call<BOOL>(0x560e9da50f1d37b8, vehicle); }
	BOOL IS_VEHICLE_SEARCHLIGHT_ON_f(Vehicle vehicle) { return FastCall<BOOL>(0x560e9da50f1d37b8, vehicle); }
	void SET_VEHICLE_SEARCHLIGHT(Vehicle heli, BOOL toggle, BOOL canBeUsedByAI) { Call<void>(0x966a51893b00c1e, heli, toggle, canBeUsedByAI); }
	void SET_VEHICLE_SEARCHLIGHT_f(Vehicle heli, BOOL toggle, BOOL canBeUsedByAI) { FastCall<void>(0x966a51893b00c1e, heli, toggle, canBeUsedByAI); }
	BOOL DOES_VEHICLE_HAVE_SEARCHLIGHT(Vehicle vehicle) { return Call<BOOL>(0x7751a9abb8bd2bd0, vehicle); }
	BOOL DOES_VEHICLE_HAVE_SEARCHLIGHT_f(Vehicle vehicle) { return FastCall<BOOL>(0x7751a9abb8bd2bd0, vehicle); }
	BOOL IS_ENTRY_POINT_FOR_SEAT_CLEAR(Ped ped, Vehicle vehicle, int seatIndex, BOOL side, BOOL onEnter) { return Call<BOOL>(0x4ce75adf4523197a, ped, vehicle, seatIndex, side, onEnter); }
	BOOL IS_ENTRY_POINT_FOR_SEAT_CLEAR_f(Ped ped, Vehicle vehicle, int seatIndex, BOOL side, BOOL onEnter) { return FastCall<BOOL>(0x4ce75adf4523197a, ped, vehicle, seatIndex, side, onEnter); }
	Vector3* GET_ENTRY_POINT_POSITION(Vehicle vehicle, int doorId) { Call<Vector3*>(0xd31effaa2f2f300e, vehicle, doorId); return GetVector(); }
	BOOL CAN_SHUFFLE_SEAT(Vehicle vehicle, int seatIndex) { return Call<BOOL>(0x46d54c88cb256fda, vehicle, seatIndex); }
	BOOL CAN_SHUFFLE_SEAT_f(Vehicle vehicle, int seatIndex) { return FastCall<BOOL>(0x46d54c88cb256fda, vehicle, seatIndex); }
	int GET_NUM_MOD_KITS(Vehicle vehicle) { return Call<int>(0x90ebbfc6b9b7f2bc, vehicle); }
	int GET_NUM_MOD_KITS_f(Vehicle vehicle) { return FastCall<int>(0x90ebbfc6b9b7f2bc, vehicle); }
	void SET_VEHICLE_MOD_KIT(Vehicle vehicle, int modKit) { Call<void>(0x8b4e57c8a21003a9, vehicle, modKit); }
	void SET_VEHICLE_MOD_KIT_f(Vehicle vehicle, int modKit) { FastCall<void>(0x8b4e57c8a21003a9, vehicle, modKit); }
	int GET_VEHICLE_MOD_KIT(Vehicle vehicle) { return Call<int>(0x73baf756fe136e9d, vehicle); }
	int GET_VEHICLE_MOD_KIT_f(Vehicle vehicle) { return FastCall<int>(0x73baf756fe136e9d, vehicle); }
	int GET_VEHICLE_MOD_KIT_TYPE(Vehicle vehicle) { return Call<int>(0xe1f9be809c2c6b9c, vehicle); }
	int GET_VEHICLE_MOD_KIT_TYPE_f(Vehicle vehicle) { return FastCall<int>(0xe1f9be809c2c6b9c, vehicle); }
	int GET_VEHICLE_WHEEL_TYPE(Vehicle vehicle) { return Call<int>(0xaa761f739fbff07a, vehicle); }
	int GET_VEHICLE_WHEEL_TYPE_f(Vehicle vehicle) { return FastCall<int>(0xaa761f739fbff07a, vehicle); }
	void SET_VEHICLE_WHEEL_TYPE(Vehicle vehicle, int WheelType) { Call<void>(0x31da67edee04afee, vehicle, WheelType); }
	void SET_VEHICLE_WHEEL_TYPE_f(Vehicle vehicle, int WheelType) { FastCall<void>(0x31da67edee04afee, vehicle, WheelType); }
	int GET_NUM_MOD_COLORS(int paintType, BOOL p1) { return Call<int>(0x4fae8ff1e30540f, paintType, p1); }
	int GET_NUM_MOD_COLORS_f(int paintType, BOOL p1) { return FastCall<int>(0x4fae8ff1e30540f, paintType, p1); }
	void SET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int paintType, int color, int pearlescentColor) { Call<void>(0x9561f87b063ada8, vehicle, paintType, color, pearlescentColor); }
	void SET_VEHICLE_MOD_COLOR_1_f(Vehicle vehicle, int paintType, int color, int pearlescentColor) { FastCall<void>(0x9561f87b063ada8, vehicle, paintType, color, pearlescentColor); }
	void SET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int paintType, int color) { Call<void>(0x9561f87b063ada9, vehicle, paintType, color); }
	void SET_VEHICLE_MOD_COLOR_2_f(Vehicle vehicle, int paintType, int color) { FastCall<void>(0x9561f87b063ada9, vehicle, paintType, color); }
	void GET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int* paintType, int* color, int* pearlescentColor) { Call<void>(0xa43158b836107e9c, vehicle, paintType, color, pearlescentColor); }
	void GET_VEHICLE_MOD_COLOR_1_f(Vehicle vehicle, int* paintType, int* color, int* pearlescentColor) { FastCall<void>(0xa43158b836107e9c, vehicle, paintType, color, pearlescentColor); }
	void GET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int* paintType, int* color) { Call<void>(0xa43158b836107e9d, vehicle, paintType, color); }
	void GET_VEHICLE_MOD_COLOR_2_f(Vehicle vehicle, int* paintType, int* color) { FastCall<void>(0xa43158b836107e9d, vehicle, paintType, color); }
	const char* GET_VEHICLE_MOD_COLOR_1_NAME(Vehicle vehicle, BOOL p1) { return Call<char*>(0xb73d9c1f26216e4e, vehicle, p1); }
	const char* GET_VEHICLE_MOD_COLOR_1_NAME_f(Vehicle vehicle, BOOL p1) { return FastCall<char*>(0xb73d9c1f26216e4e, vehicle, p1); }
	const char* GET_VEHICLE_MOD_COLOR_2_NAME(Vehicle vehicle) { return Call<char*>(0xb73d9c1f27d646ed, vehicle); }
	const char* GET_VEHICLE_MOD_COLOR_2_NAME_f(Vehicle vehicle) { return FastCall<char*>(0xb73d9c1f27d646ed, vehicle); }
	BOOL HAVE_VEHICLE_MODS_STREAMED_IN(Vehicle vehicle) { return Call<BOOL>(0xd2f1aa58e33a2781, vehicle); }
	BOOL HAVE_VEHICLE_MODS_STREAMED_IN_f(Vehicle vehicle) { return FastCall<BOOL>(0xd2f1aa58e33a2781, vehicle); }
	BOOL IS_VEHICLE_MOD_GEN9_EXCLUSIVE(Vehicle vehicle, int modType, int modIndex) { return Call<BOOL>(0x42378ceb82b8a40d, vehicle, modType, modIndex); }
	BOOL IS_VEHICLE_MOD_GEN9_EXCLUSIVE_f(Vehicle vehicle, int modType, int modIndex) { return FastCall<BOOL>(0x42378ceb82b8a40d, vehicle, modType, modIndex); }
	void SET_VEHICLE_MOD(Vehicle vehicle, int modType, int modIndex, BOOL customTires) { Call<void>(0xe0dc5136add45ab2, vehicle, modType, modIndex, customTires); }
	void SET_VEHICLE_MOD_f(Vehicle vehicle, int modType, int modIndex, BOOL customTires) { FastCall<void>(0xe0dc5136add45ab2, vehicle, modType, modIndex, customTires); }
	int GET_VEHICLE_MOD(Vehicle vehicle, int modType) { return Call<int>(0x785f71be778b5fa6, vehicle, modType); }
	int GET_VEHICLE_MOD_f(Vehicle vehicle, int modType) { return FastCall<int>(0x785f71be778b5fa6, vehicle, modType); }
	int GET_VEHICLE_MOD_VARIATION(Vehicle vehicle, int modType) { return Call<int>(0x5d3e19e778e3349a, vehicle, modType); }
	int GET_VEHICLE_MOD_VARIATION_f(Vehicle vehicle, int modType) { return FastCall<int>(0x5d3e19e778e3349a, vehicle, modType); }
	int GET_NUM_VEHICLE_MODS(Vehicle vehicle, int modType) { return Call<int>(0xb4f44235313a2926, vehicle, modType); }
	int GET_NUM_VEHICLE_MODS_f(Vehicle vehicle, int modType) { return FastCall<int>(0xb4f44235313a2926, vehicle, modType); }
	void REMOVE_VEHICLE_MOD(Vehicle vehicle, int modType) { Call<void>(0x1a61112fd9d6b3f4, vehicle, modType); }
	void REMOVE_VEHICLE_MOD_f(Vehicle vehicle, int modType) { FastCall<void>(0x1a61112fd9d6b3f4, vehicle, modType); }
	void TOGGLE_VEHICLE_MOD(Vehicle vehicle, int modType, BOOL toggle) { Call<void>(0xb11cc0239eacbec4, vehicle, modType, toggle); }
	void TOGGLE_VEHICLE_MOD_f(Vehicle vehicle, int modType, BOOL toggle) { FastCall<void>(0xb11cc0239eacbec4, vehicle, modType, toggle); }
	BOOL IS_TOGGLE_MOD_ON(Vehicle vehicle, int modType) { return Call<BOOL>(0x3e1a78f021f67152, vehicle, modType); }
	BOOL IS_TOGGLE_MOD_ON_f(Vehicle vehicle, int modType) { return FastCall<BOOL>(0x3e1a78f021f67152, vehicle, modType); }
	const char* GET_MOD_TEXT_LABEL(Vehicle vehicle, int modType, int modValue) { return Call<char*>(0x6d5c866c4aa282e8, vehicle, modType, modValue); }
	const char* GET_MOD_TEXT_LABEL_f(Vehicle vehicle, int modType, int modValue) { return FastCall<char*>(0x6d5c866c4aa282e8, vehicle, modType, modValue); }
	const char* GET_MOD_SLOT_NAME(Vehicle vehicle, int modType) { return Call<char*>(0x7f66143e9ac159c6, vehicle, modType); }
	const char* GET_MOD_SLOT_NAME_f(Vehicle vehicle, int modType) { return FastCall<char*>(0x7f66143e9ac159c6, vehicle, modType); }
	const char* GET_LIVERY_NAME(Vehicle vehicle, int liveryIndex) { return Call<char*>(0x7842be3a250e7b8e, vehicle, liveryIndex); }
	const char* GET_LIVERY_NAME_f(Vehicle vehicle, int liveryIndex) { return FastCall<char*>(0x7842be3a250e7b8e, vehicle, liveryIndex); }
	int GET_VEHICLE_MOD_MODIFIER_VALUE(Vehicle vehicle, int modType, int modIndex) { return Call<int>(0x17ffc1fc95f83fa2, vehicle, modType, modIndex); }
	int GET_VEHICLE_MOD_MODIFIER_VALUE_f(Vehicle vehicle, int modType, int modIndex) { return FastCall<int>(0x17ffc1fc95f83fa2, vehicle, modType, modIndex); }
	Hash GET_VEHICLE_MOD_IDENTIFIER_HASH(Vehicle vehicle, int modType, int modIndex) { return Call<Hash>(0x42849887cf60844b, vehicle, modType, modIndex); }
	Hash GET_VEHICLE_MOD_IDENTIFIER_HASH_f(Vehicle vehicle, int modType, int modIndex) { return FastCall<Hash>(0x42849887cf60844b, vehicle, modType, modIndex); }
	void PRELOAD_VEHICLE_MOD(Vehicle vehicle, int modType, int modIndex) { Call<void>(0x27ef15a4c7ced1d9, vehicle, modType, modIndex); }
	void PRELOAD_VEHICLE_MOD_f(Vehicle vehicle, int modType, int modIndex) { FastCall<void>(0x27ef15a4c7ced1d9, vehicle, modType, modIndex); }
	BOOL HAS_PRELOAD_MODS_FINISHED(Vehicle vehicle) { return Call<BOOL>(0x7c68d4abd347a765, vehicle); }
	BOOL HAS_PRELOAD_MODS_FINISHED_f(Vehicle vehicle) { return FastCall<BOOL>(0x7c68d4abd347a765, vehicle); }
	void RELEASE_PRELOAD_MODS(Vehicle vehicle) { Call<void>(0x32db77d270aa3f9f, vehicle); }
	void RELEASE_PRELOAD_MODS_f(Vehicle vehicle) { FastCall<void>(0x32db77d270aa3f9f, vehicle); }
	void SET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int r, int g, int b) { Call<void>(0x588621cc7404683c, vehicle, r, g, b); }
	void SET_VEHICLE_TYRE_SMOKE_COLOR_f(Vehicle vehicle, int r, int g, int b) { FastCall<void>(0x588621cc7404683c, vehicle, r, g, b); }
	void GET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int* r, int* g, int* b) { Call<void>(0xe593420d2a380fc8, vehicle, r, g, b); }
	void GET_VEHICLE_TYRE_SMOKE_COLOR_f(Vehicle vehicle, int* r, int* g, int* b) { FastCall<void>(0xe593420d2a380fc8, vehicle, r, g, b); }
	void SET_VEHICLE_WINDOW_TINT(Vehicle vehicle, int tint) { Call<void>(0x972b4d1270609ba, vehicle, tint); }
	void SET_VEHICLE_WINDOW_TINT_f(Vehicle vehicle, int tint) { FastCall<void>(0x972b4d1270609ba, vehicle, tint); }
	int GET_VEHICLE_WINDOW_TINT(Vehicle vehicle) { return Call<int>(0xa44dee01acb2daae, vehicle); }
	int GET_VEHICLE_WINDOW_TINT_f(Vehicle vehicle) { return FastCall<int>(0xa44dee01acb2daae, vehicle); }
	int GET_NUM_VEHICLE_WINDOW_TINTS() { return Call<int>(0xab1f820a933461e); }
	int GET_NUM_VEHICLE_WINDOW_TINTS_f() { return FastCall<int>(0xab1f820a933461e); }
	void GET_VEHICLE_COLOR(Vehicle vehicle, int* r, int* g, int* b) { Call<void>(0xde49fbfec1a54b07, vehicle, r, g, b); }
	void GET_VEHICLE_COLOR_f(Vehicle vehicle, int* r, int* g, int* b) { FastCall<void>(0xde49fbfec1a54b07, vehicle, r, g, b); }
	int GET_VEHICLE_COLOURS_WHICH_CAN_BE_SET(Vehicle vehicle) { return Call<int>(0x58a5e7304a279c2b, vehicle); }
	int GET_VEHICLE_COLOURS_WHICH_CAN_BE_SET_f(Vehicle vehicle) { return FastCall<int>(0x58a5e7304a279c2b, vehicle); }
	Hash GET_VEHICLE_CAUSE_OF_DESTRUCTION(Vehicle vehicle) { return Call<Hash>(0xb2e57699b0a5089c, vehicle); }
	Hash GET_VEHICLE_CAUSE_OF_DESTRUCTION_f(Vehicle vehicle) { return FastCall<Hash>(0xb2e57699b0a5089c, vehicle); }
	void OVERRIDE_PLANE_DAMAGE_THREHSOLD(Vehicle vehicle, float health) { Call<void>(0xed3a5f6902793a7b, vehicle, health); }
	void OVERRIDE_PLANE_DAMAGE_THREHSOLD_f(Vehicle vehicle, float health) { FastCall<void>(0xed3a5f6902793a7b, vehicle, health); }
	void _SET_TRANSMISSION_REDUCED_GEAR_RATIO(Vehicle vehicle, BOOL toggle) { Call<void>(0x9182eb4b4e8ae9fb, vehicle, toggle); }
	void _SET_TRANSMISSION_REDUCED_GEAR_RATIO_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x9182eb4b4e8ae9fb, vehicle, toggle); }
	int _GET_VEHICLE_DESIRED_DRIVE_GEAR(Vehicle vehicle) { return Call<int>(0x2ae8cf4e403bf104, vehicle); }
	int _GET_VEHICLE_DESIRED_DRIVE_GEAR_f(Vehicle vehicle) { return FastCall<int>(0x2ae8cf4e403bf104, vehicle); }
	BOOL GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle) { return Call<BOOL>(0x4f980515afe7b0cd, vehicle); }
	BOOL GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED_f(Vehicle vehicle) { return FastCall<BOOL>(0x4f980515afe7b0cd, vehicle); }
	BOOL GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle) { return Call<BOOL>(0xafd8b651efe52a2a, vehicle); }
	BOOL GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED_f(Vehicle vehicle) { return FastCall<BOOL>(0xafd8b651efe52a2a, vehicle); }
	BOOL GET_BOTH_VEHICLE_HEADLIGHTS_DAMAGED(Vehicle vehicle) { return Call<BOOL>(0xaba717f7dd3aafb, vehicle); }
	BOOL GET_BOTH_VEHICLE_HEADLIGHTS_DAMAGED_f(Vehicle vehicle) { return FastCall<BOOL>(0xaba717f7dd3aafb, vehicle); }
	void MODIFY_VEHICLE_TOP_SPEED(Vehicle vehicle, float value) { Call<void>(0x7d320305c28346e5, vehicle, value); }
	void MODIFY_VEHICLE_TOP_SPEED_f(Vehicle vehicle, float value) { FastCall<void>(0x7d320305c28346e5, vehicle, value); }
	void SET_VEHICLE_MAX_SPEED(Vehicle vehicle, float speed) { Call<void>(0xf11787d2d23da53c, vehicle, speed); }
	void SET_VEHICLE_MAX_SPEED_f(Vehicle vehicle, float speed) { FastCall<void>(0xf11787d2d23da53c, vehicle, speed); }
	void SET_VEHICLE_STAYS_FROZEN_WHEN_CLEANED_UP(Vehicle vehicle, BOOL toggle) { Call<void>(0xdb3f9f272437f72d, vehicle, toggle); }
	void SET_VEHICLE_STAYS_FROZEN_WHEN_CLEANED_UP_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xdb3f9f272437f72d, vehicle, toggle); }
	void SET_VEHICLE_ACT_AS_IF_HIGH_SPEED_FOR_FRAG_SMASHING(Vehicle vehicle, BOOL p1) { Call<void>(0x3bfa97cc9130465a, vehicle, p1); }
	void SET_VEHICLE_ACT_AS_IF_HIGH_SPEED_FOR_FRAG_SMASHING_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x3bfa97cc9130465a, vehicle, p1); }
	void SET_PEDS_CAN_FALL_OFF_THIS_VEHICLE_FROM_LARGE_FALL_DAMAGE(Vehicle vehicle, BOOL toggle, float p2) { Call<void>(0x20d9de2a1799f667, vehicle, toggle, p2); }
	void SET_PEDS_CAN_FALL_OFF_THIS_VEHICLE_FROM_LARGE_FALL_DAMAGE_f(Vehicle vehicle, BOOL toggle, float p2) { FastCall<void>(0x20d9de2a1799f667, vehicle, toggle, p2); }
	int ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6) { return Call<int>(0x91e4108575d3161c, p0, p1, p2, p3, p4, p5, p6); }
	int ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA_f(float p0, float p1, float p2, float p3, float p4, float p5, float p6) { return FastCall<int>(0x91e4108575d3161c, p0, p1, p2, p3, p4, p5, p6); }
	void REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA(int p0) { Call<void>(0x8873dc848c548d05, p0); }
	void REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA_f(int p0) { FastCall<void>(0x8873dc848c548d05, p0); }
	BOOL IS_ANY_PED_RAPPELLING_FROM_HELI(Vehicle vehicle) { return Call<BOOL>(0xb5280e778848cfd4, vehicle); }
	BOOL IS_ANY_PED_RAPPELLING_FROM_HELI_f(Vehicle vehicle) { return FastCall<BOOL>(0xb5280e778848cfd4, vehicle); }
	void SET_VEHICLE_CHEAT_POWER_INCREASE(Vehicle vehicle, float value) { Call<void>(0x1454000e839ccf98, vehicle, value); }
	void SET_VEHICLE_CHEAT_POWER_INCREASE_f(Vehicle vehicle, float value) { FastCall<void>(0x1454000e839ccf98, vehicle, value); }
	void SET_VEHICLE_INFLUENCES_WANTED_LEVEL(Any p0, BOOL p1) { Call<void>(0xe588a3ba3d785c25, p0, p1); }
	void SET_VEHICLE_INFLUENCES_WANTED_LEVEL_f(Any p0, BOOL p1) { FastCall<void>(0xe588a3ba3d785c25, p0, p1); }
	void SET_VEHICLE_IS_WANTED(Vehicle vehicle, BOOL state) { Call<void>(0xf117852d32a79334, vehicle, state); }
	void SET_VEHICLE_IS_WANTED_f(Vehicle vehicle, BOOL state) { FastCall<void>(0xf117852d32a79334, vehicle, state); }
	void SWING_BOAT_BOOM_TO_RATIO(Vehicle vehicle, float ratio) { Call<void>(0x6b707ec32eace3d, vehicle, ratio); }
	void SWING_BOAT_BOOM_TO_RATIO_f(Vehicle vehicle, float ratio) { FastCall<void>(0x6b707ec32eace3d, vehicle, ratio); }
	void SWING_BOAT_BOOM_FREELY(Vehicle vehicle, BOOL toggle) { Call<void>(0xc9ee13744c718b8f, vehicle, toggle); }
	void SWING_BOAT_BOOM_FREELY_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xc9ee13744c718b8f, vehicle, toggle); }
	void ALLOW_BOAT_BOOM_TO_ANIMATE(Vehicle vehicle, BOOL toggle) { Call<void>(0x1553b9e48cf2b128, vehicle, toggle); }
	void ALLOW_BOAT_BOOM_TO_ANIMATE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1553b9e48cf2b128, vehicle, toggle); }
	float GET_BOAT_BOOM_POSITION_RATIO(Vehicle vehicle) { return ToFloat(Call<_float>(0x5da8e7f42e2cb093, vehicle)); }
	float GET_BOAT_BOOM_POSITION_RATIO_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0x5da8e7f42e2cb093, vehicle)); }
	void DISABLE_PLANE_AILERON(Vehicle vehicle, BOOL p1, BOOL p2) { Call<void>(0x17370b634a12f636, vehicle, p1, p2); }
	void DISABLE_PLANE_AILERON_f(Vehicle vehicle, BOOL p1, BOOL p2) { FastCall<void>(0x17370b634a12f636, vehicle, p1, p2); }
	BOOL GET_IS_VEHICLE_ENGINE_RUNNING(Vehicle vehicle) { return Call<BOOL>(0xcb03ff2d51d40921, vehicle); }
	BOOL GET_IS_VEHICLE_ENGINE_RUNNING_f(Vehicle vehicle) { return FastCall<BOOL>(0xcb03ff2d51d40921, vehicle); }
	void SET_VEHICLE_USE_ALTERNATE_HANDLING(Vehicle vehicle, BOOL toggle) { Call<void>(0x8d9697c445897332, vehicle, toggle); }
	void SET_VEHICLE_USE_ALTERNATE_HANDLING_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x8d9697c445897332, vehicle, toggle); }
	void SET_BIKE_ON_STAND(Vehicle vehicle, float x, float y) { Call<void>(0x41df95253fc96eb7, vehicle, x, y); }
	void SET_BIKE_ON_STAND_f(Vehicle vehicle, float x, float y) { FastCall<void>(0x41df95253fc96eb7, vehicle, x, y); }
	void SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(Vehicle vehicle, BOOL p1) { Call<void>(0x4381be69dd121093, vehicle, p1); }
	void SET_VEHICLE_NOT_STEALABLE_AMBIENTLY_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x4381be69dd121093, vehicle, p1); }
	void LOCK_DOORS_WHEN_NO_LONGER_NEEDED(Vehicle vehicle) { Call<void>(0x5f1861f7a344d84, vehicle); }
	void LOCK_DOORS_WHEN_NO_LONGER_NEEDED_f(Vehicle vehicle) { FastCall<void>(0x5f1861f7a344d84, vehicle); }
	void SET_LAST_DRIVEN_VEHICLE(Vehicle vehicle) { Call<void>(0x3612ba0a4e1ca73d, vehicle); }
	void SET_LAST_DRIVEN_VEHICLE_f(Vehicle vehicle) { FastCall<void>(0x3612ba0a4e1ca73d, vehicle); }
	Vehicle GET_LAST_DRIVEN_VEHICLE() { return Call<Vehicle>(0xd0edf33ad3c97831); }
	Vehicle GET_LAST_DRIVEN_VEHICLE_f() { return FastCall<Vehicle>(0xd0edf33ad3c97831); }
	void CLEAR_LAST_DRIVEN_VEHICLE() { Call<void>(0xb62b4a0c753801a8); }
	void CLEAR_LAST_DRIVEN_VEHICLE_f() { FastCall<void>(0xb62b4a0c753801a8); }
	void SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG(Vehicle vehicle, BOOL toggle) { Call<void>(0xefdc1dba6705dc69, vehicle, toggle); }
	void SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xefdc1dba6705dc69, vehicle, toggle); }
	void SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN(Vehicle plane, int height) { Call<void>(0x14209dc975a8e517, plane, height); }
	void SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN_f(Vehicle plane, int height) { FastCall<void>(0x14209dc975a8e517, plane, height); }
	void SET_VEHICLE_LOD_MULTIPLIER(Vehicle vehicle, float multiplier) { Call<void>(0x2a63976abaa657cf, vehicle, multiplier); }
	void SET_VEHICLE_LOD_MULTIPLIER_f(Vehicle vehicle, float multiplier) { FastCall<void>(0x2a63976abaa657cf, vehicle, multiplier); }
	void SET_VEHICLE_CAN_SAVE_IN_GARAGE(Vehicle vehicle, BOOL toggle) { Call<void>(0x1ae2745ed56c25de, vehicle, toggle); }
	void SET_VEHICLE_CAN_SAVE_IN_GARAGE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1ae2745ed56c25de, vehicle, toggle); }
	int GET_VEHICLE_NUM_OF_BROKEN_OFF_PARTS(Vehicle vehicle) { return Call<int>(0xe99aff60126939b9, vehicle); }
	int GET_VEHICLE_NUM_OF_BROKEN_OFF_PARTS_f(Vehicle vehicle) { return FastCall<int>(0xe99aff60126939b9, vehicle); }
	int GET_VEHICLE_NUM_OF_BROKEN_LOOSEN_PARTS(Vehicle vehicle) { return Call<int>(0xeb48823e9a7d24c8, vehicle); }
	int GET_VEHICLE_NUM_OF_BROKEN_LOOSEN_PARTS_f(Vehicle vehicle) { return FastCall<int>(0xeb48823e9a7d24c8, vehicle); }
	void SET_FORCE_VEHICLE_ENGINE_DAMAGE_BY_BULLET(Any p0, BOOL p1) { Call<void>(0x76b05a0baaac7d93, p0, p1); }
	void SET_FORCE_VEHICLE_ENGINE_DAMAGE_BY_BULLET_f(Any p0, BOOL p1) { FastCall<void>(0x76b05a0baaac7d93, p0, p1); }
	void SET_VEHICLE_GENERATES_ENGINE_SHOCKING_EVENTS(Vehicle vehicle, BOOL toggle) { Call<void>(0x98f65fe00a1cb24c, vehicle, toggle); }
	void SET_VEHICLE_GENERATES_ENGINE_SHOCKING_EVENTS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x98f65fe00a1cb24c, vehicle, toggle); }
	void COPY_VEHICLE_DAMAGES(Vehicle sourceVehicle, Vehicle targetVehicle) { Call<void>(0xf69f7dc31cccd7c7, sourceVehicle, targetVehicle); }
	void COPY_VEHICLE_DAMAGES_f(Vehicle sourceVehicle, Vehicle targetVehicle) { FastCall<void>(0xf69f7dc31cccd7c7, sourceVehicle, targetVehicle); }
	void DISABLE_VEHICLE_EXPLOSION_BREAK_OFF_PARTS() { Call<void>(0x510d70decfbf1ffc); }
	void DISABLE_VEHICLE_EXPLOSION_BREAK_OFF_PARTS_f() { FastCall<void>(0x510d70decfbf1ffc); }
	void SET_LIGHTS_CUTOFF_DISTANCE_TWEAK(float distance) { Call<void>(0x500d63c9fae01cf, distance); }
	void SET_LIGHTS_CUTOFF_DISTANCE_TWEAK_f(float distance) { FastCall<void>(0x500d63c9fae01cf, distance); }
	void SET_VEHICLE_SHOOT_AT_TARGET(Ped driver, Entity entity, float xTarget, float yTarget, float zTarget) { Call<void>(0x8da9b7dd76cf16ad, driver, entity, xTarget, yTarget, zTarget); }
	void SET_VEHICLE_SHOOT_AT_TARGET_f(Ped driver, Entity entity, float xTarget, float yTarget, float zTarget) { FastCall<void>(0x8da9b7dd76cf16ad, driver, entity, xTarget, yTarget, zTarget); }
	BOOL GET_VEHICLE_LOCK_ON_TARGET(Vehicle vehicle, Entity* entity) { return Call<BOOL>(0xf714f769d611b699, vehicle, entity); }
	BOOL GET_VEHICLE_LOCK_ON_TARGET_f(Vehicle vehicle, Entity* entity) { return FastCall<BOOL>(0xf714f769d611b699, vehicle, entity); }
	void SET_FORCE_HD_VEHICLE(Vehicle vehicle, BOOL toggle) { Call<void>(0x52aececa5b8e231a, vehicle, toggle); }
	void SET_FORCE_HD_VEHICLE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x52aececa5b8e231a, vehicle, toggle); }
	void SET_VEHICLE_CUSTOM_PATH_NODE_STREAMING_RADIUS(Vehicle vehicle, float p1) { Call<void>(0x846787aa9ef90890, vehicle, p1); }
	void SET_VEHICLE_CUSTOM_PATH_NODE_STREAMING_RADIUS_f(Vehicle vehicle, float p1) { FastCall<void>(0x846787aa9ef90890, vehicle, p1); }
	int GET_VEHICLE_PLATE_TYPE(Vehicle vehicle) { return Call<int>(0xaa757a23b0d66d9f, vehicle); }
	int GET_VEHICLE_PLATE_TYPE_f(Vehicle vehicle) { return FastCall<int>(0xaa757a23b0d66d9f, vehicle); }
	void TRACK_VEHICLE_VISIBILITY(Vehicle vehicle) { Call<void>(0xf1e9b49dbebb19b9, vehicle); }
	void TRACK_VEHICLE_VISIBILITY_f(Vehicle vehicle) { FastCall<void>(0xf1e9b49dbebb19b9, vehicle); }
	BOOL IS_VEHICLE_VISIBLE(Vehicle vehicle) { return Call<BOOL>(0x1b5e14488143d0a, vehicle); }
	BOOL IS_VEHICLE_VISIBLE_f(Vehicle vehicle) { return FastCall<BOOL>(0x1b5e14488143d0a, vehicle); }
	void SET_VEHICLE_GRAVITY(Vehicle vehicle, BOOL toggle) { Call<void>(0x8b4e57c7699ac5fe, vehicle, toggle); }
	void SET_VEHICLE_GRAVITY_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x8b4e57c7699ac5fe, vehicle, toggle); }
	void SET_ENABLE_VEHICLE_SLIPSTREAMING(BOOL toggle) { Call<void>(0xd6907c2ba8372830, toggle); }
	void SET_ENABLE_VEHICLE_SLIPSTREAMING_f(BOOL toggle) { FastCall<void>(0xd6907c2ba8372830, toggle); }
	void SET_VEHICLE_SLIPSTREAMING_SHOULD_TIME_OUT(BOOL toggle) { Call<void>(0x65be57c82e88ac5b, toggle); }
	void SET_VEHICLE_SLIPSTREAMING_SHOULD_TIME_OUT_f(BOOL toggle) { FastCall<void>(0x65be57c82e88ac5b, toggle); }
	float GET_VEHICLE_CURRENT_TIME_IN_SLIP_STREAM(Vehicle vehicle) { return ToFloat(Call<_float>(0x1d249da55cf8b7d5, vehicle)); }
	float GET_VEHICLE_CURRENT_TIME_IN_SLIP_STREAM_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0x1d249da55cf8b7d5, vehicle)); }
	BOOL IS_VEHICLE_PRODUCING_SLIP_STREAM(Vehicle vehicle) { return Call<BOOL>(0x95c78be971fbe255, vehicle); }
	BOOL IS_VEHICLE_PRODUCING_SLIP_STREAM_f(Vehicle vehicle) { return FastCall<BOOL>(0x95c78be971fbe255, vehicle); }
	void SET_VEHICLE_INACTIVE_DURING_PLAYBACK(Vehicle vehicle, BOOL toggle) { Call<void>(0xd177c09e62c574b5, vehicle, toggle); }
	void SET_VEHICLE_INACTIVE_DURING_PLAYBACK_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xd177c09e62c574b5, vehicle, toggle); }
	void SET_VEHICLE_ACTIVE_DURING_PLAYBACK(Vehicle vehicle, BOOL toggle) { Call<void>(0x865b70819a65d150, vehicle, toggle); }
	void SET_VEHICLE_ACTIVE_DURING_PLAYBACK_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x865b70819a65d150, vehicle, toggle); }
	BOOL IS_VEHICLE_SPRAYABLE(Vehicle vehicle) { return Call<BOOL>(0x6bc2a01bad062a1f, vehicle); }
	BOOL IS_VEHICLE_SPRAYABLE_f(Vehicle vehicle) { return FastCall<BOOL>(0x6bc2a01bad062a1f, vehicle); }
	void SET_VEHICLE_ENGINE_CAN_DEGRADE(Vehicle vehicle, BOOL toggle) { Call<void>(0x6267f3192d611fa, vehicle, toggle); }
	void SET_VEHICLE_ENGINE_CAN_DEGRADE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x6267f3192d611fa, vehicle, toggle); }
	void DISABLE_VEHCILE_DYNAMIC_AMBIENT_SCALES(Vehicle vehicle, int p1, int p2) { Call<void>(0x48292f2968f9294e, vehicle, p1, p2); }
	void DISABLE_VEHCILE_DYNAMIC_AMBIENT_SCALES_f(Vehicle vehicle, int p1, int p2) { FastCall<void>(0x48292f2968f9294e, vehicle, p1, p2); }
	void ENABLE_VEHICLE_DYNAMIC_AMBIENT_SCALES(Vehicle vehicle) { Call<void>(0xce5304a947fa98ff, vehicle); }
	void ENABLE_VEHICLE_DYNAMIC_AMBIENT_SCALES_f(Vehicle vehicle) { FastCall<void>(0xce5304a947fa98ff, vehicle); }
	BOOL IS_PLANE_LANDING_GEAR_INTACT(Vehicle plane) { return Call<BOOL>(0x63cd154b576cfb53, plane); }
	BOOL IS_PLANE_LANDING_GEAR_INTACT_f(Vehicle plane) { return FastCall<BOOL>(0x63cd154b576cfb53, plane); }
	BOOL ARE_PLANE_PROPELLERS_INTACT(Vehicle plane) { return Call<BOOL>(0xbcafc58b4325b2d0, plane); }
	BOOL ARE_PLANE_PROPELLERS_INTACT_f(Vehicle plane) { return FastCall<BOOL>(0xbcafc58b4325b2d0, plane); }
	BOOL SET_PLANE_PROPELLER_HEALTH(Vehicle plane, float health) { return Call<BOOL>(0x817385784a944a6c, plane, health); }
	BOOL SET_PLANE_PROPELLER_HEALTH_f(Vehicle plane, float health) { return FastCall<BOOL>(0x817385784a944a6c, plane, health); }
	void SET_VEHICLE_CAN_DEFORM_WHEELS(Vehicle vehicle, BOOL toggle) { Call<void>(0xda014366dd86aab3, vehicle, toggle); }
	void SET_VEHICLE_CAN_DEFORM_WHEELS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xda014366dd86aab3, vehicle, toggle); }
	BOOL IS_VEHICLE_STOLEN(Vehicle vehicle) { return Call<BOOL>(0xbdfd9be96b39496f, vehicle); }
	BOOL IS_VEHICLE_STOLEN_f(Vehicle vehicle) { return FastCall<BOOL>(0xbdfd9be96b39496f, vehicle); }
	void SET_VEHICLE_IS_STOLEN(Vehicle vehicle, BOOL isStolen) { Call<void>(0xf117852d2ce045ac, vehicle, isStolen); }
	void SET_VEHICLE_IS_STOLEN_f(Vehicle vehicle, BOOL isStolen) { FastCall<void>(0xf117852d2ce045ac, vehicle, isStolen); }
	void SET_PLANE_TURBULENCE_MULTIPLIER(Vehicle vehicle, float multiplier) { Call<void>(0x2856736c264577ad, vehicle, multiplier); }
	void SET_PLANE_TURBULENCE_MULTIPLIER_f(Vehicle vehicle, float multiplier) { FastCall<void>(0x2856736c264577ad, vehicle, multiplier); }
	BOOL ARE_WINGS_OF_PLANE_INTACT(Vehicle plane) { return Call<BOOL>(0x4fdda776847f0eac, plane); }
	BOOL ARE_WINGS_OF_PLANE_INTACT_f(Vehicle plane) { return FastCall<BOOL>(0x4fdda776847f0eac, plane); }
	void ALLOW_AMBIENT_VEHICLES_TO_AVOID_ADVERSE_CONDITIONS(Vehicle vehicle) { Call<void>(0x25a7ae9c9ee573f8, vehicle); }
	void ALLOW_AMBIENT_VEHICLES_TO_AVOID_ADVERSE_CONDITIONS_f(Vehicle vehicle) { FastCall<void>(0x25a7ae9c9ee573f8, vehicle); }
	void DETACH_VEHICLE_FROM_CARGOBOB(Vehicle vehicle, Vehicle cargobob) { Call<void>(0xa1c176414fd171cf, vehicle, cargobob); }
	void DETACH_VEHICLE_FROM_CARGOBOB_f(Vehicle vehicle, Vehicle cargobob) { FastCall<void>(0xa1c176414fd171cf, vehicle, cargobob); }
	BOOL DETACH_VEHICLE_FROM_ANY_CARGOBOB(Vehicle vehicle) { return Call<BOOL>(0x5b20de3f49d1cfe2, vehicle); }
	BOOL DETACH_VEHICLE_FROM_ANY_CARGOBOB_f(Vehicle vehicle) { return FastCall<BOOL>(0x5b20de3f49d1cfe2, vehicle); }
	BOOL DETACH_ENTITY_FROM_CARGOBOB(Vehicle cargobob, Entity entity) { return Call<BOOL>(0x1764c9f4fd27773e, cargobob, entity); }
	BOOL DETACH_ENTITY_FROM_CARGOBOB_f(Vehicle cargobob, Entity entity) { return FastCall<BOOL>(0x1764c9f4fd27773e, cargobob, entity); }
	BOOL IS_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob, Vehicle vehicleAttached) { return Call<BOOL>(0x6a23f41a1ac5fdea, cargobob, vehicleAttached); }
	BOOL IS_VEHICLE_ATTACHED_TO_CARGOBOB_f(Vehicle cargobob, Vehicle vehicleAttached) { return FastCall<BOOL>(0x6a23f41a1ac5fdea, cargobob, vehicleAttached); }
	Vehicle GET_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob) { return Call<Vehicle>(0xda8fc7e18d313f5e, cargobob); }
	Vehicle GET_VEHICLE_ATTACHED_TO_CARGOBOB_f(Vehicle cargobob) { return FastCall<Vehicle>(0xda8fc7e18d313f5e, cargobob); }
	Entity GET_ENTITY_ATTACHED_TO_CARGOBOB(Any p0) { return Call<Entity>(0x1c44f3d30da174f5, p0); }
	Entity GET_ENTITY_ATTACHED_TO_CARGOBOB_f(Any p0) { return FastCall<Entity>(0x1c44f3d30da174f5, p0); }
	void ATTACH_VEHICLE_TO_CARGOBOB(Vehicle cargobob, Vehicle vehicle, int p2, float x, float y, float z) { Call<void>(0x889a43f8511d4010, cargobob, vehicle, p2, x, y, z); }
	void ATTACH_VEHICLE_TO_CARGOBOB_f(Vehicle cargobob, Vehicle vehicle, int p2, float x, float y, float z) { FastCall<void>(0x889a43f8511d4010, cargobob, vehicle, p2, x, y, z); }
	void ATTACH_ENTITY_TO_CARGOBOB(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { Call<void>(0xaafe9c040c01c39b, p0, p1, p2, p3, p4, p5); }
	void ATTACH_ENTITY_TO_CARGOBOB_f(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { FastCall<void>(0xaafe9c040c01c39b, p0, p1, p2, p3, p4, p5); }
	void SET_CARGOBOB_FORCE_DONT_DETACH_VEHICLE(Vehicle cargobob, BOOL toggle) { Call<void>(0xb5e539fead36c631, cargobob, toggle); }
	void SET_CARGOBOB_FORCE_DONT_DETACH_VEHICLE_f(Vehicle cargobob, BOOL toggle) { FastCall<void>(0xb5e539fead36c631, cargobob, toggle); }
	void SET_CARGOBOB_EXCLUDE_FROM_PICKUP_ENTITY(Any p0, Any p1) { Call<void>(0x71dcb6c806dc4bdf, p0, p1); }
	void SET_CARGOBOB_EXCLUDE_FROM_PICKUP_ENTITY_f(Any p0, Any p1) { FastCall<void>(0x71dcb6c806dc4bdf, p0, p1); }
	BOOL CAN_CARGOBOB_PICK_UP_ENTITY(Any p0, Any p1) { return Call<BOOL>(0x2625ca2756485c60, p0, p1); }
	BOOL CAN_CARGOBOB_PICK_UP_ENTITY_f(Any p0, Any p1) { return FastCall<BOOL>(0x2625ca2756485c60, p0, p1); }
	Vector3* GET_ATTACHED_PICK_UP_HOOK_POSITION(Vehicle cargobob) { Call<Vector3*>(0x8e0e3a794f15184d, cargobob); return GetVector(); }
	BOOL DOES_CARGOBOB_HAVE_PICK_UP_ROPE(Vehicle cargobob) { return Call<BOOL>(0xfc2074c03c6e4aaf, cargobob); }
	BOOL DOES_CARGOBOB_HAVE_PICK_UP_ROPE_f(Vehicle cargobob) { return FastCall<BOOL>(0xfc2074c03c6e4aaf, cargobob); }
	void CREATE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob, int state) { Call<void>(0x97f099dd618234b3, cargobob, state); }
	void CREATE_PICK_UP_ROPE_FOR_CARGOBOB_f(Vehicle cargobob, int state) { FastCall<void>(0x97f099dd618234b3, cargobob, state); }
	void REMOVE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob) { Call<void>(0x9e9b55c475e9b23b, cargobob); }
	void REMOVE_PICK_UP_ROPE_FOR_CARGOBOB_f(Vehicle cargobob) { FastCall<void>(0x9e9b55c475e9b23b, cargobob); }
	void SET_PICKUP_ROPE_LENGTH_FOR_CARGOBOB(Vehicle cargobob, float length1, float length2, BOOL p3) { Call<void>(0xd1f076ef9bd7a9a1, cargobob, length1, length2, p3); }
	void SET_PICKUP_ROPE_LENGTH_FOR_CARGOBOB_f(Vehicle cargobob, float length1, float length2, BOOL p3) { FastCall<void>(0xd1f076ef9bd7a9a1, cargobob, length1, length2, p3); }
	void SET_PICKUP_ROPE_LENGTH_WITHOUT_CREATING_ROPE_FOR_CARGOBOB(Any p0, Any p1, Any p2) { Call<void>(0xd98a3f0007a5383f, p0, p1, p2); }
	void SET_PICKUP_ROPE_LENGTH_WITHOUT_CREATING_ROPE_FOR_CARGOBOB_f(Any p0, Any p1, Any p2) { FastCall<void>(0xd98a3f0007a5383f, p0, p1, p2); }
	void SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER(Any p0, Any p1) { Call<void>(0xcd684f5b8fed5671, p0, p1); }
	void SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER_f(Any p0, Any p1) { FastCall<void>(0xcd684f5b8fed5671, p0, p1); }
	void SET_CARGOBOB_PICKUP_ROPE_TYPE(Any p0, Any p1) { Call<void>(0x782e7e39896d2dad, p0, p1); }
	void SET_CARGOBOB_PICKUP_ROPE_TYPE_f(Any p0, Any p1) { FastCall<void>(0x782e7e39896d2dad, p0, p1); }
	BOOL DOES_CARGOBOB_HAVE_PICKUP_MAGNET(Vehicle cargobob) { return Call<BOOL>(0x87ee1b68791bd8b6, cargobob); }
	BOOL DOES_CARGOBOB_HAVE_PICKUP_MAGNET_f(Vehicle cargobob) { return FastCall<BOOL>(0x87ee1b68791bd8b6, cargobob); }
	void SET_CARGOBOB_PICKUP_MAGNET_ACTIVE(Vehicle cargobob, BOOL isActive) { Call<void>(0x683961a4e9bd9dc1, cargobob, isActive); }
	void SET_CARGOBOB_PICKUP_MAGNET_ACTIVE_f(Vehicle cargobob, BOOL isActive) { FastCall<void>(0x683961a4e9bd9dc1, cargobob, isActive); }
	void SET_CARGOBOB_PICKUP_MAGNET_STRENGTH(Vehicle cargobob, float strength) { Call<void>(0x3f678c883e46a83c, cargobob, strength); }
	void SET_CARGOBOB_PICKUP_MAGNET_STRENGTH_f(Vehicle cargobob, float strength) { FastCall<void>(0x3f678c883e46a83c, cargobob, strength); }
	void SET_CARGOBOB_PICKUP_MAGNET_FALLOFF(Vehicle cargobob, float p1) { Call<void>(0x9ef2d2f9529c1899, cargobob, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_FALLOFF_f(Vehicle cargobob, float p1) { FastCall<void>(0x9ef2d2f9529c1899, cargobob, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH(Vehicle cargobob, float p1) { Call<void>(0xfa925048d2599cbd, cargobob, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH_f(Vehicle cargobob, float p1) { FastCall<void>(0xfa925048d2599cbd, cargobob, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF(Vehicle cargobob, float p1) { Call<void>(0x5aa9e18bec080ff8, cargobob, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF_f(Vehicle cargobob, float p1) { FastCall<void>(0x5aa9e18bec080ff8, cargobob, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH(Vehicle cargobob, float p1) { Call<void>(0xf76bca1f0aee65e0, cargobob, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH_f(Vehicle cargobob, float p1) { FastCall<void>(0xf76bca1f0aee65e0, cargobob, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH(Vehicle vehicle, float p1) { Call<void>(0xa892af411cc720d4, vehicle, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH_f(Vehicle vehicle, float p1) { FastCall<void>(0xa892af411cc720d4, vehicle, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_SET_TARGETED_MODE(Vehicle vehicle, Vehicle cargobob) { Call<void>(0x87f27ace633eabba, vehicle, cargobob); }
	void SET_CARGOBOB_PICKUP_MAGNET_SET_TARGETED_MODE_f(Vehicle vehicle, Vehicle cargobob) { FastCall<void>(0x87f27ace633eabba, vehicle, cargobob); }
	void SET_CARGOBOB_PICKUP_MAGNET_SET_AMBIENT_MODE(Vehicle vehicle, BOOL p1, BOOL p2) { Call<void>(0xa2fa48fd2d5618e2, vehicle, p1, p2); }
	void SET_CARGOBOB_PICKUP_MAGNET_SET_AMBIENT_MODE_f(Vehicle vehicle, BOOL p1, BOOL p2) { FastCall<void>(0xa2fa48fd2d5618e2, vehicle, p1, p2); }
	void SET_CARGOBOB_PICKUP_MAGNET_ENSURE_PICKUP_ENTITY_UPRIGHT(Vehicle vehicle, BOOL p1) { Call<void>(0x477e2de3fa15c742, vehicle, p1); }
	void SET_CARGOBOB_PICKUP_MAGNET_ENSURE_PICKUP_ENTITY_UPRIGHT_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x477e2de3fa15c742, vehicle, p1); }
	BOOL DOES_VEHICLE_HAVE_WEAPONS(Vehicle vehicle) { return Call<BOOL>(0x9f100feaccb19e39, vehicle); }
	BOOL DOES_VEHICLE_HAVE_WEAPONS_f(Vehicle vehicle) { return FastCall<BOOL>(0x9f100feaccb19e39, vehicle); }
	void SET_VEHICLE_WILL_TELL_OTHERS_TO_HURRY(Vehicle vehicle, BOOL p1) { Call<void>(0x1f0fb3fd78caca13, vehicle, p1); }
	void SET_VEHICLE_WILL_TELL_OTHERS_TO_HURRY_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x1f0fb3fd78caca13, vehicle, p1); }
	void DISABLE_VEHICLE_WEAPON(BOOL disabled, Hash weaponHash, Vehicle vehicle, Ped owner) { Call<void>(0x76ba61395fb1a906, disabled, weaponHash, vehicle, owner); }
	void DISABLE_VEHICLE_WEAPON_f(BOOL disabled, Hash weaponHash, Vehicle vehicle, Ped owner) { FastCall<void>(0x76ba61395fb1a906, disabled, weaponHash, vehicle, owner); }
	BOOL IS_VEHICLE_WEAPON_DISABLED(Hash weaponHash, Vehicle vehicle, Ped owner) { return Call<BOOL>(0x8e0867fe562c4df7, weaponHash, vehicle, owner); }
	BOOL IS_VEHICLE_WEAPON_DISABLED_f(Hash weaponHash, Vehicle vehicle, Ped owner) { return FastCall<BOOL>(0x8e0867fe562c4df7, weaponHash, vehicle, owner); }
	void SET_VEHICLE_USED_FOR_PILOT_SCHOOL(Vehicle vehicle, BOOL toggle) { Call<void>(0x7ca96e0eef1ca2e3, vehicle, toggle); }
	void SET_VEHICLE_USED_FOR_PILOT_SCHOOL_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x7ca96e0eef1ca2e3, vehicle, toggle); }
	void SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION(Vehicle vehicle, BOOL toggle) { Call<void>(0x1dee425ca653f63, vehicle, toggle); }
	void SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x1dee425ca653f63, vehicle, toggle); }
	int GET_VEHICLE_CLASS(Vehicle vehicle) { return Call<int>(0xde49fbfec1a3c51c, vehicle); }
	int GET_VEHICLE_CLASS_f(Vehicle vehicle) { return FastCall<int>(0xde49fbfec1a3c51c, vehicle); }
	int GET_VEHICLE_CLASS_FROM_NAME(Hash modelHash) { return Call<int>(0x916aa8d5ec5d629d, modelHash); }
	int GET_VEHICLE_CLASS_FROM_NAME_f(Hash modelHash) { return FastCall<int>(0x916aa8d5ec5d629d, modelHash); }
	void SET_PLAYERS_LAST_VEHICLE(Vehicle vehicle) { Call<void>(0x4a537a18f8b687cd, vehicle); }
	void SET_PLAYERS_LAST_VEHICLE_f(Vehicle vehicle) { FastCall<void>(0x4a537a18f8b687cd, vehicle); }
	void SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS(Vehicle vehicle, BOOL toggle) { Call<void>(0x3a95d431fdef6aaa, vehicle, toggle); }
	void SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x3a95d431fdef6aaa, vehicle, toggle); }
	void SET_AIRCRAFT_PILOT_SKILL_NOISE_SCALAR(Vehicle vehicle, float p1) { Call<void>(0x809d4e84b63e7d72, vehicle, p1); }
	void SET_AIRCRAFT_PILOT_SKILL_NOISE_SCALAR_f(Vehicle vehicle, float p1) { FastCall<void>(0x809d4e84b63e7d72, vehicle, p1); }
	void SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP(Vehicle vehicle, BOOL toggle) { Call<void>(0x85011ddb3a0e4339, vehicle, toggle); }
	void SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x85011ddb3a0e4339, vehicle, toggle); }
	void SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED(Vehicle vehicle, BOOL toggle) { Call<void>(0xf2195a0575429fdc, vehicle, toggle); }
	void SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xf2195a0575429fdc, vehicle, toggle); }
	void SET_VEHICLE_IMPATIENCE_TIMER(Vehicle vehicle, Any p1) { Call<void>(0x81662820747199ab, vehicle, p1); }
	void SET_VEHICLE_IMPATIENCE_TIMER_f(Vehicle vehicle, Any p1) { FastCall<void>(0x81662820747199ab, vehicle, p1); }
	void SET_VEHICLE_HANDLING_OVERRIDE(Vehicle vehicle, Hash hash) { Call<void>(0xe4574f89932c21b6, vehicle, hash); }
	void SET_VEHICLE_HANDLING_OVERRIDE_f(Vehicle vehicle, Hash hash) { FastCall<void>(0xe4574f89932c21b6, vehicle, hash); }
	void SET_VEHICLE_EXTENDED_REMOVAL_RANGE(Vehicle vehicle, int range) { Call<void>(0xc5af004ecfd4f494, vehicle, range); }
	void SET_VEHICLE_EXTENDED_REMOVAL_RANGE_f(Vehicle vehicle, int range) { FastCall<void>(0xc5af004ecfd4f494, vehicle, range); }
	void SET_VEHICLE_STEERING_BIAS_SCALAR(Any p0, float p1) { Call<void>(0x8e2674e0655ee394, p0, p1); }
	void SET_VEHICLE_STEERING_BIAS_SCALAR_f(Any p0, float p1) { FastCall<void>(0x8e2674e0655ee394, p0, p1); }
	void SET_HELI_CONTROL_LAGGING_RATE_SCALAR(Vehicle helicopter, float multiplier) { Call<void>(0xa0b69880dffa5c4f, helicopter, multiplier); }
	void SET_HELI_CONTROL_LAGGING_RATE_SCALAR_f(Vehicle helicopter, float multiplier) { FastCall<void>(0xa0b69880dffa5c4f, helicopter, multiplier); }
	void SET_VEHICLE_FRICTION_OVERRIDE(Vehicle vehicle, float friction) { Call<void>(0x4ab335e700604341, vehicle, friction); }
	void SET_VEHICLE_FRICTION_OVERRIDE_f(Vehicle vehicle, float friction) { FastCall<void>(0x4ab335e700604341, vehicle, friction); }
	void SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP(Vehicle vehicle, BOOL toggle) { Call<void>(0x3327a6e021192ff9, vehicle, toggle); }
	void SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x3327a6e021192ff9, vehicle, toggle); }
	BOOL ARE_PLANE_CONTROL_PANELS_INTACT(Vehicle vehicle, BOOL p1) { return Call<BOOL>(0x4178150d290698c3, vehicle, p1); }
	BOOL ARE_PLANE_CONTROL_PANELS_INTACT_f(Vehicle vehicle, BOOL p1) { return FastCall<BOOL>(0x4178150d290698c3, vehicle, p1); }
	void SET_VEHICLE_CEILING_HEIGHT(Vehicle vehicle, float height) { Call<void>(0xd4deda60ef639539, vehicle, height); }
	void SET_VEHICLE_CEILING_HEIGHT_f(Vehicle vehicle, float height) { FastCall<void>(0xd4deda60ef639539, vehicle, height); }
	void SET_VEHICLE_NO_EXPLOSION_DAMAGE_FROM_DRIVER(Vehicle vehicle, BOOL toggle) { Call<void>(0x974c1a43422fa0a5, vehicle, toggle); }
	void SET_VEHICLE_NO_EXPLOSION_DAMAGE_FROM_DRIVER_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x974c1a43422fa0a5, vehicle, toggle); }
	void CLEAR_VEHICLE_ROUTE_HISTORY(Vehicle vehicle) { Call<void>(0x1f592221c943afd9, vehicle); }
	void CLEAR_VEHICLE_ROUTE_HISTORY_f(Vehicle vehicle) { FastCall<void>(0x1f592221c943afd9, vehicle); }
	Vehicle DOES_VEHICLE_EXIST_WITH_DECORATOR(char* decorator) { return Call<Vehicle>(0x7d9a1de868c9eda3, decorator); }
	Vehicle DOES_VEHICLE_EXIST_WITH_DECORATOR_f(char* decorator) { return FastCall<Vehicle>(0x7d9a1de868c9eda3, decorator); }
	void SET_VEHICLE_AI_CAN_USE_EXCLUSIVE_SEATS(Vehicle vehicle, BOOL toggle) { Call<void>(0xbb93e51f4f62bb1f, vehicle, toggle); }
	void SET_VEHICLE_AI_CAN_USE_EXCLUSIVE_SEATS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xbb93e51f4f62bb1f, vehicle, toggle); }
	void SET_VEHICLE_EXCLUSIVE_DRIVER(Vehicle vehicle, Ped ped, int index) { Call<void>(0xecfb4f2cded51339, vehicle, ped, index); }
	void SET_VEHICLE_EXCLUSIVE_DRIVER_f(Vehicle vehicle, Ped ped, int index) { FastCall<void>(0xecfb4f2cded51339, vehicle, ped, index); }
	BOOL IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE(Ped ped, Vehicle vehicle, int* outIndex) { return Call<BOOL>(0x860f297c42a35335, ped, vehicle, outIndex); }
	BOOL IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE_f(Ped ped, Vehicle vehicle, int* outIndex) { return FastCall<BOOL>(0x860f297c42a35335, ped, vehicle, outIndex); }
	void DISABLE_INDIVIDUAL_PLANE_PROPELLER(Vehicle vehicle, int propeller) { Call<void>(0x24f956229105725d, vehicle, propeller); }
	void DISABLE_INDIVIDUAL_PLANE_PROPELLER_f(Vehicle vehicle, int propeller) { FastCall<void>(0x24f956229105725d, vehicle, propeller); }
	void SET_VEHICLE_FORCE_AFTERBURNER(Vehicle vehicle, BOOL toggle) { Call<void>(0xd2ea5c8326e147d4, vehicle, toggle); }
	void SET_VEHICLE_FORCE_AFTERBURNER_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xd2ea5c8326e147d4, vehicle, toggle); }
	void SET_DONT_PROCESS_VEHICLE_GLASS(Vehicle vehicle, BOOL toggle) { Call<void>(0x2f6737eb213ea268, vehicle, toggle); }
	void SET_DONT_PROCESS_VEHICLE_GLASS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x2f6737eb213ea268, vehicle, toggle); }
	void SET_DISABLE_WANTED_CONES_RESPONSE(Vehicle vehicle, BOOL toggle) { Call<void>(0x2d4b84a6e83c002c, vehicle, toggle); }
	void SET_DISABLE_WANTED_CONES_RESPONSE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x2d4b84a6e83c002c, vehicle, toggle); }
	void SET_USE_DESIRED_Z_CRUISE_SPEED_FOR_LANDING(Vehicle vehicle, BOOL toggle) { Call<void>(0x789a8d84ed6104fe, vehicle, toggle); }
	void SET_USE_DESIRED_Z_CRUISE_SPEED_FOR_LANDING_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x789a8d84ed6104fe, vehicle, toggle); }
	void SET_ARRIVE_DISTANCE_OVERRIDE_FOR_VEHICLE_PERSUIT_ATTACK(Vehicle vehicle, float p1) { Call<void>(0xd6332ffef6e6367a, vehicle, p1); }
	void SET_ARRIVE_DISTANCE_OVERRIDE_FOR_VEHICLE_PERSUIT_ATTACK_f(Vehicle vehicle, float p1) { FastCall<void>(0xd6332ffef6e6367a, vehicle, p1); }
	void SET_VEHICLE_READY_FOR_CLEANUP(Any p0) { Call<void>(0x1ded378985b93802, p0); }
	void SET_VEHICLE_READY_FOR_CLEANUP_f(Any p0) { FastCall<void>(0x1ded378985b93802, p0); }
	void SET_DISTANT_CARS_ENABLED(BOOL toggle) { Call<void>(0xf97c3d31a519dafc, toggle); }
	void SET_DISTANT_CARS_ENABLED_f(BOOL toggle) { FastCall<void>(0xf97c3d31a519dafc, toggle); }
	void SET_VEHICLE_NEON_COLOUR(Vehicle vehicle, int r, int g, int b) { Call<void>(0x95820a3e843f025, vehicle, r, g, b); }
	void SET_VEHICLE_NEON_COLOUR_f(Vehicle vehicle, int r, int g, int b) { FastCall<void>(0x95820a3e843f025, vehicle, r, g, b); }
	void SET_VEHICLE_NEON_INDEX_COLOUR(Vehicle vehicle, int index) { Call<void>(0x4f7075b9714a0992, vehicle, index); }
	void SET_VEHICLE_NEON_INDEX_COLOUR_f(Vehicle vehicle, int index) { FastCall<void>(0x4f7075b9714a0992, vehicle, index); }
	void GET_VEHICLE_NEON_COLOUR(Vehicle vehicle, int* r, int* g, int* b) { Call<void>(0xa43359d46df0c119, vehicle, r, g, b); }
	void GET_VEHICLE_NEON_COLOUR_f(Vehicle vehicle, int* r, int* g, int* b) { FastCall<void>(0xa43359d46df0c119, vehicle, r, g, b); }
	void SET_VEHICLE_NEON_ENABLED(Vehicle vehicle, int index, BOOL toggle) { Call<void>(0x21abf3d987b0a3e8, vehicle, index, toggle); }
	void SET_VEHICLE_NEON_ENABLED_f(Vehicle vehicle, int index, BOOL toggle) { FastCall<void>(0x21abf3d987b0a3e8, vehicle, index, toggle); }
	BOOL GET_VEHICLE_NEON_ENABLED(Vehicle vehicle, int index) { return Call<BOOL>(0xe237e0b9b79df174, vehicle, index); }
	BOOL GET_VEHICLE_NEON_ENABLED_f(Vehicle vehicle, int index) { return FastCall<BOOL>(0xe237e0b9b79df174, vehicle, index); }
	void SET_AMBIENT_VEHICLE_NEON_ENABLED(BOOL p0) { Call<void>(0xc25effac414c4e4f, p0); }
	void SET_AMBIENT_VEHICLE_NEON_ENABLED_f(BOOL p0) { FastCall<void>(0xc25effac414c4e4f, p0); }
	void SUPPRESS_NEONS_ON_VEHICLE(Vehicle vehicle, BOOL toggle) { Call<void>(0x15a26d05fe544d38, vehicle, toggle); }
	void SUPPRESS_NEONS_ON_VEHICLE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x15a26d05fe544d38, vehicle, toggle); }
	void SET_DISABLE_SUPERDUMMY(Vehicle vehicle, BOOL p1) { Call<void>(0xe80c45d694b75b01, vehicle, p1); }
	void SET_DISABLE_SUPERDUMMY_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xe80c45d694b75b01, vehicle, p1); }
	void REQUEST_VEHICLE_DIAL(Vehicle vehicle) { Call<void>(0xa94de00d3c0ac093, vehicle); }
	void REQUEST_VEHICLE_DIAL_f(Vehicle vehicle) { FastCall<void>(0xa94de00d3c0ac093, vehicle); }
	float GET_VEHICLE_BODY_HEALTH(Vehicle vehicle) { return ToFloat(Call<_float>(0xa41150ab1dc9385d, vehicle)); }
	float GET_VEHICLE_BODY_HEALTH_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xa41150ab1dc9385d, vehicle)); }
	void SET_VEHICLE_BODY_HEALTH(Vehicle vehicle, float value) { Call<void>(0x936177a981c6769, vehicle, value); }
	void SET_VEHICLE_BODY_HEALTH_f(Vehicle vehicle, float value) { FastCall<void>(0x936177a981c6769, vehicle, value); }
	void GET_VEHICLE_SIZE(Vehicle vehicle, Vector3* out1, Vector3* out2) { Call<void>(0x938ec61079e33bbd, vehicle, out1, out2); }
	void GET_VEHICLE_SIZE_f(Vehicle vehicle, Vector3* out1, Vector3* out2) { FastCall<void>(0x938ec61079e33bbd, vehicle, out1, out2); }
	float GET_FAKE_SUSPENSION_LOWERING_AMOUNT(Vehicle vehicle) { return ToFloat(Call<_float>(0xd001ded2180876d5, vehicle)); }
	float GET_FAKE_SUSPENSION_LOWERING_AMOUNT_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0xd001ded2180876d5, vehicle)); }
	void SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER(float multiplier) { Call<void>(0x7f1d64ab338e6507, multiplier); }
	void SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER_f(float multiplier) { FastCall<void>(0x7f1d64ab338e6507, multiplier); }
	int GET_NUMBER_OF_VEHICLE_DOORS(Vehicle vehicle) { return Call<int>(0x5a789bfaadb4fb37, vehicle); }
	int GET_NUMBER_OF_VEHICLE_DOORS_f(Vehicle vehicle) { return FastCall<int>(0x5a789bfaadb4fb37, vehicle); }
	void SET_HYDRAULICS_CONTROL(Vehicle vehicle, BOOL toggle) { Call<void>(0xd71d7ceb9747a61b, vehicle, toggle); }
	void SET_HYDRAULICS_CONTROL_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xd71d7ceb9747a61b, vehicle, toggle); }
	void SET_CAN_ADJUST_GROUND_CLEARANCE(Vehicle vehicle, BOOL p1) { Call<void>(0x85bd6c2b84e028e8, vehicle, p1); }
	void SET_CAN_ADJUST_GROUND_CLEARANCE_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0x85bd6c2b84e028e8, vehicle, p1); }
	float GET_VEHICLE_HEALTH_PERCENTAGE(Vehicle vehicle, float maxEngineHealth, float maxPetrolTankHealth, float maxBodyHealth, float maxMainRotorHealth, float maxTailRotorHealth, float maxUnkHealth) { return ToFloat(Call<_float>(0xada06b71ca0c7a21, vehicle, maxEngineHealth, maxPetrolTankHealth, maxBodyHealth, maxMainRotorHealth, maxTailRotorHealth, maxUnkHealth)); }
	float GET_VEHICLE_HEALTH_PERCENTAGE_f(Vehicle vehicle, float maxEngineHealth, float maxPetrolTankHealth, float maxBodyHealth, float maxMainRotorHealth, float maxTailRotorHealth, float maxUnkHealth) { return ToFloat(FastCall<_float>(0xada06b71ca0c7a21, vehicle, maxEngineHealth, maxPetrolTankHealth, maxBodyHealth, maxMainRotorHealth, maxTailRotorHealth, maxUnkHealth)); }
	BOOL GET_VEHICLE_IS_MERCENARY(Vehicle vehicle) { return Call<BOOL>(0xe09ecbf27644efbd, vehicle); }
	BOOL GET_VEHICLE_IS_MERCENARY_f(Vehicle vehicle) { return FastCall<BOOL>(0xe09ecbf27644efbd, vehicle); }
	void SET_VEHICLE_BROKEN_PARTS_DONT_AFFECT_AI_HANDLING(Vehicle vehicle, BOOL p1) { Call<void>(0xbb5867a89bb13b27, vehicle, p1); }
	void SET_VEHICLE_BROKEN_PARTS_DONT_AFFECT_AI_HANDLING_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xbb5867a89bb13b27, vehicle, p1); }
	void SET_VEHICLE_KERS_ALLOWED(Vehicle vehicle, BOOL toggle) { Call<void>(0x209d713d5c6ca894, vehicle, toggle); }
	void SET_VEHICLE_KERS_ALLOWED_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x209d713d5c6ca894, vehicle, toggle); }
	BOOL GET_VEHICLE_HAS_KERS(Vehicle vehicle) { return Call<BOOL>(0x3a3f365f1f5e97c, vehicle); }
	BOOL GET_VEHICLE_HAS_KERS_f(Vehicle vehicle) { return FastCall<BOOL>(0x3a3f365f1f5e97c, vehicle); }
	void SET_PLANE_RESIST_TO_EXPLOSION(Vehicle vehicle, BOOL toggle) { Call<void>(0x5b8cc6cd09df9426, vehicle, toggle); }
	void SET_PLANE_RESIST_TO_EXPLOSION_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x5b8cc6cd09df9426, vehicle, toggle); }
	void SET_HELI_RESIST_TO_EXPLOSION(Vehicle vehicle, BOOL toggle) { Call<void>(0x24889fb47d3d653e, vehicle, toggle); }
	void SET_HELI_RESIST_TO_EXPLOSION_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x24889fb47d3d653e, vehicle, toggle); }
	void SET_DISABLE_BMX_EXTRA_TRICK_FORCES(Any p0) { Call<void>(0x2126733af5bef469, p0); }
	void SET_DISABLE_BMX_EXTRA_TRICK_FORCES_f(Any p0) { FastCall<void>(0x2126733af5bef469, p0); }
	void SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(Vehicle vehicle, int wheelId, float value) { Call<void>(0xe5b7e3a0e8e100fb, vehicle, wheelId, value); }
	void SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR_f(Vehicle vehicle, int wheelId, float value) { FastCall<void>(0xe5b7e3a0e8e100fb, vehicle, wheelId, value); }
	float GET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(Vehicle vehicle, int wheelId) { return ToFloat(Call<_float>(0x5195df53fd0316ef, vehicle, wheelId)); }
	float GET_HYDRAULIC_SUSPENSION_RAISE_FACTOR_f(Vehicle vehicle, int wheelId) { return ToFloat(FastCall<_float>(0x5195df53fd0316ef, vehicle, wheelId)); }
	void SET_CAN_USE_HYDRAULICS(Vehicle vehicle, BOOL toggle) { Call<void>(0x550aa1a33ab49864, vehicle, toggle); }
	void SET_CAN_USE_HYDRAULICS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x550aa1a33ab49864, vehicle, toggle); }
	void SET_HYDRAULIC_VEHICLE_STATE(Vehicle vehicle, int state) { Call<void>(0xbe8a31ba877480f5, vehicle, state); }
	void SET_HYDRAULIC_VEHICLE_STATE_f(Vehicle vehicle, int state) { FastCall<void>(0xbe8a31ba877480f5, vehicle, state); }
	void SET_HYDRAULIC_WHEEL_STATE(Vehicle vehicle, int wheelId, int state, float value, Any p4) { Call<void>(0x34b07b24131b7ba4, vehicle, wheelId, state, value, p4); }
	void SET_HYDRAULIC_WHEEL_STATE_f(Vehicle vehicle, int wheelId, int state, float value, Any p4) { FastCall<void>(0x34b07b24131b7ba4, vehicle, wheelId, state, value, p4); }
	BOOL HAS_VEHICLE_PETROLTANK_SET_ON_FIRE_BY_ENTITY(Any p0, Any p1) { return Call<BOOL>(0xaf5879ca23066f58, p0, p1); }
	BOOL HAS_VEHICLE_PETROLTANK_SET_ON_FIRE_BY_ENTITY_f(Any p0, Any p1) { return FastCall<BOOL>(0xaf5879ca23066f58, p0, p1); }
	void CLEAR_VEHICLE_PETROLTANK_FIRE_CULPRIT(Vehicle vehicle) { Call<void>(0xeeefdae514f8fb5e, vehicle); }
	void CLEAR_VEHICLE_PETROLTANK_FIRE_CULPRIT_f(Vehicle vehicle) { FastCall<void>(0xeeefdae514f8fb5e, vehicle); }
	void SET_VEHICLE_BOBBLEHEAD_VELOCITY(float x, float y, float p2) { Call<void>(0x2422fb411e6d1266, x, y, p2); }
	void SET_VEHICLE_BOBBLEHEAD_VELOCITY_f(float x, float y, float p2) { FastCall<void>(0x2422fb411e6d1266, x, y, p2); }
	BOOL GET_VEHICLE_IS_DUMMY(Any p0) { return Call<BOOL>(0x3a3f370250996ef, p0); }
	BOOL GET_VEHICLE_IS_DUMMY_f(Any p0) { return FastCall<BOOL>(0x3a3f370250996ef, p0); }
	BOOL SET_VEHICLE_DAMAGE_SCALE(Vehicle vehicle, float p1) { return Call<BOOL>(0x1e196287d804fe8a, vehicle, p1); }
	BOOL SET_VEHICLE_DAMAGE_SCALE_f(Vehicle vehicle, float p1) { return FastCall<BOOL>(0x1e196287d804fe8a, vehicle, p1); }
	BOOL SET_VEHICLE_WEAPON_DAMAGE_SCALE(Vehicle vehicle, float multiplier) { return Call<BOOL>(0x933ee019fa79756d, vehicle, multiplier); }
	BOOL SET_VEHICLE_WEAPON_DAMAGE_SCALE_f(Vehicle vehicle, float multiplier) { return FastCall<BOOL>(0x933ee019fa79756d, vehicle, multiplier); }
	BOOL SET_DISABLE_DAMAGE_WITH_PICKED_UP_ENTITY(Any p0, Any p1) { return Call<BOOL>(0xb4b655a91f372e85, p0, p1); }
	BOOL SET_DISABLE_DAMAGE_WITH_PICKED_UP_ENTITY_f(Any p0, Any p1) { return FastCall<BOOL>(0xb4b655a91f372e85, p0, p1); }
	void SET_VEHICLE_USES_MP_PLAYER_DAMAGE_MULTIPLIER(Any p0, Any p1) { Call<void>(0xb590532b7e20e60c, p0, p1); }
	void SET_VEHICLE_USES_MP_PLAYER_DAMAGE_MULTIPLIER_f(Any p0, Any p1) { FastCall<void>(0xb590532b7e20e60c, p0, p1); }
	void SET_BIKE_EASY_TO_LAND(Vehicle vehicle, BOOL toggle) { Call<void>(0x6c6c5654dc292ed3, vehicle, toggle); }
	void SET_BIKE_EASY_TO_LAND_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x6c6c5654dc292ed3, vehicle, toggle); }
	void SET_INVERT_VEHICLE_CONTROLS(Vehicle vehicle, BOOL state) { Call<void>(0x9dfce9efc1f9ced5, vehicle, state); }
	void SET_INVERT_VEHICLE_CONTROLS_f(Vehicle vehicle, BOOL state) { FastCall<void>(0x9dfce9efc1f9ced5, vehicle, state); }
	void SET_SPEED_BOOST_EFFECT_DISABLED(BOOL disabled) { Call<void>(0xf5525ae2fcfe0419, disabled); }
	void SET_SPEED_BOOST_EFFECT_DISABLED_f(BOOL disabled) { FastCall<void>(0xf5525ae2fcfe0419, disabled); }
	void SET_SLOW_DOWN_EFFECT_DISABLED(BOOL disabled) { Call<void>(0x258bb1fb7fcbed8e, disabled); }
	void SET_SLOW_DOWN_EFFECT_DISABLED_f(BOOL disabled) { FastCall<void>(0x258bb1fb7fcbed8e, disabled); }
	void SET_FORMATION_LEADER(Vehicle vehicle, float x, float y, float z, float p4) { Call<void>(0xbe753ad07d3476d4, vehicle, x, y, z, p4); }
	void SET_FORMATION_LEADER_f(Vehicle vehicle, float x, float y, float z, float p4) { FastCall<void>(0xbe753ad07d3476d4, vehicle, x, y, z, p4); }
	void RESET_FORMATION_LEADER() { Call<void>(0xbd017c56f9446987); }
	void RESET_FORMATION_LEADER_f() { FastCall<void>(0xbd017c56f9446987); }
	BOOL GET_IS_BOAT_CAPSIZED(Vehicle vehicle) { return Call<BOOL>(0xf1e78b3b6684f7a4, vehicle); }
	BOOL GET_IS_BOAT_CAPSIZED_f(Vehicle vehicle) { return FastCall<BOOL>(0xf1e78b3b6684f7a4, vehicle); }
	void SET_ALLOW_RAMMING_SOOP_OR_RAMP(Any p0, Any p1) { Call<void>(0xf8314dc5b67900cb, p0, p1); }
	void SET_ALLOW_RAMMING_SOOP_OR_RAMP_f(Any p0, Any p1) { FastCall<void>(0xf8314dc5b67900cb, p0, p1); }
	void SET_SCRIPT_RAMP_IMPULSE_SCALE(Vehicle vehicle, float impulseScale) { Call<void>(0xe1f4f1ddc223ea0a, vehicle, impulseScale); }
	void SET_SCRIPT_RAMP_IMPULSE_SCALE_f(Vehicle vehicle, float impulseScale) { FastCall<void>(0xe1f4f1ddc223ea0a, vehicle, impulseScale); }
	BOOL GET_IS_DOOR_VALID(Vehicle vehicle, int doorId) { return Call<BOOL>(0x5561de078760f8f7, vehicle, doorId); }
	BOOL GET_IS_DOOR_VALID_f(Vehicle vehicle, int doorId) { return FastCall<BOOL>(0x5561de078760f8f7, vehicle, doorId); }
	void SET_SCRIPT_ROCKET_BOOST_RECHARGE_TIME(Vehicle vehicle, float seconds) { Call<void>(0xb5b8ef1d51eb1af5, vehicle, seconds); }
	void SET_SCRIPT_ROCKET_BOOST_RECHARGE_TIME_f(Vehicle vehicle, float seconds) { FastCall<void>(0xb5b8ef1d51eb1af5, vehicle, seconds); }
	BOOL GET_HAS_ROCKET_BOOST(Vehicle vehicle) { return Call<BOOL>(0xa31e2841e4d9e5e6, vehicle); }
	BOOL GET_HAS_ROCKET_BOOST_f(Vehicle vehicle) { return FastCall<BOOL>(0xa31e2841e4d9e5e6, vehicle); }
	BOOL IS_ROCKET_BOOST_ACTIVE(Vehicle vehicle) { return Call<BOOL>(0x6db93198769a038, vehicle); }
	BOOL IS_ROCKET_BOOST_ACTIVE_f(Vehicle vehicle) { return FastCall<BOOL>(0x6db93198769a038, vehicle); }
	void SET_ROCKET_BOOST_ACTIVE(Vehicle vehicle, BOOL active) { Call<void>(0x8aa8459888005b50, vehicle, active); }
	void SET_ROCKET_BOOST_ACTIVE_f(Vehicle vehicle, BOOL active) { FastCall<void>(0x8aa8459888005b50, vehicle, active); }
	BOOL GET_HAS_RETRACTABLE_WHEELS(Vehicle vehicle) { return Call<BOOL>(0x2edbf5f6a4e7a68a, vehicle); }
	BOOL GET_HAS_RETRACTABLE_WHEELS_f(Vehicle vehicle) { return FastCall<BOOL>(0x2edbf5f6a4e7a68a, vehicle); }
	BOOL GET_IS_WHEELS_RETRACTED(Vehicle vehicle) { return Call<BOOL>(0x387fd487f4451025, vehicle); }
	BOOL GET_IS_WHEELS_RETRACTED_f(Vehicle vehicle) { return FastCall<BOOL>(0x387fd487f4451025, vehicle); }
	void SET_WHEELS_EXTENDED_INSTANTLY(Vehicle vehicle) { Call<void>(0x77bd824c0fab3cf2, vehicle); }
	void SET_WHEELS_EXTENDED_INSTANTLY_f(Vehicle vehicle) { FastCall<void>(0x77bd824c0fab3cf2, vehicle); }
	void SET_WHEELS_RETRACTED_INSTANTLY(Vehicle vehicle) { Call<void>(0x88222d610c9588a5, vehicle); }
	void SET_WHEELS_RETRACTED_INSTANTLY_f(Vehicle vehicle) { FastCall<void>(0x88222d610c9588a5, vehicle); }
	BOOL GET_CAR_HAS_JUMP(Vehicle vehicle) { return Call<BOOL>(0x8cd1054bb6426167, vehicle); }
	BOOL GET_CAR_HAS_JUMP_f(Vehicle vehicle) { return FastCall<BOOL>(0x8cd1054bb6426167, vehicle); }
	void SET_USE_HIGHER_CAR_JUMP(Vehicle vehicle, BOOL toggle) { Call<void>(0xab624d1a73a827f4, vehicle, toggle); }
	void SET_USE_HIGHER_CAR_JUMP_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xab624d1a73a827f4, vehicle, toggle); }
	void SET_CLEAR_FREEZE_WAITING_ON_COLLISION_ONCE_PLAYER_ENTERS(Vehicle vehicle, BOOL toggle) { Call<void>(0x24d00fb202839b9d, vehicle, toggle); }
	void SET_CLEAR_FREEZE_WAITING_ON_COLLISION_ONCE_PLAYER_ENTERS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x24d00fb202839b9d, vehicle, toggle); }
	void SET_VEHICLE_WEAPON_RESTRICTED_AMMO(Vehicle vehicle, int weaponIndex, int capacity) { Call<void>(0x2fa3a19e6e54ee3f, vehicle, weaponIndex, capacity); }
	void SET_VEHICLE_WEAPON_RESTRICTED_AMMO_f(Vehicle vehicle, int weaponIndex, int capacity) { FastCall<void>(0x2fa3a19e6e54ee3f, vehicle, weaponIndex, capacity); }
	int GET_VEHICLE_WEAPON_RESTRICTED_AMMO(Vehicle vehicle, int weaponIndex) { return Call<int>(0x258dec7b90d7bccb, vehicle, weaponIndex); }
	int GET_VEHICLE_WEAPON_RESTRICTED_AMMO_f(Vehicle vehicle, int weaponIndex) { return FastCall<int>(0x258dec7b90d7bccb, vehicle, weaponIndex); }
	BOOL GET_VEHICLE_HAS_PARACHUTE(Vehicle vehicle) { return Call<BOOL>(0x21d24b1196d90b60, vehicle); }
	BOOL GET_VEHICLE_HAS_PARACHUTE_f(Vehicle vehicle) { return FastCall<BOOL>(0x21d24b1196d90b60, vehicle); }
	BOOL GET_VEHICLE_CAN_DEPLOY_PARACHUTE(Vehicle vehicle) { return Call<BOOL>(0x98f640ff86278634, vehicle); }
	BOOL GET_VEHICLE_CAN_DEPLOY_PARACHUTE_f(Vehicle vehicle) { return FastCall<BOOL>(0x98f640ff86278634, vehicle); }
	void VEHICLE_START_PARACHUTING(Vehicle vehicle, BOOL active) { Call<void>(0x6c0a11f436a1c0ae, vehicle, active); }
	void VEHICLE_START_PARACHUTING_f(Vehicle vehicle, BOOL active) { FastCall<void>(0x6c0a11f436a1c0ae, vehicle, active); }
	BOOL IS_VEHICLE_PARACHUTE_DEPLOYED(Vehicle vehicle) { return Call<BOOL>(0x12c38c67f579d76c, vehicle); }
	BOOL IS_VEHICLE_PARACHUTE_DEPLOYED_f(Vehicle vehicle) { return FastCall<BOOL>(0x12c38c67f579d76c, vehicle); }
	void VEHICLE_SET_RAMP_AND_RAMMING_CARS_TAKE_DAMAGE(Vehicle vehicle, BOOL toggle) { Call<void>(0x3dfd5670d0500158, vehicle, toggle); }
	void VEHICLE_SET_RAMP_AND_RAMMING_CARS_TAKE_DAMAGE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x3dfd5670d0500158, vehicle, toggle); }
	void VEHICLE_SET_ENABLE_RAMP_CAR_SIDE_IMPULSE(Any p0, Any p1) { Call<void>(0x36e972274b2f0119, p0, p1); }
	void VEHICLE_SET_ENABLE_RAMP_CAR_SIDE_IMPULSE_f(Any p0, Any p1) { FastCall<void>(0x36e972274b2f0119, p0, p1); }
	void VEHICLE_SET_ENABLE_NORMALISE_RAMP_CAR_VERTICAL_VELOCTIY(Any p0, Any p1) { Call<void>(0x73e7744afdee11db, p0, p1); }
	void VEHICLE_SET_ENABLE_NORMALISE_RAMP_CAR_VERTICAL_VELOCTIY_f(Any p0, Any p1) { FastCall<void>(0x73e7744afdee11db, p0, p1); }
	void VEHICLE_SET_JET_WASH_FORCE_ENABLED(Any p0) { Call<void>(0xcc0965c16cb5f543, p0); }
	void VEHICLE_SET_JET_WASH_FORCE_ENABLED_f(Any p0) { FastCall<void>(0xcc0965c16cb5f543, p0); }
	void SET_VEHICLE_WEAPON_CAN_TARGET_OBJECTS(Vehicle vehicle, BOOL toggle) { Call<void>(0x4f19855064338788, vehicle, toggle); }
	void SET_VEHICLE_WEAPON_CAN_TARGET_OBJECTS_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x4f19855064338788, vehicle, toggle); }
	void SET_VEHICLE_USE_BOOST_BUTTON_FOR_WHEEL_RETRACT(BOOL toggle) { Call<void>(0xca794fe950d97a3e, toggle); }
	void SET_VEHICLE_USE_BOOST_BUTTON_FOR_WHEEL_RETRACT_f(BOOL toggle) { FastCall<void>(0xca794fe950d97a3e, toggle); }
	void _SET_VEHICLE_USE_HORN_BUTTON_FOR_NITROUS(BOOL toggle) { Call<void>(0x219cc626c85e97e6, toggle); }
	void _SET_VEHICLE_USE_HORN_BUTTON_FOR_NITROUS_f(BOOL toggle) { FastCall<void>(0x219cc626c85e97e6, toggle); }
	void VEHICLE_SET_PARACHUTE_MODEL_OVERRIDE(Vehicle vehicle, Hash modelHash) { Call<void>(0x573f5bcd2f3d5ed0, vehicle, modelHash); }
	void VEHICLE_SET_PARACHUTE_MODEL_OVERRIDE_f(Vehicle vehicle, Hash modelHash) { FastCall<void>(0x573f5bcd2f3d5ed0, vehicle, modelHash); }
	void VEHICLE_SET_PARACHUTE_MODEL_TINT_INDEX(Vehicle vehicle, int textureVariation) { Call<void>(0x84d80b9eba411872, vehicle, textureVariation); }
	void VEHICLE_SET_PARACHUTE_MODEL_TINT_INDEX_f(Vehicle vehicle, int textureVariation) { FastCall<void>(0x84d80b9eba411872, vehicle, textureVariation); }
	int VEHICLE_SET_OVERRIDE_EXTENABLE_SIDE_RATIO(Any p0, Any p1) { return Call<int>(0xa26675027b021a41, p0, p1); }
	int VEHICLE_SET_OVERRIDE_EXTENABLE_SIDE_RATIO_f(Any p0, Any p1) { return FastCall<int>(0xa26675027b021a41, p0, p1); }
	int VEHICLE_SET_EXTENABLE_SIDE_TARGET_RATIO(Any p0, Any p1) { return Call<int>(0xf9edb980cf73d13a, p0, p1); }
	int VEHICLE_SET_EXTENABLE_SIDE_TARGET_RATIO_f(Any p0, Any p1) { return FastCall<int>(0xf9edb980cf73d13a, p0, p1); }
	int VEHICLE_SET_OVERRIDE_SIDE_RATIO(Any p0, Any p1) { return Call<int>(0xbe2bad85f2a0f9a6, p0, p1); }
	int VEHICLE_SET_OVERRIDE_SIDE_RATIO_f(Any p0, Any p1) { return FastCall<int>(0xbe2bad85f2a0f9a6, p0, p1); }
	int GET_ALL_VEHICLES(Any* vehsStruct) { return Call<int>(0x8c3bf38ac0e4da2e, vehsStruct); }
	int GET_ALL_VEHICLES_f(Any* vehsStruct) { return FastCall<int>(0x8c3bf38ac0e4da2e, vehsStruct); }
	void SET_CARGOBOB_EXTA_PICKUP_RANGE(Any p0, Any p1) { Call<void>(0x95f6c8cfba9b00f0, p0, p1); }
	void SET_CARGOBOB_EXTA_PICKUP_RANGE_f(Any p0, Any p1) { FastCall<void>(0x95f6c8cfba9b00f0, p0, p1); }
	void SET_OVERRIDE_VEHICLE_DOOR_TORQUE(Any p0, Any p1, Any p2) { Call<void>(0x3623e014ae4aa4f2, p0, p1, p2); }
	void SET_OVERRIDE_VEHICLE_DOOR_TORQUE_f(Any p0, Any p1, Any p2) { FastCall<void>(0x3623e014ae4aa4f2, p0, p1, p2); }
	void SET_WHEELIE_ENABLED(Vehicle vehicle, BOOL enabled) { Call<void>(0x6a7ee55d6d44f27c, vehicle, enabled); }
	void SET_WHEELIE_ENABLED_f(Vehicle vehicle, BOOL enabled) { FastCall<void>(0x6a7ee55d6d44f27c, vehicle, enabled); }
	void SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE(Any p0, Any p1) { Call<void>(0x2681ac199ee69746, p0, p1); }
	void SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE_f(Any p0, Any p1) { FastCall<void>(0x2681ac199ee69746, p0, p1); }
	void SET_DISABLE_EXPLODE_FROM_BODY_DAMAGE_ON_COLLISION(Vehicle vehicle, float value) { Call<void>(0xf04790c30bc207e8, vehicle, value); }
	void SET_DISABLE_EXPLODE_FROM_BODY_DAMAGE_ON_COLLISION_f(Vehicle vehicle, float value) { FastCall<void>(0xf04790c30bc207e8, vehicle, value); }
	void SET_TRAILER_ATTACHMENT_ENABLED(Any p0, Any p1) { Call<void>(0x6db6902bda127cce, p0, p1); }
	void SET_TRAILER_ATTACHMENT_ENABLED_f(Any p0, Any p1) { FastCall<void>(0x6db6902bda127cce, p0, p1); }
	void SET_ROCKET_BOOST_FILL(Vehicle vehicle, float percentage) { Call<void>(0x50980455ab70604d, vehicle, percentage); }
	void SET_ROCKET_BOOST_FILL_f(Vehicle vehicle, float percentage) { FastCall<void>(0x50980455ab70604d, vehicle, percentage); }
	void SET_GLIDER_ACTIVE(Vehicle vehicle, BOOL state) { Call<void>(0x7990186459421cdb, vehicle, state); }
	void SET_GLIDER_ACTIVE_f(Vehicle vehicle, BOOL state) { FastCall<void>(0x7990186459421cdb, vehicle, state); }
	void SET_SHOULD_RESET_TURRET_IN_SCRIPTED_CAMERAS(Vehicle vehicle, BOOL shouldReset) { Call<void>(0xe3cc7379838f9663, vehicle, shouldReset); }
	void SET_SHOULD_RESET_TURRET_IN_SCRIPTED_CAMERAS_f(Vehicle vehicle, BOOL shouldReset) { FastCall<void>(0xe3cc7379838f9663, vehicle, shouldReset); }
	void SET_VEHICLE_DISABLE_COLLISION_UPON_CREATION(Vehicle vehicle, BOOL disable) { Call<void>(0xc08537f9baf79cb0, vehicle, disable); }
	void SET_VEHICLE_DISABLE_COLLISION_UPON_CREATION_f(Vehicle vehicle, BOOL disable) { FastCall<void>(0xc08537f9baf79cb0, vehicle, disable); }
	void SET_GROUND_EFFECT_REDUCES_DRAG(BOOL toggle) { Call<void>(0xf4152af519761dd9, toggle); }
	void SET_GROUND_EFFECT_REDUCES_DRAG_f(BOOL toggle) { FastCall<void>(0xf4152af519761dd9, toggle); }
	void SET_DISABLE_MAP_COLLISION(Vehicle vehicle) { Call<void>(0x63921f96cc6d265b, vehicle); }
	void SET_DISABLE_MAP_COLLISION_f(Vehicle vehicle) { FastCall<void>(0x63921f96cc6d265b, vehicle); }
	void SET_DISABLE_PED_STAND_ON_TOP(Vehicle vehicle, BOOL toggle) { Call<void>(0x99815647522ffec2, vehicle, toggle); }
	void SET_DISABLE_PED_STAND_ON_TOP_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x99815647522ffec2, vehicle, toggle); }
	void SET_VEHICLE_DAMAGE_SCALES(Vehicle vehicle, Any p1, Any p2, Any p3, Any p4) { Call<void>(0xa512ee73289ad309, vehicle, p1, p2, p3, p4); }
	void SET_VEHICLE_DAMAGE_SCALES_f(Vehicle vehicle, Any p1, Any p2, Any p3, Any p4) { FastCall<void>(0xa512ee73289ad309, vehicle, p1, p2, p3, p4); }
	void SET_PLANE_SECTION_DAMAGE_SCALE(Vehicle vehicle, Any p1, Any p2) { Call<void>(0x4d17129181993fd4, vehicle, p1, p2); }
	void SET_PLANE_SECTION_DAMAGE_SCALE_f(Vehicle vehicle, Any p1, Any p2) { FastCall<void>(0x4d17129181993fd4, vehicle, p1, p2); }
	void SET_HELI_CAN_PICKUP_ENTITY_THAT_HAS_PICK_UP_DISABLED(Vehicle vehicle, BOOL toggle) { Call<void>(0xbcbba1fd046db28f, vehicle, toggle); }
	void SET_HELI_CAN_PICKUP_ENTITY_THAT_HAS_PICK_UP_DISABLED_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xbcbba1fd046db28f, vehicle, toggle); }
	void SET_VEHICLE_BOMB_AMMO(Vehicle vehicle, int bombCount) { Call<void>(0xf1177fa1aadea61b, vehicle, bombCount); }
	void SET_VEHICLE_BOMB_AMMO_f(Vehicle vehicle, int bombCount) { FastCall<void>(0xf1177fa1aadea61b, vehicle, bombCount); }
	int GET_VEHICLE_BOMB_AMMO(Vehicle vehicle) { return Call<int>(0x70da750913b3240f, vehicle); }
	int GET_VEHICLE_BOMB_AMMO_f(Vehicle vehicle) { return FastCall<int>(0x70da750913b3240f, vehicle); }
	void SET_VEHICLE_COUNTERMEASURE_AMMO(Vehicle vehicle, int counterMeasureCount) { Call<void>(0x38985b5c994fdcdb, vehicle, counterMeasureCount); }
	void SET_VEHICLE_COUNTERMEASURE_AMMO_f(Vehicle vehicle, int counterMeasureCount) { FastCall<void>(0x38985b5c994fdcdb, vehicle, counterMeasureCount); }
	int GET_VEHICLE_COUNTERMEASURE_AMMO(Vehicle vehicle) { return Call<int>(0x8314a5ef9e6679cf, vehicle); }
	int GET_VEHICLE_COUNTERMEASURE_AMMO_f(Vehicle vehicle) { return FastCall<int>(0x8314a5ef9e6679cf, vehicle); }
	void SET_HELI_COMBAT_OFFSET(Vehicle vehicle, float x, float y, float z) { Call<void>(0x2fc06f633c3a9f16, vehicle, x, y, z); }
	void SET_HELI_COMBAT_OFFSET_f(Vehicle vehicle, float x, float y, float z) { FastCall<void>(0x2fc06f633c3a9f16, vehicle, x, y, z); }
	BOOL GET_CAN_VEHICLE_BE_PLACED_HERE(Vehicle vehicle, float x, float y, float z, float rotX, float rotY, float rotZ, int p7, Any p8) { return Call<BOOL>(0x9215064be12b5e61, vehicle, x, y, z, rotX, rotY, rotZ, p7, p8); }
	BOOL GET_CAN_VEHICLE_BE_PLACED_HERE_f(Vehicle vehicle, float x, float y, float z, float rotX, float rotY, float rotZ, int p7, Any p8) { return FastCall<BOOL>(0x9215064be12b5e61, vehicle, x, y, z, rotX, rotY, rotZ, p7, p8); }
	void SET_DISABLE_AUTOMATIC_CRASH_TASK(Vehicle vehicle, BOOL toggle) { Call<void>(0x5e2d2eb2bf3a49e5, vehicle, toggle); }
	void SET_DISABLE_AUTOMATIC_CRASH_TASK_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x5e2d2eb2bf3a49e5, vehicle, toggle); }
	void SET_SPECIAL_FLIGHT_MODE_RATIO(Vehicle vehicle, float ratio) { Call<void>(0x24d28f8ee617a99b, vehicle, ratio); }
	void SET_SPECIAL_FLIGHT_MODE_RATIO_f(Vehicle vehicle, float ratio) { FastCall<void>(0x24d28f8ee617a99b, vehicle, ratio); }
	void SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(Vehicle vehicle, float targetRatio) { Call<void>(0x5485ae9edfc4580d, vehicle, targetRatio); }
	void SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO_f(Vehicle vehicle, float targetRatio) { FastCall<void>(0x5485ae9edfc4580d, vehicle, targetRatio); }
	void SET_SPECIAL_FLIGHT_MODE_ALLOWED(Vehicle vehicle, BOOL toggle) { Call<void>(0x3a6ce76a4de13338, vehicle, toggle); }
	void SET_SPECIAL_FLIGHT_MODE_ALLOWED_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x3a6ce76a4de13338, vehicle, toggle); }
	void SET_DISABLE_HOVER_MODE_FLIGHT(Vehicle vehicle, BOOL toggle) { Call<void>(0xcf8162e3a708fc75, vehicle, toggle); }
	void SET_DISABLE_HOVER_MODE_FLIGHT_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xcf8162e3a708fc75, vehicle, toggle); }
	BOOL GET_OUTRIGGERS_DEPLOYED(Vehicle vehicle) { return Call<BOOL>(0xc2b278aa2ffe9a1b, vehicle); }
	BOOL GET_OUTRIGGERS_DEPLOYED_f(Vehicle vehicle) { return FastCall<BOOL>(0xc2b278aa2ffe9a1b, vehicle); }
	Vector3* FIND_SPAWN_COORDINATES_FOR_HELI(Ped ped) { Call<Vector3*>(0x836bc8922fb80f9e, ped); return GetVector(); }
	void SET_DEPLOY_FOLDING_WINGS(Vehicle vehicle, BOOL deploy, BOOL p2) { Call<void>(0x978701e3751a7a8f, vehicle, deploy, p2); }
	void SET_DEPLOY_FOLDING_WINGS_f(Vehicle vehicle, BOOL deploy, BOOL p2) { FastCall<void>(0x978701e3751a7a8f, vehicle, deploy, p2); }
	BOOL ARE_FOLDING_WINGS_DEPLOYED(Vehicle vehicle) { return Call<BOOL>(0x2702bc10e7fda6c6, vehicle); }
	BOOL ARE_FOLDING_WINGS_DEPLOYED_f(Vehicle vehicle) { return FastCall<BOOL>(0x2702bc10e7fda6c6, vehicle); }
	void _SET_DEPLOY_MISSILE_BAYS(Vehicle vehicle, BOOL deploy) { Call<void>(0xa21a7b0e52a770ce, vehicle, deploy); }
	void _SET_DEPLOY_MISSILE_BAYS_f(Vehicle vehicle, BOOL deploy) { FastCall<void>(0xa21a7b0e52a770ce, vehicle, deploy); }
	BOOL _ARE_MISSILE_BAYS_DEPLOYED(Vehicle vehicle) { return Call<BOOL>(0x5f26c06dfa98d2e9, vehicle); }
	BOOL _ARE_MISSILE_BAYS_DEPLOYED_f(Vehicle vehicle) { return FastCall<BOOL>(0x5f26c06dfa98d2e9, vehicle); }
	void SET_DIP_STRAIGHT_DOWN_WHEN_CRASHING_PLANE(Vehicle vehicle, BOOL toggle) { Call<void>(0x33da7a7e1509d0f4, vehicle, toggle); }
	void SET_DIP_STRAIGHT_DOWN_WHEN_CRASHING_PLANE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x33da7a7e1509d0f4, vehicle, toggle); }
	void SET_TURRET_HIDDEN(Vehicle vehicle, int index, BOOL toggle) { Call<void>(0xaf276ac2f38329c, vehicle, index, toggle); }
	void SET_TURRET_HIDDEN_f(Vehicle vehicle, int index, BOOL toggle) { FastCall<void>(0xaf276ac2f38329c, vehicle, index, toggle); }
	void SET_HOVER_MODE_WING_RATIO(Vehicle vehicle, float ratio) { Call<void>(0xdb87dfa65eb63173, vehicle, ratio); }
	void SET_HOVER_MODE_WING_RATIO_f(Vehicle vehicle, float ratio) { FastCall<void>(0xdb87dfa65eb63173, vehicle, ratio); }
	void SET_DISABLE_TURRET_MOVEMENT(Vehicle vehicle, int turretId) { Call<void>(0x8f04a3f99389deaa, vehicle, turretId); }
	void SET_DISABLE_TURRET_MOVEMENT_f(Vehicle vehicle, int turretId) { FastCall<void>(0x8f04a3f99389deaa, vehicle, turretId); }
	void SET_FORCE_FIX_LINK_MATRICES(Vehicle vehicle) { Call<void>(0x41be52af1b9e2bc4, vehicle); }
	void SET_FORCE_FIX_LINK_MATRICES_f(Vehicle vehicle) { FastCall<void>(0x41be52af1b9e2bc4, vehicle); }
	void SET_TRANSFORM_RATE_FOR_ANIMATION(Vehicle vehicle, float transformRate) { Call<void>(0xcbdc6cdc5775a0df, vehicle, transformRate); }
	void SET_TRANSFORM_RATE_FOR_ANIMATION_f(Vehicle vehicle, float transformRate) { FastCall<void>(0xcbdc6cdc5775a0df, vehicle, transformRate); }
	void SET_TRANSFORM_TO_SUBMARINE_USES_ALTERNATE_INPUT(Vehicle vehicle, BOOL toggle) { Call<void>(0xf6196a19a3eabee3, vehicle, toggle); }
	void SET_TRANSFORM_TO_SUBMARINE_USES_ALTERNATE_INPUT_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xf6196a19a3eabee3, vehicle, toggle); }
	void SET_VEHICLE_COMBAT_MODE(BOOL toggle) { Call<void>(0x939074ef1210fde, toggle); }
	void SET_VEHICLE_COMBAT_MODE_f(BOOL toggle) { FastCall<void>(0x939074ef1210fde, toggle); }
	void SET_VEHICLE_DETONATION_MODE(BOOL toggle) { Call<void>(0x490b71924b5d4f2f, toggle); }
	void SET_VEHICLE_DETONATION_MODE_f(BOOL toggle) { FastCall<void>(0x490b71924b5d4f2f, toggle); }
	void SET_VEHICLE_SHUNT_ON_STICK(BOOL toggle) { Call<void>(0x27b4d2da9a62e1f9, toggle); }
	void SET_VEHICLE_SHUNT_ON_STICK_f(BOOL toggle) { FastCall<void>(0x27b4d2da9a62e1f9, toggle); }
	BOOL GET_IS_VEHICLE_SHUNTING(Vehicle vehicle) { return Call<BOOL>(0x317f2a0bfeadd75b, vehicle); }
	BOOL GET_IS_VEHICLE_SHUNTING_f(Vehicle vehicle) { return FastCall<BOOL>(0x317f2a0bfeadd75b, vehicle); }
	BOOL GET_HAS_VEHICLE_BEEN_HIT_BY_SHUNT(Vehicle vehicle) { return Call<BOOL>(0xb82b749284a985bc, vehicle); }
	BOOL GET_HAS_VEHICLE_BEEN_HIT_BY_SHUNT_f(Vehicle vehicle) { return FastCall<BOOL>(0xb82b749284a985bc, vehicle); }
	Vehicle GET_LAST_SHUNT_VEHICLE(Vehicle vehicle) { return Call<Vehicle>(0x75c39e8f1ca247f3, vehicle); }
	Vehicle GET_LAST_SHUNT_VEHICLE_f(Vehicle vehicle) { return FastCall<Vehicle>(0x75c39e8f1ca247f3, vehicle); }
	void SET_DISABLE_VEHICLE_EXPLOSIONS_DAMAGE(BOOL toggle) { Call<void>(0x2f5fccf7ef0cf4e9, toggle); }
	void SET_DISABLE_VEHICLE_EXPLOSIONS_DAMAGE_f(BOOL toggle) { FastCall<void>(0x2f5fccf7ef0cf4e9, toggle); }
	void SET_OVERRIDE_NITROUS_LEVEL(Vehicle vehicle, BOOL toggle, float level, float power, float rechargeTime, BOOL disableSound) { Call<void>(0x7c1f095170b227e3, vehicle, toggle, level, power, rechargeTime, disableSound); }
	void SET_OVERRIDE_NITROUS_LEVEL_f(Vehicle vehicle, BOOL toggle, float level, float power, float rechargeTime, BOOL disableSound) { FastCall<void>(0x7c1f095170b227e3, vehicle, toggle, level, power, rechargeTime, disableSound); }
	void SET_NITROUS_IS_ACTIVE(Vehicle vehicle, BOOL enabled) { Call<void>(0x83b462e5cd2e3593, vehicle, enabled); }
	void SET_NITROUS_IS_ACTIVE_f(Vehicle vehicle, BOOL enabled) { FastCall<void>(0x83b462e5cd2e3593, vehicle, enabled); }
	void _SET_OVERRIDE_TRACTION_LOSS_MULTIPLIER(Vehicle vehicle, float modifier) { Call<void>(0xff330f87bbe78ba9, vehicle, modifier); }
	void _SET_OVERRIDE_TRACTION_LOSS_MULTIPLIER_f(Vehicle vehicle, float modifier) { FastCall<void>(0xff330f87bbe78ba9, vehicle, modifier); }
	void _SET_DRIFT_SLIP_ANGLE_LIMITS(Vehicle vehicle, float durationScalar, float amplitudeScalar, float slipAngleLimit) { Call<void>(0x2fafb5e9921a81d1, vehicle, durationScalar, amplitudeScalar, slipAngleLimit); }
	void _SET_DRIFT_SLIP_ANGLE_LIMITS_f(Vehicle vehicle, float durationScalar, float amplitudeScalar, float slipAngleLimit) { FastCall<void>(0x2fafb5e9921a81d1, vehicle, durationScalar, amplitudeScalar, slipAngleLimit); }
	void _SET_MINIMUM_TIME_BETWEEN_GEAR_SHIFTS(Vehicle vehicle, int time) { Call<void>(0xd322ac551e6a8f05, vehicle, time); }
	void _SET_MINIMUM_TIME_BETWEEN_GEAR_SHIFTS_f(Vehicle vehicle, int time) { FastCall<void>(0xd322ac551e6a8f05, vehicle, time); }
	void FULLY_CHARGE_NITROUS(Vehicle vehicle) { Call<void>(0x872be76bd279be, vehicle); }
	void FULLY_CHARGE_NITROUS_f(Vehicle vehicle) { FastCall<void>(0x872be76bd279be, vehicle); }
	float _GET_REMAINING_NITROUS_DURATION(Vehicle vehicle) { return ToFloat(Call<_float>(0x28ce49a835191070, vehicle)); }
	float _GET_REMAINING_NITROUS_DURATION_f(Vehicle vehicle) { return ToFloat(FastCall<_float>(0x28ce49a835191070, vehicle)); }
	BOOL IS_NITROUS_ACTIVE(Vehicle vehicle) { return Call<BOOL>(0x572927f1e73a3a46, vehicle); }
	BOOL IS_NITROUS_ACTIVE_f(Vehicle vehicle) { return FastCall<BOOL>(0x572927f1e73a3a46, vehicle); }
	void CLEAR_NITROUS(Vehicle vehicle) { Call<void>(0xf7fc8918874aeb02, vehicle); }
	void CLEAR_NITROUS_f(Vehicle vehicle) { FastCall<void>(0xf7fc8918874aeb02, vehicle); }
	void SET_INCREASE_WHEEL_CRUSH_DAMAGE(Vehicle vehicle, BOOL toggle) { Call<void>(0x6ebfe3b85f2672b7, vehicle, toggle); }
	void SET_INCREASE_WHEEL_CRUSH_DAMAGE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x6ebfe3b85f2672b7, vehicle, toggle); }
	void SET_DISABLE_WEAPON_BLADE_FORCES(BOOL toggle) { Call<void>(0x9a32eba6829233de, toggle); }
	void SET_DISABLE_WEAPON_BLADE_FORCES_f(BOOL toggle) { FastCall<void>(0x9a32eba6829233de, toggle); }
	void SET_USE_DOUBLE_CLICK_FOR_CAR_JUMP(BOOL toggle) { Call<void>(0x5bf8fb66a8b2f13f, toggle); }
	void SET_USE_DOUBLE_CLICK_FOR_CAR_JUMP_f(BOOL toggle) { FastCall<void>(0x5bf8fb66a8b2f13f, toggle); }
	BOOL GET_DOES_VEHICLE_HAVE_TOMBSTONE(Vehicle vehicle) { return Call<BOOL>(0xa66822102c5eb6e, vehicle); }
	BOOL GET_DOES_VEHICLE_HAVE_TOMBSTONE_f(Vehicle vehicle) { return FastCall<BOOL>(0xa66822102c5eb6e, vehicle); }
	void HIDE_TOMBSTONE(Vehicle vehicle, BOOL toggle) { Call<void>(0x84cae68a715c9638, vehicle, toggle); }
	void HIDE_TOMBSTONE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x84cae68a715c9638, vehicle, toggle); }
	void APPLY_EMP_EFFECT(Vehicle vehicle) { Call<void>(0x85fe9f4dae58de99, vehicle); }
	void APPLY_EMP_EFFECT_f(Vehicle vehicle) { FastCall<void>(0x85fe9f4dae58de99, vehicle); }
	BOOL GET_IS_VEHICLE_DISABLED_BY_EMP(Vehicle vehicle) { return Call<BOOL>(0x6eafa3ea0942eb44, vehicle); }
	BOOL GET_IS_VEHICLE_DISABLED_BY_EMP_f(Vehicle vehicle) { return FastCall<BOOL>(0x6eafa3ea0942eb44, vehicle); }
	void SET_DISABLE_RETRACTING_WEAPON_BLADES(BOOL toggle) { Call<void>(0x28c979fbef2bda54, toggle); }
	void SET_DISABLE_RETRACTING_WEAPON_BLADES_f(BOOL toggle) { FastCall<void>(0x28c979fbef2bda54, toggle); }
	float GET_TYRE_HEALTH(Vehicle vehicle, int wheelIndex) { return ToFloat(Call<_float>(0x785b877650f3e57a, vehicle, wheelIndex)); }
	float GET_TYRE_HEALTH_f(Vehicle vehicle, int wheelIndex) { return ToFloat(FastCall<_float>(0x785b877650f3e57a, vehicle, wheelIndex)); }
	void SET_TYRE_HEALTH(Vehicle vehicle, int wheelIndex, float health) { Call<void>(0xe0d866ee873ce086, vehicle, wheelIndex, health); }
	void SET_TYRE_HEALTH_f(Vehicle vehicle, int wheelIndex, float health) { FastCall<void>(0xe0d866ee873ce086, vehicle, wheelIndex, health); }
	float GET_TYRE_WEAR_RATE(Vehicle vehicle, int wheelIndex) { return ToFloat(Call<_float>(0x2358ed39495d91c2, vehicle, wheelIndex)); }
	float GET_TYRE_WEAR_RATE_f(Vehicle vehicle, int wheelIndex) { return ToFloat(FastCall<_float>(0x2358ed39495d91c2, vehicle, wheelIndex)); }
	void SET_TYRE_WEAR_RATE(Vehicle vehicle, int wheelIndex, float multiplier) { Call<void>(0x7ef2536e80342b36, vehicle, wheelIndex, multiplier); }
	void SET_TYRE_WEAR_RATE_f(Vehicle vehicle, int wheelIndex, float multiplier) { FastCall<void>(0x7ef2536e80342b36, vehicle, wheelIndex, multiplier); }
	void SET_TYRE_WEAR_RATE_SCALE(Vehicle vehicle, int wheelIndex, float multiplier) { Call<void>(0x7c136e410485dee1, vehicle, wheelIndex, multiplier); }
	void SET_TYRE_WEAR_RATE_SCALE_f(Vehicle vehicle, int wheelIndex, float multiplier) { FastCall<void>(0x7c136e410485dee1, vehicle, wheelIndex, multiplier); }
	void SET_TYRE_MAXIMUM_GRIP_DIFFERENCE_DUE_TO_WEAR_RATE(Vehicle vehicle, int wheelIndex, float multiplier) { Call<void>(0x321f70009ac3f2c5, vehicle, wheelIndex, multiplier); }
	void SET_TYRE_MAXIMUM_GRIP_DIFFERENCE_DUE_TO_WEAR_RATE_f(Vehicle vehicle, int wheelIndex, float multiplier) { FastCall<void>(0x321f70009ac3f2c5, vehicle, wheelIndex, multiplier); }
	void SET_AIRCRAFT_IGNORE_HIGHTMAP_OPTIMISATION(Vehicle vehicle, int p1) { Call<void>(0xa0256d6852b885c8, vehicle, p1); }
	void SET_AIRCRAFT_IGNORE_HIGHTMAP_OPTIMISATION_f(Vehicle vehicle, int p1) { FastCall<void>(0xa0256d6852b885c8, vehicle, p1); }
	void SET_REDUCED_SUSPENSION_FORCE(Vehicle vehicle, BOOL enable) { Call<void>(0xd2380a7180baa7c7, vehicle, enable); }
	void SET_REDUCED_SUSPENSION_FORCE_f(Vehicle vehicle, BOOL enable) { FastCall<void>(0xd2380a7180baa7c7, vehicle, enable); }
	void SET_DRIFT_TYRES(Vehicle vehicle, BOOL toggle) { Call<void>(0xe0a9207a9ea22b28, vehicle, toggle); }
	void SET_DRIFT_TYRES_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xe0a9207a9ea22b28, vehicle, toggle); }
	BOOL GET_DRIFT_TYRES_SET(Vehicle vehicle) { return Call<BOOL>(0x1645ae7739f8319f, vehicle); }
	BOOL GET_DRIFT_TYRES_SET_f(Vehicle vehicle) { return FastCall<BOOL>(0x1645ae7739f8319f, vehicle); }
	void NETWORK_USE_HIGH_PRECISION_TRAIN_BLENDING(Vehicle vehicle, BOOL toggle) { Call<void>(0xae439a21376b259d, vehicle, toggle); }
	void NETWORK_USE_HIGH_PRECISION_TRAIN_BLENDING_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0xae439a21376b259d, vehicle, toggle); }
	void SET_CHECK_FOR_ENOUGH_ROOM_FOR_PED(Vehicle vehicle, BOOL p1) { Call<void>(0xb4b2ebaa2742093a, vehicle, p1); }
	void SET_CHECK_FOR_ENOUGH_ROOM_FOR_PED_f(Vehicle vehicle, BOOL p1) { FastCall<void>(0xb4b2ebaa2742093a, vehicle, p1); }
	void _SET_ALLOW_COLLISION_WHEN_IN_VEHICLE(Vehicle vehicle, BOOL toggle) { Call<void>(0x56ed07d63ab23298, vehicle, toggle); }
	void _SET_ALLOW_COLLISION_WHEN_IN_VEHICLE_f(Vehicle vehicle, BOOL toggle) { FastCall<void>(0x56ed07d63ab23298, vehicle, toggle); }
	BOOL _IS_VEHICLE_GEN9_EXCLUSIVE_MODEL(Hash vehicleModel) { return Call<BOOL>(0x270bc8880de432db, vehicleModel); }
	BOOL _IS_VEHICLE_GEN9_EXCLUSIVE_MODEL_f(Hash vehicleModel) { return FastCall<BOOL>(0x270bc8880de432db, vehicleModel); }
	int _GET_VEHICLE_MAX_EXHAUST_BONE_COUNT() { return Call<int>(0xe0711b1811671a3f); }
	int _GET_VEHICLE_MAX_EXHAUST_BONE_COUNT_f() { return FastCall<int>(0xe0711b1811671a3f); }
	BOOL _GET_VEHICLE_EXHAUST_BONE(Vehicle vehicle, int index, int* boneIndex, BOOL* axisX) { return Call<BOOL>(0x9e736b1e39789bf4, vehicle, index, boneIndex, axisX); }
	BOOL _GET_VEHICLE_EXHAUST_BONE_f(Vehicle vehicle, int index, int* boneIndex, BOOL* axisX) { return FastCall<BOOL>(0x9e736b1e39789bf4, vehicle, index, boneIndex, axisX); }
}
namespace WATER
{
	BOOL GET_WATER_HEIGHT(float x, float y, float z, float* height) { return Call<BOOL>(0x93de82ff57553fd8, x, y, z, height); }
	BOOL GET_WATER_HEIGHT_f(float x, float y, float z, float* height) { return FastCall<BOOL>(0x93de82ff57553fd8, x, y, z, height); }
	BOOL GET_WATER_HEIGHT_NO_WAVES(float x, float y, float z, float* height) { return Call<BOOL>(0x9878049eef2b7103, x, y, z, height); }
	BOOL GET_WATER_HEIGHT_NO_WAVES_f(float x, float y, float z, float* height) { return FastCall<BOOL>(0x9878049eef2b7103, x, y, z, height); }
	BOOL TEST_PROBE_AGAINST_WATER(float x1, float y1, float z1, float x2, float y2, float z2, Vector3* result) { return Call<BOOL>(0x4a537113bbe51b3d, x1, y1, z1, x2, y2, z2, result); }
	BOOL TEST_PROBE_AGAINST_WATER_f(float x1, float y1, float z1, float x2, float y2, float z2, Vector3* result) { return FastCall<BOOL>(0x4a537113bbe51b3d, x1, y1, z1, x2, y2, z2, result); }
	int TEST_PROBE_AGAINST_ALL_WATER(float x1, float y1, float z1, float x2, float y2, float z2, int flags, float* waterHeight) { return Call<int>(0x2248f68eff9803ff, x1, y1, z1, x2, y2, z2, flags, waterHeight); }
	int TEST_PROBE_AGAINST_ALL_WATER_f(float x1, float y1, float z1, float x2, float y2, float z2, int flags, float* waterHeight) { return FastCall<int>(0x2248f68eff9803ff, x1, y1, z1, x2, y2, z2, flags, waterHeight); }
	int TEST_VERTICAL_PROBE_AGAINST_ALL_WATER(float x, float y, float z, int flags, float* waterHeight) { return Call<int>(0xf9857ad1fb8694f0, x, y, z, flags, waterHeight); }
	int TEST_VERTICAL_PROBE_AGAINST_ALL_WATER_f(float x, float y, float z, int flags, float* waterHeight) { return FastCall<int>(0xf9857ad1fb8694f0, x, y, z, flags, waterHeight); }
	void MODIFY_WATER(float x, float y, float radius, float height) { Call<void>(0x1c135f5ee0a9a932, x, y, radius, height); }
	void MODIFY_WATER_f(float x, float y, float radius, float height) { FastCall<void>(0x1c135f5ee0a9a932, x, y, radius, height); }
	int ADD_EXTRA_CALMING_QUAD(float xLow, float yLow, float xHigh, float yHigh, float height) { return Call<int>(0xca75bdb1e36ee770, xLow, yLow, xHigh, yHigh, height); }
	int ADD_EXTRA_CALMING_QUAD_f(float xLow, float yLow, float xHigh, float yHigh, float height) { return FastCall<int>(0xca75bdb1e36ee770, xLow, yLow, xHigh, yHigh, height); }
	void REMOVE_EXTRA_CALMING_QUAD(int calmingQuad) { Call<void>(0x87c1981d9df17a8d, calmingQuad); }
	void REMOVE_EXTRA_CALMING_QUAD_f(int calmingQuad) { FastCall<void>(0x87c1981d9df17a8d, calmingQuad); }
	void SET_DEEP_OCEAN_SCALER(float intensity) { Call<void>(0xf2f3e09d2a186c9f, intensity); }
	void SET_DEEP_OCEAN_SCALER_f(float intensity) { FastCall<void>(0xf2f3e09d2a186c9f, intensity); }
	float GET_DEEP_OCEAN_SCALER() { return ToFloat(Call<_float>(0x72b6d60492ecea93)); }
	float GET_DEEP_OCEAN_SCALER_f() { return ToFloat(FastCall<_float>(0x72b6d60492ecea93)); }
	void SET_CALMED_WAVE_HEIGHT_SCALER(float height) { Call<void>(0x1a6891008e65d49e, height); }
	void SET_CALMED_WAVE_HEIGHT_SCALER_f(float height) { FastCall<void>(0x1a6891008e65d49e, height); }
	void RESET_DEEP_OCEAN_SCALER() { Call<void>(0xc5efcfe63006d04c); }
	void RESET_DEEP_OCEAN_SCALER_f() { FastCall<void>(0xc5efcfe63006d04c); }
}
namespace WEAPON
{
	void ENABLE_LASER_SIGHT_RENDERING(BOOL toggle) { Call<void>(0x55b1f88eda7546da, toggle); }
	void ENABLE_LASER_SIGHT_RENDERING_f(BOOL toggle) { FastCall<void>(0x55b1f88eda7546da, toggle); }
	Hash GET_WEAPON_COMPONENT_TYPE_MODEL(Hash componentHash) { return Call<Hash>(0xa258c1f090009720, componentHash); }
	Hash GET_WEAPON_COMPONENT_TYPE_MODEL_f(Hash componentHash) { return FastCall<Hash>(0xa258c1f090009720, componentHash); }
	Hash GET_WEAPONTYPE_MODEL(Hash weaponHash) { return Call<Hash>(0x1e502d53aefd3ec9, weaponHash); }
	Hash GET_WEAPONTYPE_MODEL_f(Hash weaponHash) { return FastCall<Hash>(0x1e502d53aefd3ec9, weaponHash); }
	Hash GET_WEAPONTYPE_SLOT(Hash weaponHash) { return Call<Hash>(0x3286b723bb552e3e, weaponHash); }
	Hash GET_WEAPONTYPE_SLOT_f(Hash weaponHash) { return FastCall<Hash>(0x3286b723bb552e3e, weaponHash); }
	Hash GET_WEAPONTYPE_GROUP(Hash weaponHash) { return Call<Hash>(0x1e502d53aeaa3a1f, weaponHash); }
	Hash GET_WEAPONTYPE_GROUP_f(Hash weaponHash) { return FastCall<Hash>(0x1e502d53aeaa3a1f, weaponHash); }
	int GET_WEAPON_COMPONENT_VARIANT_EXTRA_COUNT(Hash componentHash) { return Call<int>(0x7273c793e709f92a, componentHash); }
	int GET_WEAPON_COMPONENT_VARIANT_EXTRA_COUNT_f(Hash componentHash) { return FastCall<int>(0x7273c793e709f92a, componentHash); }
	Hash GET_WEAPON_COMPONENT_VARIANT_EXTRA_MODEL(Hash componentHash, int extraComponentIndex) { return Call<Hash>(0x7273c793e796a344, componentHash, extraComponentIndex); }
	Hash GET_WEAPON_COMPONENT_VARIANT_EXTRA_MODEL_f(Hash componentHash, int extraComponentIndex) { return FastCall<Hash>(0x7273c793e796a344, componentHash, extraComponentIndex); }
	void SET_CURRENT_PED_WEAPON(Ped ped, Hash weaponHash, BOOL bForceInHand) { Call<void>(0x77020f0e0c62192f, ped, weaponHash, bForceInHand); }
	void SET_CURRENT_PED_WEAPON_f(Ped ped, Hash weaponHash, BOOL bForceInHand) { FastCall<void>(0x77020f0e0c62192f, ped, weaponHash, bForceInHand); }
	BOOL GET_CURRENT_PED_WEAPON(Ped ped, Hash* weaponHash, BOOL p2) { return Call<BOOL>(0xef9dc693be1d59bb, ped, weaponHash, p2); }
	BOOL GET_CURRENT_PED_WEAPON_f(Ped ped, Hash* weaponHash, BOOL p2) { return FastCall<BOOL>(0xef9dc693be1d59bb, ped, weaponHash, p2); }
	Entity GET_CURRENT_PED_WEAPON_ENTITY_INDEX(Ped ped, Any p1) { return Call<Entity>(0x57e7fe8d741cad5a, ped, p1); }
	Entity GET_CURRENT_PED_WEAPON_ENTITY_INDEX_f(Ped ped, Any p1) { return FastCall<Entity>(0x57e7fe8d741cad5a, ped, p1); }
	Hash GET_BEST_PED_WEAPON(Ped ped, BOOL p1) { return Call<Hash>(0x42061efd7873919e, ped, p1); }
	Hash GET_BEST_PED_WEAPON_f(Ped ped, BOOL p1) { return FastCall<Hash>(0x42061efd7873919e, ped, p1); }
	BOOL SET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash weaponHash) { return Call<BOOL>(0xbdd27417510df2c2, ped, weaponHash); }
	BOOL SET_CURRENT_PED_VEHICLE_WEAPON_f(Ped ped, Hash weaponHash) { return FastCall<BOOL>(0xbdd27417510df2c2, ped, weaponHash); }
	BOOL GET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash* weaponHash) { return Call<BOOL>(0x3c18870348f5e74e, ped, weaponHash); }
	BOOL GET_CURRENT_PED_VEHICLE_WEAPON_f(Ped ped, Hash* weaponHash) { return FastCall<BOOL>(0x3c18870348f5e74e, ped, weaponHash); }
	void SET_PED_CYCLE_VEHICLE_WEAPONS_ONLY(Ped ped) { Call<void>(0xf8ad115f9b891e4d, ped); }
	void SET_PED_CYCLE_VEHICLE_WEAPONS_ONLY_f(Ped ped) { FastCall<void>(0xf8ad115f9b891e4d, ped); }
	BOOL IS_PED_ARMED(Ped ped, int typeFlags) { return Call<BOOL>(0x1ab8804f272167b6, ped, typeFlags); }
	BOOL IS_PED_ARMED_f(Ped ped, int typeFlags) { return FastCall<BOOL>(0x1ab8804f272167b6, ped, typeFlags); }
	BOOL IS_WEAPON_VALID(Hash weaponHash) { return Call<BOOL>(0x871309cd4bbec0ee, weaponHash); }
	BOOL IS_WEAPON_VALID_f(Hash weaponHash) { return FastCall<BOOL>(0x871309cd4bbec0ee, weaponHash); }
	BOOL HAS_PED_GOT_WEAPON(Ped ped, Hash weaponHash, BOOL p2) { return Call<BOOL>(0x736ad0f53abe6704, ped, weaponHash, p2); }
	BOOL HAS_PED_GOT_WEAPON_f(Ped ped, Hash weaponHash, BOOL p2) { return FastCall<BOOL>(0x736ad0f53abe6704, ped, weaponHash, p2); }
	BOOL IS_PED_WEAPON_READY_TO_SHOOT(Ped ped) { return Call<BOOL>(0xab291f7846796ad5, ped); }
	BOOL IS_PED_WEAPON_READY_TO_SHOOT_f(Ped ped) { return FastCall<BOOL>(0xab291f7846796ad5, ped); }
	Hash GET_PED_WEAPONTYPE_IN_SLOT(Ped ped, Hash weaponSlot) { return Call<Hash>(0x6f08357faea98568, ped, weaponSlot); }
	Hash GET_PED_WEAPONTYPE_IN_SLOT_f(Ped ped, Hash weaponSlot) { return FastCall<Hash>(0x6f08357faea98568, ped, weaponSlot); }
	int GET_AMMO_IN_PED_WEAPON(Ped ped, Hash weaponhash) { return Call<int>(0xb461cbce540c8abe, ped, weaponhash); }
	int GET_AMMO_IN_PED_WEAPON_f(Ped ped, Hash weaponhash) { return FastCall<int>(0xb461cbce540c8abe, ped, weaponhash); }
	void ADD_AMMO_TO_PED(Ped ped, Hash weaponHash, int ammo) { Call<void>(0x4222a0fd29e0fcfe, ped, weaponHash, ammo); }
	void ADD_AMMO_TO_PED_f(Ped ped, Hash weaponHash, int ammo) { FastCall<void>(0x4222a0fd29e0fcfe, ped, weaponHash, ammo); }
	void SET_PED_AMMO(Ped ped, Hash weaponHash, int ammo, BOOL p3) { Call<void>(0x1e157030ff8a137b, ped, weaponHash, ammo, p3); }
	void SET_PED_AMMO_f(Ped ped, Hash weaponHash, int ammo, BOOL p3) { FastCall<void>(0x1e157030ff8a137b, ped, weaponHash, ammo, p3); }
	void SET_PED_INFINITE_AMMO(Ped ped, BOOL toggle, Hash weaponHash) { Call<void>(0x112157d900e7d80c, ped, toggle, weaponHash); }
	void SET_PED_INFINITE_AMMO_f(Ped ped, BOOL toggle, Hash weaponHash) { FastCall<void>(0x112157d900e7d80c, ped, toggle, weaponHash); }
	void SET_PED_INFINITE_AMMO_CLIP(Ped ped, BOOL toggle) { Call<void>(0x636a33672813a3a3, ped, toggle); }
	void SET_PED_INFINITE_AMMO_CLIP_f(Ped ped, BOOL toggle) { FastCall<void>(0x636a33672813a3a3, ped, toggle); }
	void SET_PED_STUN_GUN_FINITE_AMMO(Any p0, Any p1) { Call<void>(0x7af27d92ee35cce7, p0, p1); }
	void SET_PED_STUN_GUN_FINITE_AMMO_f(Any p0, Any p1) { FastCall<void>(0x7af27d92ee35cce7, p0, p1); }
	void GIVE_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, BOOL isHidden, BOOL bForceInHand) { Call<void>(0x90b5f92c38cc2c00, ped, weaponHash, ammoCount, isHidden, bForceInHand); }
	void GIVE_WEAPON_TO_PED_f(Ped ped, Hash weaponHash, int ammoCount, BOOL isHidden, BOOL bForceInHand) { FastCall<void>(0x90b5f92c38cc2c00, ped, weaponHash, ammoCount, isHidden, bForceInHand); }
	void GIVE_DELAYED_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, BOOL bForceInHand) { Call<void>(0xe619fdecf1d92dc3, ped, weaponHash, ammoCount, bForceInHand); }
	void GIVE_DELAYED_WEAPON_TO_PED_f(Ped ped, Hash weaponHash, int ammoCount, BOOL bForceInHand) { FastCall<void>(0xe619fdecf1d92dc3, ped, weaponHash, ammoCount, bForceInHand); }
	void REMOVE_ALL_PED_WEAPONS(Ped ped, BOOL p1) { Call<void>(0xb4e0acc2655466ee, ped, p1); }
	void REMOVE_ALL_PED_WEAPONS_f(Ped ped, BOOL p1) { FastCall<void>(0xb4e0acc2655466ee, ped, p1); }
	void REMOVE_WEAPON_FROM_PED(Ped ped, Hash weaponHash) { Call<void>(0xb2dea748c740e3e2, ped, weaponHash); }
	void REMOVE_WEAPON_FROM_PED_f(Ped ped, Hash weaponHash) { FastCall<void>(0xb2dea748c740e3e2, ped, weaponHash); }
	void HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(Ped ped, BOOL toggle) { Call<void>(0x5b3285a8ca941633, ped, toggle); }
	void HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE_f(Ped ped, BOOL toggle) { FastCall<void>(0x5b3285a8ca941633, ped, toggle); }
	void SET_PED_CURRENT_WEAPON_VISIBLE(Ped ped, BOOL visible, BOOL deselectWeapon, BOOL p3, BOOL p4) { Call<void>(0x43637f239d749042, ped, visible, deselectWeapon, p3, p4); }
	void SET_PED_CURRENT_WEAPON_VISIBLE_f(Ped ped, BOOL visible, BOOL deselectWeapon, BOOL p3, BOOL p4) { FastCall<void>(0x43637f239d749042, ped, visible, deselectWeapon, p3, p4); }
	void SET_PED_DROPS_WEAPONS_WHEN_DEAD(Ped ped, BOOL toggle) { Call<void>(0xb5c198e7816667b9, ped, toggle); }
	void SET_PED_DROPS_WEAPONS_WHEN_DEAD_f(Ped ped, BOOL toggle) { FastCall<void>(0xb5c198e7816667b9, ped, toggle); }
	BOOL HAS_PED_BEEN_DAMAGED_BY_WEAPON(Ped ped, Hash weaponHash, int weaponType) { return Call<BOOL>(0x5a8f283ce4426adc, ped, weaponHash, weaponType); }
	BOOL HAS_PED_BEEN_DAMAGED_BY_WEAPON_f(Ped ped, Hash weaponHash, int weaponType) { return FastCall<BOOL>(0x5a8f283ce4426adc, ped, weaponHash, weaponType); }
	void CLEAR_PED_LAST_WEAPON_DAMAGE(Ped ped) { Call<void>(0x215c5e98b12140ab, ped); }
	void CLEAR_PED_LAST_WEAPON_DAMAGE_f(Ped ped) { FastCall<void>(0x215c5e98b12140ab, ped); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON(Entity entity, Hash weaponHash, int weaponType) { return Call<BOOL>(0x9d03d8498cde857e, entity, weaponHash, weaponType); }
	BOOL HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON_f(Entity entity, Hash weaponHash, int weaponType) { return FastCall<BOOL>(0x9d03d8498cde857e, entity, weaponHash, weaponType); }
	void CLEAR_ENTITY_LAST_WEAPON_DAMAGE(Entity entity) { Call<void>(0xb148158b265e3b53, entity); }
	void CLEAR_ENTITY_LAST_WEAPON_DAMAGE_f(Entity entity) { FastCall<void>(0xb148158b265e3b53, entity); }
	void SET_PED_DROPS_WEAPON(Ped ped) { Call<void>(0x306304f38ade6724, ped); }
	void SET_PED_DROPS_WEAPON_f(Ped ped) { FastCall<void>(0x306304f38ade6724, ped); }
	void SET_PED_DROPS_INVENTORY_WEAPON(Ped ped, Hash weaponHash, float xOffset, float yOffset, float zOffset, int ammoCount) { Call<void>(0x7976cf18c918f587, ped, weaponHash, xOffset, yOffset, zOffset, ammoCount); }
	void SET_PED_DROPS_INVENTORY_WEAPON_f(Ped ped, Hash weaponHash, float xOffset, float yOffset, float zOffset, int ammoCount) { FastCall<void>(0x7976cf18c918f587, ped, weaponHash, xOffset, yOffset, zOffset, ammoCount); }
	int GET_MAX_AMMO_IN_CLIP(Ped ped, Hash weaponHash, BOOL p2) { return Call<int>(0x810bbe1e10edbabd, ped, weaponHash, p2); }
	int GET_MAX_AMMO_IN_CLIP_f(Ped ped, Hash weaponHash, BOOL p2) { return FastCall<int>(0x810bbe1e10edbabd, ped, weaponHash, p2); }
	BOOL GET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int* ammo) { return Call<BOOL>(0x8c3ee8da8bc2a822, ped, weaponHash, ammo); }
	BOOL GET_AMMO_IN_CLIP_f(Ped ped, Hash weaponHash, int* ammo) { return FastCall<BOOL>(0x8c3ee8da8bc2a822, ped, weaponHash, ammo); }
	BOOL SET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int ammo) { return Call<BOOL>(0x335df8691e990e96, ped, weaponHash, ammo); }
	BOOL SET_AMMO_IN_CLIP_f(Ped ped, Hash weaponHash, int ammo) { return FastCall<BOOL>(0x335df8691e990e96, ped, weaponHash, ammo); }
	BOOL GET_MAX_AMMO(Ped ped, Hash weaponHash, int* ammo) { return Call<BOOL>(0x19da359cba1acbd2, ped, weaponHash, ammo); }
	BOOL GET_MAX_AMMO_f(Ped ped, Hash weaponHash, int* ammo) { return FastCall<BOOL>(0x19da359cba1acbd2, ped, weaponHash, ammo); }
	BOOL GET_MAX_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash, int* ammo) { return Call<BOOL>(0x810bbe1cb16f56b5, ped, ammoTypeHash, ammo); }
	BOOL GET_MAX_AMMO_BY_TYPE_f(Ped ped, Hash ammoTypeHash, int* ammo) { return FastCall<BOOL>(0x810bbe1cb16f56b5, ped, ammoTypeHash, ammo); }
	void ADD_PED_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash, int ammo) { Call<void>(0xc03cf6df93ab4eff, ped, ammoTypeHash, ammo); }
	void ADD_PED_AMMO_BY_TYPE_f(Ped ped, Hash ammoTypeHash, int ammo) { FastCall<void>(0xc03cf6df93ab4eff, ped, ammoTypeHash, ammo); }
	void SET_PED_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash, int ammo) { Call<void>(0x2f45767ef3d4e55e, ped, ammoTypeHash, ammo); }
	void SET_PED_AMMO_BY_TYPE_f(Ped ped, Hash ammoTypeHash, int ammo) { FastCall<void>(0x2f45767ef3d4e55e, ped, ammoTypeHash, ammo); }
	int GET_PED_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash) { return Call<int>(0x546cc8bc183ed8ea, ped, ammoTypeHash); }
	int GET_PED_AMMO_BY_TYPE_f(Ped ped, Hash ammoTypeHash) { return FastCall<int>(0x546cc8bc183ed8ea, ped, ammoTypeHash); }
	void SET_PED_AMMO_TO_DROP(Ped ped, int p1) { Call<void>(0x2f4576829aed396f, ped, p1); }
	void SET_PED_AMMO_TO_DROP_f(Ped ped, int p1) { FastCall<void>(0x2f4576829aed396f, ped, p1); }
	void SET_PICKUP_AMMO_AMOUNT_SCALER(float p0) { Call<void>(0xe008e33ea4130b64, p0); }
	void SET_PICKUP_AMMO_AMOUNT_SCALER_f(float p0) { FastCall<void>(0xe008e33ea4130b64, p0); }
	Hash GET_PED_AMMO_TYPE_FROM_WEAPON(Ped ped, Hash weaponHash) { return Call<Hash>(0x2f5c9875354a0d04, ped, weaponHash); }
	Hash GET_PED_AMMO_TYPE_FROM_WEAPON_f(Ped ped, Hash weaponHash) { return FastCall<Hash>(0x2f5c9875354a0d04, ped, weaponHash); }
	Hash GET_PED_ORIGINAL_AMMO_TYPE_FROM_WEAPON(Ped ped, Hash weaponHash) { return Call<Hash>(0x598ff6dc93a3f28, ped, weaponHash); }
	Hash GET_PED_ORIGINAL_AMMO_TYPE_FROM_WEAPON_f(Ped ped, Hash weaponHash) { return FastCall<Hash>(0x598ff6dc93a3f28, ped, weaponHash); }
	BOOL GET_PED_LAST_WEAPON_IMPACT_COORD(Ped ped, Vector3* coords) { return Call<BOOL>(0x134a2d1ba0f3026f, ped, coords); }
	BOOL GET_PED_LAST_WEAPON_IMPACT_COORD_f(Ped ped, Vector3* coords) { return FastCall<BOOL>(0x134a2d1ba0f3026f, ped, coords); }
	void SET_PED_GADGET(Ped ped, Hash gadgetHash, BOOL p2) { Call<void>(0xee7a27ef4ee2edb9, ped, gadgetHash, p2); }
	void SET_PED_GADGET_f(Ped ped, Hash gadgetHash, BOOL p2) { FastCall<void>(0xee7a27ef4ee2edb9, ped, gadgetHash, p2); }
	BOOL GET_IS_PED_GADGET_EQUIPPED(Ped ped, Hash gadgetHash) { return Call<BOOL>(0xe4ba28b689ee82b6, ped, gadgetHash); }
	BOOL GET_IS_PED_GADGET_EQUIPPED_f(Ped ped, Hash gadgetHash) { return FastCall<BOOL>(0xe4ba28b689ee82b6, ped, gadgetHash); }
	Hash GET_SELECTED_PED_WEAPON(Ped ped) { return Call<Hash>(0xb316c2adaaf22107, ped); }
	Hash GET_SELECTED_PED_WEAPON_f(Ped ped) { return FastCall<Hash>(0xb316c2adaaf22107, ped); }
	void EXPLODE_PROJECTILES(Ped ped, Hash weaponHash, BOOL p2) { Call<void>(0xfb45c33853a9d10c, ped, weaponHash, p2); }
	void EXPLODE_PROJECTILES_f(Ped ped, Hash weaponHash, BOOL p2) { FastCall<void>(0xfb45c33853a9d10c, ped, weaponHash, p2); }
	void REMOVE_ALL_PROJECTILES_OF_TYPE(Hash weaponHash, BOOL explode) { Call<void>(0x5bd0056d4eceae74, weaponHash, explode); }
	void REMOVE_ALL_PROJECTILES_OF_TYPE_f(Hash weaponHash, BOOL explode) { FastCall<void>(0x5bd0056d4eceae74, weaponHash, explode); }
	float GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON(Ped ped) { return ToFloat(Call<_float>(0xe1a4e68de4f554fc, ped)); }
	float GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON_f(Ped ped) { return ToFloat(FastCall<_float>(0xe1a4e68de4f554fc, ped)); }
	float GET_MAX_RANGE_OF_CURRENT_PED_WEAPON(Ped ped) { return ToFloat(Call<_float>(0x97727e7007b31a54, ped)); }
	float GET_MAX_RANGE_OF_CURRENT_PED_WEAPON_f(Ped ped) { return ToFloat(FastCall<_float>(0x97727e7007b31a54, ped)); }
	BOOL HAS_VEHICLE_GOT_PROJECTILE_ATTACHED(Ped driver, Vehicle vehicle, Hash weaponHash, Any p3) { return Call<BOOL>(0x904ec1e3a687d0ef, driver, vehicle, weaponHash, p3); }
	BOOL HAS_VEHICLE_GOT_PROJECTILE_ATTACHED_f(Ped driver, Vehicle vehicle, Hash weaponHash, Any p3) { return FastCall<BOOL>(0x904ec1e3a687d0ef, driver, vehicle, weaponHash, p3); }
	void GIVE_WEAPON_COMPONENT_TO_PED(Ped ped, Hash weaponHash, Hash componentHash) { Call<void>(0xd7091a6c89f17362, ped, weaponHash, componentHash); }
	void GIVE_WEAPON_COMPONENT_TO_PED_f(Ped ped, Hash weaponHash, Hash componentHash) { FastCall<void>(0xd7091a6c89f17362, ped, weaponHash, componentHash); }
	void REMOVE_WEAPON_COMPONENT_FROM_PED(Ped ped, Hash weaponHash, Hash componentHash) { Call<void>(0x20ef5197e6766704, ped, weaponHash, componentHash); }
	void REMOVE_WEAPON_COMPONENT_FROM_PED_f(Ped ped, Hash weaponHash, Hash componentHash) { FastCall<void>(0x20ef5197e6766704, ped, weaponHash, componentHash); }
	BOOL HAS_PED_GOT_WEAPON_COMPONENT(Ped ped, Hash weaponHash, Hash componentHash) { return Call<BOOL>(0x6bce1716b6a49962, ped, weaponHash, componentHash); }
	BOOL HAS_PED_GOT_WEAPON_COMPONENT_f(Ped ped, Hash weaponHash, Hash componentHash) { return FastCall<BOOL>(0x6bce1716b6a49962, ped, weaponHash, componentHash); }
	BOOL IS_PED_WEAPON_COMPONENT_ACTIVE(Ped ped, Hash weaponHash, Hash componentHash) { return Call<BOOL>(0x6d541f93802c8786, ped, weaponHash, componentHash); }
	BOOL IS_PED_WEAPON_COMPONENT_ACTIVE_f(Ped ped, Hash weaponHash, Hash componentHash) { return FastCall<BOOL>(0x6d541f93802c8786, ped, weaponHash, componentHash); }
	BOOL REFILL_AMMO_INSTANTLY(Ped ped) { return Call<BOOL>(0x70f95e7facc62c06, ped); }
	BOOL REFILL_AMMO_INSTANTLY_f(Ped ped) { return FastCall<BOOL>(0x70f95e7facc62c06, ped); }
	BOOL MAKE_PED_RELOAD(Ped ped) { return Call<BOOL>(0xf5bad9baaaf499da, ped); }
	BOOL MAKE_PED_RELOAD_f(Ped ped) { return FastCall<BOOL>(0xf5bad9baaaf499da, ped); }
	void REQUEST_WEAPON_ASSET(Hash weaponHash, int p1, int p2) { Call<void>(0xa9a7825516b21ebd, weaponHash, p1, p2); }
	void REQUEST_WEAPON_ASSET_f(Hash weaponHash, int p1, int p2) { FastCall<void>(0xa9a7825516b21ebd, weaponHash, p1, p2); }
	BOOL HAS_WEAPON_ASSET_LOADED(Hash weaponHash) { return Call<BOOL>(0xea0de1f79a638852, weaponHash); }
	BOOL HAS_WEAPON_ASSET_LOADED_f(Hash weaponHash) { return FastCall<BOOL>(0xea0de1f79a638852, weaponHash); }
	void REMOVE_WEAPON_ASSET(Hash weaponHash) { Call<void>(0x321ab7133ba2fac8, weaponHash); }
	void REMOVE_WEAPON_ASSET_f(Hash weaponHash) { FastCall<void>(0x321ab7133ba2fac8, weaponHash); }
	Object CREATE_WEAPON_OBJECT(Hash weaponHash, int ammoCount, float x, float y, float z, BOOL showWorldModel, float scale, Any p7, Any p8, Any p9) { return Call<Object>(0x4ebe2be6dddb04bf, weaponHash, ammoCount, x, y, z, showWorldModel, scale, p7, p8, p9); }
	Object CREATE_WEAPON_OBJECT_f(Hash weaponHash, int ammoCount, float x, float y, float z, BOOL showWorldModel, float scale, Any p7, Any p8, Any p9) { return FastCall<Object>(0x4ebe2be6dddb04bf, weaponHash, ammoCount, x, y, z, showWorldModel, scale, p7, p8, p9); }
	void GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(Object weaponObject, Hash componentHash) { Call<void>(0x1d77d1bbfe221175, weaponObject, componentHash); }
	void GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT_f(Object weaponObject, Hash componentHash) { FastCall<void>(0x1d77d1bbfe221175, weaponObject, componentHash); }
	void REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(Object object, Hash componentHash) { Call<void>(0x36b5c327d40c6297, object, componentHash); }
	void REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT_f(Object object, Hash componentHash) { FastCall<void>(0x36b5c327d40c6297, object, componentHash); }
	BOOL HAS_WEAPON_GOT_WEAPON_COMPONENT(Object weapon, Hash componentHash) { return Call<BOOL>(0x26754be9483863eb, weapon, componentHash); }
	BOOL HAS_WEAPON_GOT_WEAPON_COMPONENT_f(Object weapon, Hash componentHash) { return FastCall<BOOL>(0x26754be9483863eb, weapon, componentHash); }
	void GIVE_WEAPON_OBJECT_TO_PED(Object weaponObject, Ped ped) { Call<void>(0x395d5d6e05c1edb6, weaponObject, ped); }
	void GIVE_WEAPON_OBJECT_TO_PED_f(Object weaponObject, Ped ped) { FastCall<void>(0x395d5d6e05c1edb6, weaponObject, ped); }
	BOOL DOES_WEAPON_TAKE_WEAPON_COMPONENT(Hash weaponHash, Hash componentHash) { return Call<BOOL>(0xa9797d5897e12955, weaponHash, componentHash); }
	BOOL DOES_WEAPON_TAKE_WEAPON_COMPONENT_f(Hash weaponHash, Hash componentHash) { return FastCall<BOOL>(0xa9797d5897e12955, weaponHash, componentHash); }
	Object GET_WEAPON_OBJECT_FROM_PED(Ped ped, BOOL p1) { return Call<Object>(0xccf7f5af85a7c2e0, ped, p1); }
	Object GET_WEAPON_OBJECT_FROM_PED_f(Ped ped, BOOL p1) { return FastCall<Object>(0xccf7f5af85a7c2e0, ped, p1); }
	void GIVE_LOADOUT_TO_PED(Ped ped, Hash loadoutHash) { Call<void>(0x63bb9891675befb0, ped, loadoutHash); }
	void GIVE_LOADOUT_TO_PED_f(Ped ped, Hash loadoutHash) { FastCall<void>(0x63bb9891675befb0, ped, loadoutHash); }
	void SET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash, int tintIndex) { Call<void>(0xb2c2c447e552d0e4, ped, weaponHash, tintIndex); }
	void SET_PED_WEAPON_TINT_INDEX_f(Ped ped, Hash weaponHash, int tintIndex) { FastCall<void>(0xb2c2c447e552d0e4, ped, weaponHash, tintIndex); }
	int GET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash) { return Call<int>(0x3b4736db30f34d8, ped, weaponHash); }
	int GET_PED_WEAPON_TINT_INDEX_f(Ped ped, Hash weaponHash) { return FastCall<int>(0x3b4736db30f34d8, ped, weaponHash); }
	void SET_WEAPON_OBJECT_TINT_INDEX(Object weapon, int tintIndex) { Call<void>(0xe1c5714b34371968, weapon, tintIndex); }
	void SET_WEAPON_OBJECT_TINT_INDEX_f(Object weapon, int tintIndex) { FastCall<void>(0xe1c5714b34371968, weapon, tintIndex); }
	int GET_WEAPON_OBJECT_TINT_INDEX(Object weapon) { return Call<int>(0x6ed2918bea6ac0f4, weapon); }
	int GET_WEAPON_OBJECT_TINT_INDEX_f(Object weapon) { return FastCall<int>(0x6ed2918bea6ac0f4, weapon); }
	int GET_WEAPON_TINT_COUNT(Hash weaponHash) { return Call<int>(0xabd5079c42496fe5, weaponHash); }
	int GET_WEAPON_TINT_COUNT_f(Hash weaponHash) { return FastCall<int>(0xabd5079c42496fe5, weaponHash); }
	void SET_PED_WEAPON_COMPONENT_TINT_INDEX(Ped ped, Hash weaponHash, Hash camoComponentHash, int colorIndex) { Call<void>(0x2ce7dfc262f42206, ped, weaponHash, camoComponentHash, colorIndex); }
	void SET_PED_WEAPON_COMPONENT_TINT_INDEX_f(Ped ped, Hash weaponHash, Hash camoComponentHash, int colorIndex) { FastCall<void>(0x2ce7dfc262f42206, ped, weaponHash, camoComponentHash, colorIndex); }
	int GET_PED_WEAPON_COMPONENT_TINT_INDEX(Ped ped, Hash weaponHash, Hash camoComponentHash) { return Call<int>(0xf446f08990cb24fa, ped, weaponHash, camoComponentHash); }
	int GET_PED_WEAPON_COMPONENT_TINT_INDEX_f(Ped ped, Hash weaponHash, Hash camoComponentHash) { return FastCall<int>(0xf446f08990cb24fa, ped, weaponHash, camoComponentHash); }
	void SET_WEAPON_OBJECT_COMPONENT_TINT_INDEX(Object weaponObject, Hash camoComponentHash, int colorIndex) { Call<void>(0xf37748207d0a958a, weaponObject, camoComponentHash, colorIndex); }
	void SET_WEAPON_OBJECT_COMPONENT_TINT_INDEX_f(Object weaponObject, Hash camoComponentHash, int colorIndex) { FastCall<void>(0xf37748207d0a958a, weaponObject, camoComponentHash, colorIndex); }
	int GET_WEAPON_OBJECT_COMPONENT_TINT_INDEX(Object weaponObject, Hash camoComponentHash) { return Call<int>(0x358c2cfed2b3e16, weaponObject, camoComponentHash); }
	int GET_WEAPON_OBJECT_COMPONENT_TINT_INDEX_f(Object weaponObject, Hash camoComponentHash) { return FastCall<int>(0x358c2cfed2b3e16, weaponObject, camoComponentHash); }
	int GET_PED_WEAPON_CAMO_INDEX(Ped ped, Hash weaponHash) { return Call<int>(0x3b2d46667aae49d, ped, weaponHash); }
	int GET_PED_WEAPON_CAMO_INDEX_f(Ped ped, Hash weaponHash) { return FastCall<int>(0x3b2d46667aae49d, ped, weaponHash); }
	void SET_WEAPON_OBJECT_CAMO_INDEX(Object weaponObject, int p1) { Call<void>(0xe1c3d243e8d2c92d, weaponObject, p1); }
	void SET_WEAPON_OBJECT_CAMO_INDEX_f(Object weaponObject, int p1) { FastCall<void>(0xe1c3d243e8d2c92d, weaponObject, p1); }
	BOOL GET_WEAPON_HUD_STATS(Hash weaponHash, Any* outData) { return Call<BOOL>(0x1e5128c728702a9d, weaponHash, outData); }
	BOOL GET_WEAPON_HUD_STATS_f(Hash weaponHash, Any* outData) { return FastCall<BOOL>(0x1e5128c728702a9d, weaponHash, outData); }
	BOOL GET_WEAPON_COMPONENT_HUD_STATS(Hash componentHash, Any* outData) { return Call<BOOL>(0x919fbac62b1a723b, componentHash, outData); }
	BOOL GET_WEAPON_COMPONENT_HUD_STATS_f(Hash componentHash, Any* outData) { return FastCall<BOOL>(0x919fbac62b1a723b, componentHash, outData); }
	float GET_WEAPON_DAMAGE(Hash weaponHash, Hash componentHash) { return ToFloat(Call<_float>(0xe924a2b24012fda9, weaponHash, componentHash)); }
	float GET_WEAPON_DAMAGE_f(Hash weaponHash, Hash componentHash) { return ToFloat(FastCall<_float>(0xe924a2b24012fda9, weaponHash, componentHash)); }
	int GET_WEAPON_CLIP_SIZE(Hash weaponHash) { return Call<int>(0x1e5124ad8bbea716, weaponHash); }
	int GET_WEAPON_CLIP_SIZE_f(Hash weaponHash) { return FastCall<int>(0x1e5124ad8bbea716, weaponHash); }
	float GET_WEAPON_TIME_BETWEEN_SHOTS(Hash weaponHash) { return ToFloat(Call<_float>(0xbc1e847ec1602ca, weaponHash)); }
	float GET_WEAPON_TIME_BETWEEN_SHOTS_f(Hash weaponHash) { return ToFloat(FastCall<_float>(0xbc1e847ec1602ca, weaponHash)); }
	void SET_PED_CHANCE_OF_FIRING_BLANKS(Ped ped, float xBias, float yBias) { Call<void>(0xdd4173a68676c561, ped, xBias, yBias); }
	void SET_PED_CHANCE_OF_FIRING_BLANKS_f(Ped ped, float xBias, float yBias) { FastCall<void>(0xdd4173a68676c561, ped, xBias, yBias); }
	Object SET_PED_SHOOT_ORDNANCE_WEAPON(Ped ped, float p1) { return Call<Object>(0xf85e83da3aec25f2, ped, p1); }
	Object SET_PED_SHOOT_ORDNANCE_WEAPON_f(Ped ped, float p1) { return FastCall<Object>(0xf85e83da3aec25f2, ped, p1); }
	void REQUEST_WEAPON_HIGH_DETAIL_MODEL(Entity weaponObject) { Call<void>(0xef8095a615702d85, weaponObject); }
	void REQUEST_WEAPON_HIGH_DETAIL_MODEL_f(Entity weaponObject) { FastCall<void>(0xef8095a615702d85, weaponObject); }
	void _SET_WEAPON_PED_DAMAGE_MODIFIER(Hash weapon, float damageModifier) { Call<void>(0x9e9ae01ba1c6a9f0, weapon, damageModifier); }
	void _SET_WEAPON_PED_DAMAGE_MODIFIER_f(Hash weapon, float damageModifier) { FastCall<void>(0x9e9ae01ba1c6a9f0, weapon, damageModifier); }
	void SET_WEAPON_DAMAGE_MODIFIER(Hash weaponHash, float damageMultiplier) { Call<void>(0x6c7b956bb3005a21, weaponHash, damageMultiplier); }
	void SET_WEAPON_DAMAGE_MODIFIER_f(Hash weaponHash, float damageMultiplier) { FastCall<void>(0x6c7b956bb3005a21, weaponHash, damageMultiplier); }
	void SET_WEAPON_AOE_MODIFIER(Hash weaponHash, float multiplier) { Call<void>(0x6933e41f1d0c6205, weaponHash, multiplier); }
	void SET_WEAPON_AOE_MODIFIER_f(Hash weaponHash, float multiplier) { FastCall<void>(0x6933e41f1d0c6205, weaponHash, multiplier); }
	void SET_WEAPON_EFFECT_DURATION_MODIFIER(Hash p0, float p1) { Call<void>(0x183d9a20c738c2ba, p0, p1); }
	void SET_WEAPON_EFFECT_DURATION_MODIFIER_f(Hash p0, float p1) { FastCall<void>(0x183d9a20c738c2ba, p0, p1); }
	BOOL IS_PED_CURRENT_WEAPON_SILENCED(Ped ped) { return Call<BOOL>(0x9932a0b8df3ed6db, ped); }
	BOOL IS_PED_CURRENT_WEAPON_SILENCED_f(Ped ped) { return FastCall<BOOL>(0x9932a0b8df3ed6db, ped); }
	BOOL IS_FLASH_LIGHT_ON(Ped ped) { return Call<BOOL>(0xda5ef17c6ac7350c, ped); }
	BOOL IS_FLASH_LIGHT_ON_f(Ped ped) { return FastCall<BOOL>(0xda5ef17c6ac7350c, ped); }
	BOOL SET_FLASH_LIGHT_FADE_DISTANCE(float distance) { return Call<BOOL>(0xff9ba50fc4847a23, distance); }
	BOOL SET_FLASH_LIGHT_FADE_DISTANCE_f(float distance) { return FastCall<BOOL>(0xff9ba50fc4847a23, distance); }
	void SET_FLASH_LIGHT_ACTIVE_HISTORY(Ped ped, BOOL toggle) { Call<void>(0x711606eaa1c90dd0, ped, toggle); }
	void SET_FLASH_LIGHT_ACTIVE_HISTORY_f(Ped ped, BOOL toggle) { FastCall<void>(0x711606eaa1c90dd0, ped, toggle); }
	void SET_WEAPON_ANIMATION_OVERRIDE(Ped ped, Hash animStyle) { Call<void>(0x33003cf7a6624f8d, ped, animStyle); }
	void SET_WEAPON_ANIMATION_OVERRIDE_f(Ped ped, Hash animStyle) { FastCall<void>(0x33003cf7a6624f8d, ped, animStyle); }
	int GET_WEAPON_DAMAGE_TYPE(Hash weaponHash) { return Call<int>(0xce9c931ddb086410, weaponHash); }
	int GET_WEAPON_DAMAGE_TYPE_f(Hash weaponHash) { return FastCall<int>(0xce9c931ddb086410, weaponHash); }
	void SET_EQIPPED_WEAPON_START_SPINNING_AT_FULL_SPEED(Ped ped) { Call<void>(0x189b79280aace35a, ped); }
	void SET_EQIPPED_WEAPON_START_SPINNING_AT_FULL_SPEED_f(Ped ped) { FastCall<void>(0x189b79280aace35a, ped); }
	BOOL CAN_USE_WEAPON_ON_PARACHUTE(Hash weaponHash) { return Call<BOOL>(0xda2140a044724b9d, weaponHash); }
	BOOL CAN_USE_WEAPON_ON_PARACHUTE_f(Hash weaponHash) { return FastCall<BOOL>(0xda2140a044724b9d, weaponHash); }
	int CREATE_AIR_DEFENCE_SPHERE(float x, float y, float z, float radius, float p4, float p5, float p6, Hash weaponHash) { return Call<int>(0x2dec89c9d2281a94, x, y, z, radius, p4, p5, p6, weaponHash); }
	int CREATE_AIR_DEFENCE_SPHERE_f(float x, float y, float z, float radius, float p4, float p5, float p6, Hash weaponHash) { return FastCall<int>(0x2dec89c9d2281a94, x, y, z, radius, p4, p5, p6, weaponHash); }
	int CREATE_AIR_DEFENCE_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float radius, Hash weaponHash) { return Call<int>(0xc5b12f35d7955fb4, p0, p1, p2, p3, p4, p5, p6, p7, p8, radius, weaponHash); }
	int CREATE_AIR_DEFENCE_ANGLED_AREA_f(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float radius, Hash weaponHash) { return FastCall<int>(0xc5b12f35d7955fb4, p0, p1, p2, p3, p4, p5, p6, p7, p8, radius, weaponHash); }
	BOOL REMOVE_AIR_DEFENCE_SPHERE(int zoneId) { return Call<BOOL>(0x50185faa8af7460c, zoneId); }
	BOOL REMOVE_AIR_DEFENCE_SPHERE_f(int zoneId) { return FastCall<BOOL>(0x50185faa8af7460c, zoneId); }
	void REMOVE_ALL_AIR_DEFENCE_SPHERES() { Call<void>(0xefe39c01146cd189); }
	void REMOVE_ALL_AIR_DEFENCE_SPHERES_f() { FastCall<void>(0xefe39c01146cd189); }
	void SET_PLAYER_TARGETTABLE_FOR_AIR_DEFENCE_SPHERE(Player player, int zoneId, BOOL enable) { Call<void>(0x5bf87098958531ea, player, zoneId, enable); }
	void SET_PLAYER_TARGETTABLE_FOR_AIR_DEFENCE_SPHERE_f(Player player, int zoneId, BOOL enable) { FastCall<void>(0x5bf87098958531ea, player, zoneId, enable); }
	BOOL IS_AIR_DEFENCE_SPHERE_IN_AREA(float x, float y, float z, float radius, int* outZoneId) { return Call<BOOL>(0x7874479c0927b3ce, x, y, z, radius, outZoneId); }
	BOOL IS_AIR_DEFENCE_SPHERE_IN_AREA_f(float x, float y, float z, float radius, int* outZoneId) { return FastCall<BOOL>(0x7874479c0927b3ce, x, y, z, radius, outZoneId); }
	void FIRE_AIR_DEFENCE_SPHERE_WEAPON_AT_POSITION(int zoneId, float x, float y, float z) { Call<void>(0xec8ecffadac67f57, zoneId, x, y, z); }
	void FIRE_AIR_DEFENCE_SPHERE_WEAPON_AT_POSITION_f(int zoneId, float x, float y, float z) { FastCall<void>(0xec8ecffadac67f57, zoneId, x, y, z); }
	BOOL DOES_AIR_DEFENCE_SPHERE_EXIST(int zoneId) { return Call<BOOL>(0xb553b770415e628f, zoneId); }
	BOOL DOES_AIR_DEFENCE_SPHERE_EXIST_f(int zoneId) { return FastCall<BOOL>(0xb553b770415e628f, zoneId); }
	void SET_CAN_PED_SELECT_INVENTORY_WEAPON(Ped ped, Hash weaponHash, BOOL toggle) { Call<void>(0x440dd220504ba006, ped, weaponHash, toggle); }
	void SET_CAN_PED_SELECT_INVENTORY_WEAPON_f(Ped ped, Hash weaponHash, BOOL toggle) { FastCall<void>(0x440dd220504ba006, ped, weaponHash, toggle); }
	void SET_CAN_PED_SELECT_ALL_WEAPONS(Ped ped, BOOL toggle) { Call<void>(0xa97e87fe8563d712, ped, toggle); }
	void SET_CAN_PED_SELECT_ALL_WEAPONS_f(Ped ped, BOOL toggle) { FastCall<void>(0xa97e87fe8563d712, ped, toggle); }
}
namespace ZONE
{
	int GET_ZONE_AT_COORDS(float x, float y, float z) { return Call<int>(0xa5cbafb2957b3500, x, y, z); }
	int GET_ZONE_AT_COORDS_f(float x, float y, float z) { return FastCall<int>(0xa5cbafb2957b3500, x, y, z); }
	int GET_ZONE_FROM_NAME_ID(char* zoneName) { return Call<int>(0xd3ef2be4fc24d8a4, zoneName); }
	int GET_ZONE_FROM_NAME_ID_f(char* zoneName) { return FastCall<int>(0xd3ef2be4fc24d8a4, zoneName); }
	int GET_ZONE_POPSCHEDULE(int zoneId) { return Call<int>(0x61c9b79f5e15b19e, zoneId); }
	int GET_ZONE_POPSCHEDULE_f(int zoneId) { return FastCall<int>(0x61c9b79f5e15b19e, zoneId); }
	const char* GET_NAME_OF_ZONE(float x, float y, float z) { return Call<char*>(0x90b16f1b5a2c75c9, x, y, z); }
	const char* GET_NAME_OF_ZONE_f(float x, float y, float z) { return FastCall<char*>(0x90b16f1b5a2c75c9, x, y, z); }
	void SET_ZONE_ENABLED(int zoneId, BOOL toggle) { Call<void>(0x3c3495785d18926b, zoneId, toggle); }
	void SET_ZONE_ENABLED_f(int zoneId, BOOL toggle) { FastCall<void>(0x3c3495785d18926b, zoneId, toggle); }
	int GET_ZONE_SCUMMINESS(int zoneId) { return Call<int>(0x13abea096cfc8445, zoneId); }
	int GET_ZONE_SCUMMINESS_f(int zoneId) { return FastCall<int>(0x13abea096cfc8445, zoneId); }
	void OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(int scheduleId, Hash vehicleHash) { Call<void>(0x2afc3467ae3a112c, scheduleId, vehicleHash); }
	void OVERRIDE_POPSCHEDULE_VEHICLE_MODEL_f(int scheduleId, Hash vehicleHash) { FastCall<void>(0x2afc3467ae3a112c, scheduleId, vehicleHash); }
	void CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(int scheduleId) { Call<void>(0x626861e8df448a8c, scheduleId); }
	void CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL_f(int scheduleId) { FastCall<void>(0x626861e8df448a8c, scheduleId); }
	Hash GET_HASH_OF_MAP_AREA_AT_COORDS(float x, float y, float z) { return Call<Hash>(0x36b29e8147446f7b, x, y, z); }
	Hash GET_HASH_OF_MAP_AREA_AT_COORDS_f(float x, float y, float z) { return FastCall<Hash>(0x36b29e8147446f7b, x, y, z); }
}